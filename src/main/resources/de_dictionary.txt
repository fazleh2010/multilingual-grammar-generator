Apostrophe='
adjunct(domain)=<NP_{map(SyntacticFunction), Property}>
adjunct(range)=<NP_{map(SyntacticFunction), Property}>
all(range:plural=all
appos='
determiner(all)=all
determiner(component_kind)=kind
determiner(component_the)=the
determiner(of)=of
determiner(that)=that
determiner(with)=with
interrogativeAmount=how many
interrogativeAmount(domain:plural)=how many
interrogativeAmount(domain:singular)=how many
interrogativeDeterminer(domain:plural)=which <NP_{Class, <map(SyntacticFunction),Property>}>
interrogativeDeterminer(domain:singular)=which <NP_{Class, <map(SyntacticFunction),Property>}>
interrogativeDeterminer(range:plural)=which <NP_{Class, <map(SyntacticFunction),Property>}>
interrogativeDeterminer(range:singular)=which <NP_{Class, <map(SyntacticFunction),Property>}>
interrogativeMuch=how much
interrogativeOften(domain:singular)=how often
interrogativePronoun(domain)=who
interrogativePronoun(domain:plural)=who
interrogativePronoun(domain:singular)==who
interrogativePronoun(plural)=who
interrogativePronoun(range)=who
interrogativePronoun(range:plural)=who
interrogativePronoun(range:singular)=who
interrogativePronoun(singular)=who
interrogativePronoun(sinular)=who
interrogativePronounWhom=whom
interrogativeVariableDeterminer(range:singular)=which
noun(range:plural)=NounPlural
noun(range:singular)=NounSingular
noun(reference:plural)=[NounPlural]
noun(reference:singular)=[NounSingular]
noun(singular)=NounSingular
nounVariable(domain:plural)=NounPlural
nounVariable(domain:singular)=NounSingular
nounVariable(range:plural)=NounPlural
nounVariable(range:singular)=[NounSingular]
object(domain)=<NP_{map(SyntacticFunction), Property}>
object(range)=<NP_{map(SyntacticFunction), Property}>
preposition=[Preposition]
pronoun(pronoun_personal)=me
subject(range)=<NP_{map(SyntacticFunction), Property}>
verb(component_be:past:plural)=was
verb(component_be:past:singular)=were
verb(component_be:present:plural)=are
verb(component_be:present:singular)=is
verb(component_do:past:singular)=did
verb(component_do:present:singular)=does
verb(component_have:present:plural)=have
verb(component_imperative_show:present:singular)=show
verb(component_imperative_transitive:present:singular)=give
verb(imperative_verb:present:plural)=give
verb(mainVerb:past:thirdPerson)=[VerbPast]
verb(mainVerb:past:thridPerson)=[VerbPast]
verb(mainVerb:perfect:thridPerson)=[VerbParticiple]
verb(mainVerb:present3rd:thirdPerson)=[Verb3rdPerson]
verb(mainVerb:present3rd:thridPerson)=[Verb3rdPerson]
verb(mainVerb:present:thirdPerson)=[VerbPresent]
verb(mainVerb:present:thridPerson)=[VerbPresent]
