{
  "grammarEntries" : [ {
    "id" : "335",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death place of the vice president of ($x | Politician_NP)??", "What was the death place of the vice president of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "336",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death place does the vice president of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "337",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city of the birth place of ($x | Person_NP)??", "What was the largest city of the birth place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "338",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city of the location of ($x | Mountain_NP)??", "What was the largest city of the location of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "339",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city of the form of government of ($x | Country_NP)??", "What was the largest city of the form of government of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "340",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city of the nationality of ($x | Person_NP)??", "What was the largest city of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "341",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city of the resting place of ($x | Person_NP)??", "What is the largest city of the resting places of ($x | Person_NP)??", "What was the largest city of the resting place of ($x | Person_NP)??", "What was the largest city of the resting places of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "342",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city of the nationality of ($x | Person_NP)??", "What was the largest city of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "343",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city of the largest country of ($x | Country_NP)??", "What was the largest city of the largest country of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "344",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest city does the birth place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "345",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest city does the location of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "346",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest city does the form of government of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "347",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest city does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "348",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest city does the resting place of ($x | Person_NP)? have?", "How many largest city does the resting places of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "349",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest city does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "350",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest city does the largest country of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "351",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the editor of ($x | Work_NP)??", "What is the birth year of the editors of ($x | Work_NP)??", "What was the birth year of the editor of ($x | Work_NP)??", "What was the birth year of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "352",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the parent of ($x | Person_NP)??", "What is the birth year of the parents of ($x | Person_NP)??", "What was the birth year of the parent of ($x | Person_NP)??", "What was the birth year of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "353",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the king of ($x | Legislature_NP)??", "What is the birth year of the kings of ($x | Legislature_NP)??", "What was the birth year of the king of ($x | Legislature_NP)??", "What was the birth year of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "354",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the coach of ($x | IceHockeyLeague_NP)??", "What is the birth year of the coaches of ($x | IceHockeyLeague_NP)??", "What was the birth year of the coach of ($x | IceHockeyLeague_NP)??", "What was the birth year of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "355",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the coach of ($x | HockeyTeam_NP)??", "What is the birth year of the coaches of ($x | HockeyTeam_NP)??", "What was the birth year of the coach of ($x | HockeyTeam_NP)??", "What was the birth year of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "356",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the alter ego of ($x | ComicsCharacter_NP)??", "What was the birth year of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "357",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the author of ($x | Work_NP)??", "What is the birth year of the authors of ($x | Work_NP)??", "What was the birth year of the author of ($x | Work_NP)??", "What was the birth year of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "358",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the mayor of ($x | Settlement_NP)??", "What is the birth year of the mayors of ($x | Settlement_NP)??", "What was the birth year of the mayor of ($x | Settlement_NP)??", "What was the birth year of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "359",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the music by ($x | Musical_NP)??", "What is the birth year of the musics by ($x | Musical_NP)??", "What was the birth year of the music by ($x | Musical_NP)??", "What was the birth year of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "360",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the foundation series of ($x | TelevisionShow_NP)??", "What was the birth year of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "361",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the creator of ($x | FictionalCharacter_NP)??", "What is the birth year of the creators of ($x | FictionalCharacter_NP)??", "What was the birth year of the creator of ($x | FictionalCharacter_NP)??", "What was the birth year of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "362",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the influencer of ($x | Person_NP)??", "What is the birth year of the influencers of ($x | Person_NP)??", "What was the birth year of the influencer of ($x | Person_NP)??", "What was the birth year of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "363",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the wife of ($x | Person_NP)??", "What is the birth year of the wives of ($x | Person_NP)??", "What was the birth year of the wife of ($x | Person_NP)??", "What was the birth year of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "364",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the doctoral supervisor of ($x | Scientist_NP)??", "What is the birth year of the doctoral supervisors of ($x | Scientist_NP)??", "What was the birth year of the doctoral supervisor of ($x | Scientist_NP)??", "What was the birth year of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "365",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the host of ($x | TelevisionShow_NP)??", "What is the birth year of the hosts of ($x | TelevisionShow_NP)??", "What was the birth year of the host of ($x | TelevisionShow_NP)??", "What was the birth year of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "366",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the residence of ($x | Place_NP)??", "What is the birth year of the residences of ($x | Place_NP)??", "What was the birth year of the residence of ($x | Place_NP)??", "What was the birth year of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "367",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the daughter of ($x | Person_NP)??", "What is the birth year of the daughters of ($x | Person_NP)??", "What was the birth year of the daughter of ($x | Person_NP)??", "What was the birth year of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "368",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the successor of ($x | Politician_NP)??", "What was the birth year of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "369",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the child of ($x | Person_NP)??", "What is the birth year of the children of ($x | Person_NP)??", "What was the birth year of the child of ($x | Person_NP)??", "What was the birth year of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "370",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the governor of ($x | Person_NP)??", "What is the birth year of the governors of ($x | Person_NP)??", "What was the birth year of the governor of ($x | Person_NP)??", "What was the birth year of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "371",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the music composer of ($x | TelevisionShow_NP)??", "What is the birth year of the music composers of ($x | TelevisionShow_NP)??", "What was the birth year of the music composer of ($x | TelevisionShow_NP)??", "What was the birth year of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "372",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the first to climb  ($x | Mountain_NP)??", "What was the birth year of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "373",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the father of ($x | Royalty_NP)??", "What was the birth year of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "374",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the music composer of ($x | TelevisionShow_NP)??", "What is the birth year of the music composers of ($x | TelevisionShow_NP)??", "What was the birth year of the music composer of ($x | TelevisionShow_NP)??", "What was the birth year of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "375",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the son of ($x | Person_NP)??", "What is the birth year of the sons of ($x | Person_NP)??", "What was the birth year of the son of ($x | Person_NP)??", "What was the birth year of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "376",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the son of ($x | Person_NP)??", "What is the birth year of the sons of ($x | Person_NP)??", "What was the birth year of the son of ($x | Person_NP)??", "What was the birth year of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "377",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of the mayor of ($x | City_NP)??", "What is the birth year of the mayors of ($x | City_NP)??", "What was the birth year of the mayor of ($x | City_NP)??", "What was the birth year of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "378",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the editor of ($x | Work_NP)? have?", "How many birth year does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "379",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the parent of ($x | Person_NP)? have?", "How many birth year does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "380",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the king of ($x | Legislature_NP)? have?", "How many birth year does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "381",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the coach of ($x | IceHockeyLeague_NP)? have?", "How many birth year does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "382",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the coach of ($x | HockeyTeam_NP)? have?", "How many birth year does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "383",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "384",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the author of ($x | Work_NP)? have?", "How many birth year does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "385",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the mayor of ($x | Settlement_NP)? have?", "How many birth year does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "386",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the music by ($x | Musical_NP)? have?", "How many birth year does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "387",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "388",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the creator of ($x | FictionalCharacter_NP)? have?", "How many birth year does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "389",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the influencer of ($x | Person_NP)? have?", "How many birth year does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "390",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the wife of ($x | Person_NP)? have?", "How many birth year does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "391",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many birth year does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "392",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the host of ($x | TelevisionShow_NP)? have?", "How many birth year does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "393",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the residence of ($x | Place_NP)? have?", "How many birth year does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "394",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the daughter of ($x | Person_NP)? have?", "How many birth year does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "395",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "396",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the child of ($x | Person_NP)? have?", "How many birth year does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "397",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the governor of ($x | Person_NP)? have?", "How many birth year does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "398",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the music composer of ($x | TelevisionShow_NP)? have?", "How many birth year does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "399",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "400",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "401",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the music composer of ($x | TelevisionShow_NP)? have?", "How many birth year does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "402",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the son of ($x | Person_NP)? have?", "How many birth year does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "403",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the son of ($x | Person_NP)? have?", "How many birth year does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "404",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth year does the mayor of ($x | City_NP)? have?", "How many birth year does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "405",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the editor of ($x | Work_NP)??", "What is the birth place of the editors of ($x | Work_NP)??", "What was the birth place of the editor of ($x | Work_NP)??", "What was the birth place of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "406",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the parent of ($x | Person_NP)??", "What is the birth place of the parents of ($x | Person_NP)??", "What was the birth place of the parent of ($x | Person_NP)??", "What was the birth place of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "407",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the king of ($x | Legislature_NP)??", "What is the birth place of the kings of ($x | Legislature_NP)??", "What was the birth place of the king of ($x | Legislature_NP)??", "What was the birth place of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "408",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the coach of ($x | IceHockeyLeague_NP)??", "What is the birth place of the coaches of ($x | IceHockeyLeague_NP)??", "What was the birth place of the coach of ($x | IceHockeyLeague_NP)??", "What was the birth place of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "409",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the coach of ($x | HockeyTeam_NP)??", "What is the birth place of the coaches of ($x | HockeyTeam_NP)??", "What was the birth place of the coach of ($x | HockeyTeam_NP)??", "What was the birth place of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "410",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the alter ego of ($x | ComicsCharacter_NP)??", "What was the birth place of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "411",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the author of ($x | Work_NP)??", "What is the birth place of the authors of ($x | Work_NP)??", "What was the birth place of the author of ($x | Work_NP)??", "What was the birth place of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "412",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the mayor of ($x | Settlement_NP)??", "What is the birth place of the mayors of ($x | Settlement_NP)??", "What was the birth place of the mayor of ($x | Settlement_NP)??", "What was the birth place of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "413",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the music by ($x | Musical_NP)??", "What is the birth place of the musics by ($x | Musical_NP)??", "What was the birth place of the music by ($x | Musical_NP)??", "What was the birth place of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "414",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the foundation series of ($x | TelevisionShow_NP)??", "What was the birth place of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "415",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the creator of ($x | FictionalCharacter_NP)??", "What is the birth place of the creators of ($x | FictionalCharacter_NP)??", "What was the birth place of the creator of ($x | FictionalCharacter_NP)??", "What was the birth place of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "416",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the influencer of ($x | Person_NP)??", "What is the birth place of the influencers of ($x | Person_NP)??", "What was the birth place of the influencer of ($x | Person_NP)??", "What was the birth place of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "417",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the wife of ($x | Person_NP)??", "What is the birth place of the wives of ($x | Person_NP)??", "What was the birth place of the wife of ($x | Person_NP)??", "What was the birth place of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "418",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the doctoral supervisor of ($x | Scientist_NP)??", "What is the birth place of the doctoral supervisors of ($x | Scientist_NP)??", "What was the birth place of the doctoral supervisor of ($x | Scientist_NP)??", "What was the birth place of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "419",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the host of ($x | TelevisionShow_NP)??", "What is the birth place of the hosts of ($x | TelevisionShow_NP)??", "What was the birth place of the host of ($x | TelevisionShow_NP)??", "What was the birth place of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "420",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the residence of ($x | Place_NP)??", "What is the birth place of the residences of ($x | Place_NP)??", "What was the birth place of the residence of ($x | Place_NP)??", "What was the birth place of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "421",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the daughter of ($x | Person_NP)??", "What is the birth place of the daughters of ($x | Person_NP)??", "What was the birth place of the daughter of ($x | Person_NP)??", "What was the birth place of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "422",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the successor of ($x | Politician_NP)??", "What was the birth place of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "423",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the child of ($x | Person_NP)??", "What is the birth place of the children of ($x | Person_NP)??", "What was the birth place of the child of ($x | Person_NP)??", "What was the birth place of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "424",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the governor of ($x | Person_NP)??", "What is the birth place of the governors of ($x | Person_NP)??", "What was the birth place of the governor of ($x | Person_NP)??", "What was the birth place of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "425",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the music composer of ($x | TelevisionShow_NP)??", "What is the birth place of the music composers of ($x | TelevisionShow_NP)??", "What was the birth place of the music composer of ($x | TelevisionShow_NP)??", "What was the birth place of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "426",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the first to climb  ($x | Mountain_NP)??", "What was the birth place of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "427",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the father of ($x | Royalty_NP)??", "What was the birth place of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "428",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the music composer of ($x | TelevisionShow_NP)??", "What is the birth place of the music composers of ($x | TelevisionShow_NP)??", "What was the birth place of the music composer of ($x | TelevisionShow_NP)??", "What was the birth place of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "429",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the son of ($x | Person_NP)??", "What is the birth place of the sons of ($x | Person_NP)??", "What was the birth place of the son of ($x | Person_NP)??", "What was the birth place of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "430",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the son of ($x | Person_NP)??", "What is the birth place of the sons of ($x | Person_NP)??", "What was the birth place of the son of ($x | Person_NP)??", "What was the birth place of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "431",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of the mayor of ($x | City_NP)??", "What is the birth place of the mayors of ($x | City_NP)??", "What was the birth place of the mayor of ($x | City_NP)??", "What was the birth place of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "432",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the editor of ($x | Work_NP)? have?", "How many birth place does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "433",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the parent of ($x | Person_NP)? have?", "How many birth place does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "434",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the king of ($x | Legislature_NP)? have?", "How many birth place does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "435",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the coach of ($x | IceHockeyLeague_NP)? have?", "How many birth place does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "436",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the coach of ($x | HockeyTeam_NP)? have?", "How many birth place does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "437",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "438",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the author of ($x | Work_NP)? have?", "How many birth place does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "439",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the mayor of ($x | Settlement_NP)? have?", "How many birth place does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "440",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the music by ($x | Musical_NP)? have?", "How many birth place does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "441",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "442",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the creator of ($x | FictionalCharacter_NP)? have?", "How many birth place does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "443",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the influencer of ($x | Person_NP)? have?", "How many birth place does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "444",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the wife of ($x | Person_NP)? have?", "How many birth place does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "445",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many birth place does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "446",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the host of ($x | TelevisionShow_NP)? have?", "How many birth place does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "447",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the residence of ($x | Place_NP)? have?", "How many birth place does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "448",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the daughter of ($x | Person_NP)? have?", "How many birth place does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "449",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "450",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the child of ($x | Person_NP)? have?", "How many birth place does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "451",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the governor of ($x | Person_NP)? have?", "How many birth place does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "452",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the music composer of ($x | TelevisionShow_NP)? have?", "How many birth place does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "453",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "454",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "455",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the music composer of ($x | TelevisionShow_NP)? have?", "How many birth place does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "456",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the son of ($x | Person_NP)? have?", "How many birth place does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "457",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the son of ($x | Person_NP)? have?", "How many birth place does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "458",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many birth place does the mayor of ($x | City_NP)? have?", "How many birth place does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "459",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of the birth place of ($x | Person_NP)??", "What was the capital of the birth place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "460",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of the location of ($x | Mountain_NP)??", "What was the capital of the location of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "461",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of the form of government of ($x | Country_NP)??", "What was the capital of the form of government of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "462",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of the nationality of ($x | Person_NP)??", "What was the capital of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "463",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of the resting place of ($x | Person_NP)??", "What is the capital of the resting places of ($x | Person_NP)??", "What was the capital of the resting place of ($x | Person_NP)??", "What was the capital of the resting places of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "464",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of the nationality of ($x | Person_NP)??", "What was the capital of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "465",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of the largest country of ($x | Country_NP)??", "What was the capital of the largest country of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "466",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many capital does the birth place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "467",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many capital does the location of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "468",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many capital does the form of government of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "469",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many capital does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "470",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many capital does the resting place of ($x | Person_NP)? have?", "How many capital does the resting places of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "471",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many capital does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "472",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many capital does the largest country of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "473",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the founding year of the producer of ($x | Film_NP)??", "What is the founding year of the producers of ($x | Film_NP)??", "What was the founding year of the producer of ($x | Film_NP)??", "What was the founding year of the producers of ($x | Film_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "474",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the founding year of the founder of ($x | Thing_NP)??", "What is the founding year of the founders of ($x | Thing_NP)??", "What was the founding year of the founder of ($x | Thing_NP)??", "What was the founding year of the founders of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "475",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founding year does the producer of ($x | Film_NP)? have?", "How many founding year does the producers of ($x | Film_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "476",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founding year does the founder of ($x | Thing_NP)? have?", "How many founding year does the founders of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "477",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the editor of ($x | Work_NP)??", "What is the death date of the editors of ($x | Work_NP)??", "What was the death date of the editor of ($x | Work_NP)??", "What was the death date of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "478",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the parent of ($x | Person_NP)??", "What is the death date of the parents of ($x | Person_NP)??", "What was the death date of the parent of ($x | Person_NP)??", "What was the death date of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "479",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the king of ($x | Legislature_NP)??", "What is the death date of the kings of ($x | Legislature_NP)??", "What was the death date of the king of ($x | Legislature_NP)??", "What was the death date of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "480",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the coach of ($x | IceHockeyLeague_NP)??", "What is the death date of the coaches of ($x | IceHockeyLeague_NP)??", "What was the death date of the coach of ($x | IceHockeyLeague_NP)??", "What was the death date of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "481",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the coach of ($x | HockeyTeam_NP)??", "What is the death date of the coaches of ($x | HockeyTeam_NP)??", "What was the death date of the coach of ($x | HockeyTeam_NP)??", "What was the death date of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "482",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the alter ego of ($x | ComicsCharacter_NP)??", "What was the death date of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "483",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the author of ($x | Work_NP)??", "What is the death date of the authors of ($x | Work_NP)??", "What was the death date of the author of ($x | Work_NP)??", "What was the death date of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "484",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the mayor of ($x | Settlement_NP)??", "What is the death date of the mayors of ($x | Settlement_NP)??", "What was the death date of the mayor of ($x | Settlement_NP)??", "What was the death date of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "485",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the music by ($x | Musical_NP)??", "What is the death date of the musics by ($x | Musical_NP)??", "What was the death date of the music by ($x | Musical_NP)??", "What was the death date of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "486",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the foundation series of ($x | TelevisionShow_NP)??", "What was the death date of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "487",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the creator of ($x | FictionalCharacter_NP)??", "What is the death date of the creators of ($x | FictionalCharacter_NP)??", "What was the death date of the creator of ($x | FictionalCharacter_NP)??", "What was the death date of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "488",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the influencer of ($x | Person_NP)??", "What is the death date of the influencers of ($x | Person_NP)??", "What was the death date of the influencer of ($x | Person_NP)??", "What was the death date of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "489",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the wife of ($x | Person_NP)??", "What is the death date of the wives of ($x | Person_NP)??", "What was the death date of the wife of ($x | Person_NP)??", "What was the death date of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "490",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the doctoral supervisor of ($x | Scientist_NP)??", "What is the death date of the doctoral supervisors of ($x | Scientist_NP)??", "What was the death date of the doctoral supervisor of ($x | Scientist_NP)??", "What was the death date of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "491",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the host of ($x | TelevisionShow_NP)??", "What is the death date of the hosts of ($x | TelevisionShow_NP)??", "What was the death date of the host of ($x | TelevisionShow_NP)??", "What was the death date of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "492",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the residence of ($x | Place_NP)??", "What is the death date of the residences of ($x | Place_NP)??", "What was the death date of the residence of ($x | Place_NP)??", "What was the death date of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "493",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the daughter of ($x | Person_NP)??", "What is the death date of the daughters of ($x | Person_NP)??", "What was the death date of the daughter of ($x | Person_NP)??", "What was the death date of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "494",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the successor of ($x | Politician_NP)??", "What was the death date of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "495",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the child of ($x | Person_NP)??", "What is the death date of the children of ($x | Person_NP)??", "What was the death date of the child of ($x | Person_NP)??", "What was the death date of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "496",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the governor of ($x | Person_NP)??", "What is the death date of the governors of ($x | Person_NP)??", "What was the death date of the governor of ($x | Person_NP)??", "What was the death date of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "497",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the music composer of ($x | TelevisionShow_NP)??", "What is the death date of the music composers of ($x | TelevisionShow_NP)??", "What was the death date of the music composer of ($x | TelevisionShow_NP)??", "What was the death date of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "498",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the first to climb  ($x | Mountain_NP)??", "What was the death date of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "499",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the father of ($x | Royalty_NP)??", "What was the death date of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "500",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the music composer of ($x | TelevisionShow_NP)??", "What is the death date of the music composers of ($x | TelevisionShow_NP)??", "What was the death date of the music composer of ($x | TelevisionShow_NP)??", "What was the death date of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "501",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the son of ($x | Person_NP)??", "What is the death date of the sons of ($x | Person_NP)??", "What was the death date of the son of ($x | Person_NP)??", "What was the death date of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "502",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the son of ($x | Person_NP)??", "What is the death date of the sons of ($x | Person_NP)??", "What was the death date of the son of ($x | Person_NP)??", "What was the death date of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "503",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of the mayor of ($x | City_NP)??", "What is the death date of the mayors of ($x | City_NP)??", "What was the death date of the mayor of ($x | City_NP)??", "What was the death date of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "504",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the editor of ($x | Work_NP)? have?", "How many death date does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "505",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the parent of ($x | Person_NP)? have?", "How many death date does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "506",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the king of ($x | Legislature_NP)? have?", "How many death date does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "507",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the coach of ($x | IceHockeyLeague_NP)? have?", "How many death date does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "508",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the coach of ($x | HockeyTeam_NP)? have?", "How many death date does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "509",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "510",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the author of ($x | Work_NP)? have?", "How many death date does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "511",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the mayor of ($x | Settlement_NP)? have?", "How many death date does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "512",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the music by ($x | Musical_NP)? have?", "How many death date does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "513",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "514",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the creator of ($x | FictionalCharacter_NP)? have?", "How many death date does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "515",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the influencer of ($x | Person_NP)? have?", "How many death date does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "516",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the wife of ($x | Person_NP)? have?", "How many death date does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "517",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many death date does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "518",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the host of ($x | TelevisionShow_NP)? have?", "How many death date does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "519",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the residence of ($x | Place_NP)? have?", "How many death date does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "520",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the daughter of ($x | Person_NP)? have?", "How many death date does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "521",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "522",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the child of ($x | Person_NP)? have?", "How many death date does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "523",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the governor of ($x | Person_NP)? have?", "How many death date does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "524",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the music composer of ($x | TelevisionShow_NP)? have?", "How many death date does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "525",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "526",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "527",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the music composer of ($x | TelevisionShow_NP)? have?", "How many death date does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "528",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the son of ($x | Person_NP)? have?", "How many death date does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "529",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the son of ($x | Person_NP)? have?", "How many death date does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "530",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many death date does the mayor of ($x | City_NP)? have?", "How many death date does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "531",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of the death place of ($x | Politician_NP)??", "What was the location of the death place of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "532",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of the location of ($x | Place_NP)??", "What was the location of the location of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "533",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of the first Ascent Person of ($x | Mountain_NP)??", "What is the location of the first Ascent Persons of ($x | Mountain_NP)??", "What was the location of the first Ascent Person of ($x | Mountain_NP)??", "What was the location of the first Ascent Persons of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "534",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of the employer of ($x | Person_NP)??", "What is the location of the employers of ($x | Person_NP)??", "What was the location of the employer of ($x | Person_NP)??", "What was the location of the employers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/employer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "535",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of the wine region of ($x | Grape_NP)??", "What is the location of the wine regions of ($x | Grape_NP)??", "What was the location of the wine region of ($x | Grape_NP)??", "What was the location of the wine regions of ($x | Grape_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/wineRegion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "536",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of the associated Musical Artist of ($x | Band_NP)??", "What is the location of the associated Musical Artists of ($x | Band_NP)??", "What was the location of the associated Musical Artist of ($x | Band_NP)??", "What was the location of the associated Musical Artists of ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/associatedMusicalArtist> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "537",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many location does the death place of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "538",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many location does the location of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "539",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many location does the first Ascent Person of ($x | Mountain_NP)? have?", "How many location does the first Ascent Persons of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "540",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many location does the employer of ($x | Person_NP)? have?", "How many location does the employers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/employer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "541",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many location does the wine region of ($x | Grape_NP)? have?", "How many location does the wine regions of ($x | Grape_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/wineRegion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "542",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many location does the associated Musical Artist of ($x | Band_NP)? have?", "How many location does the associated Musical Artists of ($x | Band_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "543",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the editor of ($x | Work_NP)?.", "Give me all parents of the editors of ($x | Work_NP)?.", "List all the parents of the editor of ($x | Work_NP)?.", "List all the parents of the editors of ($x | Work_NP)?.", "show me all parents of the editor of ($x | Work_NP)?.", "show me all parents of the editors of ($x | Work_NP)?.", "Who are the parents of the editor of ($x | Work_NP)??", "Who are the parents of the editors of ($x | Work_NP)??", "Who is the parent of the editor of ($x | Work_NP)??", "Who is the parent of the editors of ($x | Work_NP)??", "Who was the parent of the editor of ($x | Work_NP)??", "Who was the parent of the editors of ($x | Work_NP)??", "Who were the parents of the editor of ($x | Work_NP)??", "Who were the parents of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "544",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the parent of ($x | Person_NP)?.", "Give me all parents of the parents of ($x | Person_NP)?.", "List all the parents of the parent of ($x | Person_NP)?.", "List all the parents of the parents of ($x | Person_NP)?.", "show me all parents of the parent of ($x | Person_NP)?.", "show me all parents of the parents of ($x | Person_NP)?.", "Who are the parents of the parent of ($x | Person_NP)??", "Who are the parents of the parents of ($x | Person_NP)??", "Who is the parent of the parent of ($x | Person_NP)??", "Who is the parent of the parents of ($x | Person_NP)??", "Who was the parent of the parent of ($x | Person_NP)??", "Who was the parent of the parents of ($x | Person_NP)??", "Who were the parents of the parent of ($x | Person_NP)??", "Who were the parents of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "545",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the king of ($x | Legislature_NP)?.", "Give me all parents of the kings of ($x | Legislature_NP)?.", "List all the parents of the king of ($x | Legislature_NP)?.", "List all the parents of the kings of ($x | Legislature_NP)?.", "show me all parents of the king of ($x | Legislature_NP)?.", "show me all parents of the kings of ($x | Legislature_NP)?.", "Who are the parents of the king of ($x | Legislature_NP)??", "Who are the parents of the kings of ($x | Legislature_NP)??", "Who is the parent of the king of ($x | Legislature_NP)??", "Who is the parent of the kings of ($x | Legislature_NP)??", "Who was the parent of the king of ($x | Legislature_NP)??", "Who was the parent of the kings of ($x | Legislature_NP)??", "Who were the parents of the king of ($x | Legislature_NP)??", "Who were the parents of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "546",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all parents of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the parents of the coach of ($x | IceHockeyLeague_NP)?.", "List all the parents of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all parents of the coach of ($x | IceHockeyLeague_NP)?.", "show me all parents of the coaches of ($x | IceHockeyLeague_NP)?.", "Who are the parents of the coach of ($x | IceHockeyLeague_NP)??", "Who are the parents of the coaches of ($x | IceHockeyLeague_NP)??", "Who is the parent of the coach of ($x | IceHockeyLeague_NP)??", "Who is the parent of the coaches of ($x | IceHockeyLeague_NP)??", "Who was the parent of the coach of ($x | IceHockeyLeague_NP)??", "Who was the parent of the coaches of ($x | IceHockeyLeague_NP)??", "Who were the parents of the coach of ($x | IceHockeyLeague_NP)??", "Who were the parents of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "547",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the coach of ($x | HockeyTeam_NP)?.", "Give me all parents of the coaches of ($x | HockeyTeam_NP)?.", "List all the parents of the coach of ($x | HockeyTeam_NP)?.", "List all the parents of the coaches of ($x | HockeyTeam_NP)?.", "show me all parents of the coach of ($x | HockeyTeam_NP)?.", "show me all parents of the coaches of ($x | HockeyTeam_NP)?.", "Who are the parents of the coach of ($x | HockeyTeam_NP)??", "Who are the parents of the coaches of ($x | HockeyTeam_NP)??", "Who is the parent of the coach of ($x | HockeyTeam_NP)??", "Who is the parent of the coaches of ($x | HockeyTeam_NP)??", "Who was the parent of the coach of ($x | HockeyTeam_NP)??", "Who was the parent of the coaches of ($x | HockeyTeam_NP)??", "Who were the parents of the coach of ($x | HockeyTeam_NP)??", "Who were the parents of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "548",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the parents of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all parents of the alter ego of ($x | ComicsCharacter_NP)?.", "Who are the parents of the alter ego of ($x | ComicsCharacter_NP)??", "Who is the parent of the alter ego of ($x | ComicsCharacter_NP)??", "Who was the parent of the alter ego of ($x | ComicsCharacter_NP)??", "Who were the parents of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "549",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the author of ($x | Work_NP)?.", "Give me all parents of the authors of ($x | Work_NP)?.", "List all the parents of the author of ($x | Work_NP)?.", "List all the parents of the authors of ($x | Work_NP)?.", "show me all parents of the author of ($x | Work_NP)?.", "show me all parents of the authors of ($x | Work_NP)?.", "Who are the parents of the author of ($x | Work_NP)??", "Who are the parents of the authors of ($x | Work_NP)??", "Who is the parent of the author of ($x | Work_NP)??", "Who is the parent of the authors of ($x | Work_NP)??", "Who was the parent of the author of ($x | Work_NP)??", "Who was the parent of the authors of ($x | Work_NP)??", "Who were the parents of the author of ($x | Work_NP)??", "Who were the parents of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "550",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the mayor of ($x | Settlement_NP)?.", "Give me all parents of the mayors of ($x | Settlement_NP)?.", "List all the parents of the mayor of ($x | Settlement_NP)?.", "List all the parents of the mayors of ($x | Settlement_NP)?.", "show me all parents of the mayor of ($x | Settlement_NP)?.", "show me all parents of the mayors of ($x | Settlement_NP)?.", "Who are the parents of the mayor of ($x | Settlement_NP)??", "Who are the parents of the mayors of ($x | Settlement_NP)??", "Who is the parent of the mayor of ($x | Settlement_NP)??", "Who is the parent of the mayors of ($x | Settlement_NP)??", "Who was the parent of the mayor of ($x | Settlement_NP)??", "Who was the parent of the mayors of ($x | Settlement_NP)??", "Who were the parents of the mayor of ($x | Settlement_NP)??", "Who were the parents of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "551",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the music by ($x | Musical_NP)?.", "Give me all parents of the musics by ($x | Musical_NP)?.", "List all the parents of the music by ($x | Musical_NP)?.", "List all the parents of the musics by ($x | Musical_NP)?.", "show me all parents of the music by ($x | Musical_NP)?.", "show me all parents of the musics by ($x | Musical_NP)?.", "Who are the parents of the music by ($x | Musical_NP)??", "Who are the parents of the musics by ($x | Musical_NP)??", "Who is the parent of the music by ($x | Musical_NP)??", "Who is the parent of the musics by ($x | Musical_NP)??", "Who was the parent of the music by ($x | Musical_NP)??", "Who was the parent of the musics by ($x | Musical_NP)??", "Who were the parents of the music by ($x | Musical_NP)??", "Who were the parents of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "552",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the foundation series of ($x | TelevisionShow_NP)?.", "List all the parents of the foundation series of ($x | TelevisionShow_NP)?.", "show me all parents of the foundation series of ($x | TelevisionShow_NP)?.", "Who are the parents of the foundation series of ($x | TelevisionShow_NP)??", "Who is the parent of the foundation series of ($x | TelevisionShow_NP)??", "Who was the parent of the foundation series of ($x | TelevisionShow_NP)??", "Who were the parents of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "553",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the creator of ($x | FictionalCharacter_NP)?.", "Give me all parents of the creators of ($x | FictionalCharacter_NP)?.", "List all the parents of the creator of ($x | FictionalCharacter_NP)?.", "List all the parents of the creators of ($x | FictionalCharacter_NP)?.", "show me all parents of the creator of ($x | FictionalCharacter_NP)?.", "show me all parents of the creators of ($x | FictionalCharacter_NP)?.", "Who are the parents of the creator of ($x | FictionalCharacter_NP)??", "Who are the parents of the creators of ($x | FictionalCharacter_NP)??", "Who is the parent of the creator of ($x | FictionalCharacter_NP)??", "Who is the parent of the creators of ($x | FictionalCharacter_NP)??", "Who was the parent of the creator of ($x | FictionalCharacter_NP)??", "Who was the parent of the creators of ($x | FictionalCharacter_NP)??", "Who were the parents of the creator of ($x | FictionalCharacter_NP)??", "Who were the parents of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "554",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the influencer of ($x | Person_NP)?.", "Give me all parents of the influencers of ($x | Person_NP)?.", "List all the parents of the influencer of ($x | Person_NP)?.", "List all the parents of the influencers of ($x | Person_NP)?.", "show me all parents of the influencer of ($x | Person_NP)?.", "show me all parents of the influencers of ($x | Person_NP)?.", "Who are the parents of the influencer of ($x | Person_NP)??", "Who are the parents of the influencers of ($x | Person_NP)??", "Who is the parent of the influencer of ($x | Person_NP)??", "Who is the parent of the influencers of ($x | Person_NP)??", "Who was the parent of the influencer of ($x | Person_NP)??", "Who was the parent of the influencers of ($x | Person_NP)??", "Who were the parents of the influencer of ($x | Person_NP)??", "Who were the parents of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "555",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the wife of ($x | Person_NP)?.", "Give me all parents of the wives of ($x | Person_NP)?.", "List all the parents of the wife of ($x | Person_NP)?.", "List all the parents of the wives of ($x | Person_NP)?.", "show me all parents of the wife of ($x | Person_NP)?.", "show me all parents of the wives of ($x | Person_NP)?.", "Who are the parents of the wife of ($x | Person_NP)??", "Who are the parents of the wives of ($x | Person_NP)??", "Who is the parent of the wife of ($x | Person_NP)??", "Who is the parent of the wives of ($x | Person_NP)??", "Who was the parent of the wife of ($x | Person_NP)??", "Who was the parent of the wives of ($x | Person_NP)??", "Who were the parents of the wife of ($x | Person_NP)??", "Who were the parents of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "556",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all parents of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the parents of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the parents of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all parents of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all parents of the doctoral supervisors of ($x | Scientist_NP)?.", "Who are the parents of the doctoral supervisor of ($x | Scientist_NP)??", "Who are the parents of the doctoral supervisors of ($x | Scientist_NP)??", "Who is the parent of the doctoral supervisor of ($x | Scientist_NP)??", "Who is the parent of the doctoral supervisors of ($x | Scientist_NP)??", "Who was the parent of the doctoral supervisor of ($x | Scientist_NP)??", "Who was the parent of the doctoral supervisors of ($x | Scientist_NP)??", "Who were the parents of the doctoral supervisor of ($x | Scientist_NP)??", "Who were the parents of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "557",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the host of ($x | TelevisionShow_NP)?.", "Give me all parents of the hosts of ($x | TelevisionShow_NP)?.", "List all the parents of the host of ($x | TelevisionShow_NP)?.", "List all the parents of the hosts of ($x | TelevisionShow_NP)?.", "show me all parents of the host of ($x | TelevisionShow_NP)?.", "show me all parents of the hosts of ($x | TelevisionShow_NP)?.", "Who are the parents of the host of ($x | TelevisionShow_NP)??", "Who are the parents of the hosts of ($x | TelevisionShow_NP)??", "Who is the parent of the host of ($x | TelevisionShow_NP)??", "Who is the parent of the hosts of ($x | TelevisionShow_NP)??", "Who was the parent of the host of ($x | TelevisionShow_NP)??", "Who was the parent of the hosts of ($x | TelevisionShow_NP)??", "Who were the parents of the host of ($x | TelevisionShow_NP)??", "Who were the parents of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "558",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the residence of ($x | Place_NP)?.", "Give me all parents of the residences of ($x | Place_NP)?.", "List all the parents of the residence of ($x | Place_NP)?.", "List all the parents of the residences of ($x | Place_NP)?.", "show me all parents of the residence of ($x | Place_NP)?.", "show me all parents of the residences of ($x | Place_NP)?.", "Who are the parents of the residence of ($x | Place_NP)??", "Who are the parents of the residences of ($x | Place_NP)??", "Who is the parent of the residence of ($x | Place_NP)??", "Who is the parent of the residences of ($x | Place_NP)??", "Who was the parent of the residence of ($x | Place_NP)??", "Who was the parent of the residences of ($x | Place_NP)??", "Who were the parents of the residence of ($x | Place_NP)??", "Who were the parents of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "559",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the daughter of ($x | Person_NP)?.", "Give me all parents of the daughters of ($x | Person_NP)?.", "List all the parents of the daughter of ($x | Person_NP)?.", "List all the parents of the daughters of ($x | Person_NP)?.", "show me all parents of the daughter of ($x | Person_NP)?.", "show me all parents of the daughters of ($x | Person_NP)?.", "Who are the parents of the daughter of ($x | Person_NP)??", "Who are the parents of the daughters of ($x | Person_NP)??", "Who is the parent of the daughter of ($x | Person_NP)??", "Who is the parent of the daughters of ($x | Person_NP)??", "Who was the parent of the daughter of ($x | Person_NP)??", "Who was the parent of the daughters of ($x | Person_NP)??", "Who were the parents of the daughter of ($x | Person_NP)??", "Who were the parents of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "560",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the successor of ($x | Politician_NP)?.", "List all the parents of the successor of ($x | Politician_NP)?.", "show me all parents of the successor of ($x | Politician_NP)?.", "Who are the parents of the successor of ($x | Politician_NP)??", "Who is the parent of the successor of ($x | Politician_NP)??", "Who was the parent of the successor of ($x | Politician_NP)??", "Who were the parents of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "561",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the child of ($x | Person_NP)?.", "Give me all parents of the children of ($x | Person_NP)?.", "List all the parents of the child of ($x | Person_NP)?.", "List all the parents of the children of ($x | Person_NP)?.", "show me all parents of the child of ($x | Person_NP)?.", "show me all parents of the children of ($x | Person_NP)?.", "Who are the parents of the child of ($x | Person_NP)??", "Who are the parents of the children of ($x | Person_NP)??", "Who is the parent of the child of ($x | Person_NP)??", "Who is the parent of the children of ($x | Person_NP)??", "Who was the parent of the child of ($x | Person_NP)??", "Who was the parent of the children of ($x | Person_NP)??", "Who were the parents of the child of ($x | Person_NP)??", "Who were the parents of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "562",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the governor of ($x | Person_NP)?.", "Give me all parents of the governors of ($x | Person_NP)?.", "List all the parents of the governor of ($x | Person_NP)?.", "List all the parents of the governors of ($x | Person_NP)?.", "show me all parents of the governor of ($x | Person_NP)?.", "show me all parents of the governors of ($x | Person_NP)?.", "Who are the parents of the governor of ($x | Person_NP)??", "Who are the parents of the governors of ($x | Person_NP)??", "Who is the parent of the governor of ($x | Person_NP)??", "Who is the parent of the governors of ($x | Person_NP)??", "Who was the parent of the governor of ($x | Person_NP)??", "Who was the parent of the governors of ($x | Person_NP)??", "Who were the parents of the governor of ($x | Person_NP)??", "Who were the parents of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "563",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the music composer of ($x | TelevisionShow_NP)?.", "Give me all parents of the music composers of ($x | TelevisionShow_NP)?.", "List all the parents of the music composer of ($x | TelevisionShow_NP)?.", "List all the parents of the music composers of ($x | TelevisionShow_NP)?.", "show me all parents of the music composer of ($x | TelevisionShow_NP)?.", "show me all parents of the music composers of ($x | TelevisionShow_NP)?.", "Who are the parents of the music composer of ($x | TelevisionShow_NP)??", "Who are the parents of the music composers of ($x | TelevisionShow_NP)??", "Who is the parent of the music composer of ($x | TelevisionShow_NP)??", "Who is the parent of the music composers of ($x | TelevisionShow_NP)??", "Who was the parent of the music composer of ($x | TelevisionShow_NP)??", "Who was the parent of the music composers of ($x | TelevisionShow_NP)??", "Who were the parents of the music composer of ($x | TelevisionShow_NP)??", "Who were the parents of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "564",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the first to climb  ($x | Mountain_NP)?.", "List all the parents of the first to climb  ($x | Mountain_NP)?.", "show me all parents of the first to climb  ($x | Mountain_NP)?.", "Who are the parents of the first to climb  ($x | Mountain_NP)??", "Who is the parent of the first to climb  ($x | Mountain_NP)??", "Who was the parent of the first to climb  ($x | Mountain_NP)??", "Who were the parents of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "565",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the father of ($x | Royalty_NP)?.", "List all the parents of the father of ($x | Royalty_NP)?.", "show me all parents of the father of ($x | Royalty_NP)?.", "Who are the parents of the father of ($x | Royalty_NP)??", "Who is the parent of the father of ($x | Royalty_NP)??", "Who was the parent of the father of ($x | Royalty_NP)??", "Who were the parents of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "566",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the music composer of ($x | TelevisionShow_NP)?.", "Give me all parents of the music composers of ($x | TelevisionShow_NP)?.", "List all the parents of the music composer of ($x | TelevisionShow_NP)?.", "List all the parents of the music composers of ($x | TelevisionShow_NP)?.", "show me all parents of the music composer of ($x | TelevisionShow_NP)?.", "show me all parents of the music composers of ($x | TelevisionShow_NP)?.", "Who are the parents of the music composer of ($x | TelevisionShow_NP)??", "Who are the parents of the music composers of ($x | TelevisionShow_NP)??", "Who is the parent of the music composer of ($x | TelevisionShow_NP)??", "Who is the parent of the music composers of ($x | TelevisionShow_NP)??", "Who was the parent of the music composer of ($x | TelevisionShow_NP)??", "Who was the parent of the music composers of ($x | TelevisionShow_NP)??", "Who were the parents of the music composer of ($x | TelevisionShow_NP)??", "Who were the parents of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "567",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the son of ($x | Person_NP)?.", "Give me all parents of the sons of ($x | Person_NP)?.", "List all the parents of the son of ($x | Person_NP)?.", "List all the parents of the sons of ($x | Person_NP)?.", "show me all parents of the son of ($x | Person_NP)?.", "show me all parents of the sons of ($x | Person_NP)?.", "Who are the parents of the son of ($x | Person_NP)??", "Who are the parents of the sons of ($x | Person_NP)??", "Who is the parent of the son of ($x | Person_NP)??", "Who is the parent of the sons of ($x | Person_NP)??", "Who was the parent of the son of ($x | Person_NP)??", "Who was the parent of the sons of ($x | Person_NP)??", "Who were the parents of the son of ($x | Person_NP)??", "Who were the parents of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "568",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the son of ($x | Person_NP)?.", "Give me all parents of the sons of ($x | Person_NP)?.", "List all the parents of the son of ($x | Person_NP)?.", "List all the parents of the sons of ($x | Person_NP)?.", "show me all parents of the son of ($x | Person_NP)?.", "show me all parents of the sons of ($x | Person_NP)?.", "Who are the parents of the son of ($x | Person_NP)??", "Who are the parents of the sons of ($x | Person_NP)??", "Who is the parent of the son of ($x | Person_NP)??", "Who is the parent of the sons of ($x | Person_NP)??", "Who was the parent of the son of ($x | Person_NP)??", "Who was the parent of the sons of ($x | Person_NP)??", "Who were the parents of the son of ($x | Person_NP)??", "Who were the parents of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "569",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of the mayor of ($x | City_NP)?.", "Give me all parents of the mayors of ($x | City_NP)?.", "List all the parents of the mayor of ($x | City_NP)?.", "List all the parents of the mayors of ($x | City_NP)?.", "show me all parents of the mayor of ($x | City_NP)?.", "show me all parents of the mayors of ($x | City_NP)?.", "Who are the parents of the mayor of ($x | City_NP)??", "Who are the parents of the mayors of ($x | City_NP)??", "Who is the parent of the mayor of ($x | City_NP)??", "Who is the parent of the mayors of ($x | City_NP)??", "Who was the parent of the mayor of ($x | City_NP)??", "Who was the parent of the mayors of ($x | City_NP)??", "Who were the parents of the mayor of ($x | City_NP)??", "Who were the parents of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "570",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the editor of ($x | Work_NP)? have?", "How many parent does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "571",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the parent of ($x | Person_NP)? have?", "How many parent does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "572",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the king of ($x | Legislature_NP)? have?", "How many parent does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "573",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the coach of ($x | IceHockeyLeague_NP)? have?", "How many parent does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "574",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the coach of ($x | HockeyTeam_NP)? have?", "How many parent does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "575",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "576",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the author of ($x | Work_NP)? have?", "How many parent does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "577",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the mayor of ($x | Settlement_NP)? have?", "How many parent does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "578",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the music by ($x | Musical_NP)? have?", "How many parent does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "579",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "580",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the creator of ($x | FictionalCharacter_NP)? have?", "How many parent does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "581",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the influencer of ($x | Person_NP)? have?", "How many parent does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "582",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the wife of ($x | Person_NP)? have?", "How many parent does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "583",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many parent does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "584",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the host of ($x | TelevisionShow_NP)? have?", "How many parent does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "585",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the residence of ($x | Place_NP)? have?", "How many parent does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "586",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the daughter of ($x | Person_NP)? have?", "How many parent does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "587",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "588",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the child of ($x | Person_NP)? have?", "How many parent does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "589",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the governor of ($x | Person_NP)? have?", "How many parent does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "590",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the music composer of ($x | TelevisionShow_NP)? have?", "How many parent does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "591",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "592",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "593",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the music composer of ($x | TelevisionShow_NP)? have?", "How many parent does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "594",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the son of ($x | Person_NP)? have?", "How many parent does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "595",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the son of ($x | Person_NP)? have?", "How many parent does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "596",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many parent does the mayor of ($x | City_NP)? have?", "How many parent does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "597",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all coaches of the team of ($x | IceHockeyLeague_NP)?.", "Give me all coaches of the teams of ($x | IceHockeyLeague_NP)?.", "List all the coaches of the team of ($x | IceHockeyLeague_NP)?.", "List all the coaches of the teams of ($x | IceHockeyLeague_NP)?.", "show me all coaches of the team of ($x | IceHockeyLeague_NP)?.", "show me all coaches of the teams of ($x | IceHockeyLeague_NP)?.", "Who are the coaches of the team of ($x | IceHockeyLeague_NP)??", "Who are the coaches of the teams of ($x | IceHockeyLeague_NP)??", "Who is the coach of the team of ($x | IceHockeyLeague_NP)??", "Who is the coach of the teams of ($x | IceHockeyLeague_NP)??", "Who was the coach of the team of ($x | IceHockeyLeague_NP)??", "Who was the coach of the teams of ($x | IceHockeyLeague_NP)??", "Who were the coaches of the team of ($x | IceHockeyLeague_NP)??", "Who were the coaches of the teams of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/league> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "598",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many coach does the team of ($x | IceHockeyLeague_NP)? have?", "How many coach does the teams of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/league> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "599",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all games by the producer of ($x | Film_NP)?.", "Give me all games by the producers of ($x | Film_NP)?.", "List all the games by the producer of ($x | Film_NP)?.", "List all the games by the producers of ($x | Film_NP)?.", "show me all games by the producer of ($x | Film_NP)?.", "show me all games by the producers of ($x | Film_NP)?.", "What are the games by the producer of ($x | Film_NP)??", "What are the games by the producers of ($x | Film_NP)??", "What is the game by the producer of ($x | Film_NP)??", "What is the game by the producers of ($x | Film_NP)??", "What was the game by the producer of ($x | Film_NP)??", "What was the game by the producers of ($x | Film_NP)??", "What were the games by the producer of ($x | Film_NP)??", "What were the games by the producers of ($x | Film_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "600",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all games by the founder of ($x | Thing_NP)?.", "Give me all games by the founders of ($x | Thing_NP)?.", "List all the games by the founder of ($x | Thing_NP)?.", "List all the games by the founders of ($x | Thing_NP)?.", "show me all games by the founder of ($x | Thing_NP)?.", "show me all games by the founders of ($x | Thing_NP)?.", "What are the games by the founder of ($x | Thing_NP)??", "What are the games by the founders of ($x | Thing_NP)??", "What is the game by the founder of ($x | Thing_NP)??", "What is the game by the founders of ($x | Thing_NP)??", "What was the game by the founder of ($x | Thing_NP)??", "What was the game by the founders of ($x | Thing_NP)??", "What were the games by the founder of ($x | Thing_NP)??", "What were the games by the founders of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "601",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many game does the producer of ($x | Film_NP)? have?", "How many game does the producers of ($x | Film_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "602",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many game does the founder of ($x | Thing_NP)? have?", "How many game does the founders of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "603",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the isbn of ($x | Book_NP)?.", "Give me all borough of the isbns of ($x | Book_NP)?.", "List all the borough of the isbn of ($x | Book_NP)?.", "List all the borough of the isbns of ($x | Book_NP)?.", "show me all borough of the isbn of ($x | Book_NP)?.", "show me all borough of the isbns of ($x | Book_NP)?.", "What are the borough of the isbn of ($x | Book_NP)??", "What are the borough of the isbns of ($x | Book_NP)??", "What is the borough of the isbn of ($x | Book_NP)??", "What is the borough of the isbns of ($x | Book_NP)??", "What was the borough of the isbn of ($x | Book_NP)??", "What was the borough of the isbns of ($x | Book_NP)??", "What were the borough of the isbn of ($x | Book_NP)??", "What were the borough of the isbns of ($x | Book_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "604",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the president of ($x | Person_NP)?.", "Give me all borough of the presidents of ($x | Person_NP)?.", "List all the borough of the president of ($x | Person_NP)?.", "List all the borough of the presidents of ($x | Person_NP)?.", "show me all borough of the president of ($x | Person_NP)?.", "show me all borough of the presidents of ($x | Person_NP)?.", "What are the borough of the president of ($x | Person_NP)??", "What are the borough of the presidents of ($x | Person_NP)??", "What is the borough of the president of ($x | Person_NP)??", "What is the borough of the presidents of ($x | Person_NP)??", "What was the borough of the president of ($x | Person_NP)??", "What was the borough of the presidents of ($x | Person_NP)??", "What were the borough of the president of ($x | Person_NP)??", "What were the borough of the presidents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "605",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the parties of ($x | Politician_NP)?.", "Give me all borough of the party of ($x | Politician_NP)?.", "List all the borough of the parties of ($x | Politician_NP)?.", "List all the borough of the party of ($x | Politician_NP)?.", "show me all borough of the parties of ($x | Politician_NP)?.", "show me all borough of the party of ($x | Politician_NP)?.", "What are the borough of the parties of ($x | Politician_NP)??", "What are the borough of the party of ($x | Politician_NP)??", "What is the borough of the parties of ($x | Politician_NP)??", "What is the borough of the party of ($x | Politician_NP)??", "What was the borough of the parties of ($x | Politician_NP)??", "What was the borough of the party of ($x | Politician_NP)??", "What were the borough of the parties of ($x | Politician_NP)??", "What were the borough of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "606",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the parties of ($x | Politician_NP)?.", "Give me all borough of the party of ($x | Politician_NP)?.", "List all the borough of the parties of ($x | Politician_NP)?.", "List all the borough of the party of ($x | Politician_NP)?.", "show me all borough of the parties of ($x | Politician_NP)?.", "show me all borough of the party of ($x | Politician_NP)?.", "What are the borough of the parties of ($x | Politician_NP)??", "What are the borough of the party of ($x | Politician_NP)??", "What is the borough of the parties of ($x | Politician_NP)??", "What is the borough of the party of ($x | Politician_NP)??", "What was the borough of the parties of ($x | Politician_NP)??", "What was the borough of the party of ($x | Politician_NP)??", "What were the borough of the parties of ($x | Politician_NP)??", "What were the borough of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "607",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the artistic movement of ($x | Artist_NP)?.", "Give me all borough of the artistic movements of ($x | Artist_NP)?.", "List all the borough of the artistic movement of ($x | Artist_NP)?.", "List all the borough of the artistic movements of ($x | Artist_NP)?.", "show me all borough of the artistic movement of ($x | Artist_NP)?.", "show me all borough of the artistic movements of ($x | Artist_NP)?.", "What are the borough of the artistic movement of ($x | Artist_NP)??", "What are the borough of the artistic movements of ($x | Artist_NP)??", "What is the borough of the artistic movement of ($x | Artist_NP)??", "What is the borough of the artistic movements of ($x | Artist_NP)??", "What was the borough of the artistic movement of ($x | Artist_NP)??", "What was the borough of the artistic movements of ($x | Artist_NP)??", "What were the borough of the artistic movement of ($x | Artist_NP)??", "What were the borough of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "608",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the artistic movement of ($x | Artist_NP)?.", "Give me all borough of the artistic movements of ($x | Artist_NP)?.", "List all the borough of the artistic movement of ($x | Artist_NP)?.", "List all the borough of the artistic movements of ($x | Artist_NP)?.", "show me all borough of the artistic movement of ($x | Artist_NP)?.", "show me all borough of the artistic movements of ($x | Artist_NP)?.", "What are the borough of the artistic movement of ($x | Artist_NP)??", "What are the borough of the artistic movements of ($x | Artist_NP)??", "What is the borough of the artistic movement of ($x | Artist_NP)??", "What is the borough of the artistic movements of ($x | Artist_NP)??", "What was the borough of the artistic movement of ($x | Artist_NP)??", "What was the borough of the artistic movements of ($x | Artist_NP)??", "What were the borough of the artistic movement of ($x | Artist_NP)??", "What were the borough of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "609",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the record label of ($x | Genre_NP)?.", "Give me all borough of the record labels of ($x | Genre_NP)?.", "List all the borough of the record label of ($x | Genre_NP)?.", "List all the borough of the record labels of ($x | Genre_NP)?.", "show me all borough of the record label of ($x | Genre_NP)?.", "show me all borough of the record labels of ($x | Genre_NP)?.", "What are the borough of the record label of ($x | Genre_NP)??", "What are the borough of the record labels of ($x | Genre_NP)??", "What is the borough of the record label of ($x | Genre_NP)??", "What is the borough of the record labels of ($x | Genre_NP)??", "What was the borough of the record label of ($x | Genre_NP)??", "What was the borough of the record labels of ($x | Genre_NP)??", "What were the borough of the record label of ($x | Genre_NP)??", "What were the borough of the record labels of ($x | Genre_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "610",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the autobiography of ($x | Thing_NP)?.", "List all the borough of the autobiography of ($x | Thing_NP)?.", "show me all borough of the autobiography of ($x | Thing_NP)?.", "What are the borough of the autobiography of ($x | Thing_NP)??", "What is the borough of the autobiography of ($x | Thing_NP)??", "What was the borough of the autobiography of ($x | Thing_NP)??", "What were the borough of the autobiography of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "611",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the resting place of ($x | Person_NP)?.", "List all the borough of the resting place of ($x | Person_NP)?.", "show me all borough of the resting place of ($x | Person_NP)?.", "What are the borough of the resting place of ($x | Person_NP)??", "What is the borough of the resting place of ($x | Person_NP)??", "What was the borough of the resting place of ($x | Person_NP)??", "What were the borough of the resting place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "612",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the time zone of ($x | City_NP)?.", "Give me all borough of the time zones of ($x | City_NP)?.", "List all the borough of the time zone of ($x | City_NP)?.", "List all the borough of the time zones of ($x | City_NP)?.", "show me all borough of the time zone of ($x | City_NP)?.", "show me all borough of the time zones of ($x | City_NP)?.", "What are the borough of the time zone of ($x | City_NP)??", "What are the borough of the time zones of ($x | City_NP)??", "What is the borough of the time zone of ($x | City_NP)??", "What is the borough of the time zones of ($x | City_NP)??", "What was the borough of the time zone of ($x | City_NP)??", "What was the borough of the time zones of ($x | City_NP)??", "What were the borough of the time zone of ($x | City_NP)??", "What were the borough of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "613",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the time zone of ($x | City_NP)?.", "Give me all borough of the time zones of ($x | City_NP)?.", "List all the borough of the time zone of ($x | City_NP)?.", "List all the borough of the time zones of ($x | City_NP)?.", "show me all borough of the time zone of ($x | City_NP)?.", "show me all borough of the time zones of ($x | City_NP)?.", "What are the borough of the time zone of ($x | City_NP)??", "What are the borough of the time zones of ($x | City_NP)??", "What is the borough of the time zone of ($x | City_NP)??", "What is the borough of the time zones of ($x | City_NP)??", "What was the borough of the time zone of ($x | City_NP)??", "What was the borough of the time zones of ($x | City_NP)??", "What were the borough of the time zone of ($x | City_NP)??", "What were the borough of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "614",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the cause of death of ($x | Person_NP)?.", "Give me all borough of the causes of death of ($x | Person_NP)?.", "List all the borough of the cause of death of ($x | Person_NP)?.", "List all the borough of the causes of death of ($x | Person_NP)?.", "show me all borough of the cause of death of ($x | Person_NP)?.", "show me all borough of the causes of death of ($x | Person_NP)?.", "What are the borough of the cause of death of ($x | Person_NP)??", "What are the borough of the causes of death of ($x | Person_NP)??", "What is the borough of the cause of death of ($x | Person_NP)??", "What is the borough of the causes of death of ($x | Person_NP)??", "What was the borough of the cause of death of ($x | Person_NP)??", "What was the borough of the causes of death of ($x | Person_NP)??", "What were the borough of the cause of death of ($x | Person_NP)??", "What were the borough of the causes of death of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "615",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the religion of ($x | Person_NP)?.", "List all the borough of the religion of ($x | Person_NP)?.", "show me all borough of the religion of ($x | Person_NP)?.", "What are the borough of the religion of ($x | Person_NP)??", "What is the borough of the religion of ($x | Person_NP)??", "What was the borough of the religion of ($x | Person_NP)??", "What were the borough of the religion of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "616",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the area code of ($x | City_NP)?.", "List all the borough of the area code of ($x | City_NP)?.", "show me all borough of the area code of ($x | City_NP)?.", "What are the borough of the area code of ($x | City_NP)??", "What is the borough of the area code of ($x | City_NP)??", "What was the borough of the area code of ($x | City_NP)??", "What were the borough of the area code of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "617",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the address of ($x | ArchitecturalStructure_NP)?.", "Give me all borough of the addresses of ($x | ArchitecturalStructure_NP)?.", "List all the borough of the address of ($x | ArchitecturalStructure_NP)?.", "List all the borough of the addresses of ($x | ArchitecturalStructure_NP)?.", "show me all borough of the address of ($x | ArchitecturalStructure_NP)?.", "show me all borough of the addresses of ($x | ArchitecturalStructure_NP)?.", "What are the borough of the address of ($x | ArchitecturalStructure_NP)??", "What are the borough of the addresses of ($x | ArchitecturalStructure_NP)??", "What is the borough of the address of ($x | ArchitecturalStructure_NP)??", "What is the borough of the addresses of ($x | ArchitecturalStructure_NP)??", "What was the borough of the address of ($x | ArchitecturalStructure_NP)??", "What was the borough of the addresses of ($x | ArchitecturalStructure_NP)??", "What were the borough of the address of ($x | ArchitecturalStructure_NP)??", "What were the borough of the addresses of ($x | ArchitecturalStructure_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "618",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the ingredient of ($x | Food_NP)?.", "Give me all borough of the ingredients of ($x | Food_NP)?.", "List all the borough of the ingredient of ($x | Food_NP)?.", "List all the borough of the ingredients of ($x | Food_NP)?.", "show me all borough of the ingredient of ($x | Food_NP)?.", "show me all borough of the ingredients of ($x | Food_NP)?.", "What are the borough of the ingredient of ($x | Food_NP)??", "What are the borough of the ingredients of ($x | Food_NP)??", "What is the borough of the ingredient of ($x | Food_NP)??", "What is the borough of the ingredients of ($x | Food_NP)??", "What was the borough of the ingredient of ($x | Food_NP)??", "What was the borough of the ingredients of ($x | Food_NP)??", "What were the borough of the ingredient of ($x | Food_NP)??", "What were the borough of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "619",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the ingredient of ($x | Food_NP)?.", "Give me all borough of the ingredients of ($x | Food_NP)?.", "List all the borough of the ingredient of ($x | Food_NP)?.", "List all the borough of the ingredients of ($x | Food_NP)?.", "show me all borough of the ingredient of ($x | Food_NP)?.", "show me all borough of the ingredients of ($x | Food_NP)?.", "What are the borough of the ingredient of ($x | Food_NP)??", "What are the borough of the ingredients of ($x | Food_NP)??", "What is the borough of the ingredient of ($x | Food_NP)??", "What is the borough of the ingredients of ($x | Food_NP)??", "What was the borough of the ingredient of ($x | Food_NP)??", "What was the borough of the ingredients of ($x | Food_NP)??", "What were the borough of the ingredient of ($x | Food_NP)??", "What were the borough of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "620",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the nickname of ($x | City_NP)?.", "Give me all borough of the nicknames of ($x | City_NP)?.", "List all the borough of the nickname of ($x | City_NP)?.", "List all the borough of the nicknames of ($x | City_NP)?.", "show me all borough of the nickname of ($x | City_NP)?.", "show me all borough of the nicknames of ($x | City_NP)?.", "What are the borough of the nickname of ($x | City_NP)??", "What are the borough of the nicknames of ($x | City_NP)??", "What is the borough of the nickname of ($x | City_NP)??", "What is the borough of the nicknames of ($x | City_NP)??", "What was the borough of the nickname of ($x | City_NP)??", "What was the borough of the nicknames of ($x | City_NP)??", "What were the borough of the nickname of ($x | City_NP)??", "What were the borough of the nicknames of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "621",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of the flag of ($x | Place_NP)?.", "Give me all borough of the flags of ($x | Place_NP)?.", "List all the borough of the flag of ($x | Place_NP)?.", "List all the borough of the flags of ($x | Place_NP)?.", "show me all borough of the flag of ($x | Place_NP)?.", "show me all borough of the flags of ($x | Place_NP)?.", "What are the borough of the flag of ($x | Place_NP)??", "What are the borough of the flags of ($x | Place_NP)??", "What is the borough of the flag of ($x | Place_NP)??", "What is the borough of the flags of ($x | Place_NP)??", "What was the borough of the flag of ($x | Place_NP)??", "What was the borough of the flags of ($x | Place_NP)??", "What were the borough of the flag of ($x | Place_NP)??", "What were the borough of the flags of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "622",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the isbn of ($x | Book_NP)? have?", "How many borough does the isbns of ($x | Book_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "623",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the president of ($x | Person_NP)? have?", "How many borough does the presidents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "624",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the parties of ($x | Politician_NP)? have?", "How many borough does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "625",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the parties of ($x | Politician_NP)? have?", "How many borough does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "626",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the artistic movement of ($x | Artist_NP)? have?", "How many borough does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "627",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the artistic movement of ($x | Artist_NP)? have?", "How many borough does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "628",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the record label of ($x | Genre_NP)? have?", "How many borough does the record labels of ($x | Genre_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "629",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the autobiography of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "630",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the resting place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "631",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the time zone of ($x | City_NP)? have?", "How many borough does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "632",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the time zone of ($x | City_NP)? have?", "How many borough does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "633",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the cause of death of ($x | Person_NP)? have?", "How many borough does the causes of death of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "634",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the religion of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "635",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the area code of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "636",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the address of ($x | ArchitecturalStructure_NP)? have?", "How many borough does the addresses of ($x | ArchitecturalStructure_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "637",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the ingredient of ($x | Food_NP)? have?", "How many borough does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "638",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the ingredient of ($x | Food_NP)? have?", "How many borough does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "639",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the nickname of ($x | City_NP)? have?", "How many borough does the nicknames of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "640",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many borough does the flag of ($x | Place_NP)? have?", "How many borough does the flags of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "641",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Writer",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all isbns of the book by ($x | Writer_NP)?.", "Give me all isbns of the books by ($x | Writer_NP)?.", "List all the isbns of the book by ($x | Writer_NP)?.", "List all the isbns of the books by ($x | Writer_NP)?.", "show me all isbns of the book by ($x | Writer_NP)?.", "show me all isbns of the books by ($x | Writer_NP)?.", "What are the isbns of the book by ($x | Writer_NP)??", "What are the isbns of the books by ($x | Writer_NP)??", "What is the isbn of the book by ($x | Writer_NP)??", "What is the isbn of the books by ($x | Writer_NP)??", "What was the isbn of the book by ($x | Writer_NP)??", "What was the isbn of the books by ($x | Writer_NP)??", "What were the isbns of the book by ($x | Writer_NP)??", "What were the isbns of the books by ($x | Writer_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "642",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all isbns of the book in ($x | TelevisionShow_NP)?.", "Give me all isbns of the books in ($x | TelevisionShow_NP)?.", "List all the isbns of the book in ($x | TelevisionShow_NP)?.", "List all the isbns of the books in ($x | TelevisionShow_NP)?.", "show me all isbns of the book in ($x | TelevisionShow_NP)?.", "show me all isbns of the books in ($x | TelevisionShow_NP)?.", "What are the isbns of the book in ($x | TelevisionShow_NP)??", "What are the isbns of the books in ($x | TelevisionShow_NP)??", "What is the isbn of the book in ($x | TelevisionShow_NP)??", "What is the isbn of the books in ($x | TelevisionShow_NP)??", "What was the isbn of the book in ($x | TelevisionShow_NP)??", "What was the isbn of the books in ($x | TelevisionShow_NP)??", "What were the isbns of the book in ($x | TelevisionShow_NP)??", "What were the isbns of the books in ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "643",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Writer",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many isbn does the book by ($x | Writer_NP)? have?", "How many isbn does the books by ($x | Writer_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/author> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "644",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many isbn does the book in ($x | TelevisionShow_NP)? have?", "How many isbn does the books in ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/series> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "645",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all last Election Dates of the leader of ($x | Legislature_NP)?.", "Give me all last Election Dates of the leaders of ($x | Legislature_NP)?.", "List all the last Election Dates of the leader of ($x | Legislature_NP)?.", "List all the last Election Dates of the leaders of ($x | Legislature_NP)?.", "show me all last Election Dates of the leader of ($x | Legislature_NP)?.", "show me all last Election Dates of the leaders of ($x | Legislature_NP)?.", "What are the last Election Dates of the leader of ($x | Legislature_NP)??", "What are the last Election Dates of the leaders of ($x | Legislature_NP)??", "What is the last Election Date of the leader of ($x | Legislature_NP)??", "What is the last Election Date of the leaders of ($x | Legislature_NP)??", "What was the last Election Date of the leader of ($x | Legislature_NP)??", "What was the last Election Date of the leaders of ($x | Legislature_NP)??", "What were the last Election Dates of the leader of ($x | Legislature_NP)??", "What were the last Election Dates of the leaders of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "646",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many last Election Date does the leader of ($x | Legislature_NP)? have?", "How many last Election Date does the leaders of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "647",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the editor of ($x | Work_NP)?.", "Give me all presidents of the editors of ($x | Work_NP)?.", "List all the presidents of the editor of ($x | Work_NP)?.", "List all the presidents of the editors of ($x | Work_NP)?.", "show me all presidents of the editor of ($x | Work_NP)?.", "show me all presidents of the editors of ($x | Work_NP)?.", "What are the presidents of the editor of ($x | Work_NP)??", "What are the presidents of the editors of ($x | Work_NP)??", "What is the president of the editor of ($x | Work_NP)??", "What is the president of the editors of ($x | Work_NP)??", "What was the president of the editor of ($x | Work_NP)??", "What was the president of the editors of ($x | Work_NP)??", "What were the presidents of the editor of ($x | Work_NP)??", "What were the presidents of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "648",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the parent of ($x | Person_NP)?.", "Give me all presidents of the parents of ($x | Person_NP)?.", "List all the presidents of the parent of ($x | Person_NP)?.", "List all the presidents of the parents of ($x | Person_NP)?.", "show me all presidents of the parent of ($x | Person_NP)?.", "show me all presidents of the parents of ($x | Person_NP)?.", "What are the presidents of the parent of ($x | Person_NP)??", "What are the presidents of the parents of ($x | Person_NP)??", "What is the president of the parent of ($x | Person_NP)??", "What is the president of the parents of ($x | Person_NP)??", "What was the president of the parent of ($x | Person_NP)??", "What was the president of the parents of ($x | Person_NP)??", "What were the presidents of the parent of ($x | Person_NP)??", "What were the presidents of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "649",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the king of ($x | Legislature_NP)?.", "Give me all presidents of the kings of ($x | Legislature_NP)?.", "List all the presidents of the king of ($x | Legislature_NP)?.", "List all the presidents of the kings of ($x | Legislature_NP)?.", "show me all presidents of the king of ($x | Legislature_NP)?.", "show me all presidents of the kings of ($x | Legislature_NP)?.", "What are the presidents of the king of ($x | Legislature_NP)??", "What are the presidents of the kings of ($x | Legislature_NP)??", "What is the president of the king of ($x | Legislature_NP)??", "What is the president of the kings of ($x | Legislature_NP)??", "What was the president of the king of ($x | Legislature_NP)??", "What was the president of the kings of ($x | Legislature_NP)??", "What were the presidents of the king of ($x | Legislature_NP)??", "What were the presidents of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "650",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all presidents of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the presidents of the coach of ($x | IceHockeyLeague_NP)?.", "List all the presidents of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all presidents of the coach of ($x | IceHockeyLeague_NP)?.", "show me all presidents of the coaches of ($x | IceHockeyLeague_NP)?.", "What are the presidents of the coach of ($x | IceHockeyLeague_NP)??", "What are the presidents of the coaches of ($x | IceHockeyLeague_NP)??", "What is the president of the coach of ($x | IceHockeyLeague_NP)??", "What is the president of the coaches of ($x | IceHockeyLeague_NP)??", "What was the president of the coach of ($x | IceHockeyLeague_NP)??", "What was the president of the coaches of ($x | IceHockeyLeague_NP)??", "What were the presidents of the coach of ($x | IceHockeyLeague_NP)??", "What were the presidents of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "651",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the coach of ($x | HockeyTeam_NP)?.", "Give me all presidents of the coaches of ($x | HockeyTeam_NP)?.", "List all the presidents of the coach of ($x | HockeyTeam_NP)?.", "List all the presidents of the coaches of ($x | HockeyTeam_NP)?.", "show me all presidents of the coach of ($x | HockeyTeam_NP)?.", "show me all presidents of the coaches of ($x | HockeyTeam_NP)?.", "What are the presidents of the coach of ($x | HockeyTeam_NP)??", "What are the presidents of the coaches of ($x | HockeyTeam_NP)??", "What is the president of the coach of ($x | HockeyTeam_NP)??", "What is the president of the coaches of ($x | HockeyTeam_NP)??", "What was the president of the coach of ($x | HockeyTeam_NP)??", "What was the president of the coaches of ($x | HockeyTeam_NP)??", "What were the presidents of the coach of ($x | HockeyTeam_NP)??", "What were the presidents of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "652",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the presidents of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all presidents of the alter ego of ($x | ComicsCharacter_NP)?.", "What are the presidents of the alter ego of ($x | ComicsCharacter_NP)??", "What is the president of the alter ego of ($x | ComicsCharacter_NP)??", "What was the president of the alter ego of ($x | ComicsCharacter_NP)??", "What were the presidents of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "653",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the author of ($x | Work_NP)?.", "Give me all presidents of the authors of ($x | Work_NP)?.", "List all the presidents of the author of ($x | Work_NP)?.", "List all the presidents of the authors of ($x | Work_NP)?.", "show me all presidents of the author of ($x | Work_NP)?.", "show me all presidents of the authors of ($x | Work_NP)?.", "What are the presidents of the author of ($x | Work_NP)??", "What are the presidents of the authors of ($x | Work_NP)??", "What is the president of the author of ($x | Work_NP)??", "What is the president of the authors of ($x | Work_NP)??", "What was the president of the author of ($x | Work_NP)??", "What was the president of the authors of ($x | Work_NP)??", "What were the presidents of the author of ($x | Work_NP)??", "What were the presidents of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "654",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the mayor of ($x | Settlement_NP)?.", "Give me all presidents of the mayors of ($x | Settlement_NP)?.", "List all the presidents of the mayor of ($x | Settlement_NP)?.", "List all the presidents of the mayors of ($x | Settlement_NP)?.", "show me all presidents of the mayor of ($x | Settlement_NP)?.", "show me all presidents of the mayors of ($x | Settlement_NP)?.", "What are the presidents of the mayor of ($x | Settlement_NP)??", "What are the presidents of the mayors of ($x | Settlement_NP)??", "What is the president of the mayor of ($x | Settlement_NP)??", "What is the president of the mayors of ($x | Settlement_NP)??", "What was the president of the mayor of ($x | Settlement_NP)??", "What was the president of the mayors of ($x | Settlement_NP)??", "What were the presidents of the mayor of ($x | Settlement_NP)??", "What were the presidents of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "655",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the music by ($x | Musical_NP)?.", "Give me all presidents of the musics by ($x | Musical_NP)?.", "List all the presidents of the music by ($x | Musical_NP)?.", "List all the presidents of the musics by ($x | Musical_NP)?.", "show me all presidents of the music by ($x | Musical_NP)?.", "show me all presidents of the musics by ($x | Musical_NP)?.", "What are the presidents of the music by ($x | Musical_NP)??", "What are the presidents of the musics by ($x | Musical_NP)??", "What is the president of the music by ($x | Musical_NP)??", "What is the president of the musics by ($x | Musical_NP)??", "What was the president of the music by ($x | Musical_NP)??", "What was the president of the musics by ($x | Musical_NP)??", "What were the presidents of the music by ($x | Musical_NP)??", "What were the presidents of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "656",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the foundation series of ($x | TelevisionShow_NP)?.", "List all the presidents of the foundation series of ($x | TelevisionShow_NP)?.", "show me all presidents of the foundation series of ($x | TelevisionShow_NP)?.", "What are the presidents of the foundation series of ($x | TelevisionShow_NP)??", "What is the president of the foundation series of ($x | TelevisionShow_NP)??", "What was the president of the foundation series of ($x | TelevisionShow_NP)??", "What were the presidents of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "657",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the creator of ($x | FictionalCharacter_NP)?.", "Give me all presidents of the creators of ($x | FictionalCharacter_NP)?.", "List all the presidents of the creator of ($x | FictionalCharacter_NP)?.", "List all the presidents of the creators of ($x | FictionalCharacter_NP)?.", "show me all presidents of the creator of ($x | FictionalCharacter_NP)?.", "show me all presidents of the creators of ($x | FictionalCharacter_NP)?.", "What are the presidents of the creator of ($x | FictionalCharacter_NP)??", "What are the presidents of the creators of ($x | FictionalCharacter_NP)??", "What is the president of the creator of ($x | FictionalCharacter_NP)??", "What is the president of the creators of ($x | FictionalCharacter_NP)??", "What was the president of the creator of ($x | FictionalCharacter_NP)??", "What was the president of the creators of ($x | FictionalCharacter_NP)??", "What were the presidents of the creator of ($x | FictionalCharacter_NP)??", "What were the presidents of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "658",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the influencer of ($x | Person_NP)?.", "Give me all presidents of the influencers of ($x | Person_NP)?.", "List all the presidents of the influencer of ($x | Person_NP)?.", "List all the presidents of the influencers of ($x | Person_NP)?.", "show me all presidents of the influencer of ($x | Person_NP)?.", "show me all presidents of the influencers of ($x | Person_NP)?.", "What are the presidents of the influencer of ($x | Person_NP)??", "What are the presidents of the influencers of ($x | Person_NP)??", "What is the president of the influencer of ($x | Person_NP)??", "What is the president of the influencers of ($x | Person_NP)??", "What was the president of the influencer of ($x | Person_NP)??", "What was the president of the influencers of ($x | Person_NP)??", "What were the presidents of the influencer of ($x | Person_NP)??", "What were the presidents of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "659",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the wife of ($x | Person_NP)?.", "Give me all presidents of the wives of ($x | Person_NP)?.", "List all the presidents of the wife of ($x | Person_NP)?.", "List all the presidents of the wives of ($x | Person_NP)?.", "show me all presidents of the wife of ($x | Person_NP)?.", "show me all presidents of the wives of ($x | Person_NP)?.", "What are the presidents of the wife of ($x | Person_NP)??", "What are the presidents of the wives of ($x | Person_NP)??", "What is the president of the wife of ($x | Person_NP)??", "What is the president of the wives of ($x | Person_NP)??", "What was the president of the wife of ($x | Person_NP)??", "What was the president of the wives of ($x | Person_NP)??", "What were the presidents of the wife of ($x | Person_NP)??", "What were the presidents of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "660",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all presidents of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the presidents of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the presidents of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all presidents of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all presidents of the doctoral supervisors of ($x | Scientist_NP)?.", "What are the presidents of the doctoral supervisor of ($x | Scientist_NP)??", "What are the presidents of the doctoral supervisors of ($x | Scientist_NP)??", "What is the president of the doctoral supervisor of ($x | Scientist_NP)??", "What is the president of the doctoral supervisors of ($x | Scientist_NP)??", "What was the president of the doctoral supervisor of ($x | Scientist_NP)??", "What was the president of the doctoral supervisors of ($x | Scientist_NP)??", "What were the presidents of the doctoral supervisor of ($x | Scientist_NP)??", "What were the presidents of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "661",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the host of ($x | TelevisionShow_NP)?.", "Give me all presidents of the hosts of ($x | TelevisionShow_NP)?.", "List all the presidents of the host of ($x | TelevisionShow_NP)?.", "List all the presidents of the hosts of ($x | TelevisionShow_NP)?.", "show me all presidents of the host of ($x | TelevisionShow_NP)?.", "show me all presidents of the hosts of ($x | TelevisionShow_NP)?.", "What are the presidents of the host of ($x | TelevisionShow_NP)??", "What are the presidents of the hosts of ($x | TelevisionShow_NP)??", "What is the president of the host of ($x | TelevisionShow_NP)??", "What is the president of the hosts of ($x | TelevisionShow_NP)??", "What was the president of the host of ($x | TelevisionShow_NP)??", "What was the president of the hosts of ($x | TelevisionShow_NP)??", "What were the presidents of the host of ($x | TelevisionShow_NP)??", "What were the presidents of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "662",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the residence of ($x | Place_NP)?.", "Give me all presidents of the residences of ($x | Place_NP)?.", "List all the presidents of the residence of ($x | Place_NP)?.", "List all the presidents of the residences of ($x | Place_NP)?.", "show me all presidents of the residence of ($x | Place_NP)?.", "show me all presidents of the residences of ($x | Place_NP)?.", "What are the presidents of the residence of ($x | Place_NP)??", "What are the presidents of the residences of ($x | Place_NP)??", "What is the president of the residence of ($x | Place_NP)??", "What is the president of the residences of ($x | Place_NP)??", "What was the president of the residence of ($x | Place_NP)??", "What was the president of the residences of ($x | Place_NP)??", "What were the presidents of the residence of ($x | Place_NP)??", "What were the presidents of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "663",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the daughter of ($x | Person_NP)?.", "Give me all presidents of the daughters of ($x | Person_NP)?.", "List all the presidents of the daughter of ($x | Person_NP)?.", "List all the presidents of the daughters of ($x | Person_NP)?.", "show me all presidents of the daughter of ($x | Person_NP)?.", "show me all presidents of the daughters of ($x | Person_NP)?.", "What are the presidents of the daughter of ($x | Person_NP)??", "What are the presidents of the daughters of ($x | Person_NP)??", "What is the president of the daughter of ($x | Person_NP)??", "What is the president of the daughters of ($x | Person_NP)??", "What was the president of the daughter of ($x | Person_NP)??", "What was the president of the daughters of ($x | Person_NP)??", "What were the presidents of the daughter of ($x | Person_NP)??", "What were the presidents of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "664",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the successor of ($x | Politician_NP)?.", "List all the presidents of the successor of ($x | Politician_NP)?.", "show me all presidents of the successor of ($x | Politician_NP)?.", "What are the presidents of the successor of ($x | Politician_NP)??", "What is the president of the successor of ($x | Politician_NP)??", "What was the president of the successor of ($x | Politician_NP)??", "What were the presidents of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "665",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the child of ($x | Person_NP)?.", "Give me all presidents of the children of ($x | Person_NP)?.", "List all the presidents of the child of ($x | Person_NP)?.", "List all the presidents of the children of ($x | Person_NP)?.", "show me all presidents of the child of ($x | Person_NP)?.", "show me all presidents of the children of ($x | Person_NP)?.", "What are the presidents of the child of ($x | Person_NP)??", "What are the presidents of the children of ($x | Person_NP)??", "What is the president of the child of ($x | Person_NP)??", "What is the president of the children of ($x | Person_NP)??", "What was the president of the child of ($x | Person_NP)??", "What was the president of the children of ($x | Person_NP)??", "What were the presidents of the child of ($x | Person_NP)??", "What were the presidents of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "666",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the governor of ($x | Person_NP)?.", "Give me all presidents of the governors of ($x | Person_NP)?.", "List all the presidents of the governor of ($x | Person_NP)?.", "List all the presidents of the governors of ($x | Person_NP)?.", "show me all presidents of the governor of ($x | Person_NP)?.", "show me all presidents of the governors of ($x | Person_NP)?.", "What are the presidents of the governor of ($x | Person_NP)??", "What are the presidents of the governors of ($x | Person_NP)??", "What is the president of the governor of ($x | Person_NP)??", "What is the president of the governors of ($x | Person_NP)??", "What was the president of the governor of ($x | Person_NP)??", "What was the president of the governors of ($x | Person_NP)??", "What were the presidents of the governor of ($x | Person_NP)??", "What were the presidents of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "667",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the music composer of ($x | TelevisionShow_NP)?.", "Give me all presidents of the music composers of ($x | TelevisionShow_NP)?.", "List all the presidents of the music composer of ($x | TelevisionShow_NP)?.", "List all the presidents of the music composers of ($x | TelevisionShow_NP)?.", "show me all presidents of the music composer of ($x | TelevisionShow_NP)?.", "show me all presidents of the music composers of ($x | TelevisionShow_NP)?.", "What are the presidents of the music composer of ($x | TelevisionShow_NP)??", "What are the presidents of the music composers of ($x | TelevisionShow_NP)??", "What is the president of the music composer of ($x | TelevisionShow_NP)??", "What is the president of the music composers of ($x | TelevisionShow_NP)??", "What was the president of the music composer of ($x | TelevisionShow_NP)??", "What was the president of the music composers of ($x | TelevisionShow_NP)??", "What were the presidents of the music composer of ($x | TelevisionShow_NP)??", "What were the presidents of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "668",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the first to climb  ($x | Mountain_NP)?.", "List all the presidents of the first to climb  ($x | Mountain_NP)?.", "show me all presidents of the first to climb  ($x | Mountain_NP)?.", "What are the presidents of the first to climb  ($x | Mountain_NP)??", "What is the president of the first to climb  ($x | Mountain_NP)??", "What was the president of the first to climb  ($x | Mountain_NP)??", "What were the presidents of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "669",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the father of ($x | Royalty_NP)?.", "List all the presidents of the father of ($x | Royalty_NP)?.", "show me all presidents of the father of ($x | Royalty_NP)?.", "What are the presidents of the father of ($x | Royalty_NP)??", "What is the president of the father of ($x | Royalty_NP)??", "What was the president of the father of ($x | Royalty_NP)??", "What were the presidents of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "670",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the music composer of ($x | TelevisionShow_NP)?.", "Give me all presidents of the music composers of ($x | TelevisionShow_NP)?.", "List all the presidents of the music composer of ($x | TelevisionShow_NP)?.", "List all the presidents of the music composers of ($x | TelevisionShow_NP)?.", "show me all presidents of the music composer of ($x | TelevisionShow_NP)?.", "show me all presidents of the music composers of ($x | TelevisionShow_NP)?.", "What are the presidents of the music composer of ($x | TelevisionShow_NP)??", "What are the presidents of the music composers of ($x | TelevisionShow_NP)??", "What is the president of the music composer of ($x | TelevisionShow_NP)??", "What is the president of the music composers of ($x | TelevisionShow_NP)??", "What was the president of the music composer of ($x | TelevisionShow_NP)??", "What was the president of the music composers of ($x | TelevisionShow_NP)??", "What were the presidents of the music composer of ($x | TelevisionShow_NP)??", "What were the presidents of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "671",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the son of ($x | Person_NP)?.", "Give me all presidents of the sons of ($x | Person_NP)?.", "List all the presidents of the son of ($x | Person_NP)?.", "List all the presidents of the sons of ($x | Person_NP)?.", "show me all presidents of the son of ($x | Person_NP)?.", "show me all presidents of the sons of ($x | Person_NP)?.", "What are the presidents of the son of ($x | Person_NP)??", "What are the presidents of the sons of ($x | Person_NP)??", "What is the president of the son of ($x | Person_NP)??", "What is the president of the sons of ($x | Person_NP)??", "What was the president of the son of ($x | Person_NP)??", "What was the president of the sons of ($x | Person_NP)??", "What were the presidents of the son of ($x | Person_NP)??", "What were the presidents of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "672",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the son of ($x | Person_NP)?.", "Give me all presidents of the sons of ($x | Person_NP)?.", "List all the presidents of the son of ($x | Person_NP)?.", "List all the presidents of the sons of ($x | Person_NP)?.", "show me all presidents of the son of ($x | Person_NP)?.", "show me all presidents of the sons of ($x | Person_NP)?.", "What are the presidents of the son of ($x | Person_NP)??", "What are the presidents of the sons of ($x | Person_NP)??", "What is the president of the son of ($x | Person_NP)??", "What is the president of the sons of ($x | Person_NP)??", "What was the president of the son of ($x | Person_NP)??", "What was the president of the sons of ($x | Person_NP)??", "What were the presidents of the son of ($x | Person_NP)??", "What were the presidents of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "673",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of the mayor of ($x | City_NP)?.", "Give me all presidents of the mayors of ($x | City_NP)?.", "List all the presidents of the mayor of ($x | City_NP)?.", "List all the presidents of the mayors of ($x | City_NP)?.", "show me all presidents of the mayor of ($x | City_NP)?.", "show me all presidents of the mayors of ($x | City_NP)?.", "What are the presidents of the mayor of ($x | City_NP)??", "What are the presidents of the mayors of ($x | City_NP)??", "What is the president of the mayor of ($x | City_NP)??", "What is the president of the mayors of ($x | City_NP)??", "What was the president of the mayor of ($x | City_NP)??", "What was the president of the mayors of ($x | City_NP)??", "What were the presidents of the mayor of ($x | City_NP)??", "What were the presidents of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "674",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the editor of ($x | Work_NP)? have?", "How many president does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "675",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the parent of ($x | Person_NP)? have?", "How many president does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "676",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the king of ($x | Legislature_NP)? have?", "How many president does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "677",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the coach of ($x | IceHockeyLeague_NP)? have?", "How many president does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "678",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the coach of ($x | HockeyTeam_NP)? have?", "How many president does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "679",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "680",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the author of ($x | Work_NP)? have?", "How many president does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "681",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the mayor of ($x | Settlement_NP)? have?", "How many president does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "682",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the music by ($x | Musical_NP)? have?", "How many president does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "683",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "684",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the creator of ($x | FictionalCharacter_NP)? have?", "How many president does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "685",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the influencer of ($x | Person_NP)? have?", "How many president does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "686",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the wife of ($x | Person_NP)? have?", "How many president does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "687",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many president does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "688",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the host of ($x | TelevisionShow_NP)? have?", "How many president does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "689",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the residence of ($x | Place_NP)? have?", "How many president does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "690",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the daughter of ($x | Person_NP)? have?", "How many president does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "691",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "692",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the child of ($x | Person_NP)? have?", "How many president does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "693",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the governor of ($x | Person_NP)? have?", "How many president does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "694",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the music composer of ($x | TelevisionShow_NP)? have?", "How many president does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "695",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "696",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "697",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the music composer of ($x | TelevisionShow_NP)? have?", "How many president does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "698",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the son of ($x | Person_NP)? have?", "How many president does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "699",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the son of ($x | Person_NP)? have?", "How many president does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "700",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many president does the mayor of ($x | City_NP)? have?", "How many president does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "701",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parties of the vice president of ($x | Politician_NP)?.", "List all the parties of the vice president of ($x | Politician_NP)?.", "show me all parties of the vice president of ($x | Politician_NP)?.", "What are the parties of the vice president of ($x | Politician_NP)??", "What is the party of the vice president of ($x | Politician_NP)??", "What was the party of the vice president of ($x | Politician_NP)??", "What were the parties of the vice president of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "702",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many party does the vice president of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "703",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parties of the vice president of ($x | Politician_NP)?.", "List all the parties of the vice president of ($x | Politician_NP)?.", "show me all parties of the vice president of ($x | Politician_NP)?.", "What are the parties of the vice president of ($x | Politician_NP)??", "What is the party of the vice president of ($x | Politician_NP)??", "What was the party of the vice president of ($x | Politician_NP)??", "What were the parties of the vice president of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "704",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many party does the vice president of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "705",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the post code of the death place of ($x | Politician_NP)??", "What was the post code of the death place of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "706",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the post code of the location of ($x | Place_NP)??", "What was the post code of the location of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "707",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the post code of the first Ascent Person of ($x | Mountain_NP)??", "What is the post code of the first Ascent Persons of ($x | Mountain_NP)??", "What was the post code of the first Ascent Person of ($x | Mountain_NP)??", "What was the post code of the first Ascent Persons of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "708",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the post code of the employer of ($x | Person_NP)??", "What is the post code of the employers of ($x | Person_NP)??", "What was the post code of the employer of ($x | Person_NP)??", "What was the post code of the employers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/employer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "709",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the post code of the wine region of ($x | Grape_NP)??", "What is the post code of the wine regions of ($x | Grape_NP)??", "What was the post code of the wine region of ($x | Grape_NP)??", "What was the post code of the wine regions of ($x | Grape_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/wineRegion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "710",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the post code of the associated Musical Artist of ($x | Band_NP)??", "What is the post code of the associated Musical Artists of ($x | Band_NP)??", "What was the post code of the associated Musical Artist of ($x | Band_NP)??", "What was the post code of the associated Musical Artists of ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/associatedMusicalArtist> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "711",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many post code does the death place of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "712",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many post code does the location of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "713",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many post code does the first Ascent Person of ($x | Mountain_NP)? have?", "How many post code does the first Ascent Persons of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "714",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many post code does the employer of ($x | Person_NP)? have?", "How many post code does the employers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/employer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "715",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many post code does the wine region of ($x | Grape_NP)? have?", "How many post code does the wine regions of ($x | Grape_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/wineRegion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "716",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many post code does the associated Musical Artist of ($x | Band_NP)? have?", "How many post code does the associated Musical Artists of ($x | Band_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "717",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of the birth place of ($x | Person_NP)?.", "List all the official languages of the birth place of ($x | Person_NP)?.", "show me all official languages of the birth place of ($x | Person_NP)?.", "What are the official languages of the birth place of ($x | Person_NP)??", "What is the official language of the birth place of ($x | Person_NP)??", "What was the official language of the birth place of ($x | Person_NP)??", "What were the official languages of the birth place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "718",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of the location of ($x | Mountain_NP)?.", "List all the official languages of the location of ($x | Mountain_NP)?.", "show me all official languages of the location of ($x | Mountain_NP)?.", "What are the official languages of the location of ($x | Mountain_NP)??", "What is the official language of the location of ($x | Mountain_NP)??", "What was the official language of the location of ($x | Mountain_NP)??", "What were the official languages of the location of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "719",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of the form of government of ($x | Country_NP)?.", "List all the official languages of the form of government of ($x | Country_NP)?.", "show me all official languages of the form of government of ($x | Country_NP)?.", "What are the official languages of the form of government of ($x | Country_NP)??", "What is the official language of the form of government of ($x | Country_NP)??", "What was the official language of the form of government of ($x | Country_NP)??", "What were the official languages of the form of government of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "720",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of the nationality of ($x | Person_NP)?.", "List all the official languages of the nationality of ($x | Person_NP)?.", "show me all official languages of the nationality of ($x | Person_NP)?.", "What are the official languages of the nationality of ($x | Person_NP)??", "What is the official language of the nationality of ($x | Person_NP)??", "What was the official language of the nationality of ($x | Person_NP)??", "What were the official languages of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "721",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of the resting place of ($x | Person_NP)?.", "Give me all official languages of the resting places of ($x | Person_NP)?.", "List all the official languages of the resting place of ($x | Person_NP)?.", "List all the official languages of the resting places of ($x | Person_NP)?.", "show me all official languages of the resting place of ($x | Person_NP)?.", "show me all official languages of the resting places of ($x | Person_NP)?.", "What are the official languages of the resting place of ($x | Person_NP)??", "What are the official languages of the resting places of ($x | Person_NP)??", "What is the official language of the resting place of ($x | Person_NP)??", "What is the official language of the resting places of ($x | Person_NP)??", "What was the official language of the resting place of ($x | Person_NP)??", "What was the official language of the resting places of ($x | Person_NP)??", "What were the official languages of the resting place of ($x | Person_NP)??", "What were the official languages of the resting places of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "722",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of the nationality of ($x | Person_NP)?.", "List all the official languages of the nationality of ($x | Person_NP)?.", "show me all official languages of the nationality of ($x | Person_NP)?.", "What are the official languages of the nationality of ($x | Person_NP)??", "What is the official language of the nationality of ($x | Person_NP)??", "What was the official language of the nationality of ($x | Person_NP)??", "What were the official languages of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "723",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of the largest country of ($x | Country_NP)?.", "List all the official languages of the largest country of ($x | Country_NP)?.", "show me all official languages of the largest country of ($x | Country_NP)?.", "What are the official languages of the largest country of ($x | Country_NP)??", "What is the official language of the largest country of ($x | Country_NP)??", "What was the official language of the largest country of ($x | Country_NP)??", "What were the official languages of the largest country of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "724",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many official language does the birth place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "725",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many official language does the location of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "726",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many official language does the form of government of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "727",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many official language does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "728",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many official language does the resting place of ($x | Person_NP)? have?", "How many official language does the resting places of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "729",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many official language does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "730",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many official language does the largest country of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "731",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the editor of ($x | Work_NP)?.", "Give me all influencers of the editors of ($x | Work_NP)?.", "List all the influencers of the editor of ($x | Work_NP)?.", "List all the influencers of the editors of ($x | Work_NP)?.", "show me all influencers of the editor of ($x | Work_NP)?.", "show me all influencers of the editors of ($x | Work_NP)?.", "Who are the influencers of the editor of ($x | Work_NP)??", "Who are the influencers of the editors of ($x | Work_NP)??", "Who is the influencer of the editor of ($x | Work_NP)??", "Who is the influencer of the editors of ($x | Work_NP)??", "Who was the influencer of the editor of ($x | Work_NP)??", "Who was the influencer of the editors of ($x | Work_NP)??", "Who were the influencers of the editor of ($x | Work_NP)??", "Who were the influencers of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "732",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the parent of ($x | Person_NP)?.", "Give me all influencers of the parents of ($x | Person_NP)?.", "List all the influencers of the parent of ($x | Person_NP)?.", "List all the influencers of the parents of ($x | Person_NP)?.", "show me all influencers of the parent of ($x | Person_NP)?.", "show me all influencers of the parents of ($x | Person_NP)?.", "Who are the influencers of the parent of ($x | Person_NP)??", "Who are the influencers of the parents of ($x | Person_NP)??", "Who is the influencer of the parent of ($x | Person_NP)??", "Who is the influencer of the parents of ($x | Person_NP)??", "Who was the influencer of the parent of ($x | Person_NP)??", "Who was the influencer of the parents of ($x | Person_NP)??", "Who were the influencers of the parent of ($x | Person_NP)??", "Who were the influencers of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "733",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the king of ($x | Legislature_NP)?.", "Give me all influencers of the kings of ($x | Legislature_NP)?.", "List all the influencers of the king of ($x | Legislature_NP)?.", "List all the influencers of the kings of ($x | Legislature_NP)?.", "show me all influencers of the king of ($x | Legislature_NP)?.", "show me all influencers of the kings of ($x | Legislature_NP)?.", "Who are the influencers of the king of ($x | Legislature_NP)??", "Who are the influencers of the kings of ($x | Legislature_NP)??", "Who is the influencer of the king of ($x | Legislature_NP)??", "Who is the influencer of the kings of ($x | Legislature_NP)??", "Who was the influencer of the king of ($x | Legislature_NP)??", "Who was the influencer of the kings of ($x | Legislature_NP)??", "Who were the influencers of the king of ($x | Legislature_NP)??", "Who were the influencers of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "734",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all influencers of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the influencers of the coach of ($x | IceHockeyLeague_NP)?.", "List all the influencers of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all influencers of the coach of ($x | IceHockeyLeague_NP)?.", "show me all influencers of the coaches of ($x | IceHockeyLeague_NP)?.", "Who are the influencers of the coach of ($x | IceHockeyLeague_NP)??", "Who are the influencers of the coaches of ($x | IceHockeyLeague_NP)??", "Who is the influencer of the coach of ($x | IceHockeyLeague_NP)??", "Who is the influencer of the coaches of ($x | IceHockeyLeague_NP)??", "Who was the influencer of the coach of ($x | IceHockeyLeague_NP)??", "Who was the influencer of the coaches of ($x | IceHockeyLeague_NP)??", "Who were the influencers of the coach of ($x | IceHockeyLeague_NP)??", "Who were the influencers of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "735",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the coach of ($x | HockeyTeam_NP)?.", "Give me all influencers of the coaches of ($x | HockeyTeam_NP)?.", "List all the influencers of the coach of ($x | HockeyTeam_NP)?.", "List all the influencers of the coaches of ($x | HockeyTeam_NP)?.", "show me all influencers of the coach of ($x | HockeyTeam_NP)?.", "show me all influencers of the coaches of ($x | HockeyTeam_NP)?.", "Who are the influencers of the coach of ($x | HockeyTeam_NP)??", "Who are the influencers of the coaches of ($x | HockeyTeam_NP)??", "Who is the influencer of the coach of ($x | HockeyTeam_NP)??", "Who is the influencer of the coaches of ($x | HockeyTeam_NP)??", "Who was the influencer of the coach of ($x | HockeyTeam_NP)??", "Who was the influencer of the coaches of ($x | HockeyTeam_NP)??", "Who were the influencers of the coach of ($x | HockeyTeam_NP)??", "Who were the influencers of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "736",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the influencers of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all influencers of the alter ego of ($x | ComicsCharacter_NP)?.", "Who are the influencers of the alter ego of ($x | ComicsCharacter_NP)??", "Who is the influencer of the alter ego of ($x | ComicsCharacter_NP)??", "Who was the influencer of the alter ego of ($x | ComicsCharacter_NP)??", "Who were the influencers of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "737",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the author of ($x | Work_NP)?.", "Give me all influencers of the authors of ($x | Work_NP)?.", "List all the influencers of the author of ($x | Work_NP)?.", "List all the influencers of the authors of ($x | Work_NP)?.", "show me all influencers of the author of ($x | Work_NP)?.", "show me all influencers of the authors of ($x | Work_NP)?.", "Who are the influencers of the author of ($x | Work_NP)??", "Who are the influencers of the authors of ($x | Work_NP)??", "Who is the influencer of the author of ($x | Work_NP)??", "Who is the influencer of the authors of ($x | Work_NP)??", "Who was the influencer of the author of ($x | Work_NP)??", "Who was the influencer of the authors of ($x | Work_NP)??", "Who were the influencers of the author of ($x | Work_NP)??", "Who were the influencers of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "738",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the mayor of ($x | Settlement_NP)?.", "Give me all influencers of the mayors of ($x | Settlement_NP)?.", "List all the influencers of the mayor of ($x | Settlement_NP)?.", "List all the influencers of the mayors of ($x | Settlement_NP)?.", "show me all influencers of the mayor of ($x | Settlement_NP)?.", "show me all influencers of the mayors of ($x | Settlement_NP)?.", "Who are the influencers of the mayor of ($x | Settlement_NP)??", "Who are the influencers of the mayors of ($x | Settlement_NP)??", "Who is the influencer of the mayor of ($x | Settlement_NP)??", "Who is the influencer of the mayors of ($x | Settlement_NP)??", "Who was the influencer of the mayor of ($x | Settlement_NP)??", "Who was the influencer of the mayors of ($x | Settlement_NP)??", "Who were the influencers of the mayor of ($x | Settlement_NP)??", "Who were the influencers of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "739",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the music by ($x | Musical_NP)?.", "Give me all influencers of the musics by ($x | Musical_NP)?.", "List all the influencers of the music by ($x | Musical_NP)?.", "List all the influencers of the musics by ($x | Musical_NP)?.", "show me all influencers of the music by ($x | Musical_NP)?.", "show me all influencers of the musics by ($x | Musical_NP)?.", "Who are the influencers of the music by ($x | Musical_NP)??", "Who are the influencers of the musics by ($x | Musical_NP)??", "Who is the influencer of the music by ($x | Musical_NP)??", "Who is the influencer of the musics by ($x | Musical_NP)??", "Who was the influencer of the music by ($x | Musical_NP)??", "Who was the influencer of the musics by ($x | Musical_NP)??", "Who were the influencers of the music by ($x | Musical_NP)??", "Who were the influencers of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "740",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the foundation series of ($x | TelevisionShow_NP)?.", "List all the influencers of the foundation series of ($x | TelevisionShow_NP)?.", "show me all influencers of the foundation series of ($x | TelevisionShow_NP)?.", "Who are the influencers of the foundation series of ($x | TelevisionShow_NP)??", "Who is the influencer of the foundation series of ($x | TelevisionShow_NP)??", "Who was the influencer of the foundation series of ($x | TelevisionShow_NP)??", "Who were the influencers of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "741",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the creator of ($x | FictionalCharacter_NP)?.", "Give me all influencers of the creators of ($x | FictionalCharacter_NP)?.", "List all the influencers of the creator of ($x | FictionalCharacter_NP)?.", "List all the influencers of the creators of ($x | FictionalCharacter_NP)?.", "show me all influencers of the creator of ($x | FictionalCharacter_NP)?.", "show me all influencers of the creators of ($x | FictionalCharacter_NP)?.", "Who are the influencers of the creator of ($x | FictionalCharacter_NP)??", "Who are the influencers of the creators of ($x | FictionalCharacter_NP)??", "Who is the influencer of the creator of ($x | FictionalCharacter_NP)??", "Who is the influencer of the creators of ($x | FictionalCharacter_NP)??", "Who was the influencer of the creator of ($x | FictionalCharacter_NP)??", "Who was the influencer of the creators of ($x | FictionalCharacter_NP)??", "Who were the influencers of the creator of ($x | FictionalCharacter_NP)??", "Who were the influencers of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "742",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the influencer of ($x | Person_NP)?.", "Give me all influencers of the influencers of ($x | Person_NP)?.", "List all the influencers of the influencer of ($x | Person_NP)?.", "List all the influencers of the influencers of ($x | Person_NP)?.", "show me all influencers of the influencer of ($x | Person_NP)?.", "show me all influencers of the influencers of ($x | Person_NP)?.", "Who are the influencers of the influencer of ($x | Person_NP)??", "Who are the influencers of the influencers of ($x | Person_NP)??", "Who is the influencer of the influencer of ($x | Person_NP)??", "Who is the influencer of the influencers of ($x | Person_NP)??", "Who was the influencer of the influencer of ($x | Person_NP)??", "Who was the influencer of the influencers of ($x | Person_NP)??", "Who were the influencers of the influencer of ($x | Person_NP)??", "Who were the influencers of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "743",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the wife of ($x | Person_NP)?.", "Give me all influencers of the wives of ($x | Person_NP)?.", "List all the influencers of the wife of ($x | Person_NP)?.", "List all the influencers of the wives of ($x | Person_NP)?.", "show me all influencers of the wife of ($x | Person_NP)?.", "show me all influencers of the wives of ($x | Person_NP)?.", "Who are the influencers of the wife of ($x | Person_NP)??", "Who are the influencers of the wives of ($x | Person_NP)??", "Who is the influencer of the wife of ($x | Person_NP)??", "Who is the influencer of the wives of ($x | Person_NP)??", "Who was the influencer of the wife of ($x | Person_NP)??", "Who was the influencer of the wives of ($x | Person_NP)??", "Who were the influencers of the wife of ($x | Person_NP)??", "Who were the influencers of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "744",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all influencers of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the influencers of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the influencers of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all influencers of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all influencers of the doctoral supervisors of ($x | Scientist_NP)?.", "Who are the influencers of the doctoral supervisor of ($x | Scientist_NP)??", "Who are the influencers of the doctoral supervisors of ($x | Scientist_NP)??", "Who is the influencer of the doctoral supervisor of ($x | Scientist_NP)??", "Who is the influencer of the doctoral supervisors of ($x | Scientist_NP)??", "Who was the influencer of the doctoral supervisor of ($x | Scientist_NP)??", "Who was the influencer of the doctoral supervisors of ($x | Scientist_NP)??", "Who were the influencers of the doctoral supervisor of ($x | Scientist_NP)??", "Who were the influencers of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "745",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the host of ($x | TelevisionShow_NP)?.", "Give me all influencers of the hosts of ($x | TelevisionShow_NP)?.", "List all the influencers of the host of ($x | TelevisionShow_NP)?.", "List all the influencers of the hosts of ($x | TelevisionShow_NP)?.", "show me all influencers of the host of ($x | TelevisionShow_NP)?.", "show me all influencers of the hosts of ($x | TelevisionShow_NP)?.", "Who are the influencers of the host of ($x | TelevisionShow_NP)??", "Who are the influencers of the hosts of ($x | TelevisionShow_NP)??", "Who is the influencer of the host of ($x | TelevisionShow_NP)??", "Who is the influencer of the hosts of ($x | TelevisionShow_NP)??", "Who was the influencer of the host of ($x | TelevisionShow_NP)??", "Who was the influencer of the hosts of ($x | TelevisionShow_NP)??", "Who were the influencers of the host of ($x | TelevisionShow_NP)??", "Who were the influencers of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "746",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the residence of ($x | Place_NP)?.", "Give me all influencers of the residences of ($x | Place_NP)?.", "List all the influencers of the residence of ($x | Place_NP)?.", "List all the influencers of the residences of ($x | Place_NP)?.", "show me all influencers of the residence of ($x | Place_NP)?.", "show me all influencers of the residences of ($x | Place_NP)?.", "Who are the influencers of the residence of ($x | Place_NP)??", "Who are the influencers of the residences of ($x | Place_NP)??", "Who is the influencer of the residence of ($x | Place_NP)??", "Who is the influencer of the residences of ($x | Place_NP)??", "Who was the influencer of the residence of ($x | Place_NP)??", "Who was the influencer of the residences of ($x | Place_NP)??", "Who were the influencers of the residence of ($x | Place_NP)??", "Who were the influencers of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "747",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the daughter of ($x | Person_NP)?.", "Give me all influencers of the daughters of ($x | Person_NP)?.", "List all the influencers of the daughter of ($x | Person_NP)?.", "List all the influencers of the daughters of ($x | Person_NP)?.", "show me all influencers of the daughter of ($x | Person_NP)?.", "show me all influencers of the daughters of ($x | Person_NP)?.", "Who are the influencers of the daughter of ($x | Person_NP)??", "Who are the influencers of the daughters of ($x | Person_NP)??", "Who is the influencer of the daughter of ($x | Person_NP)??", "Who is the influencer of the daughters of ($x | Person_NP)??", "Who was the influencer of the daughter of ($x | Person_NP)??", "Who was the influencer of the daughters of ($x | Person_NP)??", "Who were the influencers of the daughter of ($x | Person_NP)??", "Who were the influencers of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "748",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the successor of ($x | Politician_NP)?.", "List all the influencers of the successor of ($x | Politician_NP)?.", "show me all influencers of the successor of ($x | Politician_NP)?.", "Who are the influencers of the successor of ($x | Politician_NP)??", "Who is the influencer of the successor of ($x | Politician_NP)??", "Who was the influencer of the successor of ($x | Politician_NP)??", "Who were the influencers of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "749",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the child of ($x | Person_NP)?.", "Give me all influencers of the children of ($x | Person_NP)?.", "List all the influencers of the child of ($x | Person_NP)?.", "List all the influencers of the children of ($x | Person_NP)?.", "show me all influencers of the child of ($x | Person_NP)?.", "show me all influencers of the children of ($x | Person_NP)?.", "Who are the influencers of the child of ($x | Person_NP)??", "Who are the influencers of the children of ($x | Person_NP)??", "Who is the influencer of the child of ($x | Person_NP)??", "Who is the influencer of the children of ($x | Person_NP)??", "Who was the influencer of the child of ($x | Person_NP)??", "Who was the influencer of the children of ($x | Person_NP)??", "Who were the influencers of the child of ($x | Person_NP)??", "Who were the influencers of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "750",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the governor of ($x | Person_NP)?.", "Give me all influencers of the governors of ($x | Person_NP)?.", "List all the influencers of the governor of ($x | Person_NP)?.", "List all the influencers of the governors of ($x | Person_NP)?.", "show me all influencers of the governor of ($x | Person_NP)?.", "show me all influencers of the governors of ($x | Person_NP)?.", "Who are the influencers of the governor of ($x | Person_NP)??", "Who are the influencers of the governors of ($x | Person_NP)??", "Who is the influencer of the governor of ($x | Person_NP)??", "Who is the influencer of the governors of ($x | Person_NP)??", "Who was the influencer of the governor of ($x | Person_NP)??", "Who was the influencer of the governors of ($x | Person_NP)??", "Who were the influencers of the governor of ($x | Person_NP)??", "Who were the influencers of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "751",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the music composer of ($x | TelevisionShow_NP)?.", "Give me all influencers of the music composers of ($x | TelevisionShow_NP)?.", "List all the influencers of the music composer of ($x | TelevisionShow_NP)?.", "List all the influencers of the music composers of ($x | TelevisionShow_NP)?.", "show me all influencers of the music composer of ($x | TelevisionShow_NP)?.", "show me all influencers of the music composers of ($x | TelevisionShow_NP)?.", "Who are the influencers of the music composer of ($x | TelevisionShow_NP)??", "Who are the influencers of the music composers of ($x | TelevisionShow_NP)??", "Who is the influencer of the music composer of ($x | TelevisionShow_NP)??", "Who is the influencer of the music composers of ($x | TelevisionShow_NP)??", "Who was the influencer of the music composer of ($x | TelevisionShow_NP)??", "Who was the influencer of the music composers of ($x | TelevisionShow_NP)??", "Who were the influencers of the music composer of ($x | TelevisionShow_NP)??", "Who were the influencers of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "752",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the first to climb  ($x | Mountain_NP)?.", "List all the influencers of the first to climb  ($x | Mountain_NP)?.", "show me all influencers of the first to climb  ($x | Mountain_NP)?.", "Who are the influencers of the first to climb  ($x | Mountain_NP)??", "Who is the influencer of the first to climb  ($x | Mountain_NP)??", "Who was the influencer of the first to climb  ($x | Mountain_NP)??", "Who were the influencers of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "753",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the father of ($x | Royalty_NP)?.", "List all the influencers of the father of ($x | Royalty_NP)?.", "show me all influencers of the father of ($x | Royalty_NP)?.", "Who are the influencers of the father of ($x | Royalty_NP)??", "Who is the influencer of the father of ($x | Royalty_NP)??", "Who was the influencer of the father of ($x | Royalty_NP)??", "Who were the influencers of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "754",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the music composer of ($x | TelevisionShow_NP)?.", "Give me all influencers of the music composers of ($x | TelevisionShow_NP)?.", "List all the influencers of the music composer of ($x | TelevisionShow_NP)?.", "List all the influencers of the music composers of ($x | TelevisionShow_NP)?.", "show me all influencers of the music composer of ($x | TelevisionShow_NP)?.", "show me all influencers of the music composers of ($x | TelevisionShow_NP)?.", "Who are the influencers of the music composer of ($x | TelevisionShow_NP)??", "Who are the influencers of the music composers of ($x | TelevisionShow_NP)??", "Who is the influencer of the music composer of ($x | TelevisionShow_NP)??", "Who is the influencer of the music composers of ($x | TelevisionShow_NP)??", "Who was the influencer of the music composer of ($x | TelevisionShow_NP)??", "Who was the influencer of the music composers of ($x | TelevisionShow_NP)??", "Who were the influencers of the music composer of ($x | TelevisionShow_NP)??", "Who were the influencers of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "755",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the son of ($x | Person_NP)?.", "Give me all influencers of the sons of ($x | Person_NP)?.", "List all the influencers of the son of ($x | Person_NP)?.", "List all the influencers of the sons of ($x | Person_NP)?.", "show me all influencers of the son of ($x | Person_NP)?.", "show me all influencers of the sons of ($x | Person_NP)?.", "Who are the influencers of the son of ($x | Person_NP)??", "Who are the influencers of the sons of ($x | Person_NP)??", "Who is the influencer of the son of ($x | Person_NP)??", "Who is the influencer of the sons of ($x | Person_NP)??", "Who was the influencer of the son of ($x | Person_NP)??", "Who was the influencer of the sons of ($x | Person_NP)??", "Who were the influencers of the son of ($x | Person_NP)??", "Who were the influencers of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "756",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the son of ($x | Person_NP)?.", "Give me all influencers of the sons of ($x | Person_NP)?.", "List all the influencers of the son of ($x | Person_NP)?.", "List all the influencers of the sons of ($x | Person_NP)?.", "show me all influencers of the son of ($x | Person_NP)?.", "show me all influencers of the sons of ($x | Person_NP)?.", "Who are the influencers of the son of ($x | Person_NP)??", "Who are the influencers of the sons of ($x | Person_NP)??", "Who is the influencer of the son of ($x | Person_NP)??", "Who is the influencer of the sons of ($x | Person_NP)??", "Who was the influencer of the son of ($x | Person_NP)??", "Who was the influencer of the sons of ($x | Person_NP)??", "Who were the influencers of the son of ($x | Person_NP)??", "Who were the influencers of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "757",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of the mayor of ($x | City_NP)?.", "Give me all influencers of the mayors of ($x | City_NP)?.", "List all the influencers of the mayor of ($x | City_NP)?.", "List all the influencers of the mayors of ($x | City_NP)?.", "show me all influencers of the mayor of ($x | City_NP)?.", "show me all influencers of the mayors of ($x | City_NP)?.", "Who are the influencers of the mayor of ($x | City_NP)??", "Who are the influencers of the mayors of ($x | City_NP)??", "Who is the influencer of the mayor of ($x | City_NP)??", "Who is the influencer of the mayors of ($x | City_NP)??", "Who was the influencer of the mayor of ($x | City_NP)??", "Who was the influencer of the mayors of ($x | City_NP)??", "Who were the influencers of the mayor of ($x | City_NP)??", "Who were the influencers of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "758",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the editor of ($x | Work_NP)? have?", "How many influencer does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "759",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the parent of ($x | Person_NP)? have?", "How many influencer does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "760",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the king of ($x | Legislature_NP)? have?", "How many influencer does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "761",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the coach of ($x | IceHockeyLeague_NP)? have?", "How many influencer does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "762",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the coach of ($x | HockeyTeam_NP)? have?", "How many influencer does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "763",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "764",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the author of ($x | Work_NP)? have?", "How many influencer does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "765",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the mayor of ($x | Settlement_NP)? have?", "How many influencer does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "766",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the music by ($x | Musical_NP)? have?", "How many influencer does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "767",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "768",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the creator of ($x | FictionalCharacter_NP)? have?", "How many influencer does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "769",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the influencer of ($x | Person_NP)? have?", "How many influencer does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "770",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the wife of ($x | Person_NP)? have?", "How many influencer does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "771",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many influencer does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "772",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the host of ($x | TelevisionShow_NP)? have?", "How many influencer does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "773",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the residence of ($x | Place_NP)? have?", "How many influencer does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "774",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the daughter of ($x | Person_NP)? have?", "How many influencer does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "775",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "776",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the child of ($x | Person_NP)? have?", "How many influencer does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "777",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the governor of ($x | Person_NP)? have?", "How many influencer does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "778",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the music composer of ($x | TelevisionShow_NP)? have?", "How many influencer does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "779",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "780",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "781",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the music composer of ($x | TelevisionShow_NP)? have?", "How many influencer does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "782",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the son of ($x | Person_NP)? have?", "How many influencer does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "783",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the son of ($x | Person_NP)? have?", "How many influencer does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "784",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many influencer does the mayor of ($x | City_NP)? have?", "How many influencer does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "785",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Pope",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the leader of ($x | Legislature_NP)?.", "Give me all founders of the leaders of ($x | Legislature_NP)?.", "List all the founders of the leader of ($x | Legislature_NP)?.", "List all the founders of the leaders of ($x | Legislature_NP)?.", "show me all founders of the leader of ($x | Legislature_NP)?.", "show me all founders of the leaders of ($x | Legislature_NP)?.", "Who are the founders of the leader of ($x | Legislature_NP)??", "Who are the founders of the leaders of ($x | Legislature_NP)??", "Who is the founder of the leader of ($x | Legislature_NP)??", "Who is the founder of the leaders of ($x | Legislature_NP)??", "Who was the founder of the leader of ($x | Legislature_NP)??", "Who was the founder of the leaders of ($x | Legislature_NP)??", "Who were the founders of the leader of ($x | Legislature_NP)??", "Who were the founders of the leaders of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "786",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Pope",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the leader of ($x | Legislature_NP)? have?", "How many founder does the leaders of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "787",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the isbn of ($x | Book_NP)??", "What is the autobiography of the isbns of ($x | Book_NP)??", "What was the autobiography of the isbn of ($x | Book_NP)??", "What was the autobiography of the isbns of ($x | Book_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "788",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the president of ($x | Person_NP)??", "What is the autobiography of the presidents of ($x | Person_NP)??", "What was the autobiography of the president of ($x | Person_NP)??", "What was the autobiography of the presidents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "789",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the parties of ($x | Politician_NP)??", "What is the autobiography of the party of ($x | Politician_NP)??", "What was the autobiography of the parties of ($x | Politician_NP)??", "What was the autobiography of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "790",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the parties of ($x | Politician_NP)??", "What is the autobiography of the party of ($x | Politician_NP)??", "What was the autobiography of the parties of ($x | Politician_NP)??", "What was the autobiography of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "791",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the artistic movement of ($x | Artist_NP)??", "What is the autobiography of the artistic movements of ($x | Artist_NP)??", "What was the autobiography of the artistic movement of ($x | Artist_NP)??", "What was the autobiography of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "792",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the artistic movement of ($x | Artist_NP)??", "What is the autobiography of the artistic movements of ($x | Artist_NP)??", "What was the autobiography of the artistic movement of ($x | Artist_NP)??", "What was the autobiography of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "793",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the record label of ($x | Genre_NP)??", "What is the autobiography of the record labels of ($x | Genre_NP)??", "What was the autobiography of the record label of ($x | Genre_NP)??", "What was the autobiography of the record labels of ($x | Genre_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "794",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the autobiography of ($x | Thing_NP)??", "What was the autobiography of the autobiography of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "795",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the resting place of ($x | Person_NP)??", "What was the autobiography of the resting place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "796",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the time zone of ($x | City_NP)??", "What is the autobiography of the time zones of ($x | City_NP)??", "What was the autobiography of the time zone of ($x | City_NP)??", "What was the autobiography of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "797",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the time zone of ($x | City_NP)??", "What is the autobiography of the time zones of ($x | City_NP)??", "What was the autobiography of the time zone of ($x | City_NP)??", "What was the autobiography of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "798",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the cause of death of ($x | Person_NP)??", "What is the autobiography of the causes of death of ($x | Person_NP)??", "What was the autobiography of the cause of death of ($x | Person_NP)??", "What was the autobiography of the causes of death of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "799",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the religion of ($x | Person_NP)??", "What was the autobiography of the religion of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "800",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the area code of ($x | City_NP)??", "What was the autobiography of the area code of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "801",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the address of ($x | ArchitecturalStructure_NP)??", "What is the autobiography of the addresses of ($x | ArchitecturalStructure_NP)??", "What was the autobiography of the address of ($x | ArchitecturalStructure_NP)??", "What was the autobiography of the addresses of ($x | ArchitecturalStructure_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "802",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the ingredient of ($x | Food_NP)??", "What is the autobiography of the ingredients of ($x | Food_NP)??", "What was the autobiography of the ingredient of ($x | Food_NP)??", "What was the autobiography of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "803",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the ingredient of ($x | Food_NP)??", "What is the autobiography of the ingredients of ($x | Food_NP)??", "What was the autobiography of the ingredient of ($x | Food_NP)??", "What was the autobiography of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "804",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the nickname of ($x | City_NP)??", "What is the autobiography of the nicknames of ($x | City_NP)??", "What was the autobiography of the nickname of ($x | City_NP)??", "What was the autobiography of the nicknames of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "805",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of the flag of ($x | Place_NP)??", "What is the autobiography of the flags of ($x | Place_NP)??", "What was the autobiography of the flag of ($x | Place_NP)??", "What was the autobiography of the flags of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "806",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the isbn of ($x | Book_NP)? have?", "How many autobiography does the isbns of ($x | Book_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "807",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the president of ($x | Person_NP)? have?", "How many autobiography does the presidents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "808",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the parties of ($x | Politician_NP)? have?", "How many autobiography does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "809",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the parties of ($x | Politician_NP)? have?", "How many autobiography does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "810",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the artistic movement of ($x | Artist_NP)? have?", "How many autobiography does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "811",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the artistic movement of ($x | Artist_NP)? have?", "How many autobiography does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "812",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the record label of ($x | Genre_NP)? have?", "How many autobiography does the record labels of ($x | Genre_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "813",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the autobiography of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "814",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the resting place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "815",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the time zone of ($x | City_NP)? have?", "How many autobiography does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "816",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the time zone of ($x | City_NP)? have?", "How many autobiography does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "817",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the cause of death of ($x | Person_NP)? have?", "How many autobiography does the causes of death of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "818",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the religion of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "819",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the area code of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "820",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the address of ($x | ArchitecturalStructure_NP)? have?", "How many autobiography does the addresses of ($x | ArchitecturalStructure_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "821",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the ingredient of ($x | Food_NP)? have?", "How many autobiography does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "822",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the ingredient of ($x | Food_NP)? have?", "How many autobiography does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "823",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the nickname of ($x | City_NP)? have?", "How many autobiography does the nicknames of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "824",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many autobiography does the flag of ($x | Place_NP)? have?", "How many autobiography does the flags of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "825",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the editor of ($x | Work_NP)?.", "Give me all wives of the editors of ($x | Work_NP)?.", "List all the wives of the editor of ($x | Work_NP)?.", "List all the wives of the editors of ($x | Work_NP)?.", "show me all wives of the editor of ($x | Work_NP)?.", "show me all wives of the editors of ($x | Work_NP)?.", "Who are the wives of the editor of ($x | Work_NP)??", "Who are the wives of the editors of ($x | Work_NP)??", "Who is the wife of the editor of ($x | Work_NP)??", "Who is the wife of the editors of ($x | Work_NP)??", "Who was the wife of the editor of ($x | Work_NP)??", "Who was the wife of the editors of ($x | Work_NP)??", "Who were the wives of the editor of ($x | Work_NP)??", "Who were the wives of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "826",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the parent of ($x | Person_NP)?.", "Give me all wives of the parents of ($x | Person_NP)?.", "List all the wives of the parent of ($x | Person_NP)?.", "List all the wives of the parents of ($x | Person_NP)?.", "show me all wives of the parent of ($x | Person_NP)?.", "show me all wives of the parents of ($x | Person_NP)?.", "Who are the wives of the parent of ($x | Person_NP)??", "Who are the wives of the parents of ($x | Person_NP)??", "Who is the wife of the parent of ($x | Person_NP)??", "Who is the wife of the parents of ($x | Person_NP)??", "Who was the wife of the parent of ($x | Person_NP)??", "Who was the wife of the parents of ($x | Person_NP)??", "Who were the wives of the parent of ($x | Person_NP)??", "Who were the wives of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "827",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the king of ($x | Legislature_NP)?.", "Give me all wives of the kings of ($x | Legislature_NP)?.", "List all the wives of the king of ($x | Legislature_NP)?.", "List all the wives of the kings of ($x | Legislature_NP)?.", "show me all wives of the king of ($x | Legislature_NP)?.", "show me all wives of the kings of ($x | Legislature_NP)?.", "Who are the wives of the king of ($x | Legislature_NP)??", "Who are the wives of the kings of ($x | Legislature_NP)??", "Who is the wife of the king of ($x | Legislature_NP)??", "Who is the wife of the kings of ($x | Legislature_NP)??", "Who was the wife of the king of ($x | Legislature_NP)??", "Who was the wife of the kings of ($x | Legislature_NP)??", "Who were the wives of the king of ($x | Legislature_NP)??", "Who were the wives of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "828",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all wives of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the wives of the coach of ($x | IceHockeyLeague_NP)?.", "List all the wives of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all wives of the coach of ($x | IceHockeyLeague_NP)?.", "show me all wives of the coaches of ($x | IceHockeyLeague_NP)?.", "Who are the wives of the coach of ($x | IceHockeyLeague_NP)??", "Who are the wives of the coaches of ($x | IceHockeyLeague_NP)??", "Who is the wife of the coach of ($x | IceHockeyLeague_NP)??", "Who is the wife of the coaches of ($x | IceHockeyLeague_NP)??", "Who was the wife of the coach of ($x | IceHockeyLeague_NP)??", "Who was the wife of the coaches of ($x | IceHockeyLeague_NP)??", "Who were the wives of the coach of ($x | IceHockeyLeague_NP)??", "Who were the wives of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "829",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the coach of ($x | HockeyTeam_NP)?.", "Give me all wives of the coaches of ($x | HockeyTeam_NP)?.", "List all the wives of the coach of ($x | HockeyTeam_NP)?.", "List all the wives of the coaches of ($x | HockeyTeam_NP)?.", "show me all wives of the coach of ($x | HockeyTeam_NP)?.", "show me all wives of the coaches of ($x | HockeyTeam_NP)?.", "Who are the wives of the coach of ($x | HockeyTeam_NP)??", "Who are the wives of the coaches of ($x | HockeyTeam_NP)??", "Who is the wife of the coach of ($x | HockeyTeam_NP)??", "Who is the wife of the coaches of ($x | HockeyTeam_NP)??", "Who was the wife of the coach of ($x | HockeyTeam_NP)??", "Who was the wife of the coaches of ($x | HockeyTeam_NP)??", "Who were the wives of the coach of ($x | HockeyTeam_NP)??", "Who were the wives of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "830",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the wives of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all wives of the alter ego of ($x | ComicsCharacter_NP)?.", "Who are the wives of the alter ego of ($x | ComicsCharacter_NP)??", "Who is the wife of the alter ego of ($x | ComicsCharacter_NP)??", "Who was the wife of the alter ego of ($x | ComicsCharacter_NP)??", "Who were the wives of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "831",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the author of ($x | Work_NP)?.", "Give me all wives of the authors of ($x | Work_NP)?.", "List all the wives of the author of ($x | Work_NP)?.", "List all the wives of the authors of ($x | Work_NP)?.", "show me all wives of the author of ($x | Work_NP)?.", "show me all wives of the authors of ($x | Work_NP)?.", "Who are the wives of the author of ($x | Work_NP)??", "Who are the wives of the authors of ($x | Work_NP)??", "Who is the wife of the author of ($x | Work_NP)??", "Who is the wife of the authors of ($x | Work_NP)??", "Who was the wife of the author of ($x | Work_NP)??", "Who was the wife of the authors of ($x | Work_NP)??", "Who were the wives of the author of ($x | Work_NP)??", "Who were the wives of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "832",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the mayor of ($x | Settlement_NP)?.", "Give me all wives of the mayors of ($x | Settlement_NP)?.", "List all the wives of the mayor of ($x | Settlement_NP)?.", "List all the wives of the mayors of ($x | Settlement_NP)?.", "show me all wives of the mayor of ($x | Settlement_NP)?.", "show me all wives of the mayors of ($x | Settlement_NP)?.", "Who are the wives of the mayor of ($x | Settlement_NP)??", "Who are the wives of the mayors of ($x | Settlement_NP)??", "Who is the wife of the mayor of ($x | Settlement_NP)??", "Who is the wife of the mayors of ($x | Settlement_NP)??", "Who was the wife of the mayor of ($x | Settlement_NP)??", "Who was the wife of the mayors of ($x | Settlement_NP)??", "Who were the wives of the mayor of ($x | Settlement_NP)??", "Who were the wives of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "833",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the music by ($x | Musical_NP)?.", "Give me all wives of the musics by ($x | Musical_NP)?.", "List all the wives of the music by ($x | Musical_NP)?.", "List all the wives of the musics by ($x | Musical_NP)?.", "show me all wives of the music by ($x | Musical_NP)?.", "show me all wives of the musics by ($x | Musical_NP)?.", "Who are the wives of the music by ($x | Musical_NP)??", "Who are the wives of the musics by ($x | Musical_NP)??", "Who is the wife of the music by ($x | Musical_NP)??", "Who is the wife of the musics by ($x | Musical_NP)??", "Who was the wife of the music by ($x | Musical_NP)??", "Who was the wife of the musics by ($x | Musical_NP)??", "Who were the wives of the music by ($x | Musical_NP)??", "Who were the wives of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "834",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the foundation series of ($x | TelevisionShow_NP)?.", "List all the wives of the foundation series of ($x | TelevisionShow_NP)?.", "show me all wives of the foundation series of ($x | TelevisionShow_NP)?.", "Who are the wives of the foundation series of ($x | TelevisionShow_NP)??", "Who is the wife of the foundation series of ($x | TelevisionShow_NP)??", "Who was the wife of the foundation series of ($x | TelevisionShow_NP)??", "Who were the wives of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "835",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the creator of ($x | FictionalCharacter_NP)?.", "Give me all wives of the creators of ($x | FictionalCharacter_NP)?.", "List all the wives of the creator of ($x | FictionalCharacter_NP)?.", "List all the wives of the creators of ($x | FictionalCharacter_NP)?.", "show me all wives of the creator of ($x | FictionalCharacter_NP)?.", "show me all wives of the creators of ($x | FictionalCharacter_NP)?.", "Who are the wives of the creator of ($x | FictionalCharacter_NP)??", "Who are the wives of the creators of ($x | FictionalCharacter_NP)??", "Who is the wife of the creator of ($x | FictionalCharacter_NP)??", "Who is the wife of the creators of ($x | FictionalCharacter_NP)??", "Who was the wife of the creator of ($x | FictionalCharacter_NP)??", "Who was the wife of the creators of ($x | FictionalCharacter_NP)??", "Who were the wives of the creator of ($x | FictionalCharacter_NP)??", "Who were the wives of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "836",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the influencer of ($x | Person_NP)?.", "Give me all wives of the influencers of ($x | Person_NP)?.", "List all the wives of the influencer of ($x | Person_NP)?.", "List all the wives of the influencers of ($x | Person_NP)?.", "show me all wives of the influencer of ($x | Person_NP)?.", "show me all wives of the influencers of ($x | Person_NP)?.", "Who are the wives of the influencer of ($x | Person_NP)??", "Who are the wives of the influencers of ($x | Person_NP)??", "Who is the wife of the influencer of ($x | Person_NP)??", "Who is the wife of the influencers of ($x | Person_NP)??", "Who was the wife of the influencer of ($x | Person_NP)??", "Who was the wife of the influencers of ($x | Person_NP)??", "Who were the wives of the influencer of ($x | Person_NP)??", "Who were the wives of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "837",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the wife of ($x | Person_NP)?.", "Give me all wives of the wives of ($x | Person_NP)?.", "List all the wives of the wife of ($x | Person_NP)?.", "List all the wives of the wives of ($x | Person_NP)?.", "show me all wives of the wife of ($x | Person_NP)?.", "show me all wives of the wives of ($x | Person_NP)?.", "Who are the wives of the wife of ($x | Person_NP)??", "Who are the wives of the wives of ($x | Person_NP)??", "Who is the wife of the wife of ($x | Person_NP)??", "Who is the wife of the wives of ($x | Person_NP)??", "Who was the wife of the wife of ($x | Person_NP)??", "Who was the wife of the wives of ($x | Person_NP)??", "Who were the wives of the wife of ($x | Person_NP)??", "Who were the wives of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "838",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all wives of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the wives of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the wives of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all wives of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all wives of the doctoral supervisors of ($x | Scientist_NP)?.", "Who are the wives of the doctoral supervisor of ($x | Scientist_NP)??", "Who are the wives of the doctoral supervisors of ($x | Scientist_NP)??", "Who is the wife of the doctoral supervisor of ($x | Scientist_NP)??", "Who is the wife of the doctoral supervisors of ($x | Scientist_NP)??", "Who was the wife of the doctoral supervisor of ($x | Scientist_NP)??", "Who was the wife of the doctoral supervisors of ($x | Scientist_NP)??", "Who were the wives of the doctoral supervisor of ($x | Scientist_NP)??", "Who were the wives of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "839",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the host of ($x | TelevisionShow_NP)?.", "Give me all wives of the hosts of ($x | TelevisionShow_NP)?.", "List all the wives of the host of ($x | TelevisionShow_NP)?.", "List all the wives of the hosts of ($x | TelevisionShow_NP)?.", "show me all wives of the host of ($x | TelevisionShow_NP)?.", "show me all wives of the hosts of ($x | TelevisionShow_NP)?.", "Who are the wives of the host of ($x | TelevisionShow_NP)??", "Who are the wives of the hosts of ($x | TelevisionShow_NP)??", "Who is the wife of the host of ($x | TelevisionShow_NP)??", "Who is the wife of the hosts of ($x | TelevisionShow_NP)??", "Who was the wife of the host of ($x | TelevisionShow_NP)??", "Who was the wife of the hosts of ($x | TelevisionShow_NP)??", "Who were the wives of the host of ($x | TelevisionShow_NP)??", "Who were the wives of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "840",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the residence of ($x | Place_NP)?.", "Give me all wives of the residences of ($x | Place_NP)?.", "List all the wives of the residence of ($x | Place_NP)?.", "List all the wives of the residences of ($x | Place_NP)?.", "show me all wives of the residence of ($x | Place_NP)?.", "show me all wives of the residences of ($x | Place_NP)?.", "Who are the wives of the residence of ($x | Place_NP)??", "Who are the wives of the residences of ($x | Place_NP)??", "Who is the wife of the residence of ($x | Place_NP)??", "Who is the wife of the residences of ($x | Place_NP)??", "Who was the wife of the residence of ($x | Place_NP)??", "Who was the wife of the residences of ($x | Place_NP)??", "Who were the wives of the residence of ($x | Place_NP)??", "Who were the wives of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "841",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the daughter of ($x | Person_NP)?.", "Give me all wives of the daughters of ($x | Person_NP)?.", "List all the wives of the daughter of ($x | Person_NP)?.", "List all the wives of the daughters of ($x | Person_NP)?.", "show me all wives of the daughter of ($x | Person_NP)?.", "show me all wives of the daughters of ($x | Person_NP)?.", "Who are the wives of the daughter of ($x | Person_NP)??", "Who are the wives of the daughters of ($x | Person_NP)??", "Who is the wife of the daughter of ($x | Person_NP)??", "Who is the wife of the daughters of ($x | Person_NP)??", "Who was the wife of the daughter of ($x | Person_NP)??", "Who was the wife of the daughters of ($x | Person_NP)??", "Who were the wives of the daughter of ($x | Person_NP)??", "Who were the wives of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "842",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the successor of ($x | Politician_NP)?.", "List all the wives of the successor of ($x | Politician_NP)?.", "show me all wives of the successor of ($x | Politician_NP)?.", "Who are the wives of the successor of ($x | Politician_NP)??", "Who is the wife of the successor of ($x | Politician_NP)??", "Who was the wife of the successor of ($x | Politician_NP)??", "Who were the wives of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "843",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the child of ($x | Person_NP)?.", "Give me all wives of the children of ($x | Person_NP)?.", "List all the wives of the child of ($x | Person_NP)?.", "List all the wives of the children of ($x | Person_NP)?.", "show me all wives of the child of ($x | Person_NP)?.", "show me all wives of the children of ($x | Person_NP)?.", "Who are the wives of the child of ($x | Person_NP)??", "Who are the wives of the children of ($x | Person_NP)??", "Who is the wife of the child of ($x | Person_NP)??", "Who is the wife of the children of ($x | Person_NP)??", "Who was the wife of the child of ($x | Person_NP)??", "Who was the wife of the children of ($x | Person_NP)??", "Who were the wives of the child of ($x | Person_NP)??", "Who were the wives of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "844",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the governor of ($x | Person_NP)?.", "Give me all wives of the governors of ($x | Person_NP)?.", "List all the wives of the governor of ($x | Person_NP)?.", "List all the wives of the governors of ($x | Person_NP)?.", "show me all wives of the governor of ($x | Person_NP)?.", "show me all wives of the governors of ($x | Person_NP)?.", "Who are the wives of the governor of ($x | Person_NP)??", "Who are the wives of the governors of ($x | Person_NP)??", "Who is the wife of the governor of ($x | Person_NP)??", "Who is the wife of the governors of ($x | Person_NP)??", "Who was the wife of the governor of ($x | Person_NP)??", "Who was the wife of the governors of ($x | Person_NP)??", "Who were the wives of the governor of ($x | Person_NP)??", "Who were the wives of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "845",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the music composer of ($x | TelevisionShow_NP)?.", "Give me all wives of the music composers of ($x | TelevisionShow_NP)?.", "List all the wives of the music composer of ($x | TelevisionShow_NP)?.", "List all the wives of the music composers of ($x | TelevisionShow_NP)?.", "show me all wives of the music composer of ($x | TelevisionShow_NP)?.", "show me all wives of the music composers of ($x | TelevisionShow_NP)?.", "Who are the wives of the music composer of ($x | TelevisionShow_NP)??", "Who are the wives of the music composers of ($x | TelevisionShow_NP)??", "Who is the wife of the music composer of ($x | TelevisionShow_NP)??", "Who is the wife of the music composers of ($x | TelevisionShow_NP)??", "Who was the wife of the music composer of ($x | TelevisionShow_NP)??", "Who was the wife of the music composers of ($x | TelevisionShow_NP)??", "Who were the wives of the music composer of ($x | TelevisionShow_NP)??", "Who were the wives of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "846",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the first to climb  ($x | Mountain_NP)?.", "List all the wives of the first to climb  ($x | Mountain_NP)?.", "show me all wives of the first to climb  ($x | Mountain_NP)?.", "Who are the wives of the first to climb  ($x | Mountain_NP)??", "Who is the wife of the first to climb  ($x | Mountain_NP)??", "Who was the wife of the first to climb  ($x | Mountain_NP)??", "Who were the wives of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "847",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the father of ($x | Royalty_NP)?.", "List all the wives of the father of ($x | Royalty_NP)?.", "show me all wives of the father of ($x | Royalty_NP)?.", "Who are the wives of the father of ($x | Royalty_NP)??", "Who is the wife of the father of ($x | Royalty_NP)??", "Who was the wife of the father of ($x | Royalty_NP)??", "Who were the wives of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "848",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the music composer of ($x | TelevisionShow_NP)?.", "Give me all wives of the music composers of ($x | TelevisionShow_NP)?.", "List all the wives of the music composer of ($x | TelevisionShow_NP)?.", "List all the wives of the music composers of ($x | TelevisionShow_NP)?.", "show me all wives of the music composer of ($x | TelevisionShow_NP)?.", "show me all wives of the music composers of ($x | TelevisionShow_NP)?.", "Who are the wives of the music composer of ($x | TelevisionShow_NP)??", "Who are the wives of the music composers of ($x | TelevisionShow_NP)??", "Who is the wife of the music composer of ($x | TelevisionShow_NP)??", "Who is the wife of the music composers of ($x | TelevisionShow_NP)??", "Who was the wife of the music composer of ($x | TelevisionShow_NP)??", "Who was the wife of the music composers of ($x | TelevisionShow_NP)??", "Who were the wives of the music composer of ($x | TelevisionShow_NP)??", "Who were the wives of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "849",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the son of ($x | Person_NP)?.", "Give me all wives of the sons of ($x | Person_NP)?.", "List all the wives of the son of ($x | Person_NP)?.", "List all the wives of the sons of ($x | Person_NP)?.", "show me all wives of the son of ($x | Person_NP)?.", "show me all wives of the sons of ($x | Person_NP)?.", "Who are the wives of the son of ($x | Person_NP)??", "Who are the wives of the sons of ($x | Person_NP)??", "Who is the wife of the son of ($x | Person_NP)??", "Who is the wife of the sons of ($x | Person_NP)??", "Who was the wife of the son of ($x | Person_NP)??", "Who was the wife of the sons of ($x | Person_NP)??", "Who were the wives of the son of ($x | Person_NP)??", "Who were the wives of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "850",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the son of ($x | Person_NP)?.", "Give me all wives of the sons of ($x | Person_NP)?.", "List all the wives of the son of ($x | Person_NP)?.", "List all the wives of the sons of ($x | Person_NP)?.", "show me all wives of the son of ($x | Person_NP)?.", "show me all wives of the sons of ($x | Person_NP)?.", "Who are the wives of the son of ($x | Person_NP)??", "Who are the wives of the sons of ($x | Person_NP)??", "Who is the wife of the son of ($x | Person_NP)??", "Who is the wife of the sons of ($x | Person_NP)??", "Who was the wife of the son of ($x | Person_NP)??", "Who was the wife of the sons of ($x | Person_NP)??", "Who were the wives of the son of ($x | Person_NP)??", "Who were the wives of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "851",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of the mayor of ($x | City_NP)?.", "Give me all wives of the mayors of ($x | City_NP)?.", "List all the wives of the mayor of ($x | City_NP)?.", "List all the wives of the mayors of ($x | City_NP)?.", "show me all wives of the mayor of ($x | City_NP)?.", "show me all wives of the mayors of ($x | City_NP)?.", "Who are the wives of the mayor of ($x | City_NP)??", "Who are the wives of the mayors of ($x | City_NP)??", "Who is the wife of the mayor of ($x | City_NP)??", "Who is the wife of the mayors of ($x | City_NP)??", "Who was the wife of the mayor of ($x | City_NP)??", "Who was the wife of the mayors of ($x | City_NP)??", "Who were the wives of the mayor of ($x | City_NP)??", "Who were the wives of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "852",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the editor of ($x | Work_NP)? have?", "How many wife does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "853",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the parent of ($x | Person_NP)? have?", "How many wife does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "854",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the king of ($x | Legislature_NP)? have?", "How many wife does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "855",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the coach of ($x | IceHockeyLeague_NP)? have?", "How many wife does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "856",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the coach of ($x | HockeyTeam_NP)? have?", "How many wife does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "857",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "858",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the author of ($x | Work_NP)? have?", "How many wife does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "859",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the mayor of ($x | Settlement_NP)? have?", "How many wife does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "860",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the music by ($x | Musical_NP)? have?", "How many wife does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "861",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "862",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the creator of ($x | FictionalCharacter_NP)? have?", "How many wife does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "863",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the influencer of ($x | Person_NP)? have?", "How many wife does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "864",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the wife of ($x | Person_NP)? have?", "How many wife does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "865",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many wife does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "866",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the host of ($x | TelevisionShow_NP)? have?", "How many wife does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "867",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the residence of ($x | Place_NP)? have?", "How many wife does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "868",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the daughter of ($x | Person_NP)? have?", "How many wife does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "869",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "870",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the child of ($x | Person_NP)? have?", "How many wife does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "871",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the governor of ($x | Person_NP)? have?", "How many wife does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "872",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the music composer of ($x | TelevisionShow_NP)? have?", "How many wife does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "873",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "874",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "875",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the music composer of ($x | TelevisionShow_NP)? have?", "How many wife does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "876",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the son of ($x | Person_NP)? have?", "How many wife does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "877",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the son of ($x | Person_NP)? have?", "How many wife does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "878",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wife does the mayor of ($x | City_NP)? have?", "How many wife does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "879",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the population of the headquarter of ($x | Organisation_NP)??", "What was the population of the headquarter of ($x | Organisation_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "880",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many population does the headquarter of ($x | Organisation_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "881",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the editor of ($x | Work_NP)??", "What is the resting place of the editors of ($x | Work_NP)??", "What was the resting place of the editor of ($x | Work_NP)??", "What was the resting place of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "882",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the parent of ($x | Person_NP)??", "What is the resting place of the parents of ($x | Person_NP)??", "What was the resting place of the parent of ($x | Person_NP)??", "What was the resting place of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "883",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the king of ($x | Legislature_NP)??", "What is the resting place of the kings of ($x | Legislature_NP)??", "What was the resting place of the king of ($x | Legislature_NP)??", "What was the resting place of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "884",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the coach of ($x | IceHockeyLeague_NP)??", "What is the resting place of the coaches of ($x | IceHockeyLeague_NP)??", "What was the resting place of the coach of ($x | IceHockeyLeague_NP)??", "What was the resting place of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "885",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the coach of ($x | HockeyTeam_NP)??", "What is the resting place of the coaches of ($x | HockeyTeam_NP)??", "What was the resting place of the coach of ($x | HockeyTeam_NP)??", "What was the resting place of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "886",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the alter ego of ($x | ComicsCharacter_NP)??", "What was the resting place of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "887",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the author of ($x | Work_NP)??", "What is the resting place of the authors of ($x | Work_NP)??", "What was the resting place of the author of ($x | Work_NP)??", "What was the resting place of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "888",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the mayor of ($x | Settlement_NP)??", "What is the resting place of the mayors of ($x | Settlement_NP)??", "What was the resting place of the mayor of ($x | Settlement_NP)??", "What was the resting place of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "889",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the music by ($x | Musical_NP)??", "What is the resting place of the musics by ($x | Musical_NP)??", "What was the resting place of the music by ($x | Musical_NP)??", "What was the resting place of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "890",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the foundation series of ($x | TelevisionShow_NP)??", "What was the resting place of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "891",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the creator of ($x | FictionalCharacter_NP)??", "What is the resting place of the creators of ($x | FictionalCharacter_NP)??", "What was the resting place of the creator of ($x | FictionalCharacter_NP)??", "What was the resting place of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "892",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the influencer of ($x | Person_NP)??", "What is the resting place of the influencers of ($x | Person_NP)??", "What was the resting place of the influencer of ($x | Person_NP)??", "What was the resting place of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "893",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the wife of ($x | Person_NP)??", "What is the resting place of the wives of ($x | Person_NP)??", "What was the resting place of the wife of ($x | Person_NP)??", "What was the resting place of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "894",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the doctoral supervisor of ($x | Scientist_NP)??", "What is the resting place of the doctoral supervisors of ($x | Scientist_NP)??", "What was the resting place of the doctoral supervisor of ($x | Scientist_NP)??", "What was the resting place of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "895",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the host of ($x | TelevisionShow_NP)??", "What is the resting place of the hosts of ($x | TelevisionShow_NP)??", "What was the resting place of the host of ($x | TelevisionShow_NP)??", "What was the resting place of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "896",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the residence of ($x | Place_NP)??", "What is the resting place of the residences of ($x | Place_NP)??", "What was the resting place of the residence of ($x | Place_NP)??", "What was the resting place of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "897",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the daughter of ($x | Person_NP)??", "What is the resting place of the daughters of ($x | Person_NP)??", "What was the resting place of the daughter of ($x | Person_NP)??", "What was the resting place of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "898",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the successor of ($x | Politician_NP)??", "What was the resting place of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "899",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the child of ($x | Person_NP)??", "What is the resting place of the children of ($x | Person_NP)??", "What was the resting place of the child of ($x | Person_NP)??", "What was the resting place of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "900",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the governor of ($x | Person_NP)??", "What is the resting place of the governors of ($x | Person_NP)??", "What was the resting place of the governor of ($x | Person_NP)??", "What was the resting place of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "901",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the music composer of ($x | TelevisionShow_NP)??", "What is the resting place of the music composers of ($x | TelevisionShow_NP)??", "What was the resting place of the music composer of ($x | TelevisionShow_NP)??", "What was the resting place of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "902",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the first to climb  ($x | Mountain_NP)??", "What was the resting place of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "903",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the father of ($x | Royalty_NP)??", "What was the resting place of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "904",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the music composer of ($x | TelevisionShow_NP)??", "What is the resting place of the music composers of ($x | TelevisionShow_NP)??", "What was the resting place of the music composer of ($x | TelevisionShow_NP)??", "What was the resting place of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "905",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the son of ($x | Person_NP)??", "What is the resting place of the sons of ($x | Person_NP)??", "What was the resting place of the son of ($x | Person_NP)??", "What was the resting place of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "906",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the son of ($x | Person_NP)??", "What is the resting place of the sons of ($x | Person_NP)??", "What was the resting place of the son of ($x | Person_NP)??", "What was the resting place of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "907",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of the mayor of ($x | City_NP)??", "What is the resting place of the mayors of ($x | City_NP)??", "What was the resting place of the mayor of ($x | City_NP)??", "What was the resting place of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "908",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the editor of ($x | Work_NP)? have?", "How many resting place does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "909",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the parent of ($x | Person_NP)? have?", "How many resting place does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "910",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the king of ($x | Legislature_NP)? have?", "How many resting place does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "911",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the coach of ($x | IceHockeyLeague_NP)? have?", "How many resting place does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "912",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the coach of ($x | HockeyTeam_NP)? have?", "How many resting place does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "913",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "914",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the author of ($x | Work_NP)? have?", "How many resting place does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "915",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the mayor of ($x | Settlement_NP)? have?", "How many resting place does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "916",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the music by ($x | Musical_NP)? have?", "How many resting place does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "917",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "918",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the creator of ($x | FictionalCharacter_NP)? have?", "How many resting place does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "919",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the influencer of ($x | Person_NP)? have?", "How many resting place does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "920",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the wife of ($x | Person_NP)? have?", "How many resting place does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "921",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many resting place does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "922",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the host of ($x | TelevisionShow_NP)? have?", "How many resting place does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "923",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the residence of ($x | Place_NP)? have?", "How many resting place does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "924",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the daughter of ($x | Person_NP)? have?", "How many resting place does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "925",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "926",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the child of ($x | Person_NP)? have?", "How many resting place does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "927",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the governor of ($x | Person_NP)? have?", "How many resting place does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "928",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the music composer of ($x | TelevisionShow_NP)? have?", "How many resting place does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "929",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "930",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "931",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the music composer of ($x | TelevisionShow_NP)? have?", "How many resting place does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "932",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the son of ($x | Person_NP)? have?", "How many resting place does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "933",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the son of ($x | Person_NP)? have?", "How many resting place does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "934",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the mayor of ($x | City_NP)? have?", "How many resting place does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "935",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the editor of ($x | Work_NP)?.", "Give me all employers of the editors of ($x | Work_NP)?.", "List all the employers of the editor of ($x | Work_NP)?.", "List all the employers of the editors of ($x | Work_NP)?.", "show me all employers of the editor of ($x | Work_NP)?.", "show me all employers of the editors of ($x | Work_NP)?.", "What are the employers of the editor of ($x | Work_NP)??", "What are the employers of the editors of ($x | Work_NP)??", "What is the employer of the editor of ($x | Work_NP)??", "What is the employer of the editors of ($x | Work_NP)??", "What was the employer of the editor of ($x | Work_NP)??", "What was the employer of the editors of ($x | Work_NP)??", "What were the employers of the editor of ($x | Work_NP)??", "What were the employers of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "936",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the parent of ($x | Person_NP)?.", "Give me all employers of the parents of ($x | Person_NP)?.", "List all the employers of the parent of ($x | Person_NP)?.", "List all the employers of the parents of ($x | Person_NP)?.", "show me all employers of the parent of ($x | Person_NP)?.", "show me all employers of the parents of ($x | Person_NP)?.", "What are the employers of the parent of ($x | Person_NP)??", "What are the employers of the parents of ($x | Person_NP)??", "What is the employer of the parent of ($x | Person_NP)??", "What is the employer of the parents of ($x | Person_NP)??", "What was the employer of the parent of ($x | Person_NP)??", "What was the employer of the parents of ($x | Person_NP)??", "What were the employers of the parent of ($x | Person_NP)??", "What were the employers of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "937",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the king of ($x | Legislature_NP)?.", "Give me all employers of the kings of ($x | Legislature_NP)?.", "List all the employers of the king of ($x | Legislature_NP)?.", "List all the employers of the kings of ($x | Legislature_NP)?.", "show me all employers of the king of ($x | Legislature_NP)?.", "show me all employers of the kings of ($x | Legislature_NP)?.", "What are the employers of the king of ($x | Legislature_NP)??", "What are the employers of the kings of ($x | Legislature_NP)??", "What is the employer of the king of ($x | Legislature_NP)??", "What is the employer of the kings of ($x | Legislature_NP)??", "What was the employer of the king of ($x | Legislature_NP)??", "What was the employer of the kings of ($x | Legislature_NP)??", "What were the employers of the king of ($x | Legislature_NP)??", "What were the employers of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "938",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all employers of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the employers of the coach of ($x | IceHockeyLeague_NP)?.", "List all the employers of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all employers of the coach of ($x | IceHockeyLeague_NP)?.", "show me all employers of the coaches of ($x | IceHockeyLeague_NP)?.", "What are the employers of the coach of ($x | IceHockeyLeague_NP)??", "What are the employers of the coaches of ($x | IceHockeyLeague_NP)??", "What is the employer of the coach of ($x | IceHockeyLeague_NP)??", "What is the employer of the coaches of ($x | IceHockeyLeague_NP)??", "What was the employer of the coach of ($x | IceHockeyLeague_NP)??", "What was the employer of the coaches of ($x | IceHockeyLeague_NP)??", "What were the employers of the coach of ($x | IceHockeyLeague_NP)??", "What were the employers of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "939",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the coach of ($x | HockeyTeam_NP)?.", "Give me all employers of the coaches of ($x | HockeyTeam_NP)?.", "List all the employers of the coach of ($x | HockeyTeam_NP)?.", "List all the employers of the coaches of ($x | HockeyTeam_NP)?.", "show me all employers of the coach of ($x | HockeyTeam_NP)?.", "show me all employers of the coaches of ($x | HockeyTeam_NP)?.", "What are the employers of the coach of ($x | HockeyTeam_NP)??", "What are the employers of the coaches of ($x | HockeyTeam_NP)??", "What is the employer of the coach of ($x | HockeyTeam_NP)??", "What is the employer of the coaches of ($x | HockeyTeam_NP)??", "What was the employer of the coach of ($x | HockeyTeam_NP)??", "What was the employer of the coaches of ($x | HockeyTeam_NP)??", "What were the employers of the coach of ($x | HockeyTeam_NP)??", "What were the employers of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "940",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the employers of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all employers of the alter ego of ($x | ComicsCharacter_NP)?.", "What are the employers of the alter ego of ($x | ComicsCharacter_NP)??", "What is the employer of the alter ego of ($x | ComicsCharacter_NP)??", "What was the employer of the alter ego of ($x | ComicsCharacter_NP)??", "What were the employers of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "941",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the author of ($x | Work_NP)?.", "Give me all employers of the authors of ($x | Work_NP)?.", "List all the employers of the author of ($x | Work_NP)?.", "List all the employers of the authors of ($x | Work_NP)?.", "show me all employers of the author of ($x | Work_NP)?.", "show me all employers of the authors of ($x | Work_NP)?.", "What are the employers of the author of ($x | Work_NP)??", "What are the employers of the authors of ($x | Work_NP)??", "What is the employer of the author of ($x | Work_NP)??", "What is the employer of the authors of ($x | Work_NP)??", "What was the employer of the author of ($x | Work_NP)??", "What was the employer of the authors of ($x | Work_NP)??", "What were the employers of the author of ($x | Work_NP)??", "What were the employers of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "942",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the mayor of ($x | Settlement_NP)?.", "Give me all employers of the mayors of ($x | Settlement_NP)?.", "List all the employers of the mayor of ($x | Settlement_NP)?.", "List all the employers of the mayors of ($x | Settlement_NP)?.", "show me all employers of the mayor of ($x | Settlement_NP)?.", "show me all employers of the mayors of ($x | Settlement_NP)?.", "What are the employers of the mayor of ($x | Settlement_NP)??", "What are the employers of the mayors of ($x | Settlement_NP)??", "What is the employer of the mayor of ($x | Settlement_NP)??", "What is the employer of the mayors of ($x | Settlement_NP)??", "What was the employer of the mayor of ($x | Settlement_NP)??", "What was the employer of the mayors of ($x | Settlement_NP)??", "What were the employers of the mayor of ($x | Settlement_NP)??", "What were the employers of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "943",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the music by ($x | Musical_NP)?.", "Give me all employers of the musics by ($x | Musical_NP)?.", "List all the employers of the music by ($x | Musical_NP)?.", "List all the employers of the musics by ($x | Musical_NP)?.", "show me all employers of the music by ($x | Musical_NP)?.", "show me all employers of the musics by ($x | Musical_NP)?.", "What are the employers of the music by ($x | Musical_NP)??", "What are the employers of the musics by ($x | Musical_NP)??", "What is the employer of the music by ($x | Musical_NP)??", "What is the employer of the musics by ($x | Musical_NP)??", "What was the employer of the music by ($x | Musical_NP)??", "What was the employer of the musics by ($x | Musical_NP)??", "What were the employers of the music by ($x | Musical_NP)??", "What were the employers of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "944",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the foundation series of ($x | TelevisionShow_NP)?.", "List all the employers of the foundation series of ($x | TelevisionShow_NP)?.", "show me all employers of the foundation series of ($x | TelevisionShow_NP)?.", "What are the employers of the foundation series of ($x | TelevisionShow_NP)??", "What is the employer of the foundation series of ($x | TelevisionShow_NP)??", "What was the employer of the foundation series of ($x | TelevisionShow_NP)??", "What were the employers of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "945",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the creator of ($x | FictionalCharacter_NP)?.", "Give me all employers of the creators of ($x | FictionalCharacter_NP)?.", "List all the employers of the creator of ($x | FictionalCharacter_NP)?.", "List all the employers of the creators of ($x | FictionalCharacter_NP)?.", "show me all employers of the creator of ($x | FictionalCharacter_NP)?.", "show me all employers of the creators of ($x | FictionalCharacter_NP)?.", "What are the employers of the creator of ($x | FictionalCharacter_NP)??", "What are the employers of the creators of ($x | FictionalCharacter_NP)??", "What is the employer of the creator of ($x | FictionalCharacter_NP)??", "What is the employer of the creators of ($x | FictionalCharacter_NP)??", "What was the employer of the creator of ($x | FictionalCharacter_NP)??", "What was the employer of the creators of ($x | FictionalCharacter_NP)??", "What were the employers of the creator of ($x | FictionalCharacter_NP)??", "What were the employers of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "946",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the influencer of ($x | Person_NP)?.", "Give me all employers of the influencers of ($x | Person_NP)?.", "List all the employers of the influencer of ($x | Person_NP)?.", "List all the employers of the influencers of ($x | Person_NP)?.", "show me all employers of the influencer of ($x | Person_NP)?.", "show me all employers of the influencers of ($x | Person_NP)?.", "What are the employers of the influencer of ($x | Person_NP)??", "What are the employers of the influencers of ($x | Person_NP)??", "What is the employer of the influencer of ($x | Person_NP)??", "What is the employer of the influencers of ($x | Person_NP)??", "What was the employer of the influencer of ($x | Person_NP)??", "What was the employer of the influencers of ($x | Person_NP)??", "What were the employers of the influencer of ($x | Person_NP)??", "What were the employers of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "947",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the wife of ($x | Person_NP)?.", "Give me all employers of the wives of ($x | Person_NP)?.", "List all the employers of the wife of ($x | Person_NP)?.", "List all the employers of the wives of ($x | Person_NP)?.", "show me all employers of the wife of ($x | Person_NP)?.", "show me all employers of the wives of ($x | Person_NP)?.", "What are the employers of the wife of ($x | Person_NP)??", "What are the employers of the wives of ($x | Person_NP)??", "What is the employer of the wife of ($x | Person_NP)??", "What is the employer of the wives of ($x | Person_NP)??", "What was the employer of the wife of ($x | Person_NP)??", "What was the employer of the wives of ($x | Person_NP)??", "What were the employers of the wife of ($x | Person_NP)??", "What were the employers of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "948",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all employers of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the employers of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the employers of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all employers of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all employers of the doctoral supervisors of ($x | Scientist_NP)?.", "What are the employers of the doctoral supervisor of ($x | Scientist_NP)??", "What are the employers of the doctoral supervisors of ($x | Scientist_NP)??", "What is the employer of the doctoral supervisor of ($x | Scientist_NP)??", "What is the employer of the doctoral supervisors of ($x | Scientist_NP)??", "What was the employer of the doctoral supervisor of ($x | Scientist_NP)??", "What was the employer of the doctoral supervisors of ($x | Scientist_NP)??", "What were the employers of the doctoral supervisor of ($x | Scientist_NP)??", "What were the employers of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "949",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the host of ($x | TelevisionShow_NP)?.", "Give me all employers of the hosts of ($x | TelevisionShow_NP)?.", "List all the employers of the host of ($x | TelevisionShow_NP)?.", "List all the employers of the hosts of ($x | TelevisionShow_NP)?.", "show me all employers of the host of ($x | TelevisionShow_NP)?.", "show me all employers of the hosts of ($x | TelevisionShow_NP)?.", "What are the employers of the host of ($x | TelevisionShow_NP)??", "What are the employers of the hosts of ($x | TelevisionShow_NP)??", "What is the employer of the host of ($x | TelevisionShow_NP)??", "What is the employer of the hosts of ($x | TelevisionShow_NP)??", "What was the employer of the host of ($x | TelevisionShow_NP)??", "What was the employer of the hosts of ($x | TelevisionShow_NP)??", "What were the employers of the host of ($x | TelevisionShow_NP)??", "What were the employers of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "950",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the residence of ($x | Place_NP)?.", "Give me all employers of the residences of ($x | Place_NP)?.", "List all the employers of the residence of ($x | Place_NP)?.", "List all the employers of the residences of ($x | Place_NP)?.", "show me all employers of the residence of ($x | Place_NP)?.", "show me all employers of the residences of ($x | Place_NP)?.", "What are the employers of the residence of ($x | Place_NP)??", "What are the employers of the residences of ($x | Place_NP)??", "What is the employer of the residence of ($x | Place_NP)??", "What is the employer of the residences of ($x | Place_NP)??", "What was the employer of the residence of ($x | Place_NP)??", "What was the employer of the residences of ($x | Place_NP)??", "What were the employers of the residence of ($x | Place_NP)??", "What were the employers of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "951",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the daughter of ($x | Person_NP)?.", "Give me all employers of the daughters of ($x | Person_NP)?.", "List all the employers of the daughter of ($x | Person_NP)?.", "List all the employers of the daughters of ($x | Person_NP)?.", "show me all employers of the daughter of ($x | Person_NP)?.", "show me all employers of the daughters of ($x | Person_NP)?.", "What are the employers of the daughter of ($x | Person_NP)??", "What are the employers of the daughters of ($x | Person_NP)??", "What is the employer of the daughter of ($x | Person_NP)??", "What is the employer of the daughters of ($x | Person_NP)??", "What was the employer of the daughter of ($x | Person_NP)??", "What was the employer of the daughters of ($x | Person_NP)??", "What were the employers of the daughter of ($x | Person_NP)??", "What were the employers of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "952",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the successor of ($x | Politician_NP)?.", "List all the employers of the successor of ($x | Politician_NP)?.", "show me all employers of the successor of ($x | Politician_NP)?.", "What are the employers of the successor of ($x | Politician_NP)??", "What is the employer of the successor of ($x | Politician_NP)??", "What was the employer of the successor of ($x | Politician_NP)??", "What were the employers of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "953",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the child of ($x | Person_NP)?.", "Give me all employers of the children of ($x | Person_NP)?.", "List all the employers of the child of ($x | Person_NP)?.", "List all the employers of the children of ($x | Person_NP)?.", "show me all employers of the child of ($x | Person_NP)?.", "show me all employers of the children of ($x | Person_NP)?.", "What are the employers of the child of ($x | Person_NP)??", "What are the employers of the children of ($x | Person_NP)??", "What is the employer of the child of ($x | Person_NP)??", "What is the employer of the children of ($x | Person_NP)??", "What was the employer of the child of ($x | Person_NP)??", "What was the employer of the children of ($x | Person_NP)??", "What were the employers of the child of ($x | Person_NP)??", "What were the employers of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "954",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the governor of ($x | Person_NP)?.", "Give me all employers of the governors of ($x | Person_NP)?.", "List all the employers of the governor of ($x | Person_NP)?.", "List all the employers of the governors of ($x | Person_NP)?.", "show me all employers of the governor of ($x | Person_NP)?.", "show me all employers of the governors of ($x | Person_NP)?.", "What are the employers of the governor of ($x | Person_NP)??", "What are the employers of the governors of ($x | Person_NP)??", "What is the employer of the governor of ($x | Person_NP)??", "What is the employer of the governors of ($x | Person_NP)??", "What was the employer of the governor of ($x | Person_NP)??", "What was the employer of the governors of ($x | Person_NP)??", "What were the employers of the governor of ($x | Person_NP)??", "What were the employers of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "955",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the music composer of ($x | TelevisionShow_NP)?.", "Give me all employers of the music composers of ($x | TelevisionShow_NP)?.", "List all the employers of the music composer of ($x | TelevisionShow_NP)?.", "List all the employers of the music composers of ($x | TelevisionShow_NP)?.", "show me all employers of the music composer of ($x | TelevisionShow_NP)?.", "show me all employers of the music composers of ($x | TelevisionShow_NP)?.", "What are the employers of the music composer of ($x | TelevisionShow_NP)??", "What are the employers of the music composers of ($x | TelevisionShow_NP)??", "What is the employer of the music composer of ($x | TelevisionShow_NP)??", "What is the employer of the music composers of ($x | TelevisionShow_NP)??", "What was the employer of the music composer of ($x | TelevisionShow_NP)??", "What was the employer of the music composers of ($x | TelevisionShow_NP)??", "What were the employers of the music composer of ($x | TelevisionShow_NP)??", "What were the employers of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "956",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the first to climb  ($x | Mountain_NP)?.", "List all the employers of the first to climb  ($x | Mountain_NP)?.", "show me all employers of the first to climb  ($x | Mountain_NP)?.", "What are the employers of the first to climb  ($x | Mountain_NP)??", "What is the employer of the first to climb  ($x | Mountain_NP)??", "What was the employer of the first to climb  ($x | Mountain_NP)??", "What were the employers of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "957",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the father of ($x | Royalty_NP)?.", "List all the employers of the father of ($x | Royalty_NP)?.", "show me all employers of the father of ($x | Royalty_NP)?.", "What are the employers of the father of ($x | Royalty_NP)??", "What is the employer of the father of ($x | Royalty_NP)??", "What was the employer of the father of ($x | Royalty_NP)??", "What were the employers of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "958",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the music composer of ($x | TelevisionShow_NP)?.", "Give me all employers of the music composers of ($x | TelevisionShow_NP)?.", "List all the employers of the music composer of ($x | TelevisionShow_NP)?.", "List all the employers of the music composers of ($x | TelevisionShow_NP)?.", "show me all employers of the music composer of ($x | TelevisionShow_NP)?.", "show me all employers of the music composers of ($x | TelevisionShow_NP)?.", "What are the employers of the music composer of ($x | TelevisionShow_NP)??", "What are the employers of the music composers of ($x | TelevisionShow_NP)??", "What is the employer of the music composer of ($x | TelevisionShow_NP)??", "What is the employer of the music composers of ($x | TelevisionShow_NP)??", "What was the employer of the music composer of ($x | TelevisionShow_NP)??", "What was the employer of the music composers of ($x | TelevisionShow_NP)??", "What were the employers of the music composer of ($x | TelevisionShow_NP)??", "What were the employers of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "959",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the son of ($x | Person_NP)?.", "Give me all employers of the sons of ($x | Person_NP)?.", "List all the employers of the son of ($x | Person_NP)?.", "List all the employers of the sons of ($x | Person_NP)?.", "show me all employers of the son of ($x | Person_NP)?.", "show me all employers of the sons of ($x | Person_NP)?.", "What are the employers of the son of ($x | Person_NP)??", "What are the employers of the sons of ($x | Person_NP)??", "What is the employer of the son of ($x | Person_NP)??", "What is the employer of the sons of ($x | Person_NP)??", "What was the employer of the son of ($x | Person_NP)??", "What was the employer of the sons of ($x | Person_NP)??", "What were the employers of the son of ($x | Person_NP)??", "What were the employers of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "960",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the son of ($x | Person_NP)?.", "Give me all employers of the sons of ($x | Person_NP)?.", "List all the employers of the son of ($x | Person_NP)?.", "List all the employers of the sons of ($x | Person_NP)?.", "show me all employers of the son of ($x | Person_NP)?.", "show me all employers of the sons of ($x | Person_NP)?.", "What are the employers of the son of ($x | Person_NP)??", "What are the employers of the sons of ($x | Person_NP)??", "What is the employer of the son of ($x | Person_NP)??", "What is the employer of the sons of ($x | Person_NP)??", "What was the employer of the son of ($x | Person_NP)??", "What was the employer of the sons of ($x | Person_NP)??", "What were the employers of the son of ($x | Person_NP)??", "What were the employers of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "961",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of the mayor of ($x | City_NP)?.", "Give me all employers of the mayors of ($x | City_NP)?.", "List all the employers of the mayor of ($x | City_NP)?.", "List all the employers of the mayors of ($x | City_NP)?.", "show me all employers of the mayor of ($x | City_NP)?.", "show me all employers of the mayors of ($x | City_NP)?.", "What are the employers of the mayor of ($x | City_NP)??", "What are the employers of the mayors of ($x | City_NP)??", "What is the employer of the mayor of ($x | City_NP)??", "What is the employer of the mayors of ($x | City_NP)??", "What was the employer of the mayor of ($x | City_NP)??", "What was the employer of the mayors of ($x | City_NP)??", "What were the employers of the mayor of ($x | City_NP)??", "What were the employers of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "962",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the editor of ($x | Work_NP)? have?", "How many employer does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "963",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the parent of ($x | Person_NP)? have?", "How many employer does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "964",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the king of ($x | Legislature_NP)? have?", "How many employer does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "965",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the coach of ($x | IceHockeyLeague_NP)? have?", "How many employer does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "966",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the coach of ($x | HockeyTeam_NP)? have?", "How many employer does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "967",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "968",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the author of ($x | Work_NP)? have?", "How many employer does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "969",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the mayor of ($x | Settlement_NP)? have?", "How many employer does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "970",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the music by ($x | Musical_NP)? have?", "How many employer does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "971",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "972",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the creator of ($x | FictionalCharacter_NP)? have?", "How many employer does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "973",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the influencer of ($x | Person_NP)? have?", "How many employer does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "974",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the wife of ($x | Person_NP)? have?", "How many employer does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "975",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many employer does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "976",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the host of ($x | TelevisionShow_NP)? have?", "How many employer does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "977",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the residence of ($x | Place_NP)? have?", "How many employer does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "978",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the daughter of ($x | Person_NP)? have?", "How many employer does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "979",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "980",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the child of ($x | Person_NP)? have?", "How many employer does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "981",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the governor of ($x | Person_NP)? have?", "How many employer does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "982",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the music composer of ($x | TelevisionShow_NP)? have?", "How many employer does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "983",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "984",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "985",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the music composer of ($x | TelevisionShow_NP)? have?", "How many employer does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "986",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the son of ($x | Person_NP)? have?", "How many employer does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "987",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the son of ($x | Person_NP)? have?", "How many employer does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "988",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many employer does the mayor of ($x | City_NP)? have?", "How many employer does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "989",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the isbn of ($x | Book_NP)?.", "Give me all first Air Dates of the isbns of ($x | Book_NP)?.", "List all the first Air Dates of the isbn of ($x | Book_NP)?.", "List all the first Air Dates of the isbns of ($x | Book_NP)?.", "show me all first Air Dates of the isbn of ($x | Book_NP)?.", "show me all first Air Dates of the isbns of ($x | Book_NP)?.", "What are the first Air Dates of the isbn of ($x | Book_NP)??", "What are the first Air Dates of the isbns of ($x | Book_NP)??", "What is the first Air Date of the isbn of ($x | Book_NP)??", "What is the first Air Date of the isbns of ($x | Book_NP)??", "What was the first Air Date of the isbn of ($x | Book_NP)??", "What was the first Air Date of the isbns of ($x | Book_NP)??", "What were the first Air Dates of the isbn of ($x | Book_NP)??", "What were the first Air Dates of the isbns of ($x | Book_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "990",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the president of ($x | Person_NP)?.", "Give me all first Air Dates of the presidents of ($x | Person_NP)?.", "List all the first Air Dates of the president of ($x | Person_NP)?.", "List all the first Air Dates of the presidents of ($x | Person_NP)?.", "show me all first Air Dates of the president of ($x | Person_NP)?.", "show me all first Air Dates of the presidents of ($x | Person_NP)?.", "What are the first Air Dates of the president of ($x | Person_NP)??", "What are the first Air Dates of the presidents of ($x | Person_NP)??", "What is the first Air Date of the president of ($x | Person_NP)??", "What is the first Air Date of the presidents of ($x | Person_NP)??", "What was the first Air Date of the president of ($x | Person_NP)??", "What was the first Air Date of the presidents of ($x | Person_NP)??", "What were the first Air Dates of the president of ($x | Person_NP)??", "What were the first Air Dates of the presidents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "991",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the parties of ($x | Politician_NP)?.", "Give me all first Air Dates of the party of ($x | Politician_NP)?.", "List all the first Air Dates of the parties of ($x | Politician_NP)?.", "List all the first Air Dates of the party of ($x | Politician_NP)?.", "show me all first Air Dates of the parties of ($x | Politician_NP)?.", "show me all first Air Dates of the party of ($x | Politician_NP)?.", "What are the first Air Dates of the parties of ($x | Politician_NP)??", "What are the first Air Dates of the party of ($x | Politician_NP)??", "What is the first Air Date of the parties of ($x | Politician_NP)??", "What is the first Air Date of the party of ($x | Politician_NP)??", "What was the first Air Date of the parties of ($x | Politician_NP)??", "What was the first Air Date of the party of ($x | Politician_NP)??", "What were the first Air Dates of the parties of ($x | Politician_NP)??", "What were the first Air Dates of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "992",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the parties of ($x | Politician_NP)?.", "Give me all first Air Dates of the party of ($x | Politician_NP)?.", "List all the first Air Dates of the parties of ($x | Politician_NP)?.", "List all the first Air Dates of the party of ($x | Politician_NP)?.", "show me all first Air Dates of the parties of ($x | Politician_NP)?.", "show me all first Air Dates of the party of ($x | Politician_NP)?.", "What are the first Air Dates of the parties of ($x | Politician_NP)??", "What are the first Air Dates of the party of ($x | Politician_NP)??", "What is the first Air Date of the parties of ($x | Politician_NP)??", "What is the first Air Date of the party of ($x | Politician_NP)??", "What was the first Air Date of the parties of ($x | Politician_NP)??", "What was the first Air Date of the party of ($x | Politician_NP)??", "What were the first Air Dates of the parties of ($x | Politician_NP)??", "What were the first Air Dates of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "993",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the artistic movement of ($x | Artist_NP)?.", "Give me all first Air Dates of the artistic movements of ($x | Artist_NP)?.", "List all the first Air Dates of the artistic movement of ($x | Artist_NP)?.", "List all the first Air Dates of the artistic movements of ($x | Artist_NP)?.", "show me all first Air Dates of the artistic movement of ($x | Artist_NP)?.", "show me all first Air Dates of the artistic movements of ($x | Artist_NP)?.", "What are the first Air Dates of the artistic movement of ($x | Artist_NP)??", "What are the first Air Dates of the artistic movements of ($x | Artist_NP)??", "What is the first Air Date of the artistic movement of ($x | Artist_NP)??", "What is the first Air Date of the artistic movements of ($x | Artist_NP)??", "What was the first Air Date of the artistic movement of ($x | Artist_NP)??", "What was the first Air Date of the artistic movements of ($x | Artist_NP)??", "What were the first Air Dates of the artistic movement of ($x | Artist_NP)??", "What were the first Air Dates of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "994",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the artistic movement of ($x | Artist_NP)?.", "Give me all first Air Dates of the artistic movements of ($x | Artist_NP)?.", "List all the first Air Dates of the artistic movement of ($x | Artist_NP)?.", "List all the first Air Dates of the artistic movements of ($x | Artist_NP)?.", "show me all first Air Dates of the artistic movement of ($x | Artist_NP)?.", "show me all first Air Dates of the artistic movements of ($x | Artist_NP)?.", "What are the first Air Dates of the artistic movement of ($x | Artist_NP)??", "What are the first Air Dates of the artistic movements of ($x | Artist_NP)??", "What is the first Air Date of the artistic movement of ($x | Artist_NP)??", "What is the first Air Date of the artistic movements of ($x | Artist_NP)??", "What was the first Air Date of the artistic movement of ($x | Artist_NP)??", "What was the first Air Date of the artistic movements of ($x | Artist_NP)??", "What were the first Air Dates of the artistic movement of ($x | Artist_NP)??", "What were the first Air Dates of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "995",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the record label of ($x | Genre_NP)?.", "Give me all first Air Dates of the record labels of ($x | Genre_NP)?.", "List all the first Air Dates of the record label of ($x | Genre_NP)?.", "List all the first Air Dates of the record labels of ($x | Genre_NP)?.", "show me all first Air Dates of the record label of ($x | Genre_NP)?.", "show me all first Air Dates of the record labels of ($x | Genre_NP)?.", "What are the first Air Dates of the record label of ($x | Genre_NP)??", "What are the first Air Dates of the record labels of ($x | Genre_NP)??", "What is the first Air Date of the record label of ($x | Genre_NP)??", "What is the first Air Date of the record labels of ($x | Genre_NP)??", "What was the first Air Date of the record label of ($x | Genre_NP)??", "What was the first Air Date of the record labels of ($x | Genre_NP)??", "What were the first Air Dates of the record label of ($x | Genre_NP)??", "What were the first Air Dates of the record labels of ($x | Genre_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "996",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the autobiography of ($x | Thing_NP)?.", "List all the first Air Dates of the autobiography of ($x | Thing_NP)?.", "show me all first Air Dates of the autobiography of ($x | Thing_NP)?.", "What are the first Air Dates of the autobiography of ($x | Thing_NP)??", "What is the first Air Date of the autobiography of ($x | Thing_NP)??", "What was the first Air Date of the autobiography of ($x | Thing_NP)??", "What were the first Air Dates of the autobiography of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "997",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the resting place of ($x | Person_NP)?.", "List all the first Air Dates of the resting place of ($x | Person_NP)?.", "show me all first Air Dates of the resting place of ($x | Person_NP)?.", "What are the first Air Dates of the resting place of ($x | Person_NP)??", "What is the first Air Date of the resting place of ($x | Person_NP)??", "What was the first Air Date of the resting place of ($x | Person_NP)??", "What were the first Air Dates of the resting place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "998",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the time zone of ($x | City_NP)?.", "Give me all first Air Dates of the time zones of ($x | City_NP)?.", "List all the first Air Dates of the time zone of ($x | City_NP)?.", "List all the first Air Dates of the time zones of ($x | City_NP)?.", "show me all first Air Dates of the time zone of ($x | City_NP)?.", "show me all first Air Dates of the time zones of ($x | City_NP)?.", "What are the first Air Dates of the time zone of ($x | City_NP)??", "What are the first Air Dates of the time zones of ($x | City_NP)??", "What is the first Air Date of the time zone of ($x | City_NP)??", "What is the first Air Date of the time zones of ($x | City_NP)??", "What was the first Air Date of the time zone of ($x | City_NP)??", "What was the first Air Date of the time zones of ($x | City_NP)??", "What were the first Air Dates of the time zone of ($x | City_NP)??", "What were the first Air Dates of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "999",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the time zone of ($x | City_NP)?.", "Give me all first Air Dates of the time zones of ($x | City_NP)?.", "List all the first Air Dates of the time zone of ($x | City_NP)?.", "List all the first Air Dates of the time zones of ($x | City_NP)?.", "show me all first Air Dates of the time zone of ($x | City_NP)?.", "show me all first Air Dates of the time zones of ($x | City_NP)?.", "What are the first Air Dates of the time zone of ($x | City_NP)??", "What are the first Air Dates of the time zones of ($x | City_NP)??", "What is the first Air Date of the time zone of ($x | City_NP)??", "What is the first Air Date of the time zones of ($x | City_NP)??", "What was the first Air Date of the time zone of ($x | City_NP)??", "What was the first Air Date of the time zones of ($x | City_NP)??", "What were the first Air Dates of the time zone of ($x | City_NP)??", "What were the first Air Dates of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1000",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the cause of death of ($x | Person_NP)?.", "Give me all first Air Dates of the causes of death of ($x | Person_NP)?.", "List all the first Air Dates of the cause of death of ($x | Person_NP)?.", "List all the first Air Dates of the causes of death of ($x | Person_NP)?.", "show me all first Air Dates of the cause of death of ($x | Person_NP)?.", "show me all first Air Dates of the causes of death of ($x | Person_NP)?.", "What are the first Air Dates of the cause of death of ($x | Person_NP)??", "What are the first Air Dates of the causes of death of ($x | Person_NP)??", "What is the first Air Date of the cause of death of ($x | Person_NP)??", "What is the first Air Date of the causes of death of ($x | Person_NP)??", "What was the first Air Date of the cause of death of ($x | Person_NP)??", "What was the first Air Date of the causes of death of ($x | Person_NP)??", "What were the first Air Dates of the cause of death of ($x | Person_NP)??", "What were the first Air Dates of the causes of death of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1001",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the religion of ($x | Person_NP)?.", "List all the first Air Dates of the religion of ($x | Person_NP)?.", "show me all first Air Dates of the religion of ($x | Person_NP)?.", "What are the first Air Dates of the religion of ($x | Person_NP)??", "What is the first Air Date of the religion of ($x | Person_NP)??", "What was the first Air Date of the religion of ($x | Person_NP)??", "What were the first Air Dates of the religion of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1002",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the area code of ($x | City_NP)?.", "List all the first Air Dates of the area code of ($x | City_NP)?.", "show me all first Air Dates of the area code of ($x | City_NP)?.", "What are the first Air Dates of the area code of ($x | City_NP)??", "What is the first Air Date of the area code of ($x | City_NP)??", "What was the first Air Date of the area code of ($x | City_NP)??", "What were the first Air Dates of the area code of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1003",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the address of ($x | ArchitecturalStructure_NP)?.", "Give me all first Air Dates of the addresses of ($x | ArchitecturalStructure_NP)?.", "List all the first Air Dates of the address of ($x | ArchitecturalStructure_NP)?.", "List all the first Air Dates of the addresses of ($x | ArchitecturalStructure_NP)?.", "show me all first Air Dates of the address of ($x | ArchitecturalStructure_NP)?.", "show me all first Air Dates of the addresses of ($x | ArchitecturalStructure_NP)?.", "What are the first Air Dates of the address of ($x | ArchitecturalStructure_NP)??", "What are the first Air Dates of the addresses of ($x | ArchitecturalStructure_NP)??", "What is the first Air Date of the address of ($x | ArchitecturalStructure_NP)??", "What is the first Air Date of the addresses of ($x | ArchitecturalStructure_NP)??", "What was the first Air Date of the address of ($x | ArchitecturalStructure_NP)??", "What was the first Air Date of the addresses of ($x | ArchitecturalStructure_NP)??", "What were the first Air Dates of the address of ($x | ArchitecturalStructure_NP)??", "What were the first Air Dates of the addresses of ($x | ArchitecturalStructure_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1004",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the ingredient of ($x | Food_NP)?.", "Give me all first Air Dates of the ingredients of ($x | Food_NP)?.", "List all the first Air Dates of the ingredient of ($x | Food_NP)?.", "List all the first Air Dates of the ingredients of ($x | Food_NP)?.", "show me all first Air Dates of the ingredient of ($x | Food_NP)?.", "show me all first Air Dates of the ingredients of ($x | Food_NP)?.", "What are the first Air Dates of the ingredient of ($x | Food_NP)??", "What are the first Air Dates of the ingredients of ($x | Food_NP)??", "What is the first Air Date of the ingredient of ($x | Food_NP)??", "What is the first Air Date of the ingredients of ($x | Food_NP)??", "What was the first Air Date of the ingredient of ($x | Food_NP)??", "What was the first Air Date of the ingredients of ($x | Food_NP)??", "What were the first Air Dates of the ingredient of ($x | Food_NP)??", "What were the first Air Dates of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1005",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the ingredient of ($x | Food_NP)?.", "Give me all first Air Dates of the ingredients of ($x | Food_NP)?.", "List all the first Air Dates of the ingredient of ($x | Food_NP)?.", "List all the first Air Dates of the ingredients of ($x | Food_NP)?.", "show me all first Air Dates of the ingredient of ($x | Food_NP)?.", "show me all first Air Dates of the ingredients of ($x | Food_NP)?.", "What are the first Air Dates of the ingredient of ($x | Food_NP)??", "What are the first Air Dates of the ingredients of ($x | Food_NP)??", "What is the first Air Date of the ingredient of ($x | Food_NP)??", "What is the first Air Date of the ingredients of ($x | Food_NP)??", "What was the first Air Date of the ingredient of ($x | Food_NP)??", "What was the first Air Date of the ingredients of ($x | Food_NP)??", "What were the first Air Dates of the ingredient of ($x | Food_NP)??", "What were the first Air Dates of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1006",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the nickname of ($x | City_NP)?.", "Give me all first Air Dates of the nicknames of ($x | City_NP)?.", "List all the first Air Dates of the nickname of ($x | City_NP)?.", "List all the first Air Dates of the nicknames of ($x | City_NP)?.", "show me all first Air Dates of the nickname of ($x | City_NP)?.", "show me all first Air Dates of the nicknames of ($x | City_NP)?.", "What are the first Air Dates of the nickname of ($x | City_NP)??", "What are the first Air Dates of the nicknames of ($x | City_NP)??", "What is the first Air Date of the nickname of ($x | City_NP)??", "What is the first Air Date of the nicknames of ($x | City_NP)??", "What was the first Air Date of the nickname of ($x | City_NP)??", "What was the first Air Date of the nicknames of ($x | City_NP)??", "What were the first Air Dates of the nickname of ($x | City_NP)??", "What were the first Air Dates of the nicknames of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1007",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of the flag of ($x | Place_NP)?.", "Give me all first Air Dates of the flags of ($x | Place_NP)?.", "List all the first Air Dates of the flag of ($x | Place_NP)?.", "List all the first Air Dates of the flags of ($x | Place_NP)?.", "show me all first Air Dates of the flag of ($x | Place_NP)?.", "show me all first Air Dates of the flags of ($x | Place_NP)?.", "What are the first Air Dates of the flag of ($x | Place_NP)??", "What are the first Air Dates of the flags of ($x | Place_NP)??", "What is the first Air Date of the flag of ($x | Place_NP)??", "What is the first Air Date of the flags of ($x | Place_NP)??", "What was the first Air Date of the flag of ($x | Place_NP)??", "What was the first Air Date of the flags of ($x | Place_NP)??", "What were the first Air Dates of the flag of ($x | Place_NP)??", "What were the first Air Dates of the flags of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1008",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the isbn of ($x | Book_NP)? have?", "How many first Air Date does the isbns of ($x | Book_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1009",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the president of ($x | Person_NP)? have?", "How many first Air Date does the presidents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1010",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the parties of ($x | Politician_NP)? have?", "How many first Air Date does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1011",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the parties of ($x | Politician_NP)? have?", "How many first Air Date does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1012",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the artistic movement of ($x | Artist_NP)? have?", "How many first Air Date does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1013",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the artistic movement of ($x | Artist_NP)? have?", "How many first Air Date does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1014",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the record label of ($x | Genre_NP)? have?", "How many first Air Date does the record labels of ($x | Genre_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1015",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the autobiography of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1016",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the resting place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1017",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the time zone of ($x | City_NP)? have?", "How many first Air Date does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1018",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the time zone of ($x | City_NP)? have?", "How many first Air Date does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1019",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the cause of death of ($x | Person_NP)? have?", "How many first Air Date does the causes of death of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1020",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the religion of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1021",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the area code of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1022",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the address of ($x | ArchitecturalStructure_NP)? have?", "How many first Air Date does the addresses of ($x | ArchitecturalStructure_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1023",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the ingredient of ($x | Food_NP)? have?", "How many first Air Date does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1024",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the ingredient of ($x | Food_NP)? have?", "How many first Air Date does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1025",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the nickname of ($x | City_NP)? have?", "How many first Air Date does the nicknames of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1026",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many first Air Date does the flag of ($x | Place_NP)? have?", "How many first Air Date does the flags of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1027",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of the birth place of ($x | Person_NP)??", "What was the form of government of the birth place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1028",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of the location of ($x | Mountain_NP)??", "What was the form of government of the location of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1029",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of the form of government of ($x | Country_NP)??", "What was the form of government of the form of government of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1030",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of the nationality of ($x | Person_NP)??", "What was the form of government of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1031",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of the resting place of ($x | Person_NP)??", "What is the form of government of the resting places of ($x | Person_NP)??", "What was the form of government of the resting place of ($x | Person_NP)??", "What was the form of government of the resting places of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1032",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of the nationality of ($x | Person_NP)??", "What was the form of government of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1033",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of the largest country of ($x | Country_NP)??", "What was the form of government of the largest country of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1034",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many form of government does the birth place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1035",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many form of government does the location of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1036",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many form of government does the form of government of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1037",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many form of government does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1038",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many form of government does the resting place of ($x | Person_NP)? have?", "How many form of government does the resting places of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1039",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many form of government does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1040",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many form of government does the largest country of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1041",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the largest city of ($x | Country_NP)?.", "List all the time zones of the largest city of ($x | Country_NP)?.", "show me all time zones of the largest city of ($x | Country_NP)?.", "What are the time zones of the largest city of ($x | Country_NP)??", "What is the time zone of the largest city of ($x | Country_NP)??", "What was the time zone of the largest city of ($x | Country_NP)??", "What were the time zones of the largest city of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1042",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the capital of ($x | Country_NP)?.", "List all the time zones of the capital of ($x | Country_NP)?.", "show me all time zones of the capital of ($x | Country_NP)?.", "What are the time zones of the capital of ($x | Country_NP)??", "What is the time zone of the capital of ($x | Country_NP)??", "What was the time zone of the capital of ($x | Country_NP)??", "What were the time zones of the capital of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1043",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the cities in ($x | AdministrativeRegion_NP)?.", "Give me all time zones of the city in ($x | AdministrativeRegion_NP)?.", "List all the time zones of the cities in ($x | AdministrativeRegion_NP)?.", "List all the time zones of the city in ($x | AdministrativeRegion_NP)?.", "show me all time zones of the cities in ($x | AdministrativeRegion_NP)?.", "show me all time zones of the city in ($x | AdministrativeRegion_NP)?.", "What are the time zones of the cities in ($x | AdministrativeRegion_NP)??", "What are the time zones of the city in ($x | AdministrativeRegion_NP)??", "What is the time zone of the cities in ($x | AdministrativeRegion_NP)??", "What is the time zone of the city in ($x | AdministrativeRegion_NP)??", "What was the time zone of the cities in ($x | AdministrativeRegion_NP)??", "What was the time zone of the city in ($x | AdministrativeRegion_NP)??", "What were the time zones of the cities in ($x | AdministrativeRegion_NP)??", "What were the time zones of the city in ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1044",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the residence of ($x | Person_NP)?.", "Give me all time zones of the residences of ($x | Person_NP)?.", "List all the time zones of the residence of ($x | Person_NP)?.", "List all the time zones of the residences of ($x | Person_NP)?.", "show me all time zones of the residence of ($x | Person_NP)?.", "show me all time zones of the residences of ($x | Person_NP)?.", "What are the time zones of the residence of ($x | Person_NP)??", "What are the time zones of the residences of ($x | Person_NP)??", "What is the time zone of the residence of ($x | Person_NP)??", "What is the time zone of the residences of ($x | Person_NP)??", "What was the time zone of the residence of ($x | Person_NP)??", "What was the time zone of the residences of ($x | Person_NP)??", "What were the time zones of the residence of ($x | Person_NP)??", "What were the time zones of the residences of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1045",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the headquarter of ($x | Building_NP)?.", "List all the time zones of the headquarter of ($x | Building_NP)?.", "show me all time zones of the headquarter of ($x | Building_NP)?.", "What are the time zones of the headquarter of ($x | Building_NP)??", "What is the time zone of the headquarter of ($x | Building_NP)??", "What was the time zone of the headquarter of ($x | Building_NP)??", "What were the time zones of the headquarter of ($x | Building_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1046",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the foundation place of ($x | Company_NP)?.", "List all the time zones of the foundation place of ($x | Company_NP)?.", "show me all time zones of the foundation place of ($x | Company_NP)?.", "What are the time zones of the foundation place of ($x | Company_NP)??", "What is the time zone of the foundation place of ($x | Company_NP)??", "What was the time zone of the foundation place of ($x | Company_NP)??", "What were the time zones of the foundation place of ($x | Company_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1047",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the cities of ($x | AdministrativeRegion_NP)?.", "Give me all time zones of the city of ($x | AdministrativeRegion_NP)?.", "List all the time zones of the cities of ($x | AdministrativeRegion_NP)?.", "List all the time zones of the city of ($x | AdministrativeRegion_NP)?.", "show me all time zones of the cities of ($x | AdministrativeRegion_NP)?.", "show me all time zones of the city of ($x | AdministrativeRegion_NP)?.", "What are the time zones of the cities of ($x | AdministrativeRegion_NP)??", "What are the time zones of the city of ($x | AdministrativeRegion_NP)??", "What is the time zone of the cities of ($x | AdministrativeRegion_NP)??", "What is the time zone of the city of ($x | AdministrativeRegion_NP)??", "What was the time zone of the cities of ($x | AdministrativeRegion_NP)??", "What was the time zone of the city of ($x | AdministrativeRegion_NP)??", "What were the time zones of the cities of ($x | AdministrativeRegion_NP)??", "What were the time zones of the city of ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1048",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the largest city of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1049",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the capital of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1050",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the cities in ($x | AdministrativeRegion_NP)? have?", "How many time zone does the city in ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1051",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the residence of ($x | Person_NP)? have?", "How many time zone does the residences of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1052",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the headquarter of ($x | Building_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1053",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the foundation place of ($x | Company_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1054",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the cities of ($x | AdministrativeRegion_NP)? have?", "How many time zone does the city of ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1055",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the largest city of ($x | Country_NP)?.", "List all the time zones of the largest city of ($x | Country_NP)?.", "show me all time zones of the largest city of ($x | Country_NP)?.", "What are the time zones of the largest city of ($x | Country_NP)??", "What is the time zone of the largest city of ($x | Country_NP)??", "What was the time zone of the largest city of ($x | Country_NP)??", "What were the time zones of the largest city of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1056",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the capital of ($x | Country_NP)?.", "List all the time zones of the capital of ($x | Country_NP)?.", "show me all time zones of the capital of ($x | Country_NP)?.", "What are the time zones of the capital of ($x | Country_NP)??", "What is the time zone of the capital of ($x | Country_NP)??", "What was the time zone of the capital of ($x | Country_NP)??", "What were the time zones of the capital of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1057",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the cities in ($x | AdministrativeRegion_NP)?.", "Give me all time zones of the city in ($x | AdministrativeRegion_NP)?.", "List all the time zones of the cities in ($x | AdministrativeRegion_NP)?.", "List all the time zones of the city in ($x | AdministrativeRegion_NP)?.", "show me all time zones of the cities in ($x | AdministrativeRegion_NP)?.", "show me all time zones of the city in ($x | AdministrativeRegion_NP)?.", "What are the time zones of the cities in ($x | AdministrativeRegion_NP)??", "What are the time zones of the city in ($x | AdministrativeRegion_NP)??", "What is the time zone of the cities in ($x | AdministrativeRegion_NP)??", "What is the time zone of the city in ($x | AdministrativeRegion_NP)??", "What was the time zone of the cities in ($x | AdministrativeRegion_NP)??", "What was the time zone of the city in ($x | AdministrativeRegion_NP)??", "What were the time zones of the cities in ($x | AdministrativeRegion_NP)??", "What were the time zones of the city in ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1058",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the residence of ($x | Person_NP)?.", "Give me all time zones of the residences of ($x | Person_NP)?.", "List all the time zones of the residence of ($x | Person_NP)?.", "List all the time zones of the residences of ($x | Person_NP)?.", "show me all time zones of the residence of ($x | Person_NP)?.", "show me all time zones of the residences of ($x | Person_NP)?.", "What are the time zones of the residence of ($x | Person_NP)??", "What are the time zones of the residences of ($x | Person_NP)??", "What is the time zone of the residence of ($x | Person_NP)??", "What is the time zone of the residences of ($x | Person_NP)??", "What was the time zone of the residence of ($x | Person_NP)??", "What was the time zone of the residences of ($x | Person_NP)??", "What were the time zones of the residence of ($x | Person_NP)??", "What were the time zones of the residences of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1059",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the headquarter of ($x | Building_NP)?.", "List all the time zones of the headquarter of ($x | Building_NP)?.", "show me all time zones of the headquarter of ($x | Building_NP)?.", "What are the time zones of the headquarter of ($x | Building_NP)??", "What is the time zone of the headquarter of ($x | Building_NP)??", "What was the time zone of the headquarter of ($x | Building_NP)??", "What were the time zones of the headquarter of ($x | Building_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1060",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the foundation place of ($x | Company_NP)?.", "List all the time zones of the foundation place of ($x | Company_NP)?.", "show me all time zones of the foundation place of ($x | Company_NP)?.", "What are the time zones of the foundation place of ($x | Company_NP)??", "What is the time zone of the foundation place of ($x | Company_NP)??", "What was the time zone of the foundation place of ($x | Company_NP)??", "What were the time zones of the foundation place of ($x | Company_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1061",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of the cities of ($x | AdministrativeRegion_NP)?.", "Give me all time zones of the city of ($x | AdministrativeRegion_NP)?.", "List all the time zones of the cities of ($x | AdministrativeRegion_NP)?.", "List all the time zones of the city of ($x | AdministrativeRegion_NP)?.", "show me all time zones of the cities of ($x | AdministrativeRegion_NP)?.", "show me all time zones of the city of ($x | AdministrativeRegion_NP)?.", "What are the time zones of the cities of ($x | AdministrativeRegion_NP)??", "What are the time zones of the city of ($x | AdministrativeRegion_NP)??", "What is the time zone of the cities of ($x | AdministrativeRegion_NP)??", "What is the time zone of the city of ($x | AdministrativeRegion_NP)??", "What was the time zone of the cities of ($x | AdministrativeRegion_NP)??", "What was the time zone of the city of ($x | AdministrativeRegion_NP)??", "What were the time zones of the cities of ($x | AdministrativeRegion_NP)??", "What were the time zones of the city of ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1062",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the largest city of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1063",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the capital of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1064",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the cities in ($x | AdministrativeRegion_NP)? have?", "How many time zone does the city in ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1065",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the residence of ($x | Person_NP)? have?", "How many time zone does the residences of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1066",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the headquarter of ($x | Building_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1067",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the foundation place of ($x | Company_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1068",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many time zone does the cities of ($x | AdministrativeRegion_NP)? have?", "How many time zone does the city of ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1069",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the editor of ($x | Work_NP)??", "What is the nationality of the editors of ($x | Work_NP)??", "What was the nationality of the editor of ($x | Work_NP)??", "What was the nationality of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1070",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the parent of ($x | Person_NP)??", "What is the nationality of the parents of ($x | Person_NP)??", "What was the nationality of the parent of ($x | Person_NP)??", "What was the nationality of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1071",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the king of ($x | Legislature_NP)??", "What is the nationality of the kings of ($x | Legislature_NP)??", "What was the nationality of the king of ($x | Legislature_NP)??", "What was the nationality of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1072",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the coach of ($x | IceHockeyLeague_NP)??", "What is the nationality of the coaches of ($x | IceHockeyLeague_NP)??", "What was the nationality of the coach of ($x | IceHockeyLeague_NP)??", "What was the nationality of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1073",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the coach of ($x | HockeyTeam_NP)??", "What is the nationality of the coaches of ($x | HockeyTeam_NP)??", "What was the nationality of the coach of ($x | HockeyTeam_NP)??", "What was the nationality of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1074",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the alter ego of ($x | ComicsCharacter_NP)??", "What was the nationality of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1075",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the author of ($x | Work_NP)??", "What is the nationality of the authors of ($x | Work_NP)??", "What was the nationality of the author of ($x | Work_NP)??", "What was the nationality of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1076",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the mayor of ($x | Settlement_NP)??", "What is the nationality of the mayors of ($x | Settlement_NP)??", "What was the nationality of the mayor of ($x | Settlement_NP)??", "What was the nationality of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1077",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the music by ($x | Musical_NP)??", "What is the nationality of the musics by ($x | Musical_NP)??", "What was the nationality of the music by ($x | Musical_NP)??", "What was the nationality of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1078",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the foundation series of ($x | TelevisionShow_NP)??", "What was the nationality of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1079",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the creator of ($x | FictionalCharacter_NP)??", "What is the nationality of the creators of ($x | FictionalCharacter_NP)??", "What was the nationality of the creator of ($x | FictionalCharacter_NP)??", "What was the nationality of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1080",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the influencer of ($x | Person_NP)??", "What is the nationality of the influencers of ($x | Person_NP)??", "What was the nationality of the influencer of ($x | Person_NP)??", "What was the nationality of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1081",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the wife of ($x | Person_NP)??", "What is the nationality of the wives of ($x | Person_NP)??", "What was the nationality of the wife of ($x | Person_NP)??", "What was the nationality of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1082",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the doctoral supervisor of ($x | Scientist_NP)??", "What is the nationality of the doctoral supervisors of ($x | Scientist_NP)??", "What was the nationality of the doctoral supervisor of ($x | Scientist_NP)??", "What was the nationality of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1083",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the host of ($x | TelevisionShow_NP)??", "What is the nationality of the hosts of ($x | TelevisionShow_NP)??", "What was the nationality of the host of ($x | TelevisionShow_NP)??", "What was the nationality of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1084",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the residence of ($x | Place_NP)??", "What is the nationality of the residences of ($x | Place_NP)??", "What was the nationality of the residence of ($x | Place_NP)??", "What was the nationality of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1085",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the daughter of ($x | Person_NP)??", "What is the nationality of the daughters of ($x | Person_NP)??", "What was the nationality of the daughter of ($x | Person_NP)??", "What was the nationality of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1086",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the successor of ($x | Politician_NP)??", "What was the nationality of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1087",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the child of ($x | Person_NP)??", "What is the nationality of the children of ($x | Person_NP)??", "What was the nationality of the child of ($x | Person_NP)??", "What was the nationality of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1088",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the governor of ($x | Person_NP)??", "What is the nationality of the governors of ($x | Person_NP)??", "What was the nationality of the governor of ($x | Person_NP)??", "What was the nationality of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1089",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the music composer of ($x | TelevisionShow_NP)??", "What is the nationality of the music composers of ($x | TelevisionShow_NP)??", "What was the nationality of the music composer of ($x | TelevisionShow_NP)??", "What was the nationality of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1090",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the first to climb  ($x | Mountain_NP)??", "What was the nationality of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1091",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the father of ($x | Royalty_NP)??", "What was the nationality of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1092",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the music composer of ($x | TelevisionShow_NP)??", "What is the nationality of the music composers of ($x | TelevisionShow_NP)??", "What was the nationality of the music composer of ($x | TelevisionShow_NP)??", "What was the nationality of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1093",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the son of ($x | Person_NP)??", "What is the nationality of the sons of ($x | Person_NP)??", "What was the nationality of the son of ($x | Person_NP)??", "What was the nationality of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1094",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the son of ($x | Person_NP)??", "What is the nationality of the sons of ($x | Person_NP)??", "What was the nationality of the son of ($x | Person_NP)??", "What was the nationality of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1095",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the mayor of ($x | City_NP)??", "What is the nationality of the mayors of ($x | City_NP)??", "What was the nationality of the mayor of ($x | City_NP)??", "What was the nationality of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1096",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the editor of ($x | Work_NP)? have?", "How many nationality does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1097",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the parent of ($x | Person_NP)? have?", "How many nationality does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1098",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the king of ($x | Legislature_NP)? have?", "How many nationality does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1099",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the coach of ($x | IceHockeyLeague_NP)? have?", "How many nationality does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1100",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the coach of ($x | HockeyTeam_NP)? have?", "How many nationality does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1101",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1102",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the author of ($x | Work_NP)? have?", "How many nationality does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1103",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the mayor of ($x | Settlement_NP)? have?", "How many nationality does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1104",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the music by ($x | Musical_NP)? have?", "How many nationality does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1105",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1106",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the creator of ($x | FictionalCharacter_NP)? have?", "How many nationality does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1107",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the influencer of ($x | Person_NP)? have?", "How many nationality does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1108",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the wife of ($x | Person_NP)? have?", "How many nationality does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1109",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many nationality does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1110",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the host of ($x | TelevisionShow_NP)? have?", "How many nationality does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1111",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the residence of ($x | Place_NP)? have?", "How many nationality does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1112",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the daughter of ($x | Person_NP)? have?", "How many nationality does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1113",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1114",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the child of ($x | Person_NP)? have?", "How many nationality does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1115",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the governor of ($x | Person_NP)? have?", "How many nationality does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1116",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the music composer of ($x | TelevisionShow_NP)? have?", "How many nationality does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1117",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1118",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1119",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the music composer of ($x | TelevisionShow_NP)? have?", "How many nationality does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1120",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the son of ($x | Person_NP)? have?", "How many nationality does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1121",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the son of ($x | Person_NP)? have?", "How many nationality does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1122",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the mayor of ($x | City_NP)? have?", "How many nationality does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1123",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wine productions of the producer of ($x | Film_NP)?.", "Give me all wine productions of the producers of ($x | Film_NP)?.", "List all the wine productions of the producer of ($x | Film_NP)?.", "List all the wine productions of the producers of ($x | Film_NP)?.", "show me all wine productions of the producer of ($x | Film_NP)?.", "show me all wine productions of the producers of ($x | Film_NP)?.", "What are the wine productions of the producer of ($x | Film_NP)??", "What are the wine productions of the producers of ($x | Film_NP)??", "What is the wine production of the producer of ($x | Film_NP)??", "What is the wine production of the producers of ($x | Film_NP)??", "What was the wine production of the producer of ($x | Film_NP)??", "What was the wine production of the producers of ($x | Film_NP)??", "What were the wine productions of the producer of ($x | Film_NP)??", "What were the wine productions of the producers of ($x | Film_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1124",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wine productions of the founder of ($x | Thing_NP)?.", "Give me all wine productions of the founders of ($x | Thing_NP)?.", "List all the wine productions of the founder of ($x | Thing_NP)?.", "List all the wine productions of the founders of ($x | Thing_NP)?.", "show me all wine productions of the founder of ($x | Thing_NP)?.", "show me all wine productions of the founders of ($x | Thing_NP)?.", "What are the wine productions of the founder of ($x | Thing_NP)??", "What are the wine productions of the founders of ($x | Thing_NP)??", "What is the wine production of the founder of ($x | Thing_NP)??", "What is the wine production of the founders of ($x | Thing_NP)??", "What was the wine production of the founder of ($x | Thing_NP)??", "What was the wine production of the founders of ($x | Thing_NP)??", "What were the wine productions of the founder of ($x | Thing_NP)??", "What were the wine productions of the founders of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1125",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wine production does the producer of ($x | Film_NP)? have?", "How many wine production does the producers of ($x | Film_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1126",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many wine production does the founder of ($x | Thing_NP)? have?", "How many wine production does the founders of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1127",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the editor of ($x | Work_NP)?.", "Give me all causes of death of the editors of ($x | Work_NP)?.", "List all the causes of death of the editor of ($x | Work_NP)?.", "List all the causes of death of the editors of ($x | Work_NP)?.", "show me all causes of death of the editor of ($x | Work_NP)?.", "show me all causes of death of the editors of ($x | Work_NP)?.", "What are the causes of death of the editor of ($x | Work_NP)??", "What are the causes of death of the editors of ($x | Work_NP)??", "What is the cause of death of the editor of ($x | Work_NP)??", "What is the cause of death of the editors of ($x | Work_NP)??", "What was the cause of death of the editor of ($x | Work_NP)??", "What was the cause of death of the editors of ($x | Work_NP)??", "What were the causes of death of the editor of ($x | Work_NP)??", "What were the causes of death of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1128",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the parent of ($x | Person_NP)?.", "Give me all causes of death of the parents of ($x | Person_NP)?.", "List all the causes of death of the parent of ($x | Person_NP)?.", "List all the causes of death of the parents of ($x | Person_NP)?.", "show me all causes of death of the parent of ($x | Person_NP)?.", "show me all causes of death of the parents of ($x | Person_NP)?.", "What are the causes of death of the parent of ($x | Person_NP)??", "What are the causes of death of the parents of ($x | Person_NP)??", "What is the cause of death of the parent of ($x | Person_NP)??", "What is the cause of death of the parents of ($x | Person_NP)??", "What was the cause of death of the parent of ($x | Person_NP)??", "What was the cause of death of the parents of ($x | Person_NP)??", "What were the causes of death of the parent of ($x | Person_NP)??", "What were the causes of death of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1129",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the king of ($x | Legislature_NP)?.", "Give me all causes of death of the kings of ($x | Legislature_NP)?.", "List all the causes of death of the king of ($x | Legislature_NP)?.", "List all the causes of death of the kings of ($x | Legislature_NP)?.", "show me all causes of death of the king of ($x | Legislature_NP)?.", "show me all causes of death of the kings of ($x | Legislature_NP)?.", "What are the causes of death of the king of ($x | Legislature_NP)??", "What are the causes of death of the kings of ($x | Legislature_NP)??", "What is the cause of death of the king of ($x | Legislature_NP)??", "What is the cause of death of the kings of ($x | Legislature_NP)??", "What was the cause of death of the king of ($x | Legislature_NP)??", "What was the cause of death of the kings of ($x | Legislature_NP)??", "What were the causes of death of the king of ($x | Legislature_NP)??", "What were the causes of death of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1130",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all causes of death of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the causes of death of the coach of ($x | IceHockeyLeague_NP)?.", "List all the causes of death of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all causes of death of the coach of ($x | IceHockeyLeague_NP)?.", "show me all causes of death of the coaches of ($x | IceHockeyLeague_NP)?.", "What are the causes of death of the coach of ($x | IceHockeyLeague_NP)??", "What are the causes of death of the coaches of ($x | IceHockeyLeague_NP)??", "What is the cause of death of the coach of ($x | IceHockeyLeague_NP)??", "What is the cause of death of the coaches of ($x | IceHockeyLeague_NP)??", "What was the cause of death of the coach of ($x | IceHockeyLeague_NP)??", "What was the cause of death of the coaches of ($x | IceHockeyLeague_NP)??", "What were the causes of death of the coach of ($x | IceHockeyLeague_NP)??", "What were the causes of death of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1131",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the coach of ($x | HockeyTeam_NP)?.", "Give me all causes of death of the coaches of ($x | HockeyTeam_NP)?.", "List all the causes of death of the coach of ($x | HockeyTeam_NP)?.", "List all the causes of death of the coaches of ($x | HockeyTeam_NP)?.", "show me all causes of death of the coach of ($x | HockeyTeam_NP)?.", "show me all causes of death of the coaches of ($x | HockeyTeam_NP)?.", "What are the causes of death of the coach of ($x | HockeyTeam_NP)??", "What are the causes of death of the coaches of ($x | HockeyTeam_NP)??", "What is the cause of death of the coach of ($x | HockeyTeam_NP)??", "What is the cause of death of the coaches of ($x | HockeyTeam_NP)??", "What was the cause of death of the coach of ($x | HockeyTeam_NP)??", "What was the cause of death of the coaches of ($x | HockeyTeam_NP)??", "What were the causes of death of the coach of ($x | HockeyTeam_NP)??", "What were the causes of death of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1132",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the causes of death of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all causes of death of the alter ego of ($x | ComicsCharacter_NP)?.", "What are the causes of death of the alter ego of ($x | ComicsCharacter_NP)??", "What is the cause of death of the alter ego of ($x | ComicsCharacter_NP)??", "What was the cause of death of the alter ego of ($x | ComicsCharacter_NP)??", "What were the causes of death of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1133",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the author of ($x | Work_NP)?.", "Give me all causes of death of the authors of ($x | Work_NP)?.", "List all the causes of death of the author of ($x | Work_NP)?.", "List all the causes of death of the authors of ($x | Work_NP)?.", "show me all causes of death of the author of ($x | Work_NP)?.", "show me all causes of death of the authors of ($x | Work_NP)?.", "What are the causes of death of the author of ($x | Work_NP)??", "What are the causes of death of the authors of ($x | Work_NP)??", "What is the cause of death of the author of ($x | Work_NP)??", "What is the cause of death of the authors of ($x | Work_NP)??", "What was the cause of death of the author of ($x | Work_NP)??", "What was the cause of death of the authors of ($x | Work_NP)??", "What were the causes of death of the author of ($x | Work_NP)??", "What were the causes of death of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1134",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the mayor of ($x | Settlement_NP)?.", "Give me all causes of death of the mayors of ($x | Settlement_NP)?.", "List all the causes of death of the mayor of ($x | Settlement_NP)?.", "List all the causes of death of the mayors of ($x | Settlement_NP)?.", "show me all causes of death of the mayor of ($x | Settlement_NP)?.", "show me all causes of death of the mayors of ($x | Settlement_NP)?.", "What are the causes of death of the mayor of ($x | Settlement_NP)??", "What are the causes of death of the mayors of ($x | Settlement_NP)??", "What is the cause of death of the mayor of ($x | Settlement_NP)??", "What is the cause of death of the mayors of ($x | Settlement_NP)??", "What was the cause of death of the mayor of ($x | Settlement_NP)??", "What was the cause of death of the mayors of ($x | Settlement_NP)??", "What were the causes of death of the mayor of ($x | Settlement_NP)??", "What were the causes of death of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1135",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the music by ($x | Musical_NP)?.", "Give me all causes of death of the musics by ($x | Musical_NP)?.", "List all the causes of death of the music by ($x | Musical_NP)?.", "List all the causes of death of the musics by ($x | Musical_NP)?.", "show me all causes of death of the music by ($x | Musical_NP)?.", "show me all causes of death of the musics by ($x | Musical_NP)?.", "What are the causes of death of the music by ($x | Musical_NP)??", "What are the causes of death of the musics by ($x | Musical_NP)??", "What is the cause of death of the music by ($x | Musical_NP)??", "What is the cause of death of the musics by ($x | Musical_NP)??", "What was the cause of death of the music by ($x | Musical_NP)??", "What was the cause of death of the musics by ($x | Musical_NP)??", "What were the causes of death of the music by ($x | Musical_NP)??", "What were the causes of death of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1136",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the foundation series of ($x | TelevisionShow_NP)?.", "List all the causes of death of the foundation series of ($x | TelevisionShow_NP)?.", "show me all causes of death of the foundation series of ($x | TelevisionShow_NP)?.", "What are the causes of death of the foundation series of ($x | TelevisionShow_NP)??", "What is the cause of death of the foundation series of ($x | TelevisionShow_NP)??", "What was the cause of death of the foundation series of ($x | TelevisionShow_NP)??", "What were the causes of death of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1137",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the creator of ($x | FictionalCharacter_NP)?.", "Give me all causes of death of the creators of ($x | FictionalCharacter_NP)?.", "List all the causes of death of the creator of ($x | FictionalCharacter_NP)?.", "List all the causes of death of the creators of ($x | FictionalCharacter_NP)?.", "show me all causes of death of the creator of ($x | FictionalCharacter_NP)?.", "show me all causes of death of the creators of ($x | FictionalCharacter_NP)?.", "What are the causes of death of the creator of ($x | FictionalCharacter_NP)??", "What are the causes of death of the creators of ($x | FictionalCharacter_NP)??", "What is the cause of death of the creator of ($x | FictionalCharacter_NP)??", "What is the cause of death of the creators of ($x | FictionalCharacter_NP)??", "What was the cause of death of the creator of ($x | FictionalCharacter_NP)??", "What was the cause of death of the creators of ($x | FictionalCharacter_NP)??", "What were the causes of death of the creator of ($x | FictionalCharacter_NP)??", "What were the causes of death of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1138",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the influencer of ($x | Person_NP)?.", "Give me all causes of death of the influencers of ($x | Person_NP)?.", "List all the causes of death of the influencer of ($x | Person_NP)?.", "List all the causes of death of the influencers of ($x | Person_NP)?.", "show me all causes of death of the influencer of ($x | Person_NP)?.", "show me all causes of death of the influencers of ($x | Person_NP)?.", "What are the causes of death of the influencer of ($x | Person_NP)??", "What are the causes of death of the influencers of ($x | Person_NP)??", "What is the cause of death of the influencer of ($x | Person_NP)??", "What is the cause of death of the influencers of ($x | Person_NP)??", "What was the cause of death of the influencer of ($x | Person_NP)??", "What was the cause of death of the influencers of ($x | Person_NP)??", "What were the causes of death of the influencer of ($x | Person_NP)??", "What were the causes of death of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1139",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the wife of ($x | Person_NP)?.", "Give me all causes of death of the wives of ($x | Person_NP)?.", "List all the causes of death of the wife of ($x | Person_NP)?.", "List all the causes of death of the wives of ($x | Person_NP)?.", "show me all causes of death of the wife of ($x | Person_NP)?.", "show me all causes of death of the wives of ($x | Person_NP)?.", "What are the causes of death of the wife of ($x | Person_NP)??", "What are the causes of death of the wives of ($x | Person_NP)??", "What is the cause of death of the wife of ($x | Person_NP)??", "What is the cause of death of the wives of ($x | Person_NP)??", "What was the cause of death of the wife of ($x | Person_NP)??", "What was the cause of death of the wives of ($x | Person_NP)??", "What were the causes of death of the wife of ($x | Person_NP)??", "What were the causes of death of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1140",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all causes of death of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the causes of death of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the causes of death of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all causes of death of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all causes of death of the doctoral supervisors of ($x | Scientist_NP)?.", "What are the causes of death of the doctoral supervisor of ($x | Scientist_NP)??", "What are the causes of death of the doctoral supervisors of ($x | Scientist_NP)??", "What is the cause of death of the doctoral supervisor of ($x | Scientist_NP)??", "What is the cause of death of the doctoral supervisors of ($x | Scientist_NP)??", "What was the cause of death of the doctoral supervisor of ($x | Scientist_NP)??", "What was the cause of death of the doctoral supervisors of ($x | Scientist_NP)??", "What were the causes of death of the doctoral supervisor of ($x | Scientist_NP)??", "What were the causes of death of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1141",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the host of ($x | TelevisionShow_NP)?.", "Give me all causes of death of the hosts of ($x | TelevisionShow_NP)?.", "List all the causes of death of the host of ($x | TelevisionShow_NP)?.", "List all the causes of death of the hosts of ($x | TelevisionShow_NP)?.", "show me all causes of death of the host of ($x | TelevisionShow_NP)?.", "show me all causes of death of the hosts of ($x | TelevisionShow_NP)?.", "What are the causes of death of the host of ($x | TelevisionShow_NP)??", "What are the causes of death of the hosts of ($x | TelevisionShow_NP)??", "What is the cause of death of the host of ($x | TelevisionShow_NP)??", "What is the cause of death of the hosts of ($x | TelevisionShow_NP)??", "What was the cause of death of the host of ($x | TelevisionShow_NP)??", "What was the cause of death of the hosts of ($x | TelevisionShow_NP)??", "What were the causes of death of the host of ($x | TelevisionShow_NP)??", "What were the causes of death of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1142",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the residence of ($x | Place_NP)?.", "Give me all causes of death of the residences of ($x | Place_NP)?.", "List all the causes of death of the residence of ($x | Place_NP)?.", "List all the causes of death of the residences of ($x | Place_NP)?.", "show me all causes of death of the residence of ($x | Place_NP)?.", "show me all causes of death of the residences of ($x | Place_NP)?.", "What are the causes of death of the residence of ($x | Place_NP)??", "What are the causes of death of the residences of ($x | Place_NP)??", "What is the cause of death of the residence of ($x | Place_NP)??", "What is the cause of death of the residences of ($x | Place_NP)??", "What was the cause of death of the residence of ($x | Place_NP)??", "What was the cause of death of the residences of ($x | Place_NP)??", "What were the causes of death of the residence of ($x | Place_NP)??", "What were the causes of death of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1143",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the daughter of ($x | Person_NP)?.", "Give me all causes of death of the daughters of ($x | Person_NP)?.", "List all the causes of death of the daughter of ($x | Person_NP)?.", "List all the causes of death of the daughters of ($x | Person_NP)?.", "show me all causes of death of the daughter of ($x | Person_NP)?.", "show me all causes of death of the daughters of ($x | Person_NP)?.", "What are the causes of death of the daughter of ($x | Person_NP)??", "What are the causes of death of the daughters of ($x | Person_NP)??", "What is the cause of death of the daughter of ($x | Person_NP)??", "What is the cause of death of the daughters of ($x | Person_NP)??", "What was the cause of death of the daughter of ($x | Person_NP)??", "What was the cause of death of the daughters of ($x | Person_NP)??", "What were the causes of death of the daughter of ($x | Person_NP)??", "What were the causes of death of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1144",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the successor of ($x | Politician_NP)?.", "List all the causes of death of the successor of ($x | Politician_NP)?.", "show me all causes of death of the successor of ($x | Politician_NP)?.", "What are the causes of death of the successor of ($x | Politician_NP)??", "What is the cause of death of the successor of ($x | Politician_NP)??", "What was the cause of death of the successor of ($x | Politician_NP)??", "What were the causes of death of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1145",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the child of ($x | Person_NP)?.", "Give me all causes of death of the children of ($x | Person_NP)?.", "List all the causes of death of the child of ($x | Person_NP)?.", "List all the causes of death of the children of ($x | Person_NP)?.", "show me all causes of death of the child of ($x | Person_NP)?.", "show me all causes of death of the children of ($x | Person_NP)?.", "What are the causes of death of the child of ($x | Person_NP)??", "What are the causes of death of the children of ($x | Person_NP)??", "What is the cause of death of the child of ($x | Person_NP)??", "What is the cause of death of the children of ($x | Person_NP)??", "What was the cause of death of the child of ($x | Person_NP)??", "What was the cause of death of the children of ($x | Person_NP)??", "What were the causes of death of the child of ($x | Person_NP)??", "What were the causes of death of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1146",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the governor of ($x | Person_NP)?.", "Give me all causes of death of the governors of ($x | Person_NP)?.", "List all the causes of death of the governor of ($x | Person_NP)?.", "List all the causes of death of the governors of ($x | Person_NP)?.", "show me all causes of death of the governor of ($x | Person_NP)?.", "show me all causes of death of the governors of ($x | Person_NP)?.", "What are the causes of death of the governor of ($x | Person_NP)??", "What are the causes of death of the governors of ($x | Person_NP)??", "What is the cause of death of the governor of ($x | Person_NP)??", "What is the cause of death of the governors of ($x | Person_NP)??", "What was the cause of death of the governor of ($x | Person_NP)??", "What was the cause of death of the governors of ($x | Person_NP)??", "What were the causes of death of the governor of ($x | Person_NP)??", "What were the causes of death of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1147",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the music composer of ($x | TelevisionShow_NP)?.", "Give me all causes of death of the music composers of ($x | TelevisionShow_NP)?.", "List all the causes of death of the music composer of ($x | TelevisionShow_NP)?.", "List all the causes of death of the music composers of ($x | TelevisionShow_NP)?.", "show me all causes of death of the music composer of ($x | TelevisionShow_NP)?.", "show me all causes of death of the music composers of ($x | TelevisionShow_NP)?.", "What are the causes of death of the music composer of ($x | TelevisionShow_NP)??", "What are the causes of death of the music composers of ($x | TelevisionShow_NP)??", "What is the cause of death of the music composer of ($x | TelevisionShow_NP)??", "What is the cause of death of the music composers of ($x | TelevisionShow_NP)??", "What was the cause of death of the music composer of ($x | TelevisionShow_NP)??", "What was the cause of death of the music composers of ($x | TelevisionShow_NP)??", "What were the causes of death of the music composer of ($x | TelevisionShow_NP)??", "What were the causes of death of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1148",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the first to climb  ($x | Mountain_NP)?.", "List all the causes of death of the first to climb  ($x | Mountain_NP)?.", "show me all causes of death of the first to climb  ($x | Mountain_NP)?.", "What are the causes of death of the first to climb  ($x | Mountain_NP)??", "What is the cause of death of the first to climb  ($x | Mountain_NP)??", "What was the cause of death of the first to climb  ($x | Mountain_NP)??", "What were the causes of death of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1149",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the father of ($x | Royalty_NP)?.", "List all the causes of death of the father of ($x | Royalty_NP)?.", "show me all causes of death of the father of ($x | Royalty_NP)?.", "What are the causes of death of the father of ($x | Royalty_NP)??", "What is the cause of death of the father of ($x | Royalty_NP)??", "What was the cause of death of the father of ($x | Royalty_NP)??", "What were the causes of death of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1150",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the music composer of ($x | TelevisionShow_NP)?.", "Give me all causes of death of the music composers of ($x | TelevisionShow_NP)?.", "List all the causes of death of the music composer of ($x | TelevisionShow_NP)?.", "List all the causes of death of the music composers of ($x | TelevisionShow_NP)?.", "show me all causes of death of the music composer of ($x | TelevisionShow_NP)?.", "show me all causes of death of the music composers of ($x | TelevisionShow_NP)?.", "What are the causes of death of the music composer of ($x | TelevisionShow_NP)??", "What are the causes of death of the music composers of ($x | TelevisionShow_NP)??", "What is the cause of death of the music composer of ($x | TelevisionShow_NP)??", "What is the cause of death of the music composers of ($x | TelevisionShow_NP)??", "What was the cause of death of the music composer of ($x | TelevisionShow_NP)??", "What was the cause of death of the music composers of ($x | TelevisionShow_NP)??", "What were the causes of death of the music composer of ($x | TelevisionShow_NP)??", "What were the causes of death of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1151",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the son of ($x | Person_NP)?.", "Give me all causes of death of the sons of ($x | Person_NP)?.", "List all the causes of death of the son of ($x | Person_NP)?.", "List all the causes of death of the sons of ($x | Person_NP)?.", "show me all causes of death of the son of ($x | Person_NP)?.", "show me all causes of death of the sons of ($x | Person_NP)?.", "What are the causes of death of the son of ($x | Person_NP)??", "What are the causes of death of the sons of ($x | Person_NP)??", "What is the cause of death of the son of ($x | Person_NP)??", "What is the cause of death of the sons of ($x | Person_NP)??", "What was the cause of death of the son of ($x | Person_NP)??", "What was the cause of death of the sons of ($x | Person_NP)??", "What were the causes of death of the son of ($x | Person_NP)??", "What were the causes of death of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1152",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the son of ($x | Person_NP)?.", "Give me all causes of death of the sons of ($x | Person_NP)?.", "List all the causes of death of the son of ($x | Person_NP)?.", "List all the causes of death of the sons of ($x | Person_NP)?.", "show me all causes of death of the son of ($x | Person_NP)?.", "show me all causes of death of the sons of ($x | Person_NP)?.", "What are the causes of death of the son of ($x | Person_NP)??", "What are the causes of death of the sons of ($x | Person_NP)??", "What is the cause of death of the son of ($x | Person_NP)??", "What is the cause of death of the sons of ($x | Person_NP)??", "What was the cause of death of the son of ($x | Person_NP)??", "What was the cause of death of the sons of ($x | Person_NP)??", "What were the causes of death of the son of ($x | Person_NP)??", "What were the causes of death of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1153",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of the mayor of ($x | City_NP)?.", "Give me all causes of death of the mayors of ($x | City_NP)?.", "List all the causes of death of the mayor of ($x | City_NP)?.", "List all the causes of death of the mayors of ($x | City_NP)?.", "show me all causes of death of the mayor of ($x | City_NP)?.", "show me all causes of death of the mayors of ($x | City_NP)?.", "What are the causes of death of the mayor of ($x | City_NP)??", "What are the causes of death of the mayors of ($x | City_NP)??", "What is the cause of death of the mayor of ($x | City_NP)??", "What is the cause of death of the mayors of ($x | City_NP)??", "What was the cause of death of the mayor of ($x | City_NP)??", "What was the cause of death of the mayors of ($x | City_NP)??", "What were the causes of death of the mayor of ($x | City_NP)??", "What were the causes of death of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1154",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the editor of ($x | Work_NP)? have?", "How many cause of death does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1155",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the parent of ($x | Person_NP)? have?", "How many cause of death does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1156",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the king of ($x | Legislature_NP)? have?", "How many cause of death does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1157",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the coach of ($x | IceHockeyLeague_NP)? have?", "How many cause of death does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1158",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the coach of ($x | HockeyTeam_NP)? have?", "How many cause of death does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1159",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1160",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the author of ($x | Work_NP)? have?", "How many cause of death does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1161",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the mayor of ($x | Settlement_NP)? have?", "How many cause of death does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1162",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the music by ($x | Musical_NP)? have?", "How many cause of death does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1163",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1164",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the creator of ($x | FictionalCharacter_NP)? have?", "How many cause of death does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1165",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the influencer of ($x | Person_NP)? have?", "How many cause of death does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1166",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the wife of ($x | Person_NP)? have?", "How many cause of death does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1167",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many cause of death does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1168",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the host of ($x | TelevisionShow_NP)? have?", "How many cause of death does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1169",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the residence of ($x | Place_NP)? have?", "How many cause of death does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1170",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the daughter of ($x | Person_NP)? have?", "How many cause of death does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1171",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1172",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the child of ($x | Person_NP)? have?", "How many cause of death does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1173",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the governor of ($x | Person_NP)? have?", "How many cause of death does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1174",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the music composer of ($x | TelevisionShow_NP)? have?", "How many cause of death does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1175",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1176",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1177",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the music composer of ($x | TelevisionShow_NP)? have?", "How many cause of death does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1178",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the son of ($x | Person_NP)? have?", "How many cause of death does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1179",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the son of ($x | Person_NP)? have?", "How many cause of death does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1180",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many cause of death does the mayor of ($x | City_NP)? have?", "How many cause of death does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1181",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the birth place of ($x | Person_NP)?.", "List all the currencies of the birth place of ($x | Person_NP)?.", "show me all currencies of the birth place of ($x | Person_NP)?.", "What are the currencies of the birth place of ($x | Person_NP)??", "What is the currency of the birth place of ($x | Person_NP)??", "What was the currency of the birth place of ($x | Person_NP)??", "What were the currencies of the birth place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1182",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the location of ($x | Mountain_NP)?.", "List all the currencies of the location of ($x | Mountain_NP)?.", "show me all currencies of the location of ($x | Mountain_NP)?.", "What are the currencies of the location of ($x | Mountain_NP)??", "What is the currency of the location of ($x | Mountain_NP)??", "What was the currency of the location of ($x | Mountain_NP)??", "What were the currencies of the location of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1183",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the form of government of ($x | Country_NP)?.", "List all the currencies of the form of government of ($x | Country_NP)?.", "show me all currencies of the form of government of ($x | Country_NP)?.", "What are the currencies of the form of government of ($x | Country_NP)??", "What is the currency of the form of government of ($x | Country_NP)??", "What was the currency of the form of government of ($x | Country_NP)??", "What were the currencies of the form of government of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1184",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the nationality of ($x | Person_NP)?.", "List all the currencies of the nationality of ($x | Person_NP)?.", "show me all currencies of the nationality of ($x | Person_NP)?.", "What are the currencies of the nationality of ($x | Person_NP)??", "What is the currency of the nationality of ($x | Person_NP)??", "What was the currency of the nationality of ($x | Person_NP)??", "What were the currencies of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1185",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the resting place of ($x | Person_NP)?.", "Give me all currencies of the resting places of ($x | Person_NP)?.", "List all the currencies of the resting place of ($x | Person_NP)?.", "List all the currencies of the resting places of ($x | Person_NP)?.", "show me all currencies of the resting place of ($x | Person_NP)?.", "show me all currencies of the resting places of ($x | Person_NP)?.", "What are the currencies of the resting place of ($x | Person_NP)??", "What are the currencies of the resting places of ($x | Person_NP)??", "What is the currency of the resting place of ($x | Person_NP)??", "What is the currency of the resting places of ($x | Person_NP)??", "What was the currency of the resting place of ($x | Person_NP)??", "What was the currency of the resting places of ($x | Person_NP)??", "What were the currencies of the resting place of ($x | Person_NP)??", "What were the currencies of the resting places of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1186",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the nationality of ($x | Person_NP)?.", "List all the currencies of the nationality of ($x | Person_NP)?.", "show me all currencies of the nationality of ($x | Person_NP)?.", "What are the currencies of the nationality of ($x | Person_NP)??", "What is the currency of the nationality of ($x | Person_NP)??", "What was the currency of the nationality of ($x | Person_NP)??", "What were the currencies of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1187",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the largest country of ($x | Country_NP)?.", "List all the currencies of the largest country of ($x | Country_NP)?.", "show me all currencies of the largest country of ($x | Country_NP)?.", "What are the currencies of the largest country of ($x | Country_NP)??", "What is the currency of the largest country of ($x | Country_NP)??", "What was the currency of the largest country of ($x | Country_NP)??", "What were the currencies of the largest country of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1188",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the birth place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1189",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the location of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1190",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the form of government of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1191",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1192",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the resting place of ($x | Person_NP)? have?", "How many currency does the resting places of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1193",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1194",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the largest country of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1195",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the birth place of ($x | Person_NP)?.", "List all the currencies of the birth place of ($x | Person_NP)?.", "show me all currencies of the birth place of ($x | Person_NP)?.", "What are the currencies of the birth place of ($x | Person_NP)??", "What is the currency of the birth place of ($x | Person_NP)??", "What was the currency of the birth place of ($x | Person_NP)??", "What were the currencies of the birth place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1196",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the location of ($x | Mountain_NP)?.", "List all the currencies of the location of ($x | Mountain_NP)?.", "show me all currencies of the location of ($x | Mountain_NP)?.", "What are the currencies of the location of ($x | Mountain_NP)??", "What is the currency of the location of ($x | Mountain_NP)??", "What was the currency of the location of ($x | Mountain_NP)??", "What were the currencies of the location of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1197",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the form of government of ($x | Country_NP)?.", "List all the currencies of the form of government of ($x | Country_NP)?.", "show me all currencies of the form of government of ($x | Country_NP)?.", "What are the currencies of the form of government of ($x | Country_NP)??", "What is the currency of the form of government of ($x | Country_NP)??", "What was the currency of the form of government of ($x | Country_NP)??", "What were the currencies of the form of government of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1198",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the nationality of ($x | Person_NP)?.", "List all the currencies of the nationality of ($x | Person_NP)?.", "show me all currencies of the nationality of ($x | Person_NP)?.", "What are the currencies of the nationality of ($x | Person_NP)??", "What is the currency of the nationality of ($x | Person_NP)??", "What was the currency of the nationality of ($x | Person_NP)??", "What were the currencies of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1199",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the resting place of ($x | Person_NP)?.", "Give me all currencies of the resting places of ($x | Person_NP)?.", "List all the currencies of the resting place of ($x | Person_NP)?.", "List all the currencies of the resting places of ($x | Person_NP)?.", "show me all currencies of the resting place of ($x | Person_NP)?.", "show me all currencies of the resting places of ($x | Person_NP)?.", "What are the currencies of the resting place of ($x | Person_NP)??", "What are the currencies of the resting places of ($x | Person_NP)??", "What is the currency of the resting place of ($x | Person_NP)??", "What is the currency of the resting places of ($x | Person_NP)??", "What was the currency of the resting place of ($x | Person_NP)??", "What was the currency of the resting places of ($x | Person_NP)??", "What were the currencies of the resting place of ($x | Person_NP)??", "What were the currencies of the resting places of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1200",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the nationality of ($x | Person_NP)?.", "List all the currencies of the nationality of ($x | Person_NP)?.", "show me all currencies of the nationality of ($x | Person_NP)?.", "What are the currencies of the nationality of ($x | Person_NP)??", "What is the currency of the nationality of ($x | Person_NP)??", "What was the currency of the nationality of ($x | Person_NP)??", "What were the currencies of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1201",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of the largest country of ($x | Country_NP)?.", "List all the currencies of the largest country of ($x | Country_NP)?.", "show me all currencies of the largest country of ($x | Country_NP)?.", "What are the currencies of the largest country of ($x | Country_NP)??", "What is the currency of the largest country of ($x | Country_NP)??", "What was the currency of the largest country of ($x | Country_NP)??", "What were the currencies of the largest country of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1202",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the birth place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1203",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the location of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1204",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the form of government of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1205",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1206",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the resting place of ($x | Person_NP)? have?", "How many currency does the resting places of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1207",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1208",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many currency does the largest country of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1209",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the editor of ($x | Work_NP)??", "What is the religion of the editors of ($x | Work_NP)??", "What was the religion of the editor of ($x | Work_NP)??", "What was the religion of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1210",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the parent of ($x | Person_NP)??", "What is the religion of the parents of ($x | Person_NP)??", "What was the religion of the parent of ($x | Person_NP)??", "What was the religion of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1211",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the king of ($x | Legislature_NP)??", "What is the religion of the kings of ($x | Legislature_NP)??", "What was the religion of the king of ($x | Legislature_NP)??", "What was the religion of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1212",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the coach of ($x | IceHockeyLeague_NP)??", "What is the religion of the coaches of ($x | IceHockeyLeague_NP)??", "What was the religion of the coach of ($x | IceHockeyLeague_NP)??", "What was the religion of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1213",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the coach of ($x | HockeyTeam_NP)??", "What is the religion of the coaches of ($x | HockeyTeam_NP)??", "What was the religion of the coach of ($x | HockeyTeam_NP)??", "What was the religion of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1214",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the alter ego of ($x | ComicsCharacter_NP)??", "What was the religion of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1215",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the author of ($x | Work_NP)??", "What is the religion of the authors of ($x | Work_NP)??", "What was the religion of the author of ($x | Work_NP)??", "What was the religion of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1216",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the mayor of ($x | Settlement_NP)??", "What is the religion of the mayors of ($x | Settlement_NP)??", "What was the religion of the mayor of ($x | Settlement_NP)??", "What was the religion of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1217",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the music by ($x | Musical_NP)??", "What is the religion of the musics by ($x | Musical_NP)??", "What was the religion of the music by ($x | Musical_NP)??", "What was the religion of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1218",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the foundation series of ($x | TelevisionShow_NP)??", "What was the religion of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1219",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the creator of ($x | FictionalCharacter_NP)??", "What is the religion of the creators of ($x | FictionalCharacter_NP)??", "What was the religion of the creator of ($x | FictionalCharacter_NP)??", "What was the religion of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1220",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the influencer of ($x | Person_NP)??", "What is the religion of the influencers of ($x | Person_NP)??", "What was the religion of the influencer of ($x | Person_NP)??", "What was the religion of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1221",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the wife of ($x | Person_NP)??", "What is the religion of the wives of ($x | Person_NP)??", "What was the religion of the wife of ($x | Person_NP)??", "What was the religion of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1222",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the doctoral supervisor of ($x | Scientist_NP)??", "What is the religion of the doctoral supervisors of ($x | Scientist_NP)??", "What was the religion of the doctoral supervisor of ($x | Scientist_NP)??", "What was the religion of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1223",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the host of ($x | TelevisionShow_NP)??", "What is the religion of the hosts of ($x | TelevisionShow_NP)??", "What was the religion of the host of ($x | TelevisionShow_NP)??", "What was the religion of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1224",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the residence of ($x | Place_NP)??", "What is the religion of the residences of ($x | Place_NP)??", "What was the religion of the residence of ($x | Place_NP)??", "What was the religion of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1225",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the daughter of ($x | Person_NP)??", "What is the religion of the daughters of ($x | Person_NP)??", "What was the religion of the daughter of ($x | Person_NP)??", "What was the religion of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1226",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the successor of ($x | Politician_NP)??", "What was the religion of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1227",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the child of ($x | Person_NP)??", "What is the religion of the children of ($x | Person_NP)??", "What was the religion of the child of ($x | Person_NP)??", "What was the religion of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1228",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the governor of ($x | Person_NP)??", "What is the religion of the governors of ($x | Person_NP)??", "What was the religion of the governor of ($x | Person_NP)??", "What was the religion of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1229",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the music composer of ($x | TelevisionShow_NP)??", "What is the religion of the music composers of ($x | TelevisionShow_NP)??", "What was the religion of the music composer of ($x | TelevisionShow_NP)??", "What was the religion of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1230",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the first to climb  ($x | Mountain_NP)??", "What was the religion of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1231",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the father of ($x | Royalty_NP)??", "What was the religion of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1232",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the music composer of ($x | TelevisionShow_NP)??", "What is the religion of the music composers of ($x | TelevisionShow_NP)??", "What was the religion of the music composer of ($x | TelevisionShow_NP)??", "What was the religion of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1233",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the son of ($x | Person_NP)??", "What is the religion of the sons of ($x | Person_NP)??", "What was the religion of the son of ($x | Person_NP)??", "What was the religion of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1234",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the son of ($x | Person_NP)??", "What is the religion of the sons of ($x | Person_NP)??", "What was the religion of the son of ($x | Person_NP)??", "What was the religion of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1235",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of the mayor of ($x | City_NP)??", "What is the religion of the mayors of ($x | City_NP)??", "What was the religion of the mayor of ($x | City_NP)??", "What was the religion of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1236",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the editor of ($x | Work_NP)? have?", "How many religion does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1237",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the parent of ($x | Person_NP)? have?", "How many religion does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1238",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the king of ($x | Legislature_NP)? have?", "How many religion does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1239",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the coach of ($x | IceHockeyLeague_NP)? have?", "How many religion does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1240",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the coach of ($x | HockeyTeam_NP)? have?", "How many religion does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1241",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1242",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the author of ($x | Work_NP)? have?", "How many religion does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1243",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the mayor of ($x | Settlement_NP)? have?", "How many religion does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1244",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the music by ($x | Musical_NP)? have?", "How many religion does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1245",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1246",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the creator of ($x | FictionalCharacter_NP)? have?", "How many religion does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1247",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the influencer of ($x | Person_NP)? have?", "How many religion does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1248",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the wife of ($x | Person_NP)? have?", "How many religion does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1249",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many religion does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1250",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the host of ($x | TelevisionShow_NP)? have?", "How many religion does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1251",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the residence of ($x | Place_NP)? have?", "How many religion does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1252",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the daughter of ($x | Person_NP)? have?", "How many religion does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1253",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1254",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the child of ($x | Person_NP)? have?", "How many religion does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1255",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the governor of ($x | Person_NP)? have?", "How many religion does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1256",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the music composer of ($x | TelevisionShow_NP)? have?", "How many religion does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1257",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1258",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1259",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the music composer of ($x | TelevisionShow_NP)? have?", "How many religion does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1260",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the son of ($x | Person_NP)? have?", "How many religion does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1261",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the son of ($x | Person_NP)? have?", "How many religion does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1262",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many religion does the mayor of ($x | City_NP)? have?", "How many religion does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1263",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the isbn of ($x | Book_NP)?.", "Give me all founders of the isbns of ($x | Book_NP)?.", "List all the founders of the isbn of ($x | Book_NP)?.", "List all the founders of the isbns of ($x | Book_NP)?.", "show me all founders of the isbn of ($x | Book_NP)?.", "show me all founders of the isbns of ($x | Book_NP)?.", "Who are the founders of the isbn of ($x | Book_NP)??", "Who are the founders of the isbns of ($x | Book_NP)??", "Who is the founder of the isbn of ($x | Book_NP)??", "Who is the founder of the isbns of ($x | Book_NP)??", "Who was the founder of the isbn of ($x | Book_NP)??", "Who was the founder of the isbns of ($x | Book_NP)??", "Who were the founders of the isbn of ($x | Book_NP)??", "Who were the founders of the isbns of ($x | Book_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1264",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the president of ($x | Person_NP)?.", "Give me all founders of the presidents of ($x | Person_NP)?.", "List all the founders of the president of ($x | Person_NP)?.", "List all the founders of the presidents of ($x | Person_NP)?.", "show me all founders of the president of ($x | Person_NP)?.", "show me all founders of the presidents of ($x | Person_NP)?.", "Who are the founders of the president of ($x | Person_NP)??", "Who are the founders of the presidents of ($x | Person_NP)??", "Who is the founder of the president of ($x | Person_NP)??", "Who is the founder of the presidents of ($x | Person_NP)??", "Who was the founder of the president of ($x | Person_NP)??", "Who was the founder of the presidents of ($x | Person_NP)??", "Who were the founders of the president of ($x | Person_NP)??", "Who were the founders of the presidents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1265",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the parties of ($x | Politician_NP)?.", "Give me all founders of the party of ($x | Politician_NP)?.", "List all the founders of the parties of ($x | Politician_NP)?.", "List all the founders of the party of ($x | Politician_NP)?.", "show me all founders of the parties of ($x | Politician_NP)?.", "show me all founders of the party of ($x | Politician_NP)?.", "Who are the founders of the parties of ($x | Politician_NP)??", "Who are the founders of the party of ($x | Politician_NP)??", "Who is the founder of the parties of ($x | Politician_NP)??", "Who is the founder of the party of ($x | Politician_NP)??", "Who was the founder of the parties of ($x | Politician_NP)??", "Who was the founder of the party of ($x | Politician_NP)??", "Who were the founders of the parties of ($x | Politician_NP)??", "Who were the founders of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1266",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the parties of ($x | Politician_NP)?.", "Give me all founders of the party of ($x | Politician_NP)?.", "List all the founders of the parties of ($x | Politician_NP)?.", "List all the founders of the party of ($x | Politician_NP)?.", "show me all founders of the parties of ($x | Politician_NP)?.", "show me all founders of the party of ($x | Politician_NP)?.", "Who are the founders of the parties of ($x | Politician_NP)??", "Who are the founders of the party of ($x | Politician_NP)??", "Who is the founder of the parties of ($x | Politician_NP)??", "Who is the founder of the party of ($x | Politician_NP)??", "Who was the founder of the parties of ($x | Politician_NP)??", "Who was the founder of the party of ($x | Politician_NP)??", "Who were the founders of the parties of ($x | Politician_NP)??", "Who were the founders of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1267",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the artistic movement of ($x | Artist_NP)?.", "Give me all founders of the artistic movements of ($x | Artist_NP)?.", "List all the founders of the artistic movement of ($x | Artist_NP)?.", "List all the founders of the artistic movements of ($x | Artist_NP)?.", "show me all founders of the artistic movement of ($x | Artist_NP)?.", "show me all founders of the artistic movements of ($x | Artist_NP)?.", "Who are the founders of the artistic movement of ($x | Artist_NP)??", "Who are the founders of the artistic movements of ($x | Artist_NP)??", "Who is the founder of the artistic movement of ($x | Artist_NP)??", "Who is the founder of the artistic movements of ($x | Artist_NP)??", "Who was the founder of the artistic movement of ($x | Artist_NP)??", "Who was the founder of the artistic movements of ($x | Artist_NP)??", "Who were the founders of the artistic movement of ($x | Artist_NP)??", "Who were the founders of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1268",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the artistic movement of ($x | Artist_NP)?.", "Give me all founders of the artistic movements of ($x | Artist_NP)?.", "List all the founders of the artistic movement of ($x | Artist_NP)?.", "List all the founders of the artistic movements of ($x | Artist_NP)?.", "show me all founders of the artistic movement of ($x | Artist_NP)?.", "show me all founders of the artistic movements of ($x | Artist_NP)?.", "Who are the founders of the artistic movement of ($x | Artist_NP)??", "Who are the founders of the artistic movements of ($x | Artist_NP)??", "Who is the founder of the artistic movement of ($x | Artist_NP)??", "Who is the founder of the artistic movements of ($x | Artist_NP)??", "Who was the founder of the artistic movement of ($x | Artist_NP)??", "Who was the founder of the artistic movements of ($x | Artist_NP)??", "Who were the founders of the artistic movement of ($x | Artist_NP)??", "Who were the founders of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1269",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the record label of ($x | Genre_NP)?.", "Give me all founders of the record labels of ($x | Genre_NP)?.", "List all the founders of the record label of ($x | Genre_NP)?.", "List all the founders of the record labels of ($x | Genre_NP)?.", "show me all founders of the record label of ($x | Genre_NP)?.", "show me all founders of the record labels of ($x | Genre_NP)?.", "Who are the founders of the record label of ($x | Genre_NP)??", "Who are the founders of the record labels of ($x | Genre_NP)??", "Who is the founder of the record label of ($x | Genre_NP)??", "Who is the founder of the record labels of ($x | Genre_NP)??", "Who was the founder of the record label of ($x | Genre_NP)??", "Who was the founder of the record labels of ($x | Genre_NP)??", "Who were the founders of the record label of ($x | Genre_NP)??", "Who were the founders of the record labels of ($x | Genre_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1270",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the autobiography of ($x | Thing_NP)?.", "List all the founders of the autobiography of ($x | Thing_NP)?.", "show me all founders of the autobiography of ($x | Thing_NP)?.", "Who are the founders of the autobiography of ($x | Thing_NP)??", "Who is the founder of the autobiography of ($x | Thing_NP)??", "Who was the founder of the autobiography of ($x | Thing_NP)??", "Who were the founders of the autobiography of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1271",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the resting place of ($x | Person_NP)?.", "List all the founders of the resting place of ($x | Person_NP)?.", "show me all founders of the resting place of ($x | Person_NP)?.", "Who are the founders of the resting place of ($x | Person_NP)??", "Who is the founder of the resting place of ($x | Person_NP)??", "Who was the founder of the resting place of ($x | Person_NP)??", "Who were the founders of the resting place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1272",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the time zone of ($x | City_NP)?.", "Give me all founders of the time zones of ($x | City_NP)?.", "List all the founders of the time zone of ($x | City_NP)?.", "List all the founders of the time zones of ($x | City_NP)?.", "show me all founders of the time zone of ($x | City_NP)?.", "show me all founders of the time zones of ($x | City_NP)?.", "Who are the founders of the time zone of ($x | City_NP)??", "Who are the founders of the time zones of ($x | City_NP)??", "Who is the founder of the time zone of ($x | City_NP)??", "Who is the founder of the time zones of ($x | City_NP)??", "Who was the founder of the time zone of ($x | City_NP)??", "Who was the founder of the time zones of ($x | City_NP)??", "Who were the founders of the time zone of ($x | City_NP)??", "Who were the founders of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1273",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the time zone of ($x | City_NP)?.", "Give me all founders of the time zones of ($x | City_NP)?.", "List all the founders of the time zone of ($x | City_NP)?.", "List all the founders of the time zones of ($x | City_NP)?.", "show me all founders of the time zone of ($x | City_NP)?.", "show me all founders of the time zones of ($x | City_NP)?.", "Who are the founders of the time zone of ($x | City_NP)??", "Who are the founders of the time zones of ($x | City_NP)??", "Who is the founder of the time zone of ($x | City_NP)??", "Who is the founder of the time zones of ($x | City_NP)??", "Who was the founder of the time zone of ($x | City_NP)??", "Who was the founder of the time zones of ($x | City_NP)??", "Who were the founders of the time zone of ($x | City_NP)??", "Who were the founders of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1274",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the cause of death of ($x | Person_NP)?.", "Give me all founders of the causes of death of ($x | Person_NP)?.", "List all the founders of the cause of death of ($x | Person_NP)?.", "List all the founders of the causes of death of ($x | Person_NP)?.", "show me all founders of the cause of death of ($x | Person_NP)?.", "show me all founders of the causes of death of ($x | Person_NP)?.", "Who are the founders of the cause of death of ($x | Person_NP)??", "Who are the founders of the causes of death of ($x | Person_NP)??", "Who is the founder of the cause of death of ($x | Person_NP)??", "Who is the founder of the causes of death of ($x | Person_NP)??", "Who was the founder of the cause of death of ($x | Person_NP)??", "Who was the founder of the causes of death of ($x | Person_NP)??", "Who were the founders of the cause of death of ($x | Person_NP)??", "Who were the founders of the causes of death of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1275",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the religion of ($x | Person_NP)?.", "List all the founders of the religion of ($x | Person_NP)?.", "show me all founders of the religion of ($x | Person_NP)?.", "Who are the founders of the religion of ($x | Person_NP)??", "Who is the founder of the religion of ($x | Person_NP)??", "Who was the founder of the religion of ($x | Person_NP)??", "Who were the founders of the religion of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1276",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the area code of ($x | City_NP)?.", "List all the founders of the area code of ($x | City_NP)?.", "show me all founders of the area code of ($x | City_NP)?.", "Who are the founders of the area code of ($x | City_NP)??", "Who is the founder of the area code of ($x | City_NP)??", "Who was the founder of the area code of ($x | City_NP)??", "Who were the founders of the area code of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1277",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the address of ($x | ArchitecturalStructure_NP)?.", "Give me all founders of the addresses of ($x | ArchitecturalStructure_NP)?.", "List all the founders of the address of ($x | ArchitecturalStructure_NP)?.", "List all the founders of the addresses of ($x | ArchitecturalStructure_NP)?.", "show me all founders of the address of ($x | ArchitecturalStructure_NP)?.", "show me all founders of the addresses of ($x | ArchitecturalStructure_NP)?.", "Who are the founders of the address of ($x | ArchitecturalStructure_NP)??", "Who are the founders of the addresses of ($x | ArchitecturalStructure_NP)??", "Who is the founder of the address of ($x | ArchitecturalStructure_NP)??", "Who is the founder of the addresses of ($x | ArchitecturalStructure_NP)??", "Who was the founder of the address of ($x | ArchitecturalStructure_NP)??", "Who was the founder of the addresses of ($x | ArchitecturalStructure_NP)??", "Who were the founders of the address of ($x | ArchitecturalStructure_NP)??", "Who were the founders of the addresses of ($x | ArchitecturalStructure_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1278",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the ingredient of ($x | Food_NP)?.", "Give me all founders of the ingredients of ($x | Food_NP)?.", "List all the founders of the ingredient of ($x | Food_NP)?.", "List all the founders of the ingredients of ($x | Food_NP)?.", "show me all founders of the ingredient of ($x | Food_NP)?.", "show me all founders of the ingredients of ($x | Food_NP)?.", "Who are the founders of the ingredient of ($x | Food_NP)??", "Who are the founders of the ingredients of ($x | Food_NP)??", "Who is the founder of the ingredient of ($x | Food_NP)??", "Who is the founder of the ingredients of ($x | Food_NP)??", "Who was the founder of the ingredient of ($x | Food_NP)??", "Who was the founder of the ingredients of ($x | Food_NP)??", "Who were the founders of the ingredient of ($x | Food_NP)??", "Who were the founders of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1279",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the ingredient of ($x | Food_NP)?.", "Give me all founders of the ingredients of ($x | Food_NP)?.", "List all the founders of the ingredient of ($x | Food_NP)?.", "List all the founders of the ingredients of ($x | Food_NP)?.", "show me all founders of the ingredient of ($x | Food_NP)?.", "show me all founders of the ingredients of ($x | Food_NP)?.", "Who are the founders of the ingredient of ($x | Food_NP)??", "Who are the founders of the ingredients of ($x | Food_NP)??", "Who is the founder of the ingredient of ($x | Food_NP)??", "Who is the founder of the ingredients of ($x | Food_NP)??", "Who was the founder of the ingredient of ($x | Food_NP)??", "Who was the founder of the ingredients of ($x | Food_NP)??", "Who were the founders of the ingredient of ($x | Food_NP)??", "Who were the founders of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1280",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the nickname of ($x | City_NP)?.", "Give me all founders of the nicknames of ($x | City_NP)?.", "List all the founders of the nickname of ($x | City_NP)?.", "List all the founders of the nicknames of ($x | City_NP)?.", "show me all founders of the nickname of ($x | City_NP)?.", "show me all founders of the nicknames of ($x | City_NP)?.", "Who are the founders of the nickname of ($x | City_NP)??", "Who are the founders of the nicknames of ($x | City_NP)??", "Who is the founder of the nickname of ($x | City_NP)??", "Who is the founder of the nicknames of ($x | City_NP)??", "Who was the founder of the nickname of ($x | City_NP)??", "Who was the founder of the nicknames of ($x | City_NP)??", "Who were the founders of the nickname of ($x | City_NP)??", "Who were the founders of the nicknames of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1281",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of the flag of ($x | Place_NP)?.", "Give me all founders of the flags of ($x | Place_NP)?.", "List all the founders of the flag of ($x | Place_NP)?.", "List all the founders of the flags of ($x | Place_NP)?.", "show me all founders of the flag of ($x | Place_NP)?.", "show me all founders of the flags of ($x | Place_NP)?.", "Who are the founders of the flag of ($x | Place_NP)??", "Who are the founders of the flags of ($x | Place_NP)??", "Who is the founder of the flag of ($x | Place_NP)??", "Who is the founder of the flags of ($x | Place_NP)??", "Who was the founder of the flag of ($x | Place_NP)??", "Who was the founder of the flags of ($x | Place_NP)??", "Who were the founders of the flag of ($x | Place_NP)??", "Who were the founders of the flags of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1282",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the isbn of ($x | Book_NP)? have?", "How many founder does the isbns of ($x | Book_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1283",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the president of ($x | Person_NP)? have?", "How many founder does the presidents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1284",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the parties of ($x | Politician_NP)? have?", "How many founder does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1285",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the parties of ($x | Politician_NP)? have?", "How many founder does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1286",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the artistic movement of ($x | Artist_NP)? have?", "How many founder does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1287",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the artistic movement of ($x | Artist_NP)? have?", "How many founder does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1288",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the record label of ($x | Genre_NP)? have?", "How many founder does the record labels of ($x | Genre_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1289",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the autobiography of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1290",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the resting place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1291",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the time zone of ($x | City_NP)? have?", "How many founder does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1292",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the time zone of ($x | City_NP)? have?", "How many founder does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1293",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the cause of death of ($x | Person_NP)? have?", "How many founder does the causes of death of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1294",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the religion of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1295",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the area code of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1296",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the address of ($x | ArchitecturalStructure_NP)? have?", "How many founder does the addresses of ($x | ArchitecturalStructure_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1297",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the ingredient of ($x | Food_NP)? have?", "How many founder does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1298",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the ingredient of ($x | Food_NP)? have?", "How many founder does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1299",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the nickname of ($x | City_NP)? have?", "How many founder does the nicknames of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1300",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many founder does the flag of ($x | Place_NP)? have?", "How many founder does the flags of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1301",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the isbn of ($x | Book_NP)?.", "Give me all diameters of the isbns of ($x | Book_NP)?.", "List all the diameters of the isbn of ($x | Book_NP)?.", "List all the diameters of the isbns of ($x | Book_NP)?.", "show me all diameters of the isbn of ($x | Book_NP)?.", "show me all diameters of the isbns of ($x | Book_NP)?.", "What are the diameters of the isbn of ($x | Book_NP)??", "What are the diameters of the isbns of ($x | Book_NP)??", "What is the diameter of the isbn of ($x | Book_NP)??", "What is the diameter of the isbns of ($x | Book_NP)??", "What was the diameter of the isbn of ($x | Book_NP)??", "What was the diameter of the isbns of ($x | Book_NP)??", "What were the diameters of the isbn of ($x | Book_NP)??", "What were the diameters of the isbns of ($x | Book_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1302",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the president of ($x | Person_NP)?.", "Give me all diameters of the presidents of ($x | Person_NP)?.", "List all the diameters of the president of ($x | Person_NP)?.", "List all the diameters of the presidents of ($x | Person_NP)?.", "show me all diameters of the president of ($x | Person_NP)?.", "show me all diameters of the presidents of ($x | Person_NP)?.", "What are the diameters of the president of ($x | Person_NP)??", "What are the diameters of the presidents of ($x | Person_NP)??", "What is the diameter of the president of ($x | Person_NP)??", "What is the diameter of the presidents of ($x | Person_NP)??", "What was the diameter of the president of ($x | Person_NP)??", "What was the diameter of the presidents of ($x | Person_NP)??", "What were the diameters of the president of ($x | Person_NP)??", "What were the diameters of the presidents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1303",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the parties of ($x | Politician_NP)?.", "Give me all diameters of the party of ($x | Politician_NP)?.", "List all the diameters of the parties of ($x | Politician_NP)?.", "List all the diameters of the party of ($x | Politician_NP)?.", "show me all diameters of the parties of ($x | Politician_NP)?.", "show me all diameters of the party of ($x | Politician_NP)?.", "What are the diameters of the parties of ($x | Politician_NP)??", "What are the diameters of the party of ($x | Politician_NP)??", "What is the diameter of the parties of ($x | Politician_NP)??", "What is the diameter of the party of ($x | Politician_NP)??", "What was the diameter of the parties of ($x | Politician_NP)??", "What was the diameter of the party of ($x | Politician_NP)??", "What were the diameters of the parties of ($x | Politician_NP)??", "What were the diameters of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1304",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the parties of ($x | Politician_NP)?.", "Give me all diameters of the party of ($x | Politician_NP)?.", "List all the diameters of the parties of ($x | Politician_NP)?.", "List all the diameters of the party of ($x | Politician_NP)?.", "show me all diameters of the parties of ($x | Politician_NP)?.", "show me all diameters of the party of ($x | Politician_NP)?.", "What are the diameters of the parties of ($x | Politician_NP)??", "What are the diameters of the party of ($x | Politician_NP)??", "What is the diameter of the parties of ($x | Politician_NP)??", "What is the diameter of the party of ($x | Politician_NP)??", "What was the diameter of the parties of ($x | Politician_NP)??", "What was the diameter of the party of ($x | Politician_NP)??", "What were the diameters of the parties of ($x | Politician_NP)??", "What were the diameters of the party of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1305",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the artistic movement of ($x | Artist_NP)?.", "Give me all diameters of the artistic movements of ($x | Artist_NP)?.", "List all the diameters of the artistic movement of ($x | Artist_NP)?.", "List all the diameters of the artistic movements of ($x | Artist_NP)?.", "show me all diameters of the artistic movement of ($x | Artist_NP)?.", "show me all diameters of the artistic movements of ($x | Artist_NP)?.", "What are the diameters of the artistic movement of ($x | Artist_NP)??", "What are the diameters of the artistic movements of ($x | Artist_NP)??", "What is the diameter of the artistic movement of ($x | Artist_NP)??", "What is the diameter of the artistic movements of ($x | Artist_NP)??", "What was the diameter of the artistic movement of ($x | Artist_NP)??", "What was the diameter of the artistic movements of ($x | Artist_NP)??", "What were the diameters of the artistic movement of ($x | Artist_NP)??", "What were the diameters of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1306",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the artistic movement of ($x | Artist_NP)?.", "Give me all diameters of the artistic movements of ($x | Artist_NP)?.", "List all the diameters of the artistic movement of ($x | Artist_NP)?.", "List all the diameters of the artistic movements of ($x | Artist_NP)?.", "show me all diameters of the artistic movement of ($x | Artist_NP)?.", "show me all diameters of the artistic movements of ($x | Artist_NP)?.", "What are the diameters of the artistic movement of ($x | Artist_NP)??", "What are the diameters of the artistic movements of ($x | Artist_NP)??", "What is the diameter of the artistic movement of ($x | Artist_NP)??", "What is the diameter of the artistic movements of ($x | Artist_NP)??", "What was the diameter of the artistic movement of ($x | Artist_NP)??", "What was the diameter of the artistic movements of ($x | Artist_NP)??", "What were the diameters of the artistic movement of ($x | Artist_NP)??", "What were the diameters of the artistic movements of ($x | Artist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1307",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the record label of ($x | Genre_NP)?.", "Give me all diameters of the record labels of ($x | Genre_NP)?.", "List all the diameters of the record label of ($x | Genre_NP)?.", "List all the diameters of the record labels of ($x | Genre_NP)?.", "show me all diameters of the record label of ($x | Genre_NP)?.", "show me all diameters of the record labels of ($x | Genre_NP)?.", "What are the diameters of the record label of ($x | Genre_NP)??", "What are the diameters of the record labels of ($x | Genre_NP)??", "What is the diameter of the record label of ($x | Genre_NP)??", "What is the diameter of the record labels of ($x | Genre_NP)??", "What was the diameter of the record label of ($x | Genre_NP)??", "What was the diameter of the record labels of ($x | Genre_NP)??", "What were the diameters of the record label of ($x | Genre_NP)??", "What were the diameters of the record labels of ($x | Genre_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1308",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the autobiography of ($x | Thing_NP)?.", "List all the diameters of the autobiography of ($x | Thing_NP)?.", "show me all diameters of the autobiography of ($x | Thing_NP)?.", "What are the diameters of the autobiography of ($x | Thing_NP)??", "What is the diameter of the autobiography of ($x | Thing_NP)??", "What was the diameter of the autobiography of ($x | Thing_NP)??", "What were the diameters of the autobiography of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1309",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the resting place of ($x | Person_NP)?.", "List all the diameters of the resting place of ($x | Person_NP)?.", "show me all diameters of the resting place of ($x | Person_NP)?.", "What are the diameters of the resting place of ($x | Person_NP)??", "What is the diameter of the resting place of ($x | Person_NP)??", "What was the diameter of the resting place of ($x | Person_NP)??", "What were the diameters of the resting place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1310",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the time zone of ($x | City_NP)?.", "Give me all diameters of the time zones of ($x | City_NP)?.", "List all the diameters of the time zone of ($x | City_NP)?.", "List all the diameters of the time zones of ($x | City_NP)?.", "show me all diameters of the time zone of ($x | City_NP)?.", "show me all diameters of the time zones of ($x | City_NP)?.", "What are the diameters of the time zone of ($x | City_NP)??", "What are the diameters of the time zones of ($x | City_NP)??", "What is the diameter of the time zone of ($x | City_NP)??", "What is the diameter of the time zones of ($x | City_NP)??", "What was the diameter of the time zone of ($x | City_NP)??", "What was the diameter of the time zones of ($x | City_NP)??", "What were the diameters of the time zone of ($x | City_NP)??", "What were the diameters of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1311",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the time zone of ($x | City_NP)?.", "Give me all diameters of the time zones of ($x | City_NP)?.", "List all the diameters of the time zone of ($x | City_NP)?.", "List all the diameters of the time zones of ($x | City_NP)?.", "show me all diameters of the time zone of ($x | City_NP)?.", "show me all diameters of the time zones of ($x | City_NP)?.", "What are the diameters of the time zone of ($x | City_NP)??", "What are the diameters of the time zones of ($x | City_NP)??", "What is the diameter of the time zone of ($x | City_NP)??", "What is the diameter of the time zones of ($x | City_NP)??", "What was the diameter of the time zone of ($x | City_NP)??", "What was the diameter of the time zones of ($x | City_NP)??", "What were the diameters of the time zone of ($x | City_NP)??", "What were the diameters of the time zones of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1312",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the cause of death of ($x | Person_NP)?.", "Give me all diameters of the causes of death of ($x | Person_NP)?.", "List all the diameters of the cause of death of ($x | Person_NP)?.", "List all the diameters of the causes of death of ($x | Person_NP)?.", "show me all diameters of the cause of death of ($x | Person_NP)?.", "show me all diameters of the causes of death of ($x | Person_NP)?.", "What are the diameters of the cause of death of ($x | Person_NP)??", "What are the diameters of the causes of death of ($x | Person_NP)??", "What is the diameter of the cause of death of ($x | Person_NP)??", "What is the diameter of the causes of death of ($x | Person_NP)??", "What was the diameter of the cause of death of ($x | Person_NP)??", "What was the diameter of the causes of death of ($x | Person_NP)??", "What were the diameters of the cause of death of ($x | Person_NP)??", "What were the diameters of the causes of death of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1313",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the religion of ($x | Person_NP)?.", "List all the diameters of the religion of ($x | Person_NP)?.", "show me all diameters of the religion of ($x | Person_NP)?.", "What are the diameters of the religion of ($x | Person_NP)??", "What is the diameter of the religion of ($x | Person_NP)??", "What was the diameter of the religion of ($x | Person_NP)??", "What were the diameters of the religion of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1314",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the area code of ($x | City_NP)?.", "List all the diameters of the area code of ($x | City_NP)?.", "show me all diameters of the area code of ($x | City_NP)?.", "What are the diameters of the area code of ($x | City_NP)??", "What is the diameter of the area code of ($x | City_NP)??", "What was the diameter of the area code of ($x | City_NP)??", "What were the diameters of the area code of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1315",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the address of ($x | ArchitecturalStructure_NP)?.", "Give me all diameters of the addresses of ($x | ArchitecturalStructure_NP)?.", "List all the diameters of the address of ($x | ArchitecturalStructure_NP)?.", "List all the diameters of the addresses of ($x | ArchitecturalStructure_NP)?.", "show me all diameters of the address of ($x | ArchitecturalStructure_NP)?.", "show me all diameters of the addresses of ($x | ArchitecturalStructure_NP)?.", "What are the diameters of the address of ($x | ArchitecturalStructure_NP)??", "What are the diameters of the addresses of ($x | ArchitecturalStructure_NP)??", "What is the diameter of the address of ($x | ArchitecturalStructure_NP)??", "What is the diameter of the addresses of ($x | ArchitecturalStructure_NP)??", "What was the diameter of the address of ($x | ArchitecturalStructure_NP)??", "What was the diameter of the addresses of ($x | ArchitecturalStructure_NP)??", "What were the diameters of the address of ($x | ArchitecturalStructure_NP)??", "What were the diameters of the addresses of ($x | ArchitecturalStructure_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1316",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the ingredient of ($x | Food_NP)?.", "Give me all diameters of the ingredients of ($x | Food_NP)?.", "List all the diameters of the ingredient of ($x | Food_NP)?.", "List all the diameters of the ingredients of ($x | Food_NP)?.", "show me all diameters of the ingredient of ($x | Food_NP)?.", "show me all diameters of the ingredients of ($x | Food_NP)?.", "What are the diameters of the ingredient of ($x | Food_NP)??", "What are the diameters of the ingredients of ($x | Food_NP)??", "What is the diameter of the ingredient of ($x | Food_NP)??", "What is the diameter of the ingredients of ($x | Food_NP)??", "What was the diameter of the ingredient of ($x | Food_NP)??", "What was the diameter of the ingredients of ($x | Food_NP)??", "What were the diameters of the ingredient of ($x | Food_NP)??", "What were the diameters of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1317",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the ingredient of ($x | Food_NP)?.", "Give me all diameters of the ingredients of ($x | Food_NP)?.", "List all the diameters of the ingredient of ($x | Food_NP)?.", "List all the diameters of the ingredients of ($x | Food_NP)?.", "show me all diameters of the ingredient of ($x | Food_NP)?.", "show me all diameters of the ingredients of ($x | Food_NP)?.", "What are the diameters of the ingredient of ($x | Food_NP)??", "What are the diameters of the ingredients of ($x | Food_NP)??", "What is the diameter of the ingredient of ($x | Food_NP)??", "What is the diameter of the ingredients of ($x | Food_NP)??", "What was the diameter of the ingredient of ($x | Food_NP)??", "What was the diameter of the ingredients of ($x | Food_NP)??", "What were the diameters of the ingredient of ($x | Food_NP)??", "What were the diameters of the ingredients of ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1318",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the nickname of ($x | City_NP)?.", "Give me all diameters of the nicknames of ($x | City_NP)?.", "List all the diameters of the nickname of ($x | City_NP)?.", "List all the diameters of the nicknames of ($x | City_NP)?.", "show me all diameters of the nickname of ($x | City_NP)?.", "show me all diameters of the nicknames of ($x | City_NP)?.", "What are the diameters of the nickname of ($x | City_NP)??", "What are the diameters of the nicknames of ($x | City_NP)??", "What is the diameter of the nickname of ($x | City_NP)??", "What is the diameter of the nicknames of ($x | City_NP)??", "What was the diameter of the nickname of ($x | City_NP)??", "What was the diameter of the nicknames of ($x | City_NP)??", "What were the diameters of the nickname of ($x | City_NP)??", "What were the diameters of the nicknames of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1319",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of the flag of ($x | Place_NP)?.", "Give me all diameters of the flags of ($x | Place_NP)?.", "List all the diameters of the flag of ($x | Place_NP)?.", "List all the diameters of the flags of ($x | Place_NP)?.", "show me all diameters of the flag of ($x | Place_NP)?.", "show me all diameters of the flags of ($x | Place_NP)?.", "What are the diameters of the flag of ($x | Place_NP)??", "What are the diameters of the flags of ($x | Place_NP)??", "What is the diameter of the flag of ($x | Place_NP)??", "What is the diameter of the flags of ($x | Place_NP)??", "What was the diameter of the flag of ($x | Place_NP)??", "What was the diameter of the flags of ($x | Place_NP)??", "What were the diameters of the flag of ($x | Place_NP)??", "What were the diameters of the flags of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1320",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the isbn of ($x | Book_NP)? have?", "How many diameter does the isbns of ($x | Book_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isbn> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1321",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the president of ($x | Person_NP)? have?", "How many diameter does the presidents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/office> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1322",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the parties of ($x | Politician_NP)? have?", "How many diameter does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1323",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the parties of ($x | Politician_NP)? have?", "How many diameter does the party of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/party> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1324",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the artistic movement of ($x | Artist_NP)? have?", "How many diameter does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1325",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the artistic movement of ($x | Artist_NP)? have?", "How many diameter does the artistic movements of ($x | Artist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/movement> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1326",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the record label of ($x | Genre_NP)? have?", "How many diameter does the record labels of ($x | Genre_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/RecordLabel> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1327",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the autobiography of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/literaryGenre> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1328",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the resting place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1329",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the time zone of ($x | City_NP)? have?", "How many diameter does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1330",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the time zone of ($x | City_NP)? have?", "How many diameter does the time zones of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/timeZone> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1331",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the cause of death of ($x | Person_NP)? have?", "How many diameter does the causes of death of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1332",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the religion of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/religion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1333",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the area code of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1334",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the address of ($x | ArchitecturalStructure_NP)? have?", "How many diameter does the addresses of ($x | ArchitecturalStructure_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/address> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1335",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the ingredient of ($x | Food_NP)? have?", "How many diameter does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1336",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the ingredient of ($x | Food_NP)? have?", "How many diameter does the ingredients of ($x | Food_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1337",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the nickname of ($x | City_NP)? have?", "How many diameter does the nicknames of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1338",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many diameter does the flag of ($x | Place_NP)? have?", "How many diameter does the flags of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/flag> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1339",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the death place of ($x | Politician_NP)?.", "List all the residences of the death place of ($x | Politician_NP)?.", "show me all residences of the death place of ($x | Politician_NP)?.", "Who are the residences of the death place of ($x | Politician_NP)??", "Who is the residence of the death place of ($x | Politician_NP)??", "Who was the residence of the death place of ($x | Politician_NP)??", "Who were the residences of the death place of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1340",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the location of ($x | Place_NP)?.", "List all the residences of the location of ($x | Place_NP)?.", "show me all residences of the location of ($x | Place_NP)?.", "Who are the residences of the location of ($x | Place_NP)??", "Who is the residence of the location of ($x | Place_NP)??", "Who was the residence of the location of ($x | Place_NP)??", "Who were the residences of the location of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1341",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the first Ascent Person of ($x | Mountain_NP)?.", "Give me all residences of the first Ascent Persons of ($x | Mountain_NP)?.", "List all the residences of the first Ascent Person of ($x | Mountain_NP)?.", "List all the residences of the first Ascent Persons of ($x | Mountain_NP)?.", "show me all residences of the first Ascent Person of ($x | Mountain_NP)?.", "show me all residences of the first Ascent Persons of ($x | Mountain_NP)?.", "Who are the residences of the first Ascent Person of ($x | Mountain_NP)??", "Who are the residences of the first Ascent Persons of ($x | Mountain_NP)??", "Who is the residence of the first Ascent Person of ($x | Mountain_NP)??", "Who is the residence of the first Ascent Persons of ($x | Mountain_NP)??", "Who was the residence of the first Ascent Person of ($x | Mountain_NP)??", "Who was the residence of the first Ascent Persons of ($x | Mountain_NP)??", "Who were the residences of the first Ascent Person of ($x | Mountain_NP)??", "Who were the residences of the first Ascent Persons of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1342",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the employer of ($x | Person_NP)?.", "Give me all residences of the employers of ($x | Person_NP)?.", "List all the residences of the employer of ($x | Person_NP)?.", "List all the residences of the employers of ($x | Person_NP)?.", "show me all residences of the employer of ($x | Person_NP)?.", "show me all residences of the employers of ($x | Person_NP)?.", "Who are the residences of the employer of ($x | Person_NP)??", "Who are the residences of the employers of ($x | Person_NP)??", "Who is the residence of the employer of ($x | Person_NP)??", "Who is the residence of the employers of ($x | Person_NP)??", "Who was the residence of the employer of ($x | Person_NP)??", "Who was the residence of the employers of ($x | Person_NP)??", "Who were the residences of the employer of ($x | Person_NP)??", "Who were the residences of the employers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/employer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1343",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the wine region of ($x | Grape_NP)?.", "Give me all residences of the wine regions of ($x | Grape_NP)?.", "List all the residences of the wine region of ($x | Grape_NP)?.", "List all the residences of the wine regions of ($x | Grape_NP)?.", "show me all residences of the wine region of ($x | Grape_NP)?.", "show me all residences of the wine regions of ($x | Grape_NP)?.", "Who are the residences of the wine region of ($x | Grape_NP)??", "Who are the residences of the wine regions of ($x | Grape_NP)??", "Who is the residence of the wine region of ($x | Grape_NP)??", "Who is the residence of the wine regions of ($x | Grape_NP)??", "Who was the residence of the wine region of ($x | Grape_NP)??", "Who was the residence of the wine regions of ($x | Grape_NP)??", "Who were the residences of the wine region of ($x | Grape_NP)??", "Who were the residences of the wine regions of ($x | Grape_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/wineRegion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1344",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the associated Musical Artist of ($x | Band_NP)?.", "Give me all residences of the associated Musical Artists of ($x | Band_NP)?.", "List all the residences of the associated Musical Artist of ($x | Band_NP)?.", "List all the residences of the associated Musical Artists of ($x | Band_NP)?.", "show me all residences of the associated Musical Artist of ($x | Band_NP)?.", "show me all residences of the associated Musical Artists of ($x | Band_NP)?.", "Who are the residences of the associated Musical Artist of ($x | Band_NP)??", "Who are the residences of the associated Musical Artists of ($x | Band_NP)??", "Who is the residence of the associated Musical Artist of ($x | Band_NP)??", "Who is the residence of the associated Musical Artists of ($x | Band_NP)??", "Who was the residence of the associated Musical Artist of ($x | Band_NP)??", "Who was the residence of the associated Musical Artists of ($x | Band_NP)??", "Who were the residences of the associated Musical Artist of ($x | Band_NP)??", "Who were the residences of the associated Musical Artists of ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/associatedMusicalArtist> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1345",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the death place of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1346",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the location of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1347",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the first Ascent Person of ($x | Mountain_NP)? have?", "How many residence does the first Ascent Persons of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1348",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the employer of ($x | Person_NP)? have?", "How many residence does the employers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/employer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1349",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the wine region of ($x | Grape_NP)? have?", "How many residence does the wine regions of ($x | Grape_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/wineRegion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1350",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the associated Musical Artist of ($x | Band_NP)? have?", "How many residence does the associated Musical Artists of ($x | Band_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1351",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the editor of ($x | Work_NP)?.", "Give me all daughters of the editors of ($x | Work_NP)?.", "List all the daughters of the editor of ($x | Work_NP)?.", "List all the daughters of the editors of ($x | Work_NP)?.", "show me all daughters of the editor of ($x | Work_NP)?.", "show me all daughters of the editors of ($x | Work_NP)?.", "Who are the daughters of the editor of ($x | Work_NP)??", "Who are the daughters of the editors of ($x | Work_NP)??", "Who is the daughter of the editor of ($x | Work_NP)??", "Who is the daughter of the editors of ($x | Work_NP)??", "Who was the daughter of the editor of ($x | Work_NP)??", "Who was the daughter of the editors of ($x | Work_NP)??", "Who were the daughters of the editor of ($x | Work_NP)??", "Who were the daughters of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1352",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the parent of ($x | Person_NP)?.", "Give me all daughters of the parents of ($x | Person_NP)?.", "List all the daughters of the parent of ($x | Person_NP)?.", "List all the daughters of the parents of ($x | Person_NP)?.", "show me all daughters of the parent of ($x | Person_NP)?.", "show me all daughters of the parents of ($x | Person_NP)?.", "Who are the daughters of the parent of ($x | Person_NP)??", "Who are the daughters of the parents of ($x | Person_NP)??", "Who is the daughter of the parent of ($x | Person_NP)??", "Who is the daughter of the parents of ($x | Person_NP)??", "Who was the daughter of the parent of ($x | Person_NP)??", "Who was the daughter of the parents of ($x | Person_NP)??", "Who were the daughters of the parent of ($x | Person_NP)??", "Who were the daughters of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1353",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the king of ($x | Legislature_NP)?.", "Give me all daughters of the kings of ($x | Legislature_NP)?.", "List all the daughters of the king of ($x | Legislature_NP)?.", "List all the daughters of the kings of ($x | Legislature_NP)?.", "show me all daughters of the king of ($x | Legislature_NP)?.", "show me all daughters of the kings of ($x | Legislature_NP)?.", "Who are the daughters of the king of ($x | Legislature_NP)??", "Who are the daughters of the kings of ($x | Legislature_NP)??", "Who is the daughter of the king of ($x | Legislature_NP)??", "Who is the daughter of the kings of ($x | Legislature_NP)??", "Who was the daughter of the king of ($x | Legislature_NP)??", "Who was the daughter of the kings of ($x | Legislature_NP)??", "Who were the daughters of the king of ($x | Legislature_NP)??", "Who were the daughters of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1354",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all daughters of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the daughters of the coach of ($x | IceHockeyLeague_NP)?.", "List all the daughters of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all daughters of the coach of ($x | IceHockeyLeague_NP)?.", "show me all daughters of the coaches of ($x | IceHockeyLeague_NP)?.", "Who are the daughters of the coach of ($x | IceHockeyLeague_NP)??", "Who are the daughters of the coaches of ($x | IceHockeyLeague_NP)??", "Who is the daughter of the coach of ($x | IceHockeyLeague_NP)??", "Who is the daughter of the coaches of ($x | IceHockeyLeague_NP)??", "Who was the daughter of the coach of ($x | IceHockeyLeague_NP)??", "Who was the daughter of the coaches of ($x | IceHockeyLeague_NP)??", "Who were the daughters of the coach of ($x | IceHockeyLeague_NP)??", "Who were the daughters of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1355",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the coach of ($x | HockeyTeam_NP)?.", "Give me all daughters of the coaches of ($x | HockeyTeam_NP)?.", "List all the daughters of the coach of ($x | HockeyTeam_NP)?.", "List all the daughters of the coaches of ($x | HockeyTeam_NP)?.", "show me all daughters of the coach of ($x | HockeyTeam_NP)?.", "show me all daughters of the coaches of ($x | HockeyTeam_NP)?.", "Who are the daughters of the coach of ($x | HockeyTeam_NP)??", "Who are the daughters of the coaches of ($x | HockeyTeam_NP)??", "Who is the daughter of the coach of ($x | HockeyTeam_NP)??", "Who is the daughter of the coaches of ($x | HockeyTeam_NP)??", "Who was the daughter of the coach of ($x | HockeyTeam_NP)??", "Who was the daughter of the coaches of ($x | HockeyTeam_NP)??", "Who were the daughters of the coach of ($x | HockeyTeam_NP)??", "Who were the daughters of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1356",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the daughters of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all daughters of the alter ego of ($x | ComicsCharacter_NP)?.", "Who are the daughters of the alter ego of ($x | ComicsCharacter_NP)??", "Who is the daughter of the alter ego of ($x | ComicsCharacter_NP)??", "Who was the daughter of the alter ego of ($x | ComicsCharacter_NP)??", "Who were the daughters of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1357",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the author of ($x | Work_NP)?.", "Give me all daughters of the authors of ($x | Work_NP)?.", "List all the daughters of the author of ($x | Work_NP)?.", "List all the daughters of the authors of ($x | Work_NP)?.", "show me all daughters of the author of ($x | Work_NP)?.", "show me all daughters of the authors of ($x | Work_NP)?.", "Who are the daughters of the author of ($x | Work_NP)??", "Who are the daughters of the authors of ($x | Work_NP)??", "Who is the daughter of the author of ($x | Work_NP)??", "Who is the daughter of the authors of ($x | Work_NP)??", "Who was the daughter of the author of ($x | Work_NP)??", "Who was the daughter of the authors of ($x | Work_NP)??", "Who were the daughters of the author of ($x | Work_NP)??", "Who were the daughters of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1358",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the mayor of ($x | Settlement_NP)?.", "Give me all daughters of the mayors of ($x | Settlement_NP)?.", "List all the daughters of the mayor of ($x | Settlement_NP)?.", "List all the daughters of the mayors of ($x | Settlement_NP)?.", "show me all daughters of the mayor of ($x | Settlement_NP)?.", "show me all daughters of the mayors of ($x | Settlement_NP)?.", "Who are the daughters of the mayor of ($x | Settlement_NP)??", "Who are the daughters of the mayors of ($x | Settlement_NP)??", "Who is the daughter of the mayor of ($x | Settlement_NP)??", "Who is the daughter of the mayors of ($x | Settlement_NP)??", "Who was the daughter of the mayor of ($x | Settlement_NP)??", "Who was the daughter of the mayors of ($x | Settlement_NP)??", "Who were the daughters of the mayor of ($x | Settlement_NP)??", "Who were the daughters of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1359",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the music by ($x | Musical_NP)?.", "Give me all daughters of the musics by ($x | Musical_NP)?.", "List all the daughters of the music by ($x | Musical_NP)?.", "List all the daughters of the musics by ($x | Musical_NP)?.", "show me all daughters of the music by ($x | Musical_NP)?.", "show me all daughters of the musics by ($x | Musical_NP)?.", "Who are the daughters of the music by ($x | Musical_NP)??", "Who are the daughters of the musics by ($x | Musical_NP)??", "Who is the daughter of the music by ($x | Musical_NP)??", "Who is the daughter of the musics by ($x | Musical_NP)??", "Who was the daughter of the music by ($x | Musical_NP)??", "Who was the daughter of the musics by ($x | Musical_NP)??", "Who were the daughters of the music by ($x | Musical_NP)??", "Who were the daughters of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1360",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the foundation series of ($x | TelevisionShow_NP)?.", "List all the daughters of the foundation series of ($x | TelevisionShow_NP)?.", "show me all daughters of the foundation series of ($x | TelevisionShow_NP)?.", "Who are the daughters of the foundation series of ($x | TelevisionShow_NP)??", "Who is the daughter of the foundation series of ($x | TelevisionShow_NP)??", "Who was the daughter of the foundation series of ($x | TelevisionShow_NP)??", "Who were the daughters of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1361",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the creator of ($x | FictionalCharacter_NP)?.", "Give me all daughters of the creators of ($x | FictionalCharacter_NP)?.", "List all the daughters of the creator of ($x | FictionalCharacter_NP)?.", "List all the daughters of the creators of ($x | FictionalCharacter_NP)?.", "show me all daughters of the creator of ($x | FictionalCharacter_NP)?.", "show me all daughters of the creators of ($x | FictionalCharacter_NP)?.", "Who are the daughters of the creator of ($x | FictionalCharacter_NP)??", "Who are the daughters of the creators of ($x | FictionalCharacter_NP)??", "Who is the daughter of the creator of ($x | FictionalCharacter_NP)??", "Who is the daughter of the creators of ($x | FictionalCharacter_NP)??", "Who was the daughter of the creator of ($x | FictionalCharacter_NP)??", "Who was the daughter of the creators of ($x | FictionalCharacter_NP)??", "Who were the daughters of the creator of ($x | FictionalCharacter_NP)??", "Who were the daughters of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1362",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the influencer of ($x | Person_NP)?.", "Give me all daughters of the influencers of ($x | Person_NP)?.", "List all the daughters of the influencer of ($x | Person_NP)?.", "List all the daughters of the influencers of ($x | Person_NP)?.", "show me all daughters of the influencer of ($x | Person_NP)?.", "show me all daughters of the influencers of ($x | Person_NP)?.", "Who are the daughters of the influencer of ($x | Person_NP)??", "Who are the daughters of the influencers of ($x | Person_NP)??", "Who is the daughter of the influencer of ($x | Person_NP)??", "Who is the daughter of the influencers of ($x | Person_NP)??", "Who was the daughter of the influencer of ($x | Person_NP)??", "Who was the daughter of the influencers of ($x | Person_NP)??", "Who were the daughters of the influencer of ($x | Person_NP)??", "Who were the daughters of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1363",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the wife of ($x | Person_NP)?.", "Give me all daughters of the wives of ($x | Person_NP)?.", "List all the daughters of the wife of ($x | Person_NP)?.", "List all the daughters of the wives of ($x | Person_NP)?.", "show me all daughters of the wife of ($x | Person_NP)?.", "show me all daughters of the wives of ($x | Person_NP)?.", "Who are the daughters of the wife of ($x | Person_NP)??", "Who are the daughters of the wives of ($x | Person_NP)??", "Who is the daughter of the wife of ($x | Person_NP)??", "Who is the daughter of the wives of ($x | Person_NP)??", "Who was the daughter of the wife of ($x | Person_NP)??", "Who was the daughter of the wives of ($x | Person_NP)??", "Who were the daughters of the wife of ($x | Person_NP)??", "Who were the daughters of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1364",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all daughters of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the daughters of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the daughters of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all daughters of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all daughters of the doctoral supervisors of ($x | Scientist_NP)?.", "Who are the daughters of the doctoral supervisor of ($x | Scientist_NP)??", "Who are the daughters of the doctoral supervisors of ($x | Scientist_NP)??", "Who is the daughter of the doctoral supervisor of ($x | Scientist_NP)??", "Who is the daughter of the doctoral supervisors of ($x | Scientist_NP)??", "Who was the daughter of the doctoral supervisor of ($x | Scientist_NP)??", "Who was the daughter of the doctoral supervisors of ($x | Scientist_NP)??", "Who were the daughters of the doctoral supervisor of ($x | Scientist_NP)??", "Who were the daughters of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1365",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the host of ($x | TelevisionShow_NP)?.", "Give me all daughters of the hosts of ($x | TelevisionShow_NP)?.", "List all the daughters of the host of ($x | TelevisionShow_NP)?.", "List all the daughters of the hosts of ($x | TelevisionShow_NP)?.", "show me all daughters of the host of ($x | TelevisionShow_NP)?.", "show me all daughters of the hosts of ($x | TelevisionShow_NP)?.", "Who are the daughters of the host of ($x | TelevisionShow_NP)??", "Who are the daughters of the hosts of ($x | TelevisionShow_NP)??", "Who is the daughter of the host of ($x | TelevisionShow_NP)??", "Who is the daughter of the hosts of ($x | TelevisionShow_NP)??", "Who was the daughter of the host of ($x | TelevisionShow_NP)??", "Who was the daughter of the hosts of ($x | TelevisionShow_NP)??", "Who were the daughters of the host of ($x | TelevisionShow_NP)??", "Who were the daughters of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1366",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the residence of ($x | Place_NP)?.", "Give me all daughters of the residences of ($x | Place_NP)?.", "List all the daughters of the residence of ($x | Place_NP)?.", "List all the daughters of the residences of ($x | Place_NP)?.", "show me all daughters of the residence of ($x | Place_NP)?.", "show me all daughters of the residences of ($x | Place_NP)?.", "Who are the daughters of the residence of ($x | Place_NP)??", "Who are the daughters of the residences of ($x | Place_NP)??", "Who is the daughter of the residence of ($x | Place_NP)??", "Who is the daughter of the residences of ($x | Place_NP)??", "Who was the daughter of the residence of ($x | Place_NP)??", "Who was the daughter of the residences of ($x | Place_NP)??", "Who were the daughters of the residence of ($x | Place_NP)??", "Who were the daughters of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1367",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the daughter of ($x | Person_NP)?.", "Give me all daughters of the daughters of ($x | Person_NP)?.", "List all the daughters of the daughter of ($x | Person_NP)?.", "List all the daughters of the daughters of ($x | Person_NP)?.", "show me all daughters of the daughter of ($x | Person_NP)?.", "show me all daughters of the daughters of ($x | Person_NP)?.", "Who are the daughters of the daughter of ($x | Person_NP)??", "Who are the daughters of the daughters of ($x | Person_NP)??", "Who is the daughter of the daughter of ($x | Person_NP)??", "Who is the daughter of the daughters of ($x | Person_NP)??", "Who was the daughter of the daughter of ($x | Person_NP)??", "Who was the daughter of the daughters of ($x | Person_NP)??", "Who were the daughters of the daughter of ($x | Person_NP)??", "Who were the daughters of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1368",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the successor of ($x | Politician_NP)?.", "List all the daughters of the successor of ($x | Politician_NP)?.", "show me all daughters of the successor of ($x | Politician_NP)?.", "Who are the daughters of the successor of ($x | Politician_NP)??", "Who is the daughter of the successor of ($x | Politician_NP)??", "Who was the daughter of the successor of ($x | Politician_NP)??", "Who were the daughters of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1369",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the child of ($x | Person_NP)?.", "Give me all daughters of the children of ($x | Person_NP)?.", "List all the daughters of the child of ($x | Person_NP)?.", "List all the daughters of the children of ($x | Person_NP)?.", "show me all daughters of the child of ($x | Person_NP)?.", "show me all daughters of the children of ($x | Person_NP)?.", "Who are the daughters of the child of ($x | Person_NP)??", "Who are the daughters of the children of ($x | Person_NP)??", "Who is the daughter of the child of ($x | Person_NP)??", "Who is the daughter of the children of ($x | Person_NP)??", "Who was the daughter of the child of ($x | Person_NP)??", "Who was the daughter of the children of ($x | Person_NP)??", "Who were the daughters of the child of ($x | Person_NP)??", "Who were the daughters of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1370",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the governor of ($x | Person_NP)?.", "Give me all daughters of the governors of ($x | Person_NP)?.", "List all the daughters of the governor of ($x | Person_NP)?.", "List all the daughters of the governors of ($x | Person_NP)?.", "show me all daughters of the governor of ($x | Person_NP)?.", "show me all daughters of the governors of ($x | Person_NP)?.", "Who are the daughters of the governor of ($x | Person_NP)??", "Who are the daughters of the governors of ($x | Person_NP)??", "Who is the daughter of the governor of ($x | Person_NP)??", "Who is the daughter of the governors of ($x | Person_NP)??", "Who was the daughter of the governor of ($x | Person_NP)??", "Who was the daughter of the governors of ($x | Person_NP)??", "Who were the daughters of the governor of ($x | Person_NP)??", "Who were the daughters of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1371",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the music composer of ($x | TelevisionShow_NP)?.", "Give me all daughters of the music composers of ($x | TelevisionShow_NP)?.", "List all the daughters of the music composer of ($x | TelevisionShow_NP)?.", "List all the daughters of the music composers of ($x | TelevisionShow_NP)?.", "show me all daughters of the music composer of ($x | TelevisionShow_NP)?.", "show me all daughters of the music composers of ($x | TelevisionShow_NP)?.", "Who are the daughters of the music composer of ($x | TelevisionShow_NP)??", "Who are the daughters of the music composers of ($x | TelevisionShow_NP)??", "Who is the daughter of the music composer of ($x | TelevisionShow_NP)??", "Who is the daughter of the music composers of ($x | TelevisionShow_NP)??", "Who was the daughter of the music composer of ($x | TelevisionShow_NP)??", "Who was the daughter of the music composers of ($x | TelevisionShow_NP)??", "Who were the daughters of the music composer of ($x | TelevisionShow_NP)??", "Who were the daughters of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1372",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the first to climb  ($x | Mountain_NP)?.", "List all the daughters of the first to climb  ($x | Mountain_NP)?.", "show me all daughters of the first to climb  ($x | Mountain_NP)?.", "Who are the daughters of the first to climb  ($x | Mountain_NP)??", "Who is the daughter of the first to climb  ($x | Mountain_NP)??", "Who was the daughter of the first to climb  ($x | Mountain_NP)??", "Who were the daughters of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1373",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the father of ($x | Royalty_NP)?.", "List all the daughters of the father of ($x | Royalty_NP)?.", "show me all daughters of the father of ($x | Royalty_NP)?.", "Who are the daughters of the father of ($x | Royalty_NP)??", "Who is the daughter of the father of ($x | Royalty_NP)??", "Who was the daughter of the father of ($x | Royalty_NP)??", "Who were the daughters of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1374",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the music composer of ($x | TelevisionShow_NP)?.", "Give me all daughters of the music composers of ($x | TelevisionShow_NP)?.", "List all the daughters of the music composer of ($x | TelevisionShow_NP)?.", "List all the daughters of the music composers of ($x | TelevisionShow_NP)?.", "show me all daughters of the music composer of ($x | TelevisionShow_NP)?.", "show me all daughters of the music composers of ($x | TelevisionShow_NP)?.", "Who are the daughters of the music composer of ($x | TelevisionShow_NP)??", "Who are the daughters of the music composers of ($x | TelevisionShow_NP)??", "Who is the daughter of the music composer of ($x | TelevisionShow_NP)??", "Who is the daughter of the music composers of ($x | TelevisionShow_NP)??", "Who was the daughter of the music composer of ($x | TelevisionShow_NP)??", "Who was the daughter of the music composers of ($x | TelevisionShow_NP)??", "Who were the daughters of the music composer of ($x | TelevisionShow_NP)??", "Who were the daughters of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1375",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the son of ($x | Person_NP)?.", "Give me all daughters of the sons of ($x | Person_NP)?.", "List all the daughters of the son of ($x | Person_NP)?.", "List all the daughters of the sons of ($x | Person_NP)?.", "show me all daughters of the son of ($x | Person_NP)?.", "show me all daughters of the sons of ($x | Person_NP)?.", "Who are the daughters of the son of ($x | Person_NP)??", "Who are the daughters of the sons of ($x | Person_NP)??", "Who is the daughter of the son of ($x | Person_NP)??", "Who is the daughter of the sons of ($x | Person_NP)??", "Who was the daughter of the son of ($x | Person_NP)??", "Who was the daughter of the sons of ($x | Person_NP)??", "Who were the daughters of the son of ($x | Person_NP)??", "Who were the daughters of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1376",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the son of ($x | Person_NP)?.", "Give me all daughters of the sons of ($x | Person_NP)?.", "List all the daughters of the son of ($x | Person_NP)?.", "List all the daughters of the sons of ($x | Person_NP)?.", "show me all daughters of the son of ($x | Person_NP)?.", "show me all daughters of the sons of ($x | Person_NP)?.", "Who are the daughters of the son of ($x | Person_NP)??", "Who are the daughters of the sons of ($x | Person_NP)??", "Who is the daughter of the son of ($x | Person_NP)??", "Who is the daughter of the sons of ($x | Person_NP)??", "Who was the daughter of the son of ($x | Person_NP)??", "Who was the daughter of the sons of ($x | Person_NP)??", "Who were the daughters of the son of ($x | Person_NP)??", "Who were the daughters of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1377",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of the mayor of ($x | City_NP)?.", "Give me all daughters of the mayors of ($x | City_NP)?.", "List all the daughters of the mayor of ($x | City_NP)?.", "List all the daughters of the mayors of ($x | City_NP)?.", "show me all daughters of the mayor of ($x | City_NP)?.", "show me all daughters of the mayors of ($x | City_NP)?.", "Who are the daughters of the mayor of ($x | City_NP)??", "Who are the daughters of the mayors of ($x | City_NP)??", "Who is the daughter of the mayor of ($x | City_NP)??", "Who is the daughter of the mayors of ($x | City_NP)??", "Who was the daughter of the mayor of ($x | City_NP)??", "Who was the daughter of the mayors of ($x | City_NP)??", "Who were the daughters of the mayor of ($x | City_NP)??", "Who were the daughters of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1378",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the editor of ($x | Work_NP)? have?", "How many daughter does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1379",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the parent of ($x | Person_NP)? have?", "How many daughter does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1380",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the king of ($x | Legislature_NP)? have?", "How many daughter does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1381",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the coach of ($x | IceHockeyLeague_NP)? have?", "How many daughter does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1382",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the coach of ($x | HockeyTeam_NP)? have?", "How many daughter does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1383",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1384",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the author of ($x | Work_NP)? have?", "How many daughter does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1385",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the mayor of ($x | Settlement_NP)? have?", "How many daughter does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1386",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the music by ($x | Musical_NP)? have?", "How many daughter does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1387",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1388",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the creator of ($x | FictionalCharacter_NP)? have?", "How many daughter does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1389",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the influencer of ($x | Person_NP)? have?", "How many daughter does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1390",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the wife of ($x | Person_NP)? have?", "How many daughter does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1391",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many daughter does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1392",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the host of ($x | TelevisionShow_NP)? have?", "How many daughter does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1393",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the residence of ($x | Place_NP)? have?", "How many daughter does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1394",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the daughter of ($x | Person_NP)? have?", "How many daughter does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1395",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1396",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the child of ($x | Person_NP)? have?", "How many daughter does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1397",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the governor of ($x | Person_NP)? have?", "How many daughter does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1398",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the music composer of ($x | TelevisionShow_NP)? have?", "How many daughter does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1399",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1400",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1401",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the music composer of ($x | TelevisionShow_NP)? have?", "How many daughter does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1402",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the son of ($x | Person_NP)? have?", "How many daughter does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1403",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the son of ($x | Person_NP)? have?", "How many daughter does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1404",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many daughter does the mayor of ($x | City_NP)? have?", "How many daughter does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1405",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all closing Dates of the producer of ($x | Film_NP)?.", "Give me all closing Dates of the producers of ($x | Film_NP)?.", "List all the closing Dates of the producer of ($x | Film_NP)?.", "List all the closing Dates of the producers of ($x | Film_NP)?.", "show me all closing Dates of the producer of ($x | Film_NP)?.", "show me all closing Dates of the producers of ($x | Film_NP)?.", "What are the closing Dates of the producer of ($x | Film_NP)??", "What are the closing Dates of the producers of ($x | Film_NP)??", "What is the closing Date of the producer of ($x | Film_NP)??", "What is the closing Date of the producers of ($x | Film_NP)??", "What was the closing Date of the producer of ($x | Film_NP)??", "What was the closing Date of the producers of ($x | Film_NP)??", "What were the closing Dates of the producer of ($x | Film_NP)??", "What were the closing Dates of the producers of ($x | Film_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1406",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all closing Dates of the founder of ($x | Thing_NP)?.", "Give me all closing Dates of the founders of ($x | Thing_NP)?.", "List all the closing Dates of the founder of ($x | Thing_NP)?.", "List all the closing Dates of the founders of ($x | Thing_NP)?.", "show me all closing Dates of the founder of ($x | Thing_NP)?.", "show me all closing Dates of the founders of ($x | Thing_NP)?.", "What are the closing Dates of the founder of ($x | Thing_NP)??", "What are the closing Dates of the founders of ($x | Thing_NP)??", "What is the closing Date of the founder of ($x | Thing_NP)??", "What is the closing Date of the founders of ($x | Thing_NP)??", "What was the closing Date of the founder of ($x | Thing_NP)??", "What was the closing Date of the founders of ($x | Thing_NP)??", "What were the closing Dates of the founder of ($x | Thing_NP)??", "What were the closing Dates of the founders of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1407",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many closing Date does the producer of ($x | Film_NP)? have?", "How many closing Date does the producers of ($x | Film_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1408",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many closing Date does the founder of ($x | Thing_NP)? have?", "How many closing Date does the founders of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1409",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Who is the successor of the vice president of ($x | Politician_NP)??", "Who was the successor of the vice president of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1410",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many successor does the vice president of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1411",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all vice president of the vice president of ($x | Politician_NP)?.", "List all the vice president of the vice president of ($x | Politician_NP)?.", "show me all vice president of the vice president of ($x | Politician_NP)?.", "Who are the vice president of the vice president of ($x | Politician_NP)??", "Who is the vice president of the vice president of ($x | Politician_NP)??", "Who was the vice president of the vice president of ($x | Politician_NP)??", "Who were the vice president of the vice president of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1412",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many vice president does the vice president of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1413",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the editor of ($x | Work_NP)?.", "Give me all children of the editors of ($x | Work_NP)?.", "List all the children of the editor of ($x | Work_NP)?.", "List all the children of the editors of ($x | Work_NP)?.", "show me all children of the editor of ($x | Work_NP)?.", "show me all children of the editors of ($x | Work_NP)?.", "Who are the children of the editor of ($x | Work_NP)??", "Who are the children of the editors of ($x | Work_NP)??", "Who is the child of the editor of ($x | Work_NP)??", "Who is the child of the editors of ($x | Work_NP)??", "Who was the child of the editor of ($x | Work_NP)??", "Who was the child of the editors of ($x | Work_NP)??", "Who were the children of the editor of ($x | Work_NP)??", "Who were the children of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1414",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the parent of ($x | Person_NP)?.", "Give me all children of the parents of ($x | Person_NP)?.", "List all the children of the parent of ($x | Person_NP)?.", "List all the children of the parents of ($x | Person_NP)?.", "show me all children of the parent of ($x | Person_NP)?.", "show me all children of the parents of ($x | Person_NP)?.", "Who are the children of the parent of ($x | Person_NP)??", "Who are the children of the parents of ($x | Person_NP)??", "Who is the child of the parent of ($x | Person_NP)??", "Who is the child of the parents of ($x | Person_NP)??", "Who was the child of the parent of ($x | Person_NP)??", "Who was the child of the parents of ($x | Person_NP)??", "Who were the children of the parent of ($x | Person_NP)??", "Who were the children of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1415",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the king of ($x | Legislature_NP)?.", "Give me all children of the kings of ($x | Legislature_NP)?.", "List all the children of the king of ($x | Legislature_NP)?.", "List all the children of the kings of ($x | Legislature_NP)?.", "show me all children of the king of ($x | Legislature_NP)?.", "show me all children of the kings of ($x | Legislature_NP)?.", "Who are the children of the king of ($x | Legislature_NP)??", "Who are the children of the kings of ($x | Legislature_NP)??", "Who is the child of the king of ($x | Legislature_NP)??", "Who is the child of the kings of ($x | Legislature_NP)??", "Who was the child of the king of ($x | Legislature_NP)??", "Who was the child of the kings of ($x | Legislature_NP)??", "Who were the children of the king of ($x | Legislature_NP)??", "Who were the children of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1416",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all children of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the children of the coach of ($x | IceHockeyLeague_NP)?.", "List all the children of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all children of the coach of ($x | IceHockeyLeague_NP)?.", "show me all children of the coaches of ($x | IceHockeyLeague_NP)?.", "Who are the children of the coach of ($x | IceHockeyLeague_NP)??", "Who are the children of the coaches of ($x | IceHockeyLeague_NP)??", "Who is the child of the coach of ($x | IceHockeyLeague_NP)??", "Who is the child of the coaches of ($x | IceHockeyLeague_NP)??", "Who was the child of the coach of ($x | IceHockeyLeague_NP)??", "Who was the child of the coaches of ($x | IceHockeyLeague_NP)??", "Who were the children of the coach of ($x | IceHockeyLeague_NP)??", "Who were the children of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1417",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the coach of ($x | HockeyTeam_NP)?.", "Give me all children of the coaches of ($x | HockeyTeam_NP)?.", "List all the children of the coach of ($x | HockeyTeam_NP)?.", "List all the children of the coaches of ($x | HockeyTeam_NP)?.", "show me all children of the coach of ($x | HockeyTeam_NP)?.", "show me all children of the coaches of ($x | HockeyTeam_NP)?.", "Who are the children of the coach of ($x | HockeyTeam_NP)??", "Who are the children of the coaches of ($x | HockeyTeam_NP)??", "Who is the child of the coach of ($x | HockeyTeam_NP)??", "Who is the child of the coaches of ($x | HockeyTeam_NP)??", "Who was the child of the coach of ($x | HockeyTeam_NP)??", "Who was the child of the coaches of ($x | HockeyTeam_NP)??", "Who were the children of the coach of ($x | HockeyTeam_NP)??", "Who were the children of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1418",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the children of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all children of the alter ego of ($x | ComicsCharacter_NP)?.", "Who are the children of the alter ego of ($x | ComicsCharacter_NP)??", "Who is the child of the alter ego of ($x | ComicsCharacter_NP)??", "Who was the child of the alter ego of ($x | ComicsCharacter_NP)??", "Who were the children of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1419",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the author of ($x | Work_NP)?.", "Give me all children of the authors of ($x | Work_NP)?.", "List all the children of the author of ($x | Work_NP)?.", "List all the children of the authors of ($x | Work_NP)?.", "show me all children of the author of ($x | Work_NP)?.", "show me all children of the authors of ($x | Work_NP)?.", "Who are the children of the author of ($x | Work_NP)??", "Who are the children of the authors of ($x | Work_NP)??", "Who is the child of the author of ($x | Work_NP)??", "Who is the child of the authors of ($x | Work_NP)??", "Who was the child of the author of ($x | Work_NP)??", "Who was the child of the authors of ($x | Work_NP)??", "Who were the children of the author of ($x | Work_NP)??", "Who were the children of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1420",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the mayor of ($x | Settlement_NP)?.", "Give me all children of the mayors of ($x | Settlement_NP)?.", "List all the children of the mayor of ($x | Settlement_NP)?.", "List all the children of the mayors of ($x | Settlement_NP)?.", "show me all children of the mayor of ($x | Settlement_NP)?.", "show me all children of the mayors of ($x | Settlement_NP)?.", "Who are the children of the mayor of ($x | Settlement_NP)??", "Who are the children of the mayors of ($x | Settlement_NP)??", "Who is the child of the mayor of ($x | Settlement_NP)??", "Who is the child of the mayors of ($x | Settlement_NP)??", "Who was the child of the mayor of ($x | Settlement_NP)??", "Who was the child of the mayors of ($x | Settlement_NP)??", "Who were the children of the mayor of ($x | Settlement_NP)??", "Who were the children of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1421",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the music by ($x | Musical_NP)?.", "Give me all children of the musics by ($x | Musical_NP)?.", "List all the children of the music by ($x | Musical_NP)?.", "List all the children of the musics by ($x | Musical_NP)?.", "show me all children of the music by ($x | Musical_NP)?.", "show me all children of the musics by ($x | Musical_NP)?.", "Who are the children of the music by ($x | Musical_NP)??", "Who are the children of the musics by ($x | Musical_NP)??", "Who is the child of the music by ($x | Musical_NP)??", "Who is the child of the musics by ($x | Musical_NP)??", "Who was the child of the music by ($x | Musical_NP)??", "Who was the child of the musics by ($x | Musical_NP)??", "Who were the children of the music by ($x | Musical_NP)??", "Who were the children of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1422",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the foundation series of ($x | TelevisionShow_NP)?.", "List all the children of the foundation series of ($x | TelevisionShow_NP)?.", "show me all children of the foundation series of ($x | TelevisionShow_NP)?.", "Who are the children of the foundation series of ($x | TelevisionShow_NP)??", "Who is the child of the foundation series of ($x | TelevisionShow_NP)??", "Who was the child of the foundation series of ($x | TelevisionShow_NP)??", "Who were the children of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1423",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the creator of ($x | FictionalCharacter_NP)?.", "Give me all children of the creators of ($x | FictionalCharacter_NP)?.", "List all the children of the creator of ($x | FictionalCharacter_NP)?.", "List all the children of the creators of ($x | FictionalCharacter_NP)?.", "show me all children of the creator of ($x | FictionalCharacter_NP)?.", "show me all children of the creators of ($x | FictionalCharacter_NP)?.", "Who are the children of the creator of ($x | FictionalCharacter_NP)??", "Who are the children of the creators of ($x | FictionalCharacter_NP)??", "Who is the child of the creator of ($x | FictionalCharacter_NP)??", "Who is the child of the creators of ($x | FictionalCharacter_NP)??", "Who was the child of the creator of ($x | FictionalCharacter_NP)??", "Who was the child of the creators of ($x | FictionalCharacter_NP)??", "Who were the children of the creator of ($x | FictionalCharacter_NP)??", "Who were the children of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1424",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the influencer of ($x | Person_NP)?.", "Give me all children of the influencers of ($x | Person_NP)?.", "List all the children of the influencer of ($x | Person_NP)?.", "List all the children of the influencers of ($x | Person_NP)?.", "show me all children of the influencer of ($x | Person_NP)?.", "show me all children of the influencers of ($x | Person_NP)?.", "Who are the children of the influencer of ($x | Person_NP)??", "Who are the children of the influencers of ($x | Person_NP)??", "Who is the child of the influencer of ($x | Person_NP)??", "Who is the child of the influencers of ($x | Person_NP)??", "Who was the child of the influencer of ($x | Person_NP)??", "Who was the child of the influencers of ($x | Person_NP)??", "Who were the children of the influencer of ($x | Person_NP)??", "Who were the children of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1425",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the wife of ($x | Person_NP)?.", "Give me all children of the wives of ($x | Person_NP)?.", "List all the children of the wife of ($x | Person_NP)?.", "List all the children of the wives of ($x | Person_NP)?.", "show me all children of the wife of ($x | Person_NP)?.", "show me all children of the wives of ($x | Person_NP)?.", "Who are the children of the wife of ($x | Person_NP)??", "Who are the children of the wives of ($x | Person_NP)??", "Who is the child of the wife of ($x | Person_NP)??", "Who is the child of the wives of ($x | Person_NP)??", "Who was the child of the wife of ($x | Person_NP)??", "Who was the child of the wives of ($x | Person_NP)??", "Who were the children of the wife of ($x | Person_NP)??", "Who were the children of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1426",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all children of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the children of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the children of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all children of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all children of the doctoral supervisors of ($x | Scientist_NP)?.", "Who are the children of the doctoral supervisor of ($x | Scientist_NP)??", "Who are the children of the doctoral supervisors of ($x | Scientist_NP)??", "Who is the child of the doctoral supervisor of ($x | Scientist_NP)??", "Who is the child of the doctoral supervisors of ($x | Scientist_NP)??", "Who was the child of the doctoral supervisor of ($x | Scientist_NP)??", "Who was the child of the doctoral supervisors of ($x | Scientist_NP)??", "Who were the children of the doctoral supervisor of ($x | Scientist_NP)??", "Who were the children of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1427",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the host of ($x | TelevisionShow_NP)?.", "Give me all children of the hosts of ($x | TelevisionShow_NP)?.", "List all the children of the host of ($x | TelevisionShow_NP)?.", "List all the children of the hosts of ($x | TelevisionShow_NP)?.", "show me all children of the host of ($x | TelevisionShow_NP)?.", "show me all children of the hosts of ($x | TelevisionShow_NP)?.", "Who are the children of the host of ($x | TelevisionShow_NP)??", "Who are the children of the hosts of ($x | TelevisionShow_NP)??", "Who is the child of the host of ($x | TelevisionShow_NP)??", "Who is the child of the hosts of ($x | TelevisionShow_NP)??", "Who was the child of the host of ($x | TelevisionShow_NP)??", "Who was the child of the hosts of ($x | TelevisionShow_NP)??", "Who were the children of the host of ($x | TelevisionShow_NP)??", "Who were the children of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1428",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the residence of ($x | Place_NP)?.", "Give me all children of the residences of ($x | Place_NP)?.", "List all the children of the residence of ($x | Place_NP)?.", "List all the children of the residences of ($x | Place_NP)?.", "show me all children of the residence of ($x | Place_NP)?.", "show me all children of the residences of ($x | Place_NP)?.", "Who are the children of the residence of ($x | Place_NP)??", "Who are the children of the residences of ($x | Place_NP)??", "Who is the child of the residence of ($x | Place_NP)??", "Who is the child of the residences of ($x | Place_NP)??", "Who was the child of the residence of ($x | Place_NP)??", "Who was the child of the residences of ($x | Place_NP)??", "Who were the children of the residence of ($x | Place_NP)??", "Who were the children of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1429",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the daughter of ($x | Person_NP)?.", "Give me all children of the daughters of ($x | Person_NP)?.", "List all the children of the daughter of ($x | Person_NP)?.", "List all the children of the daughters of ($x | Person_NP)?.", "show me all children of the daughter of ($x | Person_NP)?.", "show me all children of the daughters of ($x | Person_NP)?.", "Who are the children of the daughter of ($x | Person_NP)??", "Who are the children of the daughters of ($x | Person_NP)??", "Who is the child of the daughter of ($x | Person_NP)??", "Who is the child of the daughters of ($x | Person_NP)??", "Who was the child of the daughter of ($x | Person_NP)??", "Who was the child of the daughters of ($x | Person_NP)??", "Who were the children of the daughter of ($x | Person_NP)??", "Who were the children of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1430",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the successor of ($x | Politician_NP)?.", "List all the children of the successor of ($x | Politician_NP)?.", "show me all children of the successor of ($x | Politician_NP)?.", "Who are the children of the successor of ($x | Politician_NP)??", "Who is the child of the successor of ($x | Politician_NP)??", "Who was the child of the successor of ($x | Politician_NP)??", "Who were the children of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1431",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the child of ($x | Person_NP)?.", "Give me all children of the children of ($x | Person_NP)?.", "List all the children of the child of ($x | Person_NP)?.", "List all the children of the children of ($x | Person_NP)?.", "show me all children of the child of ($x | Person_NP)?.", "show me all children of the children of ($x | Person_NP)?.", "Who are the children of the child of ($x | Person_NP)??", "Who are the children of the children of ($x | Person_NP)??", "Who is the child of the child of ($x | Person_NP)??", "Who is the child of the children of ($x | Person_NP)??", "Who was the child of the child of ($x | Person_NP)??", "Who was the child of the children of ($x | Person_NP)??", "Who were the children of the child of ($x | Person_NP)??", "Who were the children of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1432",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the governor of ($x | Person_NP)?.", "Give me all children of the governors of ($x | Person_NP)?.", "List all the children of the governor of ($x | Person_NP)?.", "List all the children of the governors of ($x | Person_NP)?.", "show me all children of the governor of ($x | Person_NP)?.", "show me all children of the governors of ($x | Person_NP)?.", "Who are the children of the governor of ($x | Person_NP)??", "Who are the children of the governors of ($x | Person_NP)??", "Who is the child of the governor of ($x | Person_NP)??", "Who is the child of the governors of ($x | Person_NP)??", "Who was the child of the governor of ($x | Person_NP)??", "Who was the child of the governors of ($x | Person_NP)??", "Who were the children of the governor of ($x | Person_NP)??", "Who were the children of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1433",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the music composer of ($x | TelevisionShow_NP)?.", "Give me all children of the music composers of ($x | TelevisionShow_NP)?.", "List all the children of the music composer of ($x | TelevisionShow_NP)?.", "List all the children of the music composers of ($x | TelevisionShow_NP)?.", "show me all children of the music composer of ($x | TelevisionShow_NP)?.", "show me all children of the music composers of ($x | TelevisionShow_NP)?.", "Who are the children of the music composer of ($x | TelevisionShow_NP)??", "Who are the children of the music composers of ($x | TelevisionShow_NP)??", "Who is the child of the music composer of ($x | TelevisionShow_NP)??", "Who is the child of the music composers of ($x | TelevisionShow_NP)??", "Who was the child of the music composer of ($x | TelevisionShow_NP)??", "Who was the child of the music composers of ($x | TelevisionShow_NP)??", "Who were the children of the music composer of ($x | TelevisionShow_NP)??", "Who were the children of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1434",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the first to climb  ($x | Mountain_NP)?.", "List all the children of the first to climb  ($x | Mountain_NP)?.", "show me all children of the first to climb  ($x | Mountain_NP)?.", "Who are the children of the first to climb  ($x | Mountain_NP)??", "Who is the child of the first to climb  ($x | Mountain_NP)??", "Who was the child of the first to climb  ($x | Mountain_NP)??", "Who were the children of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1435",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the father of ($x | Royalty_NP)?.", "List all the children of the father of ($x | Royalty_NP)?.", "show me all children of the father of ($x | Royalty_NP)?.", "Who are the children of the father of ($x | Royalty_NP)??", "Who is the child of the father of ($x | Royalty_NP)??", "Who was the child of the father of ($x | Royalty_NP)??", "Who were the children of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1436",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the music composer of ($x | TelevisionShow_NP)?.", "Give me all children of the music composers of ($x | TelevisionShow_NP)?.", "List all the children of the music composer of ($x | TelevisionShow_NP)?.", "List all the children of the music composers of ($x | TelevisionShow_NP)?.", "show me all children of the music composer of ($x | TelevisionShow_NP)?.", "show me all children of the music composers of ($x | TelevisionShow_NP)?.", "Who are the children of the music composer of ($x | TelevisionShow_NP)??", "Who are the children of the music composers of ($x | TelevisionShow_NP)??", "Who is the child of the music composer of ($x | TelevisionShow_NP)??", "Who is the child of the music composers of ($x | TelevisionShow_NP)??", "Who was the child of the music composer of ($x | TelevisionShow_NP)??", "Who was the child of the music composers of ($x | TelevisionShow_NP)??", "Who were the children of the music composer of ($x | TelevisionShow_NP)??", "Who were the children of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1437",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the son of ($x | Person_NP)?.", "Give me all children of the sons of ($x | Person_NP)?.", "List all the children of the son of ($x | Person_NP)?.", "List all the children of the sons of ($x | Person_NP)?.", "show me all children of the son of ($x | Person_NP)?.", "show me all children of the sons of ($x | Person_NP)?.", "Who are the children of the son of ($x | Person_NP)??", "Who are the children of the sons of ($x | Person_NP)??", "Who is the child of the son of ($x | Person_NP)??", "Who is the child of the sons of ($x | Person_NP)??", "Who was the child of the son of ($x | Person_NP)??", "Who was the child of the sons of ($x | Person_NP)??", "Who were the children of the son of ($x | Person_NP)??", "Who were the children of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1438",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the son of ($x | Person_NP)?.", "Give me all children of the sons of ($x | Person_NP)?.", "List all the children of the son of ($x | Person_NP)?.", "List all the children of the sons of ($x | Person_NP)?.", "show me all children of the son of ($x | Person_NP)?.", "show me all children of the sons of ($x | Person_NP)?.", "Who are the children of the son of ($x | Person_NP)??", "Who are the children of the sons of ($x | Person_NP)??", "Who is the child of the son of ($x | Person_NP)??", "Who is the child of the sons of ($x | Person_NP)??", "Who was the child of the son of ($x | Person_NP)??", "Who was the child of the sons of ($x | Person_NP)??", "Who were the children of the son of ($x | Person_NP)??", "Who were the children of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1439",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of the mayor of ($x | City_NP)?.", "Give me all children of the mayors of ($x | City_NP)?.", "List all the children of the mayor of ($x | City_NP)?.", "List all the children of the mayors of ($x | City_NP)?.", "show me all children of the mayor of ($x | City_NP)?.", "show me all children of the mayors of ($x | City_NP)?.", "Who are the children of the mayor of ($x | City_NP)??", "Who are the children of the mayors of ($x | City_NP)??", "Who is the child of the mayor of ($x | City_NP)??", "Who is the child of the mayors of ($x | City_NP)??", "Who was the child of the mayor of ($x | City_NP)??", "Who was the child of the mayors of ($x | City_NP)??", "Who were the children of the mayor of ($x | City_NP)??", "Who were the children of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1440",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the editor of ($x | Work_NP)? have?", "How many child does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1441",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the parent of ($x | Person_NP)? have?", "How many child does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1442",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the king of ($x | Legislature_NP)? have?", "How many child does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1443",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the coach of ($x | IceHockeyLeague_NP)? have?", "How many child does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1444",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the coach of ($x | HockeyTeam_NP)? have?", "How many child does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1445",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1446",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the author of ($x | Work_NP)? have?", "How many child does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1447",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the mayor of ($x | Settlement_NP)? have?", "How many child does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1448",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the music by ($x | Musical_NP)? have?", "How many child does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1449",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1450",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the creator of ($x | FictionalCharacter_NP)? have?", "How many child does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1451",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the influencer of ($x | Person_NP)? have?", "How many child does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1452",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the wife of ($x | Person_NP)? have?", "How many child does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1453",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many child does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1454",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the host of ($x | TelevisionShow_NP)? have?", "How many child does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1455",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the residence of ($x | Place_NP)? have?", "How many child does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1456",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the daughter of ($x | Person_NP)? have?", "How many child does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1457",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1458",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the child of ($x | Person_NP)? have?", "How many child does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1459",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the governor of ($x | Person_NP)? have?", "How many child does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1460",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the music composer of ($x | TelevisionShow_NP)? have?", "How many child does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1461",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1462",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1463",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the music composer of ($x | TelevisionShow_NP)? have?", "How many child does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1464",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the son of ($x | Person_NP)? have?", "How many child does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1465",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the son of ($x | Person_NP)? have?", "How many child does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1466",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many child does the mayor of ($x | City_NP)? have?", "How many child does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1467",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the editor of ($x | Work_NP)?.", "Give me all residences of the editors of ($x | Work_NP)?.", "List all the residences of the editor of ($x | Work_NP)?.", "List all the residences of the editors of ($x | Work_NP)?.", "show me all residences of the editor of ($x | Work_NP)?.", "show me all residences of the editors of ($x | Work_NP)?.", "What are the residences of the editor of ($x | Work_NP)??", "What are the residences of the editors of ($x | Work_NP)??", "What is the residence of the editor of ($x | Work_NP)??", "What is the residence of the editors of ($x | Work_NP)??", "What was the residence of the editor of ($x | Work_NP)??", "What was the residence of the editors of ($x | Work_NP)??", "What were the residences of the editor of ($x | Work_NP)??", "What were the residences of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1468",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the parent of ($x | Person_NP)?.", "Give me all residences of the parents of ($x | Person_NP)?.", "List all the residences of the parent of ($x | Person_NP)?.", "List all the residences of the parents of ($x | Person_NP)?.", "show me all residences of the parent of ($x | Person_NP)?.", "show me all residences of the parents of ($x | Person_NP)?.", "What are the residences of the parent of ($x | Person_NP)??", "What are the residences of the parents of ($x | Person_NP)??", "What is the residence of the parent of ($x | Person_NP)??", "What is the residence of the parents of ($x | Person_NP)??", "What was the residence of the parent of ($x | Person_NP)??", "What was the residence of the parents of ($x | Person_NP)??", "What were the residences of the parent of ($x | Person_NP)??", "What were the residences of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1469",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the king of ($x | Legislature_NP)?.", "Give me all residences of the kings of ($x | Legislature_NP)?.", "List all the residences of the king of ($x | Legislature_NP)?.", "List all the residences of the kings of ($x | Legislature_NP)?.", "show me all residences of the king of ($x | Legislature_NP)?.", "show me all residences of the kings of ($x | Legislature_NP)?.", "What are the residences of the king of ($x | Legislature_NP)??", "What are the residences of the kings of ($x | Legislature_NP)??", "What is the residence of the king of ($x | Legislature_NP)??", "What is the residence of the kings of ($x | Legislature_NP)??", "What was the residence of the king of ($x | Legislature_NP)??", "What was the residence of the kings of ($x | Legislature_NP)??", "What were the residences of the king of ($x | Legislature_NP)??", "What were the residences of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1470",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all residences of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the residences of the coach of ($x | IceHockeyLeague_NP)?.", "List all the residences of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all residences of the coach of ($x | IceHockeyLeague_NP)?.", "show me all residences of the coaches of ($x | IceHockeyLeague_NP)?.", "What are the residences of the coach of ($x | IceHockeyLeague_NP)??", "What are the residences of the coaches of ($x | IceHockeyLeague_NP)??", "What is the residence of the coach of ($x | IceHockeyLeague_NP)??", "What is the residence of the coaches of ($x | IceHockeyLeague_NP)??", "What was the residence of the coach of ($x | IceHockeyLeague_NP)??", "What was the residence of the coaches of ($x | IceHockeyLeague_NP)??", "What were the residences of the coach of ($x | IceHockeyLeague_NP)??", "What were the residences of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1471",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the coach of ($x | HockeyTeam_NP)?.", "Give me all residences of the coaches of ($x | HockeyTeam_NP)?.", "List all the residences of the coach of ($x | HockeyTeam_NP)?.", "List all the residences of the coaches of ($x | HockeyTeam_NP)?.", "show me all residences of the coach of ($x | HockeyTeam_NP)?.", "show me all residences of the coaches of ($x | HockeyTeam_NP)?.", "What are the residences of the coach of ($x | HockeyTeam_NP)??", "What are the residences of the coaches of ($x | HockeyTeam_NP)??", "What is the residence of the coach of ($x | HockeyTeam_NP)??", "What is the residence of the coaches of ($x | HockeyTeam_NP)??", "What was the residence of the coach of ($x | HockeyTeam_NP)??", "What was the residence of the coaches of ($x | HockeyTeam_NP)??", "What were the residences of the coach of ($x | HockeyTeam_NP)??", "What were the residences of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1472",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the residences of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all residences of the alter ego of ($x | ComicsCharacter_NP)?.", "What are the residences of the alter ego of ($x | ComicsCharacter_NP)??", "What is the residence of the alter ego of ($x | ComicsCharacter_NP)??", "What was the residence of the alter ego of ($x | ComicsCharacter_NP)??", "What were the residences of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1473",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the author of ($x | Work_NP)?.", "Give me all residences of the authors of ($x | Work_NP)?.", "List all the residences of the author of ($x | Work_NP)?.", "List all the residences of the authors of ($x | Work_NP)?.", "show me all residences of the author of ($x | Work_NP)?.", "show me all residences of the authors of ($x | Work_NP)?.", "What are the residences of the author of ($x | Work_NP)??", "What are the residences of the authors of ($x | Work_NP)??", "What is the residence of the author of ($x | Work_NP)??", "What is the residence of the authors of ($x | Work_NP)??", "What was the residence of the author of ($x | Work_NP)??", "What was the residence of the authors of ($x | Work_NP)??", "What were the residences of the author of ($x | Work_NP)??", "What were the residences of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1474",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the mayor of ($x | Settlement_NP)?.", "Give me all residences of the mayors of ($x | Settlement_NP)?.", "List all the residences of the mayor of ($x | Settlement_NP)?.", "List all the residences of the mayors of ($x | Settlement_NP)?.", "show me all residences of the mayor of ($x | Settlement_NP)?.", "show me all residences of the mayors of ($x | Settlement_NP)?.", "What are the residences of the mayor of ($x | Settlement_NP)??", "What are the residences of the mayors of ($x | Settlement_NP)??", "What is the residence of the mayor of ($x | Settlement_NP)??", "What is the residence of the mayors of ($x | Settlement_NP)??", "What was the residence of the mayor of ($x | Settlement_NP)??", "What was the residence of the mayors of ($x | Settlement_NP)??", "What were the residences of the mayor of ($x | Settlement_NP)??", "What were the residences of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1475",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the music by ($x | Musical_NP)?.", "Give me all residences of the musics by ($x | Musical_NP)?.", "List all the residences of the music by ($x | Musical_NP)?.", "List all the residences of the musics by ($x | Musical_NP)?.", "show me all residences of the music by ($x | Musical_NP)?.", "show me all residences of the musics by ($x | Musical_NP)?.", "What are the residences of the music by ($x | Musical_NP)??", "What are the residences of the musics by ($x | Musical_NP)??", "What is the residence of the music by ($x | Musical_NP)??", "What is the residence of the musics by ($x | Musical_NP)??", "What was the residence of the music by ($x | Musical_NP)??", "What was the residence of the musics by ($x | Musical_NP)??", "What were the residences of the music by ($x | Musical_NP)??", "What were the residences of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1476",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the foundation series of ($x | TelevisionShow_NP)?.", "List all the residences of the foundation series of ($x | TelevisionShow_NP)?.", "show me all residences of the foundation series of ($x | TelevisionShow_NP)?.", "What are the residences of the foundation series of ($x | TelevisionShow_NP)??", "What is the residence of the foundation series of ($x | TelevisionShow_NP)??", "What was the residence of the foundation series of ($x | TelevisionShow_NP)??", "What were the residences of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1477",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the creator of ($x | FictionalCharacter_NP)?.", "Give me all residences of the creators of ($x | FictionalCharacter_NP)?.", "List all the residences of the creator of ($x | FictionalCharacter_NP)?.", "List all the residences of the creators of ($x | FictionalCharacter_NP)?.", "show me all residences of the creator of ($x | FictionalCharacter_NP)?.", "show me all residences of the creators of ($x | FictionalCharacter_NP)?.", "What are the residences of the creator of ($x | FictionalCharacter_NP)??", "What are the residences of the creators of ($x | FictionalCharacter_NP)??", "What is the residence of the creator of ($x | FictionalCharacter_NP)??", "What is the residence of the creators of ($x | FictionalCharacter_NP)??", "What was the residence of the creator of ($x | FictionalCharacter_NP)??", "What was the residence of the creators of ($x | FictionalCharacter_NP)??", "What were the residences of the creator of ($x | FictionalCharacter_NP)??", "What were the residences of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1478",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the influencer of ($x | Person_NP)?.", "Give me all residences of the influencers of ($x | Person_NP)?.", "List all the residences of the influencer of ($x | Person_NP)?.", "List all the residences of the influencers of ($x | Person_NP)?.", "show me all residences of the influencer of ($x | Person_NP)?.", "show me all residences of the influencers of ($x | Person_NP)?.", "What are the residences of the influencer of ($x | Person_NP)??", "What are the residences of the influencers of ($x | Person_NP)??", "What is the residence of the influencer of ($x | Person_NP)??", "What is the residence of the influencers of ($x | Person_NP)??", "What was the residence of the influencer of ($x | Person_NP)??", "What was the residence of the influencers of ($x | Person_NP)??", "What were the residences of the influencer of ($x | Person_NP)??", "What were the residences of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1479",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the wife of ($x | Person_NP)?.", "Give me all residences of the wives of ($x | Person_NP)?.", "List all the residences of the wife of ($x | Person_NP)?.", "List all the residences of the wives of ($x | Person_NP)?.", "show me all residences of the wife of ($x | Person_NP)?.", "show me all residences of the wives of ($x | Person_NP)?.", "What are the residences of the wife of ($x | Person_NP)??", "What are the residences of the wives of ($x | Person_NP)??", "What is the residence of the wife of ($x | Person_NP)??", "What is the residence of the wives of ($x | Person_NP)??", "What was the residence of the wife of ($x | Person_NP)??", "What was the residence of the wives of ($x | Person_NP)??", "What were the residences of the wife of ($x | Person_NP)??", "What were the residences of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1480",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all residences of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the residences of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the residences of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all residences of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all residences of the doctoral supervisors of ($x | Scientist_NP)?.", "What are the residences of the doctoral supervisor of ($x | Scientist_NP)??", "What are the residences of the doctoral supervisors of ($x | Scientist_NP)??", "What is the residence of the doctoral supervisor of ($x | Scientist_NP)??", "What is the residence of the doctoral supervisors of ($x | Scientist_NP)??", "What was the residence of the doctoral supervisor of ($x | Scientist_NP)??", "What was the residence of the doctoral supervisors of ($x | Scientist_NP)??", "What were the residences of the doctoral supervisor of ($x | Scientist_NP)??", "What were the residences of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1481",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the host of ($x | TelevisionShow_NP)?.", "Give me all residences of the hosts of ($x | TelevisionShow_NP)?.", "List all the residences of the host of ($x | TelevisionShow_NP)?.", "List all the residences of the hosts of ($x | TelevisionShow_NP)?.", "show me all residences of the host of ($x | TelevisionShow_NP)?.", "show me all residences of the hosts of ($x | TelevisionShow_NP)?.", "What are the residences of the host of ($x | TelevisionShow_NP)??", "What are the residences of the hosts of ($x | TelevisionShow_NP)??", "What is the residence of the host of ($x | TelevisionShow_NP)??", "What is the residence of the hosts of ($x | TelevisionShow_NP)??", "What was the residence of the host of ($x | TelevisionShow_NP)??", "What was the residence of the hosts of ($x | TelevisionShow_NP)??", "What were the residences of the host of ($x | TelevisionShow_NP)??", "What were the residences of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1482",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the residence of ($x | Place_NP)?.", "Give me all residences of the residences of ($x | Place_NP)?.", "List all the residences of the residence of ($x | Place_NP)?.", "List all the residences of the residences of ($x | Place_NP)?.", "show me all residences of the residence of ($x | Place_NP)?.", "show me all residences of the residences of ($x | Place_NP)?.", "What are the residences of the residence of ($x | Place_NP)??", "What are the residences of the residences of ($x | Place_NP)??", "What is the residence of the residence of ($x | Place_NP)??", "What is the residence of the residences of ($x | Place_NP)??", "What was the residence of the residence of ($x | Place_NP)??", "What was the residence of the residences of ($x | Place_NP)??", "What were the residences of the residence of ($x | Place_NP)??", "What were the residences of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1483",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the daughter of ($x | Person_NP)?.", "Give me all residences of the daughters of ($x | Person_NP)?.", "List all the residences of the daughter of ($x | Person_NP)?.", "List all the residences of the daughters of ($x | Person_NP)?.", "show me all residences of the daughter of ($x | Person_NP)?.", "show me all residences of the daughters of ($x | Person_NP)?.", "What are the residences of the daughter of ($x | Person_NP)??", "What are the residences of the daughters of ($x | Person_NP)??", "What is the residence of the daughter of ($x | Person_NP)??", "What is the residence of the daughters of ($x | Person_NP)??", "What was the residence of the daughter of ($x | Person_NP)??", "What was the residence of the daughters of ($x | Person_NP)??", "What were the residences of the daughter of ($x | Person_NP)??", "What were the residences of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1484",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the successor of ($x | Politician_NP)?.", "List all the residences of the successor of ($x | Politician_NP)?.", "show me all residences of the successor of ($x | Politician_NP)?.", "What are the residences of the successor of ($x | Politician_NP)??", "What is the residence of the successor of ($x | Politician_NP)??", "What was the residence of the successor of ($x | Politician_NP)??", "What were the residences of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1485",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the child of ($x | Person_NP)?.", "Give me all residences of the children of ($x | Person_NP)?.", "List all the residences of the child of ($x | Person_NP)?.", "List all the residences of the children of ($x | Person_NP)?.", "show me all residences of the child of ($x | Person_NP)?.", "show me all residences of the children of ($x | Person_NP)?.", "What are the residences of the child of ($x | Person_NP)??", "What are the residences of the children of ($x | Person_NP)??", "What is the residence of the child of ($x | Person_NP)??", "What is the residence of the children of ($x | Person_NP)??", "What was the residence of the child of ($x | Person_NP)??", "What was the residence of the children of ($x | Person_NP)??", "What were the residences of the child of ($x | Person_NP)??", "What were the residences of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1486",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the governor of ($x | Person_NP)?.", "Give me all residences of the governors of ($x | Person_NP)?.", "List all the residences of the governor of ($x | Person_NP)?.", "List all the residences of the governors of ($x | Person_NP)?.", "show me all residences of the governor of ($x | Person_NP)?.", "show me all residences of the governors of ($x | Person_NP)?.", "What are the residences of the governor of ($x | Person_NP)??", "What are the residences of the governors of ($x | Person_NP)??", "What is the residence of the governor of ($x | Person_NP)??", "What is the residence of the governors of ($x | Person_NP)??", "What was the residence of the governor of ($x | Person_NP)??", "What was the residence of the governors of ($x | Person_NP)??", "What were the residences of the governor of ($x | Person_NP)??", "What were the residences of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1487",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the music composer of ($x | TelevisionShow_NP)?.", "Give me all residences of the music composers of ($x | TelevisionShow_NP)?.", "List all the residences of the music composer of ($x | TelevisionShow_NP)?.", "List all the residences of the music composers of ($x | TelevisionShow_NP)?.", "show me all residences of the music composer of ($x | TelevisionShow_NP)?.", "show me all residences of the music composers of ($x | TelevisionShow_NP)?.", "What are the residences of the music composer of ($x | TelevisionShow_NP)??", "What are the residences of the music composers of ($x | TelevisionShow_NP)??", "What is the residence of the music composer of ($x | TelevisionShow_NP)??", "What is the residence of the music composers of ($x | TelevisionShow_NP)??", "What was the residence of the music composer of ($x | TelevisionShow_NP)??", "What was the residence of the music composers of ($x | TelevisionShow_NP)??", "What were the residences of the music composer of ($x | TelevisionShow_NP)??", "What were the residences of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1488",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the first to climb  ($x | Mountain_NP)?.", "List all the residences of the first to climb  ($x | Mountain_NP)?.", "show me all residences of the first to climb  ($x | Mountain_NP)?.", "What are the residences of the first to climb  ($x | Mountain_NP)??", "What is the residence of the first to climb  ($x | Mountain_NP)??", "What was the residence of the first to climb  ($x | Mountain_NP)??", "What were the residences of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1489",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the father of ($x | Royalty_NP)?.", "List all the residences of the father of ($x | Royalty_NP)?.", "show me all residences of the father of ($x | Royalty_NP)?.", "What are the residences of the father of ($x | Royalty_NP)??", "What is the residence of the father of ($x | Royalty_NP)??", "What was the residence of the father of ($x | Royalty_NP)??", "What were the residences of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1490",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the music composer of ($x | TelevisionShow_NP)?.", "Give me all residences of the music composers of ($x | TelevisionShow_NP)?.", "List all the residences of the music composer of ($x | TelevisionShow_NP)?.", "List all the residences of the music composers of ($x | TelevisionShow_NP)?.", "show me all residences of the music composer of ($x | TelevisionShow_NP)?.", "show me all residences of the music composers of ($x | TelevisionShow_NP)?.", "What are the residences of the music composer of ($x | TelevisionShow_NP)??", "What are the residences of the music composers of ($x | TelevisionShow_NP)??", "What is the residence of the music composer of ($x | TelevisionShow_NP)??", "What is the residence of the music composers of ($x | TelevisionShow_NP)??", "What was the residence of the music composer of ($x | TelevisionShow_NP)??", "What was the residence of the music composers of ($x | TelevisionShow_NP)??", "What were the residences of the music composer of ($x | TelevisionShow_NP)??", "What were the residences of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1491",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the son of ($x | Person_NP)?.", "Give me all residences of the sons of ($x | Person_NP)?.", "List all the residences of the son of ($x | Person_NP)?.", "List all the residences of the sons of ($x | Person_NP)?.", "show me all residences of the son of ($x | Person_NP)?.", "show me all residences of the sons of ($x | Person_NP)?.", "What are the residences of the son of ($x | Person_NP)??", "What are the residences of the sons of ($x | Person_NP)??", "What is the residence of the son of ($x | Person_NP)??", "What is the residence of the sons of ($x | Person_NP)??", "What was the residence of the son of ($x | Person_NP)??", "What was the residence of the sons of ($x | Person_NP)??", "What were the residences of the son of ($x | Person_NP)??", "What were the residences of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1492",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the son of ($x | Person_NP)?.", "Give me all residences of the sons of ($x | Person_NP)?.", "List all the residences of the son of ($x | Person_NP)?.", "List all the residences of the sons of ($x | Person_NP)?.", "show me all residences of the son of ($x | Person_NP)?.", "show me all residences of the sons of ($x | Person_NP)?.", "What are the residences of the son of ($x | Person_NP)??", "What are the residences of the sons of ($x | Person_NP)??", "What is the residence of the son of ($x | Person_NP)??", "What is the residence of the sons of ($x | Person_NP)??", "What was the residence of the son of ($x | Person_NP)??", "What was the residence of the sons of ($x | Person_NP)??", "What were the residences of the son of ($x | Person_NP)??", "What were the residences of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1493",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of the mayor of ($x | City_NP)?.", "Give me all residences of the mayors of ($x | City_NP)?.", "List all the residences of the mayor of ($x | City_NP)?.", "List all the residences of the mayors of ($x | City_NP)?.", "show me all residences of the mayor of ($x | City_NP)?.", "show me all residences of the mayors of ($x | City_NP)?.", "What are the residences of the mayor of ($x | City_NP)??", "What are the residences of the mayors of ($x | City_NP)??", "What is the residence of the mayor of ($x | City_NP)??", "What is the residence of the mayors of ($x | City_NP)??", "What was the residence of the mayor of ($x | City_NP)??", "What was the residence of the mayors of ($x | City_NP)??", "What were the residences of the mayor of ($x | City_NP)??", "What were the residences of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1494",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the editor of ($x | Work_NP)? have?", "How many residence does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1495",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the parent of ($x | Person_NP)? have?", "How many residence does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1496",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the king of ($x | Legislature_NP)? have?", "How many residence does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1497",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the coach of ($x | IceHockeyLeague_NP)? have?", "How many residence does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1498",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the coach of ($x | HockeyTeam_NP)? have?", "How many residence does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1499",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1500",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the author of ($x | Work_NP)? have?", "How many residence does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1501",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the mayor of ($x | Settlement_NP)? have?", "How many residence does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1502",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the music by ($x | Musical_NP)? have?", "How many residence does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1503",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1504",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the creator of ($x | FictionalCharacter_NP)? have?", "How many residence does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1505",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the influencer of ($x | Person_NP)? have?", "How many residence does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1506",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the wife of ($x | Person_NP)? have?", "How many residence does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1507",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many residence does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1508",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the host of ($x | TelevisionShow_NP)? have?", "How many residence does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1509",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the residence of ($x | Place_NP)? have?", "How many residence does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1510",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the daughter of ($x | Person_NP)? have?", "How many residence does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1511",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1512",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the child of ($x | Person_NP)? have?", "How many residence does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1513",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the governor of ($x | Person_NP)? have?", "How many residence does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1514",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the music composer of ($x | TelevisionShow_NP)? have?", "How many residence does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1515",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1516",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1517",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the music composer of ($x | TelevisionShow_NP)? have?", "How many residence does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1518",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the son of ($x | Person_NP)? have?", "How many residence does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1519",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the son of ($x | Person_NP)? have?", "How many residence does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1520",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many residence does the mayor of ($x | City_NP)? have?", "How many residence does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1521",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the editor of ($x | Work_NP)?.", "Give me all governors of the editors of ($x | Work_NP)?.", "List all the governors of the editor of ($x | Work_NP)?.", "List all the governors of the editors of ($x | Work_NP)?.", "show me all governors of the editor of ($x | Work_NP)?.", "show me all governors of the editors of ($x | Work_NP)?.", "Who are the governors of the editor of ($x | Work_NP)??", "Who are the governors of the editors of ($x | Work_NP)??", "Who is the governor of the editor of ($x | Work_NP)??", "Who is the governor of the editors of ($x | Work_NP)??", "Who was the governor of the editor of ($x | Work_NP)??", "Who was the governor of the editors of ($x | Work_NP)??", "Who were the governors of the editor of ($x | Work_NP)??", "Who were the governors of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1522",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the parent of ($x | Person_NP)?.", "Give me all governors of the parents of ($x | Person_NP)?.", "List all the governors of the parent of ($x | Person_NP)?.", "List all the governors of the parents of ($x | Person_NP)?.", "show me all governors of the parent of ($x | Person_NP)?.", "show me all governors of the parents of ($x | Person_NP)?.", "Who are the governors of the parent of ($x | Person_NP)??", "Who are the governors of the parents of ($x | Person_NP)??", "Who is the governor of the parent of ($x | Person_NP)??", "Who is the governor of the parents of ($x | Person_NP)??", "Who was the governor of the parent of ($x | Person_NP)??", "Who was the governor of the parents of ($x | Person_NP)??", "Who were the governors of the parent of ($x | Person_NP)??", "Who were the governors of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1523",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the king of ($x | Legislature_NP)?.", "Give me all governors of the kings of ($x | Legislature_NP)?.", "List all the governors of the king of ($x | Legislature_NP)?.", "List all the governors of the kings of ($x | Legislature_NP)?.", "show me all governors of the king of ($x | Legislature_NP)?.", "show me all governors of the kings of ($x | Legislature_NP)?.", "Who are the governors of the king of ($x | Legislature_NP)??", "Who are the governors of the kings of ($x | Legislature_NP)??", "Who is the governor of the king of ($x | Legislature_NP)??", "Who is the governor of the kings of ($x | Legislature_NP)??", "Who was the governor of the king of ($x | Legislature_NP)??", "Who was the governor of the kings of ($x | Legislature_NP)??", "Who were the governors of the king of ($x | Legislature_NP)??", "Who were the governors of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1524",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all governors of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the governors of the coach of ($x | IceHockeyLeague_NP)?.", "List all the governors of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all governors of the coach of ($x | IceHockeyLeague_NP)?.", "show me all governors of the coaches of ($x | IceHockeyLeague_NP)?.", "Who are the governors of the coach of ($x | IceHockeyLeague_NP)??", "Who are the governors of the coaches of ($x | IceHockeyLeague_NP)??", "Who is the governor of the coach of ($x | IceHockeyLeague_NP)??", "Who is the governor of the coaches of ($x | IceHockeyLeague_NP)??", "Who was the governor of the coach of ($x | IceHockeyLeague_NP)??", "Who was the governor of the coaches of ($x | IceHockeyLeague_NP)??", "Who were the governors of the coach of ($x | IceHockeyLeague_NP)??", "Who were the governors of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1525",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the coach of ($x | HockeyTeam_NP)?.", "Give me all governors of the coaches of ($x | HockeyTeam_NP)?.", "List all the governors of the coach of ($x | HockeyTeam_NP)?.", "List all the governors of the coaches of ($x | HockeyTeam_NP)?.", "show me all governors of the coach of ($x | HockeyTeam_NP)?.", "show me all governors of the coaches of ($x | HockeyTeam_NP)?.", "Who are the governors of the coach of ($x | HockeyTeam_NP)??", "Who are the governors of the coaches of ($x | HockeyTeam_NP)??", "Who is the governor of the coach of ($x | HockeyTeam_NP)??", "Who is the governor of the coaches of ($x | HockeyTeam_NP)??", "Who was the governor of the coach of ($x | HockeyTeam_NP)??", "Who was the governor of the coaches of ($x | HockeyTeam_NP)??", "Who were the governors of the coach of ($x | HockeyTeam_NP)??", "Who were the governors of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1526",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the governors of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all governors of the alter ego of ($x | ComicsCharacter_NP)?.", "Who are the governors of the alter ego of ($x | ComicsCharacter_NP)??", "Who is the governor of the alter ego of ($x | ComicsCharacter_NP)??", "Who was the governor of the alter ego of ($x | ComicsCharacter_NP)??", "Who were the governors of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1527",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the author of ($x | Work_NP)?.", "Give me all governors of the authors of ($x | Work_NP)?.", "List all the governors of the author of ($x | Work_NP)?.", "List all the governors of the authors of ($x | Work_NP)?.", "show me all governors of the author of ($x | Work_NP)?.", "show me all governors of the authors of ($x | Work_NP)?.", "Who are the governors of the author of ($x | Work_NP)??", "Who are the governors of the authors of ($x | Work_NP)??", "Who is the governor of the author of ($x | Work_NP)??", "Who is the governor of the authors of ($x | Work_NP)??", "Who was the governor of the author of ($x | Work_NP)??", "Who was the governor of the authors of ($x | Work_NP)??", "Who were the governors of the author of ($x | Work_NP)??", "Who were the governors of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1528",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the mayor of ($x | Settlement_NP)?.", "Give me all governors of the mayors of ($x | Settlement_NP)?.", "List all the governors of the mayor of ($x | Settlement_NP)?.", "List all the governors of the mayors of ($x | Settlement_NP)?.", "show me all governors of the mayor of ($x | Settlement_NP)?.", "show me all governors of the mayors of ($x | Settlement_NP)?.", "Who are the governors of the mayor of ($x | Settlement_NP)??", "Who are the governors of the mayors of ($x | Settlement_NP)??", "Who is the governor of the mayor of ($x | Settlement_NP)??", "Who is the governor of the mayors of ($x | Settlement_NP)??", "Who was the governor of the mayor of ($x | Settlement_NP)??", "Who was the governor of the mayors of ($x | Settlement_NP)??", "Who were the governors of the mayor of ($x | Settlement_NP)??", "Who were the governors of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1529",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the music by ($x | Musical_NP)?.", "Give me all governors of the musics by ($x | Musical_NP)?.", "List all the governors of the music by ($x | Musical_NP)?.", "List all the governors of the musics by ($x | Musical_NP)?.", "show me all governors of the music by ($x | Musical_NP)?.", "show me all governors of the musics by ($x | Musical_NP)?.", "Who are the governors of the music by ($x | Musical_NP)??", "Who are the governors of the musics by ($x | Musical_NP)??", "Who is the governor of the music by ($x | Musical_NP)??", "Who is the governor of the musics by ($x | Musical_NP)??", "Who was the governor of the music by ($x | Musical_NP)??", "Who was the governor of the musics by ($x | Musical_NP)??", "Who were the governors of the music by ($x | Musical_NP)??", "Who were the governors of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1530",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the foundation series of ($x | TelevisionShow_NP)?.", "List all the governors of the foundation series of ($x | TelevisionShow_NP)?.", "show me all governors of the foundation series of ($x | TelevisionShow_NP)?.", "Who are the governors of the foundation series of ($x | TelevisionShow_NP)??", "Who is the governor of the foundation series of ($x | TelevisionShow_NP)??", "Who was the governor of the foundation series of ($x | TelevisionShow_NP)??", "Who were the governors of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1531",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the creator of ($x | FictionalCharacter_NP)?.", "Give me all governors of the creators of ($x | FictionalCharacter_NP)?.", "List all the governors of the creator of ($x | FictionalCharacter_NP)?.", "List all the governors of the creators of ($x | FictionalCharacter_NP)?.", "show me all governors of the creator of ($x | FictionalCharacter_NP)?.", "show me all governors of the creators of ($x | FictionalCharacter_NP)?.", "Who are the governors of the creator of ($x | FictionalCharacter_NP)??", "Who are the governors of the creators of ($x | FictionalCharacter_NP)??", "Who is the governor of the creator of ($x | FictionalCharacter_NP)??", "Who is the governor of the creators of ($x | FictionalCharacter_NP)??", "Who was the governor of the creator of ($x | FictionalCharacter_NP)??", "Who was the governor of the creators of ($x | FictionalCharacter_NP)??", "Who were the governors of the creator of ($x | FictionalCharacter_NP)??", "Who were the governors of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1532",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the influencer of ($x | Person_NP)?.", "Give me all governors of the influencers of ($x | Person_NP)?.", "List all the governors of the influencer of ($x | Person_NP)?.", "List all the governors of the influencers of ($x | Person_NP)?.", "show me all governors of the influencer of ($x | Person_NP)?.", "show me all governors of the influencers of ($x | Person_NP)?.", "Who are the governors of the influencer of ($x | Person_NP)??", "Who are the governors of the influencers of ($x | Person_NP)??", "Who is the governor of the influencer of ($x | Person_NP)??", "Who is the governor of the influencers of ($x | Person_NP)??", "Who was the governor of the influencer of ($x | Person_NP)??", "Who was the governor of the influencers of ($x | Person_NP)??", "Who were the governors of the influencer of ($x | Person_NP)??", "Who were the governors of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1533",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the wife of ($x | Person_NP)?.", "Give me all governors of the wives of ($x | Person_NP)?.", "List all the governors of the wife of ($x | Person_NP)?.", "List all the governors of the wives of ($x | Person_NP)?.", "show me all governors of the wife of ($x | Person_NP)?.", "show me all governors of the wives of ($x | Person_NP)?.", "Who are the governors of the wife of ($x | Person_NP)??", "Who are the governors of the wives of ($x | Person_NP)??", "Who is the governor of the wife of ($x | Person_NP)??", "Who is the governor of the wives of ($x | Person_NP)??", "Who was the governor of the wife of ($x | Person_NP)??", "Who was the governor of the wives of ($x | Person_NP)??", "Who were the governors of the wife of ($x | Person_NP)??", "Who were the governors of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1534",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all governors of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the governors of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the governors of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all governors of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all governors of the doctoral supervisors of ($x | Scientist_NP)?.", "Who are the governors of the doctoral supervisor of ($x | Scientist_NP)??", "Who are the governors of the doctoral supervisors of ($x | Scientist_NP)??", "Who is the governor of the doctoral supervisor of ($x | Scientist_NP)??", "Who is the governor of the doctoral supervisors of ($x | Scientist_NP)??", "Who was the governor of the doctoral supervisor of ($x | Scientist_NP)??", "Who was the governor of the doctoral supervisors of ($x | Scientist_NP)??", "Who were the governors of the doctoral supervisor of ($x | Scientist_NP)??", "Who were the governors of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1535",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the host of ($x | TelevisionShow_NP)?.", "Give me all governors of the hosts of ($x | TelevisionShow_NP)?.", "List all the governors of the host of ($x | TelevisionShow_NP)?.", "List all the governors of the hosts of ($x | TelevisionShow_NP)?.", "show me all governors of the host of ($x | TelevisionShow_NP)?.", "show me all governors of the hosts of ($x | TelevisionShow_NP)?.", "Who are the governors of the host of ($x | TelevisionShow_NP)??", "Who are the governors of the hosts of ($x | TelevisionShow_NP)??", "Who is the governor of the host of ($x | TelevisionShow_NP)??", "Who is the governor of the hosts of ($x | TelevisionShow_NP)??", "Who was the governor of the host of ($x | TelevisionShow_NP)??", "Who was the governor of the hosts of ($x | TelevisionShow_NP)??", "Who were the governors of the host of ($x | TelevisionShow_NP)??", "Who were the governors of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1536",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the residence of ($x | Place_NP)?.", "Give me all governors of the residences of ($x | Place_NP)?.", "List all the governors of the residence of ($x | Place_NP)?.", "List all the governors of the residences of ($x | Place_NP)?.", "show me all governors of the residence of ($x | Place_NP)?.", "show me all governors of the residences of ($x | Place_NP)?.", "Who are the governors of the residence of ($x | Place_NP)??", "Who are the governors of the residences of ($x | Place_NP)??", "Who is the governor of the residence of ($x | Place_NP)??", "Who is the governor of the residences of ($x | Place_NP)??", "Who was the governor of the residence of ($x | Place_NP)??", "Who was the governor of the residences of ($x | Place_NP)??", "Who were the governors of the residence of ($x | Place_NP)??", "Who were the governors of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1537",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the daughter of ($x | Person_NP)?.", "Give me all governors of the daughters of ($x | Person_NP)?.", "List all the governors of the daughter of ($x | Person_NP)?.", "List all the governors of the daughters of ($x | Person_NP)?.", "show me all governors of the daughter of ($x | Person_NP)?.", "show me all governors of the daughters of ($x | Person_NP)?.", "Who are the governors of the daughter of ($x | Person_NP)??", "Who are the governors of the daughters of ($x | Person_NP)??", "Who is the governor of the daughter of ($x | Person_NP)??", "Who is the governor of the daughters of ($x | Person_NP)??", "Who was the governor of the daughter of ($x | Person_NP)??", "Who was the governor of the daughters of ($x | Person_NP)??", "Who were the governors of the daughter of ($x | Person_NP)??", "Who were the governors of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1538",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the successor of ($x | Politician_NP)?.", "List all the governors of the successor of ($x | Politician_NP)?.", "show me all governors of the successor of ($x | Politician_NP)?.", "Who are the governors of the successor of ($x | Politician_NP)??", "Who is the governor of the successor of ($x | Politician_NP)??", "Who was the governor of the successor of ($x | Politician_NP)??", "Who were the governors of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1539",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the child of ($x | Person_NP)?.", "Give me all governors of the children of ($x | Person_NP)?.", "List all the governors of the child of ($x | Person_NP)?.", "List all the governors of the children of ($x | Person_NP)?.", "show me all governors of the child of ($x | Person_NP)?.", "show me all governors of the children of ($x | Person_NP)?.", "Who are the governors of the child of ($x | Person_NP)??", "Who are the governors of the children of ($x | Person_NP)??", "Who is the governor of the child of ($x | Person_NP)??", "Who is the governor of the children of ($x | Person_NP)??", "Who was the governor of the child of ($x | Person_NP)??", "Who was the governor of the children of ($x | Person_NP)??", "Who were the governors of the child of ($x | Person_NP)??", "Who were the governors of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1540",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the governor of ($x | Person_NP)?.", "Give me all governors of the governors of ($x | Person_NP)?.", "List all the governors of the governor of ($x | Person_NP)?.", "List all the governors of the governors of ($x | Person_NP)?.", "show me all governors of the governor of ($x | Person_NP)?.", "show me all governors of the governors of ($x | Person_NP)?.", "Who are the governors of the governor of ($x | Person_NP)??", "Who are the governors of the governors of ($x | Person_NP)??", "Who is the governor of the governor of ($x | Person_NP)??", "Who is the governor of the governors of ($x | Person_NP)??", "Who was the governor of the governor of ($x | Person_NP)??", "Who was the governor of the governors of ($x | Person_NP)??", "Who were the governors of the governor of ($x | Person_NP)??", "Who were the governors of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1541",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the music composer of ($x | TelevisionShow_NP)?.", "Give me all governors of the music composers of ($x | TelevisionShow_NP)?.", "List all the governors of the music composer of ($x | TelevisionShow_NP)?.", "List all the governors of the music composers of ($x | TelevisionShow_NP)?.", "show me all governors of the music composer of ($x | TelevisionShow_NP)?.", "show me all governors of the music composers of ($x | TelevisionShow_NP)?.", "Who are the governors of the music composer of ($x | TelevisionShow_NP)??", "Who are the governors of the music composers of ($x | TelevisionShow_NP)??", "Who is the governor of the music composer of ($x | TelevisionShow_NP)??", "Who is the governor of the music composers of ($x | TelevisionShow_NP)??", "Who was the governor of the music composer of ($x | TelevisionShow_NP)??", "Who was the governor of the music composers of ($x | TelevisionShow_NP)??", "Who were the governors of the music composer of ($x | TelevisionShow_NP)??", "Who were the governors of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1542",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the first to climb  ($x | Mountain_NP)?.", "List all the governors of the first to climb  ($x | Mountain_NP)?.", "show me all governors of the first to climb  ($x | Mountain_NP)?.", "Who are the governors of the first to climb  ($x | Mountain_NP)??", "Who is the governor of the first to climb  ($x | Mountain_NP)??", "Who was the governor of the first to climb  ($x | Mountain_NP)??", "Who were the governors of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1543",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the father of ($x | Royalty_NP)?.", "List all the governors of the father of ($x | Royalty_NP)?.", "show me all governors of the father of ($x | Royalty_NP)?.", "Who are the governors of the father of ($x | Royalty_NP)??", "Who is the governor of the father of ($x | Royalty_NP)??", "Who was the governor of the father of ($x | Royalty_NP)??", "Who were the governors of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1544",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the music composer of ($x | TelevisionShow_NP)?.", "Give me all governors of the music composers of ($x | TelevisionShow_NP)?.", "List all the governors of the music composer of ($x | TelevisionShow_NP)?.", "List all the governors of the music composers of ($x | TelevisionShow_NP)?.", "show me all governors of the music composer of ($x | TelevisionShow_NP)?.", "show me all governors of the music composers of ($x | TelevisionShow_NP)?.", "Who are the governors of the music composer of ($x | TelevisionShow_NP)??", "Who are the governors of the music composers of ($x | TelevisionShow_NP)??", "Who is the governor of the music composer of ($x | TelevisionShow_NP)??", "Who is the governor of the music composers of ($x | TelevisionShow_NP)??", "Who was the governor of the music composer of ($x | TelevisionShow_NP)??", "Who was the governor of the music composers of ($x | TelevisionShow_NP)??", "Who were the governors of the music composer of ($x | TelevisionShow_NP)??", "Who were the governors of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1545",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the son of ($x | Person_NP)?.", "Give me all governors of the sons of ($x | Person_NP)?.", "List all the governors of the son of ($x | Person_NP)?.", "List all the governors of the sons of ($x | Person_NP)?.", "show me all governors of the son of ($x | Person_NP)?.", "show me all governors of the sons of ($x | Person_NP)?.", "Who are the governors of the son of ($x | Person_NP)??", "Who are the governors of the sons of ($x | Person_NP)??", "Who is the governor of the son of ($x | Person_NP)??", "Who is the governor of the sons of ($x | Person_NP)??", "Who was the governor of the son of ($x | Person_NP)??", "Who was the governor of the sons of ($x | Person_NP)??", "Who were the governors of the son of ($x | Person_NP)??", "Who were the governors of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1546",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the son of ($x | Person_NP)?.", "Give me all governors of the sons of ($x | Person_NP)?.", "List all the governors of the son of ($x | Person_NP)?.", "List all the governors of the sons of ($x | Person_NP)?.", "show me all governors of the son of ($x | Person_NP)?.", "show me all governors of the sons of ($x | Person_NP)?.", "Who are the governors of the son of ($x | Person_NP)??", "Who are the governors of the sons of ($x | Person_NP)??", "Who is the governor of the son of ($x | Person_NP)??", "Who is the governor of the sons of ($x | Person_NP)??", "Who was the governor of the son of ($x | Person_NP)??", "Who was the governor of the sons of ($x | Person_NP)??", "Who were the governors of the son of ($x | Person_NP)??", "Who were the governors of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1547",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of the mayor of ($x | City_NP)?.", "Give me all governors of the mayors of ($x | City_NP)?.", "List all the governors of the mayor of ($x | City_NP)?.", "List all the governors of the mayors of ($x | City_NP)?.", "show me all governors of the mayor of ($x | City_NP)?.", "show me all governors of the mayors of ($x | City_NP)?.", "Who are the governors of the mayor of ($x | City_NP)??", "Who are the governors of the mayors of ($x | City_NP)??", "Who is the governor of the mayor of ($x | City_NP)??", "Who is the governor of the mayors of ($x | City_NP)??", "Who was the governor of the mayor of ($x | City_NP)??", "Who was the governor of the mayors of ($x | City_NP)??", "Who were the governors of the mayor of ($x | City_NP)??", "Who were the governors of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1548",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the editor of ($x | Work_NP)? have?", "How many governor does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1549",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the parent of ($x | Person_NP)? have?", "How many governor does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1550",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the king of ($x | Legislature_NP)? have?", "How many governor does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1551",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the coach of ($x | IceHockeyLeague_NP)? have?", "How many governor does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1552",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the coach of ($x | HockeyTeam_NP)? have?", "How many governor does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1553",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1554",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the author of ($x | Work_NP)? have?", "How many governor does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1555",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the mayor of ($x | Settlement_NP)? have?", "How many governor does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1556",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the music by ($x | Musical_NP)? have?", "How many governor does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1557",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1558",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the creator of ($x | FictionalCharacter_NP)? have?", "How many governor does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1559",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the influencer of ($x | Person_NP)? have?", "How many governor does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1560",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the wife of ($x | Person_NP)? have?", "How many governor does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1561",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many governor does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1562",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the host of ($x | TelevisionShow_NP)? have?", "How many governor does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1563",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the residence of ($x | Place_NP)? have?", "How many governor does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1564",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the daughter of ($x | Person_NP)? have?", "How many governor does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1565",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1566",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the child of ($x | Person_NP)? have?", "How many governor does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1567",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the governor of ($x | Person_NP)? have?", "How many governor does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1568",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the music composer of ($x | TelevisionShow_NP)? have?", "How many governor does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1569",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1570",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1571",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the music composer of ($x | TelevisionShow_NP)? have?", "How many governor does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1572",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the son of ($x | Person_NP)? have?", "How many governor does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1573",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the son of ($x | Person_NP)? have?", "How many governor does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1574",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many governor does the mayor of ($x | City_NP)? have?", "How many governor does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1575",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the headquarter of the leader of ($x | Legislature_NP)??", "What is the headquarter of the leaders of ($x | Legislature_NP)??", "What was the headquarter of the leader of ($x | Legislature_NP)??", "What was the headquarter of the leaders of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1576",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many headquarter does the leader of ($x | Legislature_NP)? have?", "How many headquarter does the leaders of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1577",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of the largest city of ($x | Country_NP)??", "What was the area code of the largest city of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1578",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of the capital of ($x | Country_NP)??", "What was the area code of the capital of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1579",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of the cities in ($x | AdministrativeRegion_NP)??", "What is the area code of the city in ($x | AdministrativeRegion_NP)??", "What was the area code of the cities in ($x | AdministrativeRegion_NP)??", "What was the area code of the city in ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1580",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of the residence of ($x | Person_NP)??", "What is the area code of the residences of ($x | Person_NP)??", "What was the area code of the residence of ($x | Person_NP)??", "What was the area code of the residences of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1581",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of the headquarter of ($x | Building_NP)??", "What was the area code of the headquarter of ($x | Building_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1582",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of the foundation place of ($x | Company_NP)??", "What was the area code of the foundation place of ($x | Company_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1583",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of the cities of ($x | AdministrativeRegion_NP)??", "What is the area code of the city of ($x | AdministrativeRegion_NP)??", "What was the area code of the cities of ($x | AdministrativeRegion_NP)??", "What was the area code of the city of ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1584",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many area code does the largest city of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1585",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many area code does the capital of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1586",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many area code does the cities in ($x | AdministrativeRegion_NP)? have?", "How many area code does the city in ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1587",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many area code does the residence of ($x | Person_NP)? have?", "How many area code does the residences of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1588",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many area code does the headquarter of ($x | Building_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1589",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many area code does the foundation place of ($x | Company_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1590",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many area code does the cities of ($x | AdministrativeRegion_NP)? have?", "How many area code does the city of ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1591",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the number of locations of the producer of ($x | Film_NP)??", "What is the number of locations of the producers of ($x | Film_NP)??", "What was the number of locations of the producer of ($x | Film_NP)??", "What was the number of locations of the producers of ($x | Film_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1592",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the number of locations of the founder of ($x | Thing_NP)??", "What is the number of locations of the founders of ($x | Thing_NP)??", "What was the number of locations of the founder of ($x | Thing_NP)??", "What was the number of locations of the founders of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1593",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many number of locations does the producer of ($x | Film_NP)? have?", "How many number of locations does the producers of ($x | Film_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1594",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many number of locations does the founder of ($x | Thing_NP)? have?", "How many number of locations does the founders of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1595",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the foundation place of the producer of ($x | Film_NP)??", "What is the foundation place of the producers of ($x | Film_NP)??", "What was the foundation place of the producer of ($x | Film_NP)??", "What was the foundation place of the producers of ($x | Film_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1596",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the foundation place of the founder of ($x | Thing_NP)??", "What is the foundation place of the founders of ($x | Thing_NP)??", "What was the foundation place of the founder of ($x | Thing_NP)??", "What was the foundation place of the founders of ($x | Thing_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1597",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many foundation place does the producer of ($x | Film_NP)? have?", "How many foundation place does the producers of ($x | Film_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/producer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1598",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many foundation place does the founder of ($x | Thing_NP)? have?", "How many foundation place does the founders of ($x | Thing_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1599",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the editor of ($x | Work_NP)?.", "Give me all resting places of the editors of ($x | Work_NP)?.", "List all the resting places of the editor of ($x | Work_NP)?.", "List all the resting places of the editors of ($x | Work_NP)?.", "show me all resting places of the editor of ($x | Work_NP)?.", "show me all resting places of the editors of ($x | Work_NP)?.", "What are the resting places of the editor of ($x | Work_NP)??", "What are the resting places of the editors of ($x | Work_NP)??", "What is the resting place of the editor of ($x | Work_NP)??", "What is the resting place of the editors of ($x | Work_NP)??", "What was the resting place of the editor of ($x | Work_NP)??", "What was the resting place of the editors of ($x | Work_NP)??", "What were the resting places of the editor of ($x | Work_NP)??", "What were the resting places of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1600",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the parent of ($x | Person_NP)?.", "Give me all resting places of the parents of ($x | Person_NP)?.", "List all the resting places of the parent of ($x | Person_NP)?.", "List all the resting places of the parents of ($x | Person_NP)?.", "show me all resting places of the parent of ($x | Person_NP)?.", "show me all resting places of the parents of ($x | Person_NP)?.", "What are the resting places of the parent of ($x | Person_NP)??", "What are the resting places of the parents of ($x | Person_NP)??", "What is the resting place of the parent of ($x | Person_NP)??", "What is the resting place of the parents of ($x | Person_NP)??", "What was the resting place of the parent of ($x | Person_NP)??", "What was the resting place of the parents of ($x | Person_NP)??", "What were the resting places of the parent of ($x | Person_NP)??", "What were the resting places of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1601",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the king of ($x | Legislature_NP)?.", "Give me all resting places of the kings of ($x | Legislature_NP)?.", "List all the resting places of the king of ($x | Legislature_NP)?.", "List all the resting places of the kings of ($x | Legislature_NP)?.", "show me all resting places of the king of ($x | Legislature_NP)?.", "show me all resting places of the kings of ($x | Legislature_NP)?.", "What are the resting places of the king of ($x | Legislature_NP)??", "What are the resting places of the kings of ($x | Legislature_NP)??", "What is the resting place of the king of ($x | Legislature_NP)??", "What is the resting place of the kings of ($x | Legislature_NP)??", "What was the resting place of the king of ($x | Legislature_NP)??", "What was the resting place of the kings of ($x | Legislature_NP)??", "What were the resting places of the king of ($x | Legislature_NP)??", "What were the resting places of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1602",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all resting places of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the resting places of the coach of ($x | IceHockeyLeague_NP)?.", "List all the resting places of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all resting places of the coach of ($x | IceHockeyLeague_NP)?.", "show me all resting places of the coaches of ($x | IceHockeyLeague_NP)?.", "What are the resting places of the coach of ($x | IceHockeyLeague_NP)??", "What are the resting places of the coaches of ($x | IceHockeyLeague_NP)??", "What is the resting place of the coach of ($x | IceHockeyLeague_NP)??", "What is the resting place of the coaches of ($x | IceHockeyLeague_NP)??", "What was the resting place of the coach of ($x | IceHockeyLeague_NP)??", "What was the resting place of the coaches of ($x | IceHockeyLeague_NP)??", "What were the resting places of the coach of ($x | IceHockeyLeague_NP)??", "What were the resting places of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1603",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the coach of ($x | HockeyTeam_NP)?.", "Give me all resting places of the coaches of ($x | HockeyTeam_NP)?.", "List all the resting places of the coach of ($x | HockeyTeam_NP)?.", "List all the resting places of the coaches of ($x | HockeyTeam_NP)?.", "show me all resting places of the coach of ($x | HockeyTeam_NP)?.", "show me all resting places of the coaches of ($x | HockeyTeam_NP)?.", "What are the resting places of the coach of ($x | HockeyTeam_NP)??", "What are the resting places of the coaches of ($x | HockeyTeam_NP)??", "What is the resting place of the coach of ($x | HockeyTeam_NP)??", "What is the resting place of the coaches of ($x | HockeyTeam_NP)??", "What was the resting place of the coach of ($x | HockeyTeam_NP)??", "What was the resting place of the coaches of ($x | HockeyTeam_NP)??", "What were the resting places of the coach of ($x | HockeyTeam_NP)??", "What were the resting places of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1604",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the resting places of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all resting places of the alter ego of ($x | ComicsCharacter_NP)?.", "What are the resting places of the alter ego of ($x | ComicsCharacter_NP)??", "What is the resting place of the alter ego of ($x | ComicsCharacter_NP)??", "What was the resting place of the alter ego of ($x | ComicsCharacter_NP)??", "What were the resting places of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1605",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the author of ($x | Work_NP)?.", "Give me all resting places of the authors of ($x | Work_NP)?.", "List all the resting places of the author of ($x | Work_NP)?.", "List all the resting places of the authors of ($x | Work_NP)?.", "show me all resting places of the author of ($x | Work_NP)?.", "show me all resting places of the authors of ($x | Work_NP)?.", "What are the resting places of the author of ($x | Work_NP)??", "What are the resting places of the authors of ($x | Work_NP)??", "What is the resting place of the author of ($x | Work_NP)??", "What is the resting place of the authors of ($x | Work_NP)??", "What was the resting place of the author of ($x | Work_NP)??", "What was the resting place of the authors of ($x | Work_NP)??", "What were the resting places of the author of ($x | Work_NP)??", "What were the resting places of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1606",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the mayor of ($x | Settlement_NP)?.", "Give me all resting places of the mayors of ($x | Settlement_NP)?.", "List all the resting places of the mayor of ($x | Settlement_NP)?.", "List all the resting places of the mayors of ($x | Settlement_NP)?.", "show me all resting places of the mayor of ($x | Settlement_NP)?.", "show me all resting places of the mayors of ($x | Settlement_NP)?.", "What are the resting places of the mayor of ($x | Settlement_NP)??", "What are the resting places of the mayors of ($x | Settlement_NP)??", "What is the resting place of the mayor of ($x | Settlement_NP)??", "What is the resting place of the mayors of ($x | Settlement_NP)??", "What was the resting place of the mayor of ($x | Settlement_NP)??", "What was the resting place of the mayors of ($x | Settlement_NP)??", "What were the resting places of the mayor of ($x | Settlement_NP)??", "What were the resting places of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1607",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the music by ($x | Musical_NP)?.", "Give me all resting places of the musics by ($x | Musical_NP)?.", "List all the resting places of the music by ($x | Musical_NP)?.", "List all the resting places of the musics by ($x | Musical_NP)?.", "show me all resting places of the music by ($x | Musical_NP)?.", "show me all resting places of the musics by ($x | Musical_NP)?.", "What are the resting places of the music by ($x | Musical_NP)??", "What are the resting places of the musics by ($x | Musical_NP)??", "What is the resting place of the music by ($x | Musical_NP)??", "What is the resting place of the musics by ($x | Musical_NP)??", "What was the resting place of the music by ($x | Musical_NP)??", "What was the resting place of the musics by ($x | Musical_NP)??", "What were the resting places of the music by ($x | Musical_NP)??", "What were the resting places of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1608",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the foundation series of ($x | TelevisionShow_NP)?.", "List all the resting places of the foundation series of ($x | TelevisionShow_NP)?.", "show me all resting places of the foundation series of ($x | TelevisionShow_NP)?.", "What are the resting places of the foundation series of ($x | TelevisionShow_NP)??", "What is the resting place of the foundation series of ($x | TelevisionShow_NP)??", "What was the resting place of the foundation series of ($x | TelevisionShow_NP)??", "What were the resting places of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1609",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the creator of ($x | FictionalCharacter_NP)?.", "Give me all resting places of the creators of ($x | FictionalCharacter_NP)?.", "List all the resting places of the creator of ($x | FictionalCharacter_NP)?.", "List all the resting places of the creators of ($x | FictionalCharacter_NP)?.", "show me all resting places of the creator of ($x | FictionalCharacter_NP)?.", "show me all resting places of the creators of ($x | FictionalCharacter_NP)?.", "What are the resting places of the creator of ($x | FictionalCharacter_NP)??", "What are the resting places of the creators of ($x | FictionalCharacter_NP)??", "What is the resting place of the creator of ($x | FictionalCharacter_NP)??", "What is the resting place of the creators of ($x | FictionalCharacter_NP)??", "What was the resting place of the creator of ($x | FictionalCharacter_NP)??", "What was the resting place of the creators of ($x | FictionalCharacter_NP)??", "What were the resting places of the creator of ($x | FictionalCharacter_NP)??", "What were the resting places of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1610",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the influencer of ($x | Person_NP)?.", "Give me all resting places of the influencers of ($x | Person_NP)?.", "List all the resting places of the influencer of ($x | Person_NP)?.", "List all the resting places of the influencers of ($x | Person_NP)?.", "show me all resting places of the influencer of ($x | Person_NP)?.", "show me all resting places of the influencers of ($x | Person_NP)?.", "What are the resting places of the influencer of ($x | Person_NP)??", "What are the resting places of the influencers of ($x | Person_NP)??", "What is the resting place of the influencer of ($x | Person_NP)??", "What is the resting place of the influencers of ($x | Person_NP)??", "What was the resting place of the influencer of ($x | Person_NP)??", "What was the resting place of the influencers of ($x | Person_NP)??", "What were the resting places of the influencer of ($x | Person_NP)??", "What were the resting places of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1611",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the wife of ($x | Person_NP)?.", "Give me all resting places of the wives of ($x | Person_NP)?.", "List all the resting places of the wife of ($x | Person_NP)?.", "List all the resting places of the wives of ($x | Person_NP)?.", "show me all resting places of the wife of ($x | Person_NP)?.", "show me all resting places of the wives of ($x | Person_NP)?.", "What are the resting places of the wife of ($x | Person_NP)??", "What are the resting places of the wives of ($x | Person_NP)??", "What is the resting place of the wife of ($x | Person_NP)??", "What is the resting place of the wives of ($x | Person_NP)??", "What was the resting place of the wife of ($x | Person_NP)??", "What was the resting place of the wives of ($x | Person_NP)??", "What were the resting places of the wife of ($x | Person_NP)??", "What were the resting places of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1612",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all resting places of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the resting places of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the resting places of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all resting places of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all resting places of the doctoral supervisors of ($x | Scientist_NP)?.", "What are the resting places of the doctoral supervisor of ($x | Scientist_NP)??", "What are the resting places of the doctoral supervisors of ($x | Scientist_NP)??", "What is the resting place of the doctoral supervisor of ($x | Scientist_NP)??", "What is the resting place of the doctoral supervisors of ($x | Scientist_NP)??", "What was the resting place of the doctoral supervisor of ($x | Scientist_NP)??", "What was the resting place of the doctoral supervisors of ($x | Scientist_NP)??", "What were the resting places of the doctoral supervisor of ($x | Scientist_NP)??", "What were the resting places of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1613",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the host of ($x | TelevisionShow_NP)?.", "Give me all resting places of the hosts of ($x | TelevisionShow_NP)?.", "List all the resting places of the host of ($x | TelevisionShow_NP)?.", "List all the resting places of the hosts of ($x | TelevisionShow_NP)?.", "show me all resting places of the host of ($x | TelevisionShow_NP)?.", "show me all resting places of the hosts of ($x | TelevisionShow_NP)?.", "What are the resting places of the host of ($x | TelevisionShow_NP)??", "What are the resting places of the hosts of ($x | TelevisionShow_NP)??", "What is the resting place of the host of ($x | TelevisionShow_NP)??", "What is the resting place of the hosts of ($x | TelevisionShow_NP)??", "What was the resting place of the host of ($x | TelevisionShow_NP)??", "What was the resting place of the hosts of ($x | TelevisionShow_NP)??", "What were the resting places of the host of ($x | TelevisionShow_NP)??", "What were the resting places of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1614",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the residence of ($x | Place_NP)?.", "Give me all resting places of the residences of ($x | Place_NP)?.", "List all the resting places of the residence of ($x | Place_NP)?.", "List all the resting places of the residences of ($x | Place_NP)?.", "show me all resting places of the residence of ($x | Place_NP)?.", "show me all resting places of the residences of ($x | Place_NP)?.", "What are the resting places of the residence of ($x | Place_NP)??", "What are the resting places of the residences of ($x | Place_NP)??", "What is the resting place of the residence of ($x | Place_NP)??", "What is the resting place of the residences of ($x | Place_NP)??", "What was the resting place of the residence of ($x | Place_NP)??", "What was the resting place of the residences of ($x | Place_NP)??", "What were the resting places of the residence of ($x | Place_NP)??", "What were the resting places of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1615",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the daughter of ($x | Person_NP)?.", "Give me all resting places of the daughters of ($x | Person_NP)?.", "List all the resting places of the daughter of ($x | Person_NP)?.", "List all the resting places of the daughters of ($x | Person_NP)?.", "show me all resting places of the daughter of ($x | Person_NP)?.", "show me all resting places of the daughters of ($x | Person_NP)?.", "What are the resting places of the daughter of ($x | Person_NP)??", "What are the resting places of the daughters of ($x | Person_NP)??", "What is the resting place of the daughter of ($x | Person_NP)??", "What is the resting place of the daughters of ($x | Person_NP)??", "What was the resting place of the daughter of ($x | Person_NP)??", "What was the resting place of the daughters of ($x | Person_NP)??", "What were the resting places of the daughter of ($x | Person_NP)??", "What were the resting places of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1616",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the successor of ($x | Politician_NP)?.", "List all the resting places of the successor of ($x | Politician_NP)?.", "show me all resting places of the successor of ($x | Politician_NP)?.", "What are the resting places of the successor of ($x | Politician_NP)??", "What is the resting place of the successor of ($x | Politician_NP)??", "What was the resting place of the successor of ($x | Politician_NP)??", "What were the resting places of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1617",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the child of ($x | Person_NP)?.", "Give me all resting places of the children of ($x | Person_NP)?.", "List all the resting places of the child of ($x | Person_NP)?.", "List all the resting places of the children of ($x | Person_NP)?.", "show me all resting places of the child of ($x | Person_NP)?.", "show me all resting places of the children of ($x | Person_NP)?.", "What are the resting places of the child of ($x | Person_NP)??", "What are the resting places of the children of ($x | Person_NP)??", "What is the resting place of the child of ($x | Person_NP)??", "What is the resting place of the children of ($x | Person_NP)??", "What was the resting place of the child of ($x | Person_NP)??", "What was the resting place of the children of ($x | Person_NP)??", "What were the resting places of the child of ($x | Person_NP)??", "What were the resting places of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1618",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the governor of ($x | Person_NP)?.", "Give me all resting places of the governors of ($x | Person_NP)?.", "List all the resting places of the governor of ($x | Person_NP)?.", "List all the resting places of the governors of ($x | Person_NP)?.", "show me all resting places of the governor of ($x | Person_NP)?.", "show me all resting places of the governors of ($x | Person_NP)?.", "What are the resting places of the governor of ($x | Person_NP)??", "What are the resting places of the governors of ($x | Person_NP)??", "What is the resting place of the governor of ($x | Person_NP)??", "What is the resting place of the governors of ($x | Person_NP)??", "What was the resting place of the governor of ($x | Person_NP)??", "What was the resting place of the governors of ($x | Person_NP)??", "What were the resting places of the governor of ($x | Person_NP)??", "What were the resting places of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1619",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the music composer of ($x | TelevisionShow_NP)?.", "Give me all resting places of the music composers of ($x | TelevisionShow_NP)?.", "List all the resting places of the music composer of ($x | TelevisionShow_NP)?.", "List all the resting places of the music composers of ($x | TelevisionShow_NP)?.", "show me all resting places of the music composer of ($x | TelevisionShow_NP)?.", "show me all resting places of the music composers of ($x | TelevisionShow_NP)?.", "What are the resting places of the music composer of ($x | TelevisionShow_NP)??", "What are the resting places of the music composers of ($x | TelevisionShow_NP)??", "What is the resting place of the music composer of ($x | TelevisionShow_NP)??", "What is the resting place of the music composers of ($x | TelevisionShow_NP)??", "What was the resting place of the music composer of ($x | TelevisionShow_NP)??", "What was the resting place of the music composers of ($x | TelevisionShow_NP)??", "What were the resting places of the music composer of ($x | TelevisionShow_NP)??", "What were the resting places of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1620",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the first to climb  ($x | Mountain_NP)?.", "List all the resting places of the first to climb  ($x | Mountain_NP)?.", "show me all resting places of the first to climb  ($x | Mountain_NP)?.", "What are the resting places of the first to climb  ($x | Mountain_NP)??", "What is the resting place of the first to climb  ($x | Mountain_NP)??", "What was the resting place of the first to climb  ($x | Mountain_NP)??", "What were the resting places of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1621",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the father of ($x | Royalty_NP)?.", "List all the resting places of the father of ($x | Royalty_NP)?.", "show me all resting places of the father of ($x | Royalty_NP)?.", "What are the resting places of the father of ($x | Royalty_NP)??", "What is the resting place of the father of ($x | Royalty_NP)??", "What was the resting place of the father of ($x | Royalty_NP)??", "What were the resting places of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1622",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the music composer of ($x | TelevisionShow_NP)?.", "Give me all resting places of the music composers of ($x | TelevisionShow_NP)?.", "List all the resting places of the music composer of ($x | TelevisionShow_NP)?.", "List all the resting places of the music composers of ($x | TelevisionShow_NP)?.", "show me all resting places of the music composer of ($x | TelevisionShow_NP)?.", "show me all resting places of the music composers of ($x | TelevisionShow_NP)?.", "What are the resting places of the music composer of ($x | TelevisionShow_NP)??", "What are the resting places of the music composers of ($x | TelevisionShow_NP)??", "What is the resting place of the music composer of ($x | TelevisionShow_NP)??", "What is the resting place of the music composers of ($x | TelevisionShow_NP)??", "What was the resting place of the music composer of ($x | TelevisionShow_NP)??", "What was the resting place of the music composers of ($x | TelevisionShow_NP)??", "What were the resting places of the music composer of ($x | TelevisionShow_NP)??", "What were the resting places of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1623",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the son of ($x | Person_NP)?.", "Give me all resting places of the sons of ($x | Person_NP)?.", "List all the resting places of the son of ($x | Person_NP)?.", "List all the resting places of the sons of ($x | Person_NP)?.", "show me all resting places of the son of ($x | Person_NP)?.", "show me all resting places of the sons of ($x | Person_NP)?.", "What are the resting places of the son of ($x | Person_NP)??", "What are the resting places of the sons of ($x | Person_NP)??", "What is the resting place of the son of ($x | Person_NP)??", "What is the resting place of the sons of ($x | Person_NP)??", "What was the resting place of the son of ($x | Person_NP)??", "What was the resting place of the sons of ($x | Person_NP)??", "What were the resting places of the son of ($x | Person_NP)??", "What were the resting places of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1624",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the son of ($x | Person_NP)?.", "Give me all resting places of the sons of ($x | Person_NP)?.", "List all the resting places of the son of ($x | Person_NP)?.", "List all the resting places of the sons of ($x | Person_NP)?.", "show me all resting places of the son of ($x | Person_NP)?.", "show me all resting places of the sons of ($x | Person_NP)?.", "What are the resting places of the son of ($x | Person_NP)??", "What are the resting places of the sons of ($x | Person_NP)??", "What is the resting place of the son of ($x | Person_NP)??", "What is the resting place of the sons of ($x | Person_NP)??", "What was the resting place of the son of ($x | Person_NP)??", "What was the resting place of the sons of ($x | Person_NP)??", "What were the resting places of the son of ($x | Person_NP)??", "What were the resting places of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1625",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of the mayor of ($x | City_NP)?.", "Give me all resting places of the mayors of ($x | City_NP)?.", "List all the resting places of the mayor of ($x | City_NP)?.", "List all the resting places of the mayors of ($x | City_NP)?.", "show me all resting places of the mayor of ($x | City_NP)?.", "show me all resting places of the mayors of ($x | City_NP)?.", "What are the resting places of the mayor of ($x | City_NP)??", "What are the resting places of the mayors of ($x | City_NP)??", "What is the resting place of the mayor of ($x | City_NP)??", "What is the resting place of the mayors of ($x | City_NP)??", "What was the resting place of the mayor of ($x | City_NP)??", "What was the resting place of the mayors of ($x | City_NP)??", "What were the resting places of the mayor of ($x | City_NP)??", "What were the resting places of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1626",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the editor of ($x | Work_NP)? have?", "How many resting place does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1627",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the parent of ($x | Person_NP)? have?", "How many resting place does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1628",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the king of ($x | Legislature_NP)? have?", "How many resting place does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1629",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the coach of ($x | IceHockeyLeague_NP)? have?", "How many resting place does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1630",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the coach of ($x | HockeyTeam_NP)? have?", "How many resting place does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1631",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1632",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the author of ($x | Work_NP)? have?", "How many resting place does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1633",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the mayor of ($x | Settlement_NP)? have?", "How many resting place does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1634",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the music by ($x | Musical_NP)? have?", "How many resting place does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1635",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1636",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the creator of ($x | FictionalCharacter_NP)? have?", "How many resting place does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1637",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the influencer of ($x | Person_NP)? have?", "How many resting place does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1638",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the wife of ($x | Person_NP)? have?", "How many resting place does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1639",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many resting place does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1640",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the host of ($x | TelevisionShow_NP)? have?", "How many resting place does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1641",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the residence of ($x | Place_NP)? have?", "How many resting place does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1642",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the daughter of ($x | Person_NP)? have?", "How many resting place does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1643",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1644",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the child of ($x | Person_NP)? have?", "How many resting place does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1645",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the governor of ($x | Person_NP)? have?", "How many resting place does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1646",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the music composer of ($x | TelevisionShow_NP)? have?", "How many resting place does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1647",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1648",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1649",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the music composer of ($x | TelevisionShow_NP)? have?", "How many resting place does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1650",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the son of ($x | Person_NP)? have?", "How many resting place does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1651",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the son of ($x | Person_NP)? have?", "How many resting place does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1652",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many resting place does the mayor of ($x | City_NP)? have?", "How many resting place does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1653",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the editor of ($x | Work_NP)??", "What is the nationality of the editors of ($x | Work_NP)??", "What was the nationality of the editor of ($x | Work_NP)??", "What was the nationality of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1654",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the parent of ($x | Person_NP)??", "What is the nationality of the parents of ($x | Person_NP)??", "What was the nationality of the parent of ($x | Person_NP)??", "What was the nationality of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1655",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the king of ($x | Legislature_NP)??", "What is the nationality of the kings of ($x | Legislature_NP)??", "What was the nationality of the king of ($x | Legislature_NP)??", "What was the nationality of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1656",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the coach of ($x | IceHockeyLeague_NP)??", "What is the nationality of the coaches of ($x | IceHockeyLeague_NP)??", "What was the nationality of the coach of ($x | IceHockeyLeague_NP)??", "What was the nationality of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1657",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the coach of ($x | HockeyTeam_NP)??", "What is the nationality of the coaches of ($x | HockeyTeam_NP)??", "What was the nationality of the coach of ($x | HockeyTeam_NP)??", "What was the nationality of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1658",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the alter ego of ($x | ComicsCharacter_NP)??", "What was the nationality of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1659",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the author of ($x | Work_NP)??", "What is the nationality of the authors of ($x | Work_NP)??", "What was the nationality of the author of ($x | Work_NP)??", "What was the nationality of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1660",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the mayor of ($x | Settlement_NP)??", "What is the nationality of the mayors of ($x | Settlement_NP)??", "What was the nationality of the mayor of ($x | Settlement_NP)??", "What was the nationality of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1661",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the music by ($x | Musical_NP)??", "What is the nationality of the musics by ($x | Musical_NP)??", "What was the nationality of the music by ($x | Musical_NP)??", "What was the nationality of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1662",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the foundation series of ($x | TelevisionShow_NP)??", "What was the nationality of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1663",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the creator of ($x | FictionalCharacter_NP)??", "What is the nationality of the creators of ($x | FictionalCharacter_NP)??", "What was the nationality of the creator of ($x | FictionalCharacter_NP)??", "What was the nationality of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1664",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the influencer of ($x | Person_NP)??", "What is the nationality of the influencers of ($x | Person_NP)??", "What was the nationality of the influencer of ($x | Person_NP)??", "What was the nationality of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1665",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the wife of ($x | Person_NP)??", "What is the nationality of the wives of ($x | Person_NP)??", "What was the nationality of the wife of ($x | Person_NP)??", "What was the nationality of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1666",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the doctoral supervisor of ($x | Scientist_NP)??", "What is the nationality of the doctoral supervisors of ($x | Scientist_NP)??", "What was the nationality of the doctoral supervisor of ($x | Scientist_NP)??", "What was the nationality of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1667",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the host of ($x | TelevisionShow_NP)??", "What is the nationality of the hosts of ($x | TelevisionShow_NP)??", "What was the nationality of the host of ($x | TelevisionShow_NP)??", "What was the nationality of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1668",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the residence of ($x | Place_NP)??", "What is the nationality of the residences of ($x | Place_NP)??", "What was the nationality of the residence of ($x | Place_NP)??", "What was the nationality of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1669",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the daughter of ($x | Person_NP)??", "What is the nationality of the daughters of ($x | Person_NP)??", "What was the nationality of the daughter of ($x | Person_NP)??", "What was the nationality of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1670",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the successor of ($x | Politician_NP)??", "What was the nationality of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1671",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the child of ($x | Person_NP)??", "What is the nationality of the children of ($x | Person_NP)??", "What was the nationality of the child of ($x | Person_NP)??", "What was the nationality of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1672",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the governor of ($x | Person_NP)??", "What is the nationality of the governors of ($x | Person_NP)??", "What was the nationality of the governor of ($x | Person_NP)??", "What was the nationality of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1673",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the music composer of ($x | TelevisionShow_NP)??", "What is the nationality of the music composers of ($x | TelevisionShow_NP)??", "What was the nationality of the music composer of ($x | TelevisionShow_NP)??", "What was the nationality of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1674",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the first to climb  ($x | Mountain_NP)??", "What was the nationality of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1675",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the father of ($x | Royalty_NP)??", "What was the nationality of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1676",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the music composer of ($x | TelevisionShow_NP)??", "What is the nationality of the music composers of ($x | TelevisionShow_NP)??", "What was the nationality of the music composer of ($x | TelevisionShow_NP)??", "What was the nationality of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1677",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the son of ($x | Person_NP)??", "What is the nationality of the sons of ($x | Person_NP)??", "What was the nationality of the son of ($x | Person_NP)??", "What was the nationality of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1678",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the son of ($x | Person_NP)??", "What is the nationality of the sons of ($x | Person_NP)??", "What was the nationality of the son of ($x | Person_NP)??", "What was the nationality of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1679",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of the mayor of ($x | City_NP)??", "What is the nationality of the mayors of ($x | City_NP)??", "What was the nationality of the mayor of ($x | City_NP)??", "What was the nationality of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1680",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the editor of ($x | Work_NP)? have?", "How many nationality does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1681",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the parent of ($x | Person_NP)? have?", "How many nationality does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1682",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the king of ($x | Legislature_NP)? have?", "How many nationality does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1683",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the coach of ($x | IceHockeyLeague_NP)? have?", "How many nationality does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1684",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the coach of ($x | HockeyTeam_NP)? have?", "How many nationality does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1685",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1686",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the author of ($x | Work_NP)? have?", "How many nationality does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1687",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the mayor of ($x | Settlement_NP)? have?", "How many nationality does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1688",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the music by ($x | Musical_NP)? have?", "How many nationality does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1689",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1690",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the creator of ($x | FictionalCharacter_NP)? have?", "How many nationality does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1691",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the influencer of ($x | Person_NP)? have?", "How many nationality does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1692",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the wife of ($x | Person_NP)? have?", "How many nationality does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1693",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many nationality does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1694",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the host of ($x | TelevisionShow_NP)? have?", "How many nationality does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1695",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the residence of ($x | Place_NP)? have?", "How many nationality does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1696",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the daughter of ($x | Person_NP)? have?", "How many nationality does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1697",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1698",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the child of ($x | Person_NP)? have?", "How many nationality does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1699",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the governor of ($x | Person_NP)? have?", "How many nationality does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1700",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the music composer of ($x | TelevisionShow_NP)? have?", "How many nationality does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1701",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1702",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1703",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the music composer of ($x | TelevisionShow_NP)? have?", "How many nationality does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1704",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the son of ($x | Person_NP)? have?", "How many nationality does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1705",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the son of ($x | Person_NP)? have?", "How many nationality does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1706",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nationality does the mayor of ($x | City_NP)? have?", "How many nationality does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1707",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of the largest city of ($x | Country_NP)?.", "List all the nicknames of the largest city of ($x | Country_NP)?.", "show me all nicknames of the largest city of ($x | Country_NP)?.", "What are the nicknames of the largest city of ($x | Country_NP)??", "What is the nickname of the largest city of ($x | Country_NP)??", "What was the nickname of the largest city of ($x | Country_NP)??", "What were the nicknames of the largest city of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1708",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of the capital of ($x | Country_NP)?.", "List all the nicknames of the capital of ($x | Country_NP)?.", "show me all nicknames of the capital of ($x | Country_NP)?.", "What are the nicknames of the capital of ($x | Country_NP)??", "What is the nickname of the capital of ($x | Country_NP)??", "What was the nickname of the capital of ($x | Country_NP)??", "What were the nicknames of the capital of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1709",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of the cities in ($x | AdministrativeRegion_NP)?.", "Give me all nicknames of the city in ($x | AdministrativeRegion_NP)?.", "List all the nicknames of the cities in ($x | AdministrativeRegion_NP)?.", "List all the nicknames of the city in ($x | AdministrativeRegion_NP)?.", "show me all nicknames of the cities in ($x | AdministrativeRegion_NP)?.", "show me all nicknames of the city in ($x | AdministrativeRegion_NP)?.", "What are the nicknames of the cities in ($x | AdministrativeRegion_NP)??", "What are the nicknames of the city in ($x | AdministrativeRegion_NP)??", "What is the nickname of the cities in ($x | AdministrativeRegion_NP)??", "What is the nickname of the city in ($x | AdministrativeRegion_NP)??", "What was the nickname of the cities in ($x | AdministrativeRegion_NP)??", "What was the nickname of the city in ($x | AdministrativeRegion_NP)??", "What were the nicknames of the cities in ($x | AdministrativeRegion_NP)??", "What were the nicknames of the city in ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1710",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of the residence of ($x | Person_NP)?.", "Give me all nicknames of the residences of ($x | Person_NP)?.", "List all the nicknames of the residence of ($x | Person_NP)?.", "List all the nicknames of the residences of ($x | Person_NP)?.", "show me all nicknames of the residence of ($x | Person_NP)?.", "show me all nicknames of the residences of ($x | Person_NP)?.", "What are the nicknames of the residence of ($x | Person_NP)??", "What are the nicknames of the residences of ($x | Person_NP)??", "What is the nickname of the residence of ($x | Person_NP)??", "What is the nickname of the residences of ($x | Person_NP)??", "What was the nickname of the residence of ($x | Person_NP)??", "What was the nickname of the residences of ($x | Person_NP)??", "What were the nicknames of the residence of ($x | Person_NP)??", "What were the nicknames of the residences of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1711",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of the headquarter of ($x | Building_NP)?.", "List all the nicknames of the headquarter of ($x | Building_NP)?.", "show me all nicknames of the headquarter of ($x | Building_NP)?.", "What are the nicknames of the headquarter of ($x | Building_NP)??", "What is the nickname of the headquarter of ($x | Building_NP)??", "What was the nickname of the headquarter of ($x | Building_NP)??", "What were the nicknames of the headquarter of ($x | Building_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1712",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of the foundation place of ($x | Company_NP)?.", "List all the nicknames of the foundation place of ($x | Company_NP)?.", "show me all nicknames of the foundation place of ($x | Company_NP)?.", "What are the nicknames of the foundation place of ($x | Company_NP)??", "What is the nickname of the foundation place of ($x | Company_NP)??", "What was the nickname of the foundation place of ($x | Company_NP)??", "What were the nicknames of the foundation place of ($x | Company_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1713",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of the cities of ($x | AdministrativeRegion_NP)?.", "Give me all nicknames of the city of ($x | AdministrativeRegion_NP)?.", "List all the nicknames of the cities of ($x | AdministrativeRegion_NP)?.", "List all the nicknames of the city of ($x | AdministrativeRegion_NP)?.", "show me all nicknames of the cities of ($x | AdministrativeRegion_NP)?.", "show me all nicknames of the city of ($x | AdministrativeRegion_NP)?.", "What are the nicknames of the cities of ($x | AdministrativeRegion_NP)??", "What are the nicknames of the city of ($x | AdministrativeRegion_NP)??", "What is the nickname of the cities of ($x | AdministrativeRegion_NP)??", "What is the nickname of the city of ($x | AdministrativeRegion_NP)??", "What was the nickname of the cities of ($x | AdministrativeRegion_NP)??", "What was the nickname of the city of ($x | AdministrativeRegion_NP)??", "What were the nicknames of the cities of ($x | AdministrativeRegion_NP)??", "What were the nicknames of the city of ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1714",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nickname does the largest city of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1715",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nickname does the capital of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1716",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nickname does the cities in ($x | AdministrativeRegion_NP)? have?", "How many nickname does the city in ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1717",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nickname does the residence of ($x | Person_NP)? have?", "How many nickname does the residences of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1718",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nickname does the headquarter of ($x | Building_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1719",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nickname does the foundation place of ($x | Company_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1720",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many nickname does the cities of ($x | AdministrativeRegion_NP)? have?", "How many nickname does the city of ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1721",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of the death place of ($x | Politician_NP)?.", "List all the flags of the death place of ($x | Politician_NP)?.", "show me all flags of the death place of ($x | Politician_NP)?.", "What are the flags of the death place of ($x | Politician_NP)??", "What is the flag of the death place of ($x | Politician_NP)??", "What was the flag of the death place of ($x | Politician_NP)??", "What were the flags of the death place of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1722",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of the location of ($x | Place_NP)?.", "List all the flags of the location of ($x | Place_NP)?.", "show me all flags of the location of ($x | Place_NP)?.", "What are the flags of the location of ($x | Place_NP)??", "What is the flag of the location of ($x | Place_NP)??", "What was the flag of the location of ($x | Place_NP)??", "What were the flags of the location of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1723",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of the first Ascent Person of ($x | Mountain_NP)?.", "Give me all flags of the first Ascent Persons of ($x | Mountain_NP)?.", "List all the flags of the first Ascent Person of ($x | Mountain_NP)?.", "List all the flags of the first Ascent Persons of ($x | Mountain_NP)?.", "show me all flags of the first Ascent Person of ($x | Mountain_NP)?.", "show me all flags of the first Ascent Persons of ($x | Mountain_NP)?.", "What are the flags of the first Ascent Person of ($x | Mountain_NP)??", "What are the flags of the first Ascent Persons of ($x | Mountain_NP)??", "What is the flag of the first Ascent Person of ($x | Mountain_NP)??", "What is the flag of the first Ascent Persons of ($x | Mountain_NP)??", "What was the flag of the first Ascent Person of ($x | Mountain_NP)??", "What was the flag of the first Ascent Persons of ($x | Mountain_NP)??", "What were the flags of the first Ascent Person of ($x | Mountain_NP)??", "What were the flags of the first Ascent Persons of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1724",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of the employer of ($x | Person_NP)?.", "Give me all flags of the employers of ($x | Person_NP)?.", "List all the flags of the employer of ($x | Person_NP)?.", "List all the flags of the employers of ($x | Person_NP)?.", "show me all flags of the employer of ($x | Person_NP)?.", "show me all flags of the employers of ($x | Person_NP)?.", "What are the flags of the employer of ($x | Person_NP)??", "What are the flags of the employers of ($x | Person_NP)??", "What is the flag of the employer of ($x | Person_NP)??", "What is the flag of the employers of ($x | Person_NP)??", "What was the flag of the employer of ($x | Person_NP)??", "What was the flag of the employers of ($x | Person_NP)??", "What were the flags of the employer of ($x | Person_NP)??", "What were the flags of the employers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/employer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1725",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of the wine region of ($x | Grape_NP)?.", "Give me all flags of the wine regions of ($x | Grape_NP)?.", "List all the flags of the wine region of ($x | Grape_NP)?.", "List all the flags of the wine regions of ($x | Grape_NP)?.", "show me all flags of the wine region of ($x | Grape_NP)?.", "show me all flags of the wine regions of ($x | Grape_NP)?.", "What are the flags of the wine region of ($x | Grape_NP)??", "What are the flags of the wine regions of ($x | Grape_NP)??", "What is the flag of the wine region of ($x | Grape_NP)??", "What is the flag of the wine regions of ($x | Grape_NP)??", "What was the flag of the wine region of ($x | Grape_NP)??", "What was the flag of the wine regions of ($x | Grape_NP)??", "What were the flags of the wine region of ($x | Grape_NP)??", "What were the flags of the wine regions of ($x | Grape_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/wineRegion> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1726",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of the associated Musical Artist of ($x | Band_NP)?.", "Give me all flags of the associated Musical Artists of ($x | Band_NP)?.", "List all the flags of the associated Musical Artist of ($x | Band_NP)?.", "List all the flags of the associated Musical Artists of ($x | Band_NP)?.", "show me all flags of the associated Musical Artist of ($x | Band_NP)?.", "show me all flags of the associated Musical Artists of ($x | Band_NP)?.", "What are the flags of the associated Musical Artist of ($x | Band_NP)??", "What are the flags of the associated Musical Artists of ($x | Band_NP)??", "What is the flag of the associated Musical Artist of ($x | Band_NP)??", "What is the flag of the associated Musical Artists of ($x | Band_NP)??", "What was the flag of the associated Musical Artist of ($x | Band_NP)??", "What was the flag of the associated Musical Artists of ($x | Band_NP)??", "What were the flags of the associated Musical Artist of ($x | Band_NP)??", "What were the flags of the associated Musical Artists of ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/associatedMusicalArtist> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1727",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many flag does the death place of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1728",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many flag does the location of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1729",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many flag does the first Ascent Person of ($x | Mountain_NP)? have?", "How many flag does the first Ascent Persons of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1730",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many flag does the employer of ($x | Person_NP)? have?", "How many flag does the employers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/employer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1731",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many flag does the wine region of ($x | Grape_NP)? have?", "How many flag does the wine regions of ($x | Grape_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/wineRegion> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1732",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many flag does the associated Musical Artist of ($x | Band_NP)? have?", "How many flag does the associated Musical Artists of ($x | Band_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1733",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the editor of ($x | Work_NP)?.", "Give me all sons of the editors of ($x | Work_NP)?.", "List all the sons of the editor of ($x | Work_NP)?.", "List all the sons of the editors of ($x | Work_NP)?.", "show me all sons of the editor of ($x | Work_NP)?.", "show me all sons of the editors of ($x | Work_NP)?.", "Who are the sons of the editor of ($x | Work_NP)??", "Who are the sons of the editors of ($x | Work_NP)??", "Who is the son of the editor of ($x | Work_NP)??", "Who is the son of the editors of ($x | Work_NP)??", "Who was the son of the editor of ($x | Work_NP)??", "Who was the son of the editors of ($x | Work_NP)??", "Who were the sons of the editor of ($x | Work_NP)??", "Who were the sons of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1734",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the parent of ($x | Person_NP)?.", "Give me all sons of the parents of ($x | Person_NP)?.", "List all the sons of the parent of ($x | Person_NP)?.", "List all the sons of the parents of ($x | Person_NP)?.", "show me all sons of the parent of ($x | Person_NP)?.", "show me all sons of the parents of ($x | Person_NP)?.", "Who are the sons of the parent of ($x | Person_NP)??", "Who are the sons of the parents of ($x | Person_NP)??", "Who is the son of the parent of ($x | Person_NP)??", "Who is the son of the parents of ($x | Person_NP)??", "Who was the son of the parent of ($x | Person_NP)??", "Who was the son of the parents of ($x | Person_NP)??", "Who were the sons of the parent of ($x | Person_NP)??", "Who were the sons of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1735",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the king of ($x | Legislature_NP)?.", "Give me all sons of the kings of ($x | Legislature_NP)?.", "List all the sons of the king of ($x | Legislature_NP)?.", "List all the sons of the kings of ($x | Legislature_NP)?.", "show me all sons of the king of ($x | Legislature_NP)?.", "show me all sons of the kings of ($x | Legislature_NP)?.", "Who are the sons of the king of ($x | Legislature_NP)??", "Who are the sons of the kings of ($x | Legislature_NP)??", "Who is the son of the king of ($x | Legislature_NP)??", "Who is the son of the kings of ($x | Legislature_NP)??", "Who was the son of the king of ($x | Legislature_NP)??", "Who was the son of the kings of ($x | Legislature_NP)??", "Who were the sons of the king of ($x | Legislature_NP)??", "Who were the sons of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1736",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all sons of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the sons of the coach of ($x | IceHockeyLeague_NP)?.", "List all the sons of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all sons of the coach of ($x | IceHockeyLeague_NP)?.", "show me all sons of the coaches of ($x | IceHockeyLeague_NP)?.", "Who are the sons of the coach of ($x | IceHockeyLeague_NP)??", "Who are the sons of the coaches of ($x | IceHockeyLeague_NP)??", "Who is the son of the coach of ($x | IceHockeyLeague_NP)??", "Who is the son of the coaches of ($x | IceHockeyLeague_NP)??", "Who was the son of the coach of ($x | IceHockeyLeague_NP)??", "Who was the son of the coaches of ($x | IceHockeyLeague_NP)??", "Who were the sons of the coach of ($x | IceHockeyLeague_NP)??", "Who were the sons of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1737",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the coach of ($x | HockeyTeam_NP)?.", "Give me all sons of the coaches of ($x | HockeyTeam_NP)?.", "List all the sons of the coach of ($x | HockeyTeam_NP)?.", "List all the sons of the coaches of ($x | HockeyTeam_NP)?.", "show me all sons of the coach of ($x | HockeyTeam_NP)?.", "show me all sons of the coaches of ($x | HockeyTeam_NP)?.", "Who are the sons of the coach of ($x | HockeyTeam_NP)??", "Who are the sons of the coaches of ($x | HockeyTeam_NP)??", "Who is the son of the coach of ($x | HockeyTeam_NP)??", "Who is the son of the coaches of ($x | HockeyTeam_NP)??", "Who was the son of the coach of ($x | HockeyTeam_NP)??", "Who was the son of the coaches of ($x | HockeyTeam_NP)??", "Who were the sons of the coach of ($x | HockeyTeam_NP)??", "Who were the sons of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1738",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the sons of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all sons of the alter ego of ($x | ComicsCharacter_NP)?.", "Who are the sons of the alter ego of ($x | ComicsCharacter_NP)??", "Who is the son of the alter ego of ($x | ComicsCharacter_NP)??", "Who was the son of the alter ego of ($x | ComicsCharacter_NP)??", "Who were the sons of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1739",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the author of ($x | Work_NP)?.", "Give me all sons of the authors of ($x | Work_NP)?.", "List all the sons of the author of ($x | Work_NP)?.", "List all the sons of the authors of ($x | Work_NP)?.", "show me all sons of the author of ($x | Work_NP)?.", "show me all sons of the authors of ($x | Work_NP)?.", "Who are the sons of the author of ($x | Work_NP)??", "Who are the sons of the authors of ($x | Work_NP)??", "Who is the son of the author of ($x | Work_NP)??", "Who is the son of the authors of ($x | Work_NP)??", "Who was the son of the author of ($x | Work_NP)??", "Who was the son of the authors of ($x | Work_NP)??", "Who were the sons of the author of ($x | Work_NP)??", "Who were the sons of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1740",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the mayor of ($x | Settlement_NP)?.", "Give me all sons of the mayors of ($x | Settlement_NP)?.", "List all the sons of the mayor of ($x | Settlement_NP)?.", "List all the sons of the mayors of ($x | Settlement_NP)?.", "show me all sons of the mayor of ($x | Settlement_NP)?.", "show me all sons of the mayors of ($x | Settlement_NP)?.", "Who are the sons of the mayor of ($x | Settlement_NP)??", "Who are the sons of the mayors of ($x | Settlement_NP)??", "Who is the son of the mayor of ($x | Settlement_NP)??", "Who is the son of the mayors of ($x | Settlement_NP)??", "Who was the son of the mayor of ($x | Settlement_NP)??", "Who was the son of the mayors of ($x | Settlement_NP)??", "Who were the sons of the mayor of ($x | Settlement_NP)??", "Who were the sons of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1741",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the music by ($x | Musical_NP)?.", "Give me all sons of the musics by ($x | Musical_NP)?.", "List all the sons of the music by ($x | Musical_NP)?.", "List all the sons of the musics by ($x | Musical_NP)?.", "show me all sons of the music by ($x | Musical_NP)?.", "show me all sons of the musics by ($x | Musical_NP)?.", "Who are the sons of the music by ($x | Musical_NP)??", "Who are the sons of the musics by ($x | Musical_NP)??", "Who is the son of the music by ($x | Musical_NP)??", "Who is the son of the musics by ($x | Musical_NP)??", "Who was the son of the music by ($x | Musical_NP)??", "Who was the son of the musics by ($x | Musical_NP)??", "Who were the sons of the music by ($x | Musical_NP)??", "Who were the sons of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1742",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the foundation series of ($x | TelevisionShow_NP)?.", "List all the sons of the foundation series of ($x | TelevisionShow_NP)?.", "show me all sons of the foundation series of ($x | TelevisionShow_NP)?.", "Who are the sons of the foundation series of ($x | TelevisionShow_NP)??", "Who is the son of the foundation series of ($x | TelevisionShow_NP)??", "Who was the son of the foundation series of ($x | TelevisionShow_NP)??", "Who were the sons of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1743",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the creator of ($x | FictionalCharacter_NP)?.", "Give me all sons of the creators of ($x | FictionalCharacter_NP)?.", "List all the sons of the creator of ($x | FictionalCharacter_NP)?.", "List all the sons of the creators of ($x | FictionalCharacter_NP)?.", "show me all sons of the creator of ($x | FictionalCharacter_NP)?.", "show me all sons of the creators of ($x | FictionalCharacter_NP)?.", "Who are the sons of the creator of ($x | FictionalCharacter_NP)??", "Who are the sons of the creators of ($x | FictionalCharacter_NP)??", "Who is the son of the creator of ($x | FictionalCharacter_NP)??", "Who is the son of the creators of ($x | FictionalCharacter_NP)??", "Who was the son of the creator of ($x | FictionalCharacter_NP)??", "Who was the son of the creators of ($x | FictionalCharacter_NP)??", "Who were the sons of the creator of ($x | FictionalCharacter_NP)??", "Who were the sons of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1744",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the influencer of ($x | Person_NP)?.", "Give me all sons of the influencers of ($x | Person_NP)?.", "List all the sons of the influencer of ($x | Person_NP)?.", "List all the sons of the influencers of ($x | Person_NP)?.", "show me all sons of the influencer of ($x | Person_NP)?.", "show me all sons of the influencers of ($x | Person_NP)?.", "Who are the sons of the influencer of ($x | Person_NP)??", "Who are the sons of the influencers of ($x | Person_NP)??", "Who is the son of the influencer of ($x | Person_NP)??", "Who is the son of the influencers of ($x | Person_NP)??", "Who was the son of the influencer of ($x | Person_NP)??", "Who was the son of the influencers of ($x | Person_NP)??", "Who were the sons of the influencer of ($x | Person_NP)??", "Who were the sons of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1745",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the wife of ($x | Person_NP)?.", "Give me all sons of the wives of ($x | Person_NP)?.", "List all the sons of the wife of ($x | Person_NP)?.", "List all the sons of the wives of ($x | Person_NP)?.", "show me all sons of the wife of ($x | Person_NP)?.", "show me all sons of the wives of ($x | Person_NP)?.", "Who are the sons of the wife of ($x | Person_NP)??", "Who are the sons of the wives of ($x | Person_NP)??", "Who is the son of the wife of ($x | Person_NP)??", "Who is the son of the wives of ($x | Person_NP)??", "Who was the son of the wife of ($x | Person_NP)??", "Who was the son of the wives of ($x | Person_NP)??", "Who were the sons of the wife of ($x | Person_NP)??", "Who were the sons of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1746",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all sons of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the sons of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the sons of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all sons of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all sons of the doctoral supervisors of ($x | Scientist_NP)?.", "Who are the sons of the doctoral supervisor of ($x | Scientist_NP)??", "Who are the sons of the doctoral supervisors of ($x | Scientist_NP)??", "Who is the son of the doctoral supervisor of ($x | Scientist_NP)??", "Who is the son of the doctoral supervisors of ($x | Scientist_NP)??", "Who was the son of the doctoral supervisor of ($x | Scientist_NP)??", "Who was the son of the doctoral supervisors of ($x | Scientist_NP)??", "Who were the sons of the doctoral supervisor of ($x | Scientist_NP)??", "Who were the sons of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1747",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the host of ($x | TelevisionShow_NP)?.", "Give me all sons of the hosts of ($x | TelevisionShow_NP)?.", "List all the sons of the host of ($x | TelevisionShow_NP)?.", "List all the sons of the hosts of ($x | TelevisionShow_NP)?.", "show me all sons of the host of ($x | TelevisionShow_NP)?.", "show me all sons of the hosts of ($x | TelevisionShow_NP)?.", "Who are the sons of the host of ($x | TelevisionShow_NP)??", "Who are the sons of the hosts of ($x | TelevisionShow_NP)??", "Who is the son of the host of ($x | TelevisionShow_NP)??", "Who is the son of the hosts of ($x | TelevisionShow_NP)??", "Who was the son of the host of ($x | TelevisionShow_NP)??", "Who was the son of the hosts of ($x | TelevisionShow_NP)??", "Who were the sons of the host of ($x | TelevisionShow_NP)??", "Who were the sons of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1748",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the residence of ($x | Place_NP)?.", "Give me all sons of the residences of ($x | Place_NP)?.", "List all the sons of the residence of ($x | Place_NP)?.", "List all the sons of the residences of ($x | Place_NP)?.", "show me all sons of the residence of ($x | Place_NP)?.", "show me all sons of the residences of ($x | Place_NP)?.", "Who are the sons of the residence of ($x | Place_NP)??", "Who are the sons of the residences of ($x | Place_NP)??", "Who is the son of the residence of ($x | Place_NP)??", "Who is the son of the residences of ($x | Place_NP)??", "Who was the son of the residence of ($x | Place_NP)??", "Who was the son of the residences of ($x | Place_NP)??", "Who were the sons of the residence of ($x | Place_NP)??", "Who were the sons of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1749",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the daughter of ($x | Person_NP)?.", "Give me all sons of the daughters of ($x | Person_NP)?.", "List all the sons of the daughter of ($x | Person_NP)?.", "List all the sons of the daughters of ($x | Person_NP)?.", "show me all sons of the daughter of ($x | Person_NP)?.", "show me all sons of the daughters of ($x | Person_NP)?.", "Who are the sons of the daughter of ($x | Person_NP)??", "Who are the sons of the daughters of ($x | Person_NP)??", "Who is the son of the daughter of ($x | Person_NP)??", "Who is the son of the daughters of ($x | Person_NP)??", "Who was the son of the daughter of ($x | Person_NP)??", "Who was the son of the daughters of ($x | Person_NP)??", "Who were the sons of the daughter of ($x | Person_NP)??", "Who were the sons of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1750",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the successor of ($x | Politician_NP)?.", "List all the sons of the successor of ($x | Politician_NP)?.", "show me all sons of the successor of ($x | Politician_NP)?.", "Who are the sons of the successor of ($x | Politician_NP)??", "Who is the son of the successor of ($x | Politician_NP)??", "Who was the son of the successor of ($x | Politician_NP)??", "Who were the sons of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1751",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the child of ($x | Person_NP)?.", "Give me all sons of the children of ($x | Person_NP)?.", "List all the sons of the child of ($x | Person_NP)?.", "List all the sons of the children of ($x | Person_NP)?.", "show me all sons of the child of ($x | Person_NP)?.", "show me all sons of the children of ($x | Person_NP)?.", "Who are the sons of the child of ($x | Person_NP)??", "Who are the sons of the children of ($x | Person_NP)??", "Who is the son of the child of ($x | Person_NP)??", "Who is the son of the children of ($x | Person_NP)??", "Who was the son of the child of ($x | Person_NP)??", "Who was the son of the children of ($x | Person_NP)??", "Who were the sons of the child of ($x | Person_NP)??", "Who were the sons of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1752",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the governor of ($x | Person_NP)?.", "Give me all sons of the governors of ($x | Person_NP)?.", "List all the sons of the governor of ($x | Person_NP)?.", "List all the sons of the governors of ($x | Person_NP)?.", "show me all sons of the governor of ($x | Person_NP)?.", "show me all sons of the governors of ($x | Person_NP)?.", "Who are the sons of the governor of ($x | Person_NP)??", "Who are the sons of the governors of ($x | Person_NP)??", "Who is the son of the governor of ($x | Person_NP)??", "Who is the son of the governors of ($x | Person_NP)??", "Who was the son of the governor of ($x | Person_NP)??", "Who was the son of the governors of ($x | Person_NP)??", "Who were the sons of the governor of ($x | Person_NP)??", "Who were the sons of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1753",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the music composer of ($x | TelevisionShow_NP)?.", "Give me all sons of the music composers of ($x | TelevisionShow_NP)?.", "List all the sons of the music composer of ($x | TelevisionShow_NP)?.", "List all the sons of the music composers of ($x | TelevisionShow_NP)?.", "show me all sons of the music composer of ($x | TelevisionShow_NP)?.", "show me all sons of the music composers of ($x | TelevisionShow_NP)?.", "Who are the sons of the music composer of ($x | TelevisionShow_NP)??", "Who are the sons of the music composers of ($x | TelevisionShow_NP)??", "Who is the son of the music composer of ($x | TelevisionShow_NP)??", "Who is the son of the music composers of ($x | TelevisionShow_NP)??", "Who was the son of the music composer of ($x | TelevisionShow_NP)??", "Who was the son of the music composers of ($x | TelevisionShow_NP)??", "Who were the sons of the music composer of ($x | TelevisionShow_NP)??", "Who were the sons of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1754",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the first to climb  ($x | Mountain_NP)?.", "List all the sons of the first to climb  ($x | Mountain_NP)?.", "show me all sons of the first to climb  ($x | Mountain_NP)?.", "Who are the sons of the first to climb  ($x | Mountain_NP)??", "Who is the son of the first to climb  ($x | Mountain_NP)??", "Who was the son of the first to climb  ($x | Mountain_NP)??", "Who were the sons of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1755",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the father of ($x | Royalty_NP)?.", "List all the sons of the father of ($x | Royalty_NP)?.", "show me all sons of the father of ($x | Royalty_NP)?.", "Who are the sons of the father of ($x | Royalty_NP)??", "Who is the son of the father of ($x | Royalty_NP)??", "Who was the son of the father of ($x | Royalty_NP)??", "Who were the sons of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1756",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the music composer of ($x | TelevisionShow_NP)?.", "Give me all sons of the music composers of ($x | TelevisionShow_NP)?.", "List all the sons of the music composer of ($x | TelevisionShow_NP)?.", "List all the sons of the music composers of ($x | TelevisionShow_NP)?.", "show me all sons of the music composer of ($x | TelevisionShow_NP)?.", "show me all sons of the music composers of ($x | TelevisionShow_NP)?.", "Who are the sons of the music composer of ($x | TelevisionShow_NP)??", "Who are the sons of the music composers of ($x | TelevisionShow_NP)??", "Who is the son of the music composer of ($x | TelevisionShow_NP)??", "Who is the son of the music composers of ($x | TelevisionShow_NP)??", "Who was the son of the music composer of ($x | TelevisionShow_NP)??", "Who was the son of the music composers of ($x | TelevisionShow_NP)??", "Who were the sons of the music composer of ($x | TelevisionShow_NP)??", "Who were the sons of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1757",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the son of ($x | Person_NP)?.", "Give me all sons of the sons of ($x | Person_NP)?.", "List all the sons of the son of ($x | Person_NP)?.", "List all the sons of the sons of ($x | Person_NP)?.", "show me all sons of the son of ($x | Person_NP)?.", "show me all sons of the sons of ($x | Person_NP)?.", "Who are the sons of the son of ($x | Person_NP)??", "Who are the sons of the sons of ($x | Person_NP)??", "Who is the son of the son of ($x | Person_NP)??", "Who is the son of the sons of ($x | Person_NP)??", "Who was the son of the son of ($x | Person_NP)??", "Who was the son of the sons of ($x | Person_NP)??", "Who were the sons of the son of ($x | Person_NP)??", "Who were the sons of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1758",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the son of ($x | Person_NP)?.", "Give me all sons of the sons of ($x | Person_NP)?.", "List all the sons of the son of ($x | Person_NP)?.", "List all the sons of the sons of ($x | Person_NP)?.", "show me all sons of the son of ($x | Person_NP)?.", "show me all sons of the sons of ($x | Person_NP)?.", "Who are the sons of the son of ($x | Person_NP)??", "Who are the sons of the sons of ($x | Person_NP)??", "Who is the son of the son of ($x | Person_NP)??", "Who is the son of the sons of ($x | Person_NP)??", "Who was the son of the son of ($x | Person_NP)??", "Who was the son of the sons of ($x | Person_NP)??", "Who were the sons of the son of ($x | Person_NP)??", "Who were the sons of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1759",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the mayor of ($x | City_NP)?.", "Give me all sons of the mayors of ($x | City_NP)?.", "List all the sons of the mayor of ($x | City_NP)?.", "List all the sons of the mayors of ($x | City_NP)?.", "show me all sons of the mayor of ($x | City_NP)?.", "show me all sons of the mayors of ($x | City_NP)?.", "Who are the sons of the mayor of ($x | City_NP)??", "Who are the sons of the mayors of ($x | City_NP)??", "Who is the son of the mayor of ($x | City_NP)??", "Who is the son of the mayors of ($x | City_NP)??", "Who was the son of the mayor of ($x | City_NP)??", "Who was the son of the mayors of ($x | City_NP)??", "Who were the sons of the mayor of ($x | City_NP)??", "Who were the sons of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1760",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the editor of ($x | Work_NP)? have?", "How many son does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1761",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the parent of ($x | Person_NP)? have?", "How many son does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1762",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the king of ($x | Legislature_NP)? have?", "How many son does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1763",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the coach of ($x | IceHockeyLeague_NP)? have?", "How many son does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1764",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the coach of ($x | HockeyTeam_NP)? have?", "How many son does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1765",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1766",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the author of ($x | Work_NP)? have?", "How many son does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1767",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the mayor of ($x | Settlement_NP)? have?", "How many son does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1768",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the music by ($x | Musical_NP)? have?", "How many son does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1769",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1770",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the creator of ($x | FictionalCharacter_NP)? have?", "How many son does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1771",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the influencer of ($x | Person_NP)? have?", "How many son does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1772",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the wife of ($x | Person_NP)? have?", "How many son does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1773",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many son does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1774",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the host of ($x | TelevisionShow_NP)? have?", "How many son does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1775",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the residence of ($x | Place_NP)? have?", "How many son does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1776",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the daughter of ($x | Person_NP)? have?", "How many son does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1777",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1778",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the child of ($x | Person_NP)? have?", "How many son does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1779",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the governor of ($x | Person_NP)? have?", "How many son does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1780",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the music composer of ($x | TelevisionShow_NP)? have?", "How many son does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1781",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1782",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1783",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the music composer of ($x | TelevisionShow_NP)? have?", "How many son does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1784",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the son of ($x | Person_NP)? have?", "How many son does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1785",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the son of ($x | Person_NP)? have?", "How many son does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1786",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the mayor of ($x | City_NP)? have?", "How many son does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1787",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the editor of ($x | Work_NP)?.", "Give me all sons of the editors of ($x | Work_NP)?.", "List all the sons of the editor of ($x | Work_NP)?.", "List all the sons of the editors of ($x | Work_NP)?.", "show me all sons of the editor of ($x | Work_NP)?.", "show me all sons of the editors of ($x | Work_NP)?.", "Who are the sons of the editor of ($x | Work_NP)??", "Who are the sons of the editors of ($x | Work_NP)??", "Who is the son of the editor of ($x | Work_NP)??", "Who is the son of the editors of ($x | Work_NP)??", "Who was the son of the editor of ($x | Work_NP)??", "Who was the son of the editors of ($x | Work_NP)??", "Who were the sons of the editor of ($x | Work_NP)??", "Who were the sons of the editors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1788",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the parent of ($x | Person_NP)?.", "Give me all sons of the parents of ($x | Person_NP)?.", "List all the sons of the parent of ($x | Person_NP)?.", "List all the sons of the parents of ($x | Person_NP)?.", "show me all sons of the parent of ($x | Person_NP)?.", "show me all sons of the parents of ($x | Person_NP)?.", "Who are the sons of the parent of ($x | Person_NP)??", "Who are the sons of the parents of ($x | Person_NP)??", "Who is the son of the parent of ($x | Person_NP)??", "Who is the son of the parents of ($x | Person_NP)??", "Who was the son of the parent of ($x | Person_NP)??", "Who was the son of the parents of ($x | Person_NP)??", "Who were the sons of the parent of ($x | Person_NP)??", "Who were the sons of the parents of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1789",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the king of ($x | Legislature_NP)?.", "Give me all sons of the kings of ($x | Legislature_NP)?.", "List all the sons of the king of ($x | Legislature_NP)?.", "List all the sons of the kings of ($x | Legislature_NP)?.", "show me all sons of the king of ($x | Legislature_NP)?.", "show me all sons of the kings of ($x | Legislature_NP)?.", "Who are the sons of the king of ($x | Legislature_NP)??", "Who are the sons of the kings of ($x | Legislature_NP)??", "Who is the son of the king of ($x | Legislature_NP)??", "Who is the son of the kings of ($x | Legislature_NP)??", "Who was the son of the king of ($x | Legislature_NP)??", "Who was the son of the kings of ($x | Legislature_NP)??", "Who were the sons of the king of ($x | Legislature_NP)??", "Who were the sons of the kings of ($x | Legislature_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1790",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the coach of ($x | IceHockeyLeague_NP)?.", "Give me all sons of the coaches of ($x | IceHockeyLeague_NP)?.", "List all the sons of the coach of ($x | IceHockeyLeague_NP)?.", "List all the sons of the coaches of ($x | IceHockeyLeague_NP)?.", "show me all sons of the coach of ($x | IceHockeyLeague_NP)?.", "show me all sons of the coaches of ($x | IceHockeyLeague_NP)?.", "Who are the sons of the coach of ($x | IceHockeyLeague_NP)??", "Who are the sons of the coaches of ($x | IceHockeyLeague_NP)??", "Who is the son of the coach of ($x | IceHockeyLeague_NP)??", "Who is the son of the coaches of ($x | IceHockeyLeague_NP)??", "Who was the son of the coach of ($x | IceHockeyLeague_NP)??", "Who was the son of the coaches of ($x | IceHockeyLeague_NP)??", "Who were the sons of the coach of ($x | IceHockeyLeague_NP)??", "Who were the sons of the coaches of ($x | IceHockeyLeague_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1791",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the coach of ($x | HockeyTeam_NP)?.", "Give me all sons of the coaches of ($x | HockeyTeam_NP)?.", "List all the sons of the coach of ($x | HockeyTeam_NP)?.", "List all the sons of the coaches of ($x | HockeyTeam_NP)?.", "show me all sons of the coach of ($x | HockeyTeam_NP)?.", "show me all sons of the coaches of ($x | HockeyTeam_NP)?.", "Who are the sons of the coach of ($x | HockeyTeam_NP)??", "Who are the sons of the coaches of ($x | HockeyTeam_NP)??", "Who is the son of the coach of ($x | HockeyTeam_NP)??", "Who is the son of the coaches of ($x | HockeyTeam_NP)??", "Who was the son of the coach of ($x | HockeyTeam_NP)??", "Who was the son of the coaches of ($x | HockeyTeam_NP)??", "Who were the sons of the coach of ($x | HockeyTeam_NP)??", "Who were the sons of the coaches of ($x | HockeyTeam_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1792",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the alter ego of ($x | ComicsCharacter_NP)?.", "List all the sons of the alter ego of ($x | ComicsCharacter_NP)?.", "show me all sons of the alter ego of ($x | ComicsCharacter_NP)?.", "Who are the sons of the alter ego of ($x | ComicsCharacter_NP)??", "Who is the son of the alter ego of ($x | ComicsCharacter_NP)??", "Who was the son of the alter ego of ($x | ComicsCharacter_NP)??", "Who were the sons of the alter ego of ($x | ComicsCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1793",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the author of ($x | Work_NP)?.", "Give me all sons of the authors of ($x | Work_NP)?.", "List all the sons of the author of ($x | Work_NP)?.", "List all the sons of the authors of ($x | Work_NP)?.", "show me all sons of the author of ($x | Work_NP)?.", "show me all sons of the authors of ($x | Work_NP)?.", "Who are the sons of the author of ($x | Work_NP)??", "Who are the sons of the authors of ($x | Work_NP)??", "Who is the son of the author of ($x | Work_NP)??", "Who is the son of the authors of ($x | Work_NP)??", "Who was the son of the author of ($x | Work_NP)??", "Who was the son of the authors of ($x | Work_NP)??", "Who were the sons of the author of ($x | Work_NP)??", "Who were the sons of the authors of ($x | Work_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1794",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the mayor of ($x | Settlement_NP)?.", "Give me all sons of the mayors of ($x | Settlement_NP)?.", "List all the sons of the mayor of ($x | Settlement_NP)?.", "List all the sons of the mayors of ($x | Settlement_NP)?.", "show me all sons of the mayor of ($x | Settlement_NP)?.", "show me all sons of the mayors of ($x | Settlement_NP)?.", "Who are the sons of the mayor of ($x | Settlement_NP)??", "Who are the sons of the mayors of ($x | Settlement_NP)??", "Who is the son of the mayor of ($x | Settlement_NP)??", "Who is the son of the mayors of ($x | Settlement_NP)??", "Who was the son of the mayor of ($x | Settlement_NP)??", "Who was the son of the mayors of ($x | Settlement_NP)??", "Who were the sons of the mayor of ($x | Settlement_NP)??", "Who were the sons of the mayors of ($x | Settlement_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1795",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the music by ($x | Musical_NP)?.", "Give me all sons of the musics by ($x | Musical_NP)?.", "List all the sons of the music by ($x | Musical_NP)?.", "List all the sons of the musics by ($x | Musical_NP)?.", "show me all sons of the music by ($x | Musical_NP)?.", "show me all sons of the musics by ($x | Musical_NP)?.", "Who are the sons of the music by ($x | Musical_NP)??", "Who are the sons of the musics by ($x | Musical_NP)??", "Who is the son of the music by ($x | Musical_NP)??", "Who is the son of the musics by ($x | Musical_NP)??", "Who was the son of the music by ($x | Musical_NP)??", "Who was the son of the musics by ($x | Musical_NP)??", "Who were the sons of the music by ($x | Musical_NP)??", "Who were the sons of the musics by ($x | Musical_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1796",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the foundation series of ($x | TelevisionShow_NP)?.", "List all the sons of the foundation series of ($x | TelevisionShow_NP)?.", "show me all sons of the foundation series of ($x | TelevisionShow_NP)?.", "Who are the sons of the foundation series of ($x | TelevisionShow_NP)??", "Who is the son of the foundation series of ($x | TelevisionShow_NP)??", "Who was the son of the foundation series of ($x | TelevisionShow_NP)??", "Who were the sons of the foundation series of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1797",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the creator of ($x | FictionalCharacter_NP)?.", "Give me all sons of the creators of ($x | FictionalCharacter_NP)?.", "List all the sons of the creator of ($x | FictionalCharacter_NP)?.", "List all the sons of the creators of ($x | FictionalCharacter_NP)?.", "show me all sons of the creator of ($x | FictionalCharacter_NP)?.", "show me all sons of the creators of ($x | FictionalCharacter_NP)?.", "Who are the sons of the creator of ($x | FictionalCharacter_NP)??", "Who are the sons of the creators of ($x | FictionalCharacter_NP)??", "Who is the son of the creator of ($x | FictionalCharacter_NP)??", "Who is the son of the creators of ($x | FictionalCharacter_NP)??", "Who was the son of the creator of ($x | FictionalCharacter_NP)??", "Who was the son of the creators of ($x | FictionalCharacter_NP)??", "Who were the sons of the creator of ($x | FictionalCharacter_NP)??", "Who were the sons of the creators of ($x | FictionalCharacter_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1798",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the influencer of ($x | Person_NP)?.", "Give me all sons of the influencers of ($x | Person_NP)?.", "List all the sons of the influencer of ($x | Person_NP)?.", "List all the sons of the influencers of ($x | Person_NP)?.", "show me all sons of the influencer of ($x | Person_NP)?.", "show me all sons of the influencers of ($x | Person_NP)?.", "Who are the sons of the influencer of ($x | Person_NP)??", "Who are the sons of the influencers of ($x | Person_NP)??", "Who is the son of the influencer of ($x | Person_NP)??", "Who is the son of the influencers of ($x | Person_NP)??", "Who was the son of the influencer of ($x | Person_NP)??", "Who was the son of the influencers of ($x | Person_NP)??", "Who were the sons of the influencer of ($x | Person_NP)??", "Who were the sons of the influencers of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1799",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the wife of ($x | Person_NP)?.", "Give me all sons of the wives of ($x | Person_NP)?.", "List all the sons of the wife of ($x | Person_NP)?.", "List all the sons of the wives of ($x | Person_NP)?.", "show me all sons of the wife of ($x | Person_NP)?.", "show me all sons of the wives of ($x | Person_NP)?.", "Who are the sons of the wife of ($x | Person_NP)??", "Who are the sons of the wives of ($x | Person_NP)??", "Who is the son of the wife of ($x | Person_NP)??", "Who is the son of the wives of ($x | Person_NP)??", "Who was the son of the wife of ($x | Person_NP)??", "Who was the son of the wives of ($x | Person_NP)??", "Who were the sons of the wife of ($x | Person_NP)??", "Who were the sons of the wives of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1800",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the doctoral supervisor of ($x | Scientist_NP)?.", "Give me all sons of the doctoral supervisors of ($x | Scientist_NP)?.", "List all the sons of the doctoral supervisor of ($x | Scientist_NP)?.", "List all the sons of the doctoral supervisors of ($x | Scientist_NP)?.", "show me all sons of the doctoral supervisor of ($x | Scientist_NP)?.", "show me all sons of the doctoral supervisors of ($x | Scientist_NP)?.", "Who are the sons of the doctoral supervisor of ($x | Scientist_NP)??", "Who are the sons of the doctoral supervisors of ($x | Scientist_NP)??", "Who is the son of the doctoral supervisor of ($x | Scientist_NP)??", "Who is the son of the doctoral supervisors of ($x | Scientist_NP)??", "Who was the son of the doctoral supervisor of ($x | Scientist_NP)??", "Who was the son of the doctoral supervisors of ($x | Scientist_NP)??", "Who were the sons of the doctoral supervisor of ($x | Scientist_NP)??", "Who were the sons of the doctoral supervisors of ($x | Scientist_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1801",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the host of ($x | TelevisionShow_NP)?.", "Give me all sons of the hosts of ($x | TelevisionShow_NP)?.", "List all the sons of the host of ($x | TelevisionShow_NP)?.", "List all the sons of the hosts of ($x | TelevisionShow_NP)?.", "show me all sons of the host of ($x | TelevisionShow_NP)?.", "show me all sons of the hosts of ($x | TelevisionShow_NP)?.", "Who are the sons of the host of ($x | TelevisionShow_NP)??", "Who are the sons of the hosts of ($x | TelevisionShow_NP)??", "Who is the son of the host of ($x | TelevisionShow_NP)??", "Who is the son of the hosts of ($x | TelevisionShow_NP)??", "Who was the son of the host of ($x | TelevisionShow_NP)??", "Who was the son of the hosts of ($x | TelevisionShow_NP)??", "Who were the sons of the host of ($x | TelevisionShow_NP)??", "Who were the sons of the hosts of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1802",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the residence of ($x | Place_NP)?.", "Give me all sons of the residences of ($x | Place_NP)?.", "List all the sons of the residence of ($x | Place_NP)?.", "List all the sons of the residences of ($x | Place_NP)?.", "show me all sons of the residence of ($x | Place_NP)?.", "show me all sons of the residences of ($x | Place_NP)?.", "Who are the sons of the residence of ($x | Place_NP)??", "Who are the sons of the residences of ($x | Place_NP)??", "Who is the son of the residence of ($x | Place_NP)??", "Who is the son of the residences of ($x | Place_NP)??", "Who was the son of the residence of ($x | Place_NP)??", "Who was the son of the residences of ($x | Place_NP)??", "Who were the sons of the residence of ($x | Place_NP)??", "Who were the sons of the residences of ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1803",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the daughter of ($x | Person_NP)?.", "Give me all sons of the daughters of ($x | Person_NP)?.", "List all the sons of the daughter of ($x | Person_NP)?.", "List all the sons of the daughters of ($x | Person_NP)?.", "show me all sons of the daughter of ($x | Person_NP)?.", "show me all sons of the daughters of ($x | Person_NP)?.", "Who are the sons of the daughter of ($x | Person_NP)??", "Who are the sons of the daughters of ($x | Person_NP)??", "Who is the son of the daughter of ($x | Person_NP)??", "Who is the son of the daughters of ($x | Person_NP)??", "Who was the son of the daughter of ($x | Person_NP)??", "Who was the son of the daughters of ($x | Person_NP)??", "Who were the sons of the daughter of ($x | Person_NP)??", "Who were the sons of the daughters of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1804",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the successor of ($x | Politician_NP)?.", "List all the sons of the successor of ($x | Politician_NP)?.", "show me all sons of the successor of ($x | Politician_NP)?.", "Who are the sons of the successor of ($x | Politician_NP)??", "Who is the son of the successor of ($x | Politician_NP)??", "Who was the son of the successor of ($x | Politician_NP)??", "Who were the sons of the successor of ($x | Politician_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1805",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the child of ($x | Person_NP)?.", "Give me all sons of the children of ($x | Person_NP)?.", "List all the sons of the child of ($x | Person_NP)?.", "List all the sons of the children of ($x | Person_NP)?.", "show me all sons of the child of ($x | Person_NP)?.", "show me all sons of the children of ($x | Person_NP)?.", "Who are the sons of the child of ($x | Person_NP)??", "Who are the sons of the children of ($x | Person_NP)??", "Who is the son of the child of ($x | Person_NP)??", "Who is the son of the children of ($x | Person_NP)??", "Who was the son of the child of ($x | Person_NP)??", "Who was the son of the children of ($x | Person_NP)??", "Who were the sons of the child of ($x | Person_NP)??", "Who were the sons of the children of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1806",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the governor of ($x | Person_NP)?.", "Give me all sons of the governors of ($x | Person_NP)?.", "List all the sons of the governor of ($x | Person_NP)?.", "List all the sons of the governors of ($x | Person_NP)?.", "show me all sons of the governor of ($x | Person_NP)?.", "show me all sons of the governors of ($x | Person_NP)?.", "Who are the sons of the governor of ($x | Person_NP)??", "Who are the sons of the governors of ($x | Person_NP)??", "Who is the son of the governor of ($x | Person_NP)??", "Who is the son of the governors of ($x | Person_NP)??", "Who was the son of the governor of ($x | Person_NP)??", "Who was the son of the governors of ($x | Person_NP)??", "Who were the sons of the governor of ($x | Person_NP)??", "Who were the sons of the governors of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1807",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the music composer of ($x | TelevisionShow_NP)?.", "Give me all sons of the music composers of ($x | TelevisionShow_NP)?.", "List all the sons of the music composer of ($x | TelevisionShow_NP)?.", "List all the sons of the music composers of ($x | TelevisionShow_NP)?.", "show me all sons of the music composer of ($x | TelevisionShow_NP)?.", "show me all sons of the music composers of ($x | TelevisionShow_NP)?.", "Who are the sons of the music composer of ($x | TelevisionShow_NP)??", "Who are the sons of the music composers of ($x | TelevisionShow_NP)??", "Who is the son of the music composer of ($x | TelevisionShow_NP)??", "Who is the son of the music composers of ($x | TelevisionShow_NP)??", "Who was the son of the music composer of ($x | TelevisionShow_NP)??", "Who was the son of the music composers of ($x | TelevisionShow_NP)??", "Who were the sons of the music composer of ($x | TelevisionShow_NP)??", "Who were the sons of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1808",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the first to climb  ($x | Mountain_NP)?.", "List all the sons of the first to climb  ($x | Mountain_NP)?.", "show me all sons of the first to climb  ($x | Mountain_NP)?.", "Who are the sons of the first to climb  ($x | Mountain_NP)??", "Who is the son of the first to climb  ($x | Mountain_NP)??", "Who was the son of the first to climb  ($x | Mountain_NP)??", "Who were the sons of the first to climb  ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1809",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the father of ($x | Royalty_NP)?.", "List all the sons of the father of ($x | Royalty_NP)?.", "show me all sons of the father of ($x | Royalty_NP)?.", "Who are the sons of the father of ($x | Royalty_NP)??", "Who is the son of the father of ($x | Royalty_NP)??", "Who was the son of the father of ($x | Royalty_NP)??", "Who were the sons of the father of ($x | Royalty_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1810",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the music composer of ($x | TelevisionShow_NP)?.", "Give me all sons of the music composers of ($x | TelevisionShow_NP)?.", "List all the sons of the music composer of ($x | TelevisionShow_NP)?.", "List all the sons of the music composers of ($x | TelevisionShow_NP)?.", "show me all sons of the music composer of ($x | TelevisionShow_NP)?.", "show me all sons of the music composers of ($x | TelevisionShow_NP)?.", "Who are the sons of the music composer of ($x | TelevisionShow_NP)??", "Who are the sons of the music composers of ($x | TelevisionShow_NP)??", "Who is the son of the music composer of ($x | TelevisionShow_NP)??", "Who is the son of the music composers of ($x | TelevisionShow_NP)??", "Who was the son of the music composer of ($x | TelevisionShow_NP)??", "Who was the son of the music composers of ($x | TelevisionShow_NP)??", "Who were the sons of the music composer of ($x | TelevisionShow_NP)??", "Who were the sons of the music composers of ($x | TelevisionShow_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1811",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the son of ($x | Person_NP)?.", "Give me all sons of the sons of ($x | Person_NP)?.", "List all the sons of the son of ($x | Person_NP)?.", "List all the sons of the sons of ($x | Person_NP)?.", "show me all sons of the son of ($x | Person_NP)?.", "show me all sons of the sons of ($x | Person_NP)?.", "Who are the sons of the son of ($x | Person_NP)??", "Who are the sons of the sons of ($x | Person_NP)??", "Who is the son of the son of ($x | Person_NP)??", "Who is the son of the sons of ($x | Person_NP)??", "Who was the son of the son of ($x | Person_NP)??", "Who was the son of the sons of ($x | Person_NP)??", "Who were the sons of the son of ($x | Person_NP)??", "Who were the sons of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1812",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the son of ($x | Person_NP)?.", "Give me all sons of the sons of ($x | Person_NP)?.", "List all the sons of the son of ($x | Person_NP)?.", "List all the sons of the sons of ($x | Person_NP)?.", "show me all sons of the son of ($x | Person_NP)?.", "show me all sons of the sons of ($x | Person_NP)?.", "Who are the sons of the son of ($x | Person_NP)??", "Who are the sons of the sons of ($x | Person_NP)??", "Who is the son of the son of ($x | Person_NP)??", "Who is the son of the sons of ($x | Person_NP)??", "Who was the son of the son of ($x | Person_NP)??", "Who was the son of the sons of ($x | Person_NP)??", "Who were the sons of the son of ($x | Person_NP)??", "Who were the sons of the sons of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1813",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of the mayor of ($x | City_NP)?.", "Give me all sons of the mayors of ($x | City_NP)?.", "List all the sons of the mayor of ($x | City_NP)?.", "List all the sons of the mayors of ($x | City_NP)?.", "show me all sons of the mayor of ($x | City_NP)?.", "show me all sons of the mayors of ($x | City_NP)?.", "Who are the sons of the mayor of ($x | City_NP)??", "Who are the sons of the mayors of ($x | City_NP)??", "Who is the son of the mayor of ($x | City_NP)??", "Who is the son of the mayors of ($x | City_NP)??", "Who was the son of the mayor of ($x | City_NP)??", "Who was the son of the mayors of ($x | City_NP)??", "Who were the sons of the mayor of ($x | City_NP)??", "Who were the sons of the mayors of ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1814",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the editor of ($x | Work_NP)? have?", "How many son does the editors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1815",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the parent of ($x | Person_NP)? have?", "How many son does the parents of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1816",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the king of ($x | Legislature_NP)? have?", "How many son does the kings of ($x | Legislature_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leader> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1817",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the coach of ($x | IceHockeyLeague_NP)? have?", "How many son does the coaches of ($x | IceHockeyLeague_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1818",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the coach of ($x | HockeyTeam_NP)? have?", "How many son does the coaches of ($x | HockeyTeam_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/coach> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1819",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the alter ego of ($x | ComicsCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/alterEgo> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1820",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the author of ($x | Work_NP)? have?", "How many son does the authors of ($x | Work_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/author> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1821",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the mayor of ($x | Settlement_NP)? have?", "How many son does the mayors of ($x | Settlement_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1822",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the music by ($x | Musical_NP)? have?", "How many son does the musics by ($x | Musical_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/musicBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1823",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the foundation series of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/series> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1824",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the creator of ($x | FictionalCharacter_NP)? have?", "How many son does the creators of ($x | FictionalCharacter_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/creator> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1825",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the influencer of ($x | Person_NP)? have?", "How many son does the influencers of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/influenced> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1826",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the wife of ($x | Person_NP)? have?", "How many son does the wives of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1827",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the doctoral supervisor of ($x | Scientist_NP)? have?", "How many son does the doctoral supervisors of ($x | Scientist_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1828",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the host of ($x | TelevisionShow_NP)? have?", "How many son does the hosts of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/presenter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1829",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the residence of ($x | Place_NP)? have?", "How many son does the residences of ($x | Place_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1830",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the daughter of ($x | Person_NP)? have?", "How many son does the daughters of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1831",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the successor of ($x | Politician_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1832",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the child of ($x | Person_NP)? have?", "How many son does the children of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1833",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the governor of ($x | Person_NP)? have?", "How many son does the governors of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1834",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the music composer of ($x | TelevisionShow_NP)? have?", "How many son does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1835",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the first to climb  ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1836",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the father of ($x | Royalty_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/father> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1837",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the music composer of ($x | TelevisionShow_NP)? have?", "How many son does the music composers of ($x | TelevisionShow_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/composer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1838",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the son of ($x | Person_NP)? have?", "How many son does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1839",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the son of ($x | Person_NP)? have?", "How many son does the sons of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1840",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many son does the mayor of ($x | City_NP)? have?", "How many son does the mayors of ($x | City_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1841",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of the largest city of ($x | Country_NP)?.", "List all the mayors of the largest city of ($x | Country_NP)?.", "show me all mayors of the largest city of ($x | Country_NP)?.", "Who are the mayors of the largest city of ($x | Country_NP)??", "Who is the mayor of the largest city of ($x | Country_NP)??", "Who was the mayor of the largest city of ($x | Country_NP)??", "Who were the mayors of the largest city of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1842",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of the capital of ($x | Country_NP)?.", "List all the mayors of the capital of ($x | Country_NP)?.", "show me all mayors of the capital of ($x | Country_NP)?.", "Who are the mayors of the capital of ($x | Country_NP)??", "Who is the mayor of the capital of ($x | Country_NP)??", "Who was the mayor of the capital of ($x | Country_NP)??", "Who were the mayors of the capital of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1843",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of the cities in ($x | AdministrativeRegion_NP)?.", "Give me all mayors of the city in ($x | AdministrativeRegion_NP)?.", "List all the mayors of the cities in ($x | AdministrativeRegion_NP)?.", "List all the mayors of the city in ($x | AdministrativeRegion_NP)?.", "show me all mayors of the cities in ($x | AdministrativeRegion_NP)?.", "show me all mayors of the city in ($x | AdministrativeRegion_NP)?.", "Who are the mayors of the cities in ($x | AdministrativeRegion_NP)??", "Who are the mayors of the city in ($x | AdministrativeRegion_NP)??", "Who is the mayor of the cities in ($x | AdministrativeRegion_NP)??", "Who is the mayor of the city in ($x | AdministrativeRegion_NP)??", "Who was the mayor of the cities in ($x | AdministrativeRegion_NP)??", "Who was the mayor of the city in ($x | AdministrativeRegion_NP)??", "Who were the mayors of the cities in ($x | AdministrativeRegion_NP)??", "Who were the mayors of the city in ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1844",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of the residence of ($x | Person_NP)?.", "Give me all mayors of the residences of ($x | Person_NP)?.", "List all the mayors of the residence of ($x | Person_NP)?.", "List all the mayors of the residences of ($x | Person_NP)?.", "show me all mayors of the residence of ($x | Person_NP)?.", "show me all mayors of the residences of ($x | Person_NP)?.", "Who are the mayors of the residence of ($x | Person_NP)??", "Who are the mayors of the residences of ($x | Person_NP)??", "Who is the mayor of the residence of ($x | Person_NP)??", "Who is the mayor of the residences of ($x | Person_NP)??", "Who was the mayor of the residence of ($x | Person_NP)??", "Who was the mayor of the residences of ($x | Person_NP)??", "Who were the mayors of the residence of ($x | Person_NP)??", "Who were the mayors of the residences of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1845",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of the headquarter of ($x | Building_NP)?.", "List all the mayors of the headquarter of ($x | Building_NP)?.", "show me all mayors of the headquarter of ($x | Building_NP)?.", "Who are the mayors of the headquarter of ($x | Building_NP)??", "Who is the mayor of the headquarter of ($x | Building_NP)??", "Who was the mayor of the headquarter of ($x | Building_NP)??", "Who were the mayors of the headquarter of ($x | Building_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1846",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of the foundation place of ($x | Company_NP)?.", "List all the mayors of the foundation place of ($x | Company_NP)?.", "show me all mayors of the foundation place of ($x | Company_NP)?.", "Who are the mayors of the foundation place of ($x | Company_NP)??", "Who is the mayor of the foundation place of ($x | Company_NP)??", "Who was the mayor of the foundation place of ($x | Company_NP)??", "Who were the mayors of the foundation place of ($x | Company_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1847",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of the cities of ($x | AdministrativeRegion_NP)?.", "Give me all mayors of the city of ($x | AdministrativeRegion_NP)?.", "List all the mayors of the cities of ($x | AdministrativeRegion_NP)?.", "List all the mayors of the city of ($x | AdministrativeRegion_NP)?.", "show me all mayors of the cities of ($x | AdministrativeRegion_NP)?.", "show me all mayors of the city of ($x | AdministrativeRegion_NP)?.", "Who are the mayors of the cities of ($x | AdministrativeRegion_NP)??", "Who are the mayors of the city of ($x | AdministrativeRegion_NP)??", "Who is the mayor of the cities of ($x | AdministrativeRegion_NP)??", "Who is the mayor of the city of ($x | AdministrativeRegion_NP)??", "Who was the mayor of the cities of ($x | AdministrativeRegion_NP)??", "Who was the mayor of the city of ($x | AdministrativeRegion_NP)??", "Who were the mayors of the cities of ($x | AdministrativeRegion_NP)??", "Who were the mayors of the city of ($x | AdministrativeRegion_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1848",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many mayor does the largest city of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/largestCity> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1849",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many mayor does the capital of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1850",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many mayor does the cities in ($x | AdministrativeRegion_NP)? have?", "How many mayor does the city in ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1851",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many mayor does the residence of ($x | Person_NP)? have?", "How many mayor does the residences of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/residence> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1852",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many mayor does the headquarter of ($x | Building_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/location> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1853",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many mayor does the foundation place of ($x | Company_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/foundationPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1854",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many mayor does the cities of ($x | AdministrativeRegion_NP)? have?", "How many mayor does the city of ($x | AdministrativeRegion_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/isPartOf> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1855",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of the birth place of ($x | Person_NP)??", "What was the largest country of the birth place of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1856",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of the location of ($x | Mountain_NP)??", "What was the largest country of the location of ($x | Mountain_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1857",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of the form of government of ($x | Country_NP)??", "What was the largest country of the form of government of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1858",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of the nationality of ($x | Person_NP)??", "What was the largest country of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1859",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of the resting place of ($x | Person_NP)??", "What is the largest country of the resting places of ($x | Person_NP)??", "What was the largest country of the resting place of ($x | Person_NP)??", "What was the largest country of the resting places of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1860",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of the nationality of ($x | Person_NP)??", "What was the largest country of the nationality of ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1861",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of the largest country of ($x | Country_NP)??", "What was the largest country of the largest country of ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1862",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest country does the birth place of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1863",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest country does the location of ($x | Mountain_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1864",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest country does the form of government of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1865",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest country does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/nationality> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1866",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest country does the resting place of ($x | Person_NP)? have?", "How many largest country does the resting places of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/restingPlace> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1867",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest country does the nationality of ($x | Person_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/citizenship> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "1868",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many largest country does the largest country of ($x | Country_NP)? have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaTotal> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  } ]
}