{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) death place.", "List all the places with death place of (X).", "What (X) is (X) 's death place?", "What (X) is the death place of (X)?", "What (X) is the death place of the (X)?", "What (X) was (X) 's death place?", "What (X) was the death place of (X)?", "What (X) was the death place of the (X)?", "which (X) is the death place of (X)?", "which (X) is the death place of the (X)?", "which (X) was the death place of (X)?", "which (X) was the death place of the (X)?", "Who is the death place of (X)?", "Who is the death place of the (X)?", "Who was the death place of (X)?", "Who was the death place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MeanOfTransportation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) delivery Dates.", "Give me all delivery Dates of (X).", "Give me the (X) delivery Date.", "Give me the (X) delivery Dates.", "List all delivery Dates of (X).", "List all the delivery Dates of (X).", "show me all delivery Dates of (X).", "What (X) are the delivery Dates of the (X)?", "What (X) is (X) 's delivery Date?", "What (X) is the delivery Date of (X)?", "What (X) is the delivery Date of the (X)?", "What (X) was (X) 's delivery Date?", "What (X) was the delivery Date of (X)?", "What (X) was the delivery Date of the (X)?", "What (X) were the delivery Dates of the (X)?", "What are the delivery Dates of (X)?", "What are the delivery Dates of the (X)?", "What is the delivery Date of (X)?", "What is the delivery Date of the (X)?", "What was the delivery Date of (X)?", "What was the delivery Date of the (X)?", "What were the delivery Dates of (X)?", "What were the delivery Dates of the (X)?", "which (X) are the delivery Dates of (X)?", "which (X) are the delivery Dates of the (X)?", "which (X) is the delivery Date of (X)?", "which (X) is the delivery Date of the (X)?", "which (X) was the delivery Date of (X)?", "which (X) was the delivery Date of the (X)?", "which (X) were the delivery Dates of (X)?", "which (X) were the delivery Dates of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MeanOfTransportation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the delivery Date of (X)?", "the delivery Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) number Of Seasons.", "Give me all number Of Seasons of (X).", "Give me the (X) number Of Season.", "Give me the (X) number Of Seasons.", "List all number Of Seasons of (X).", "List all the number Of Seasons of (X).", "show me all number Of Seasons of (X).", "What (X) are the number Of Seasons of the (X)?", "What (X) is (X) 's number Of Season?", "What (X) is the number Of Season of (X)?", "What (X) is the number Of Season of the (X)?", "What (X) was (X) 's number Of Season?", "What (X) was the number Of Season of (X)?", "What (X) was the number Of Season of the (X)?", "What (X) were the number Of Seasons of the (X)?", "What are the number Of Seasons of (X)?", "What are the number Of Seasons of the (X)?", "What is the number Of Season of (X)?", "What is the number Of Season of the (X)?", "What was the number Of Season of (X)?", "What was the number Of Season of the (X)?", "What were the number Of Seasons of (X)?", "What were the number Of Seasons of the (X)?", "which (X) are the number Of Seasons of (X)?", "which (X) are the number Of Seasons of the (X)?", "which (X) is the number Of Season of (X)?", "which (X) is the number Of Season of the (X)?", "which (X) was the number Of Season of (X)?", "which (X) was the number Of Season of the (X)?", "which (X) were the number Of Seasons of (X)?", "which (X) were the number Of Seasons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Season of (X)?", "the number Of Seasons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) location.", "List all the places with location of (X).", "What (X) is (X) 's location?", "What (X) is the location of (X)?", "What (X) is the location of the (X)?", "What (X) was (X) 's location?", "What (X) was the location of (X)?", "What (X) was the location of the (X)?", "What is the location of (X)?", "What is the location of the (X)?", "What was the location of (X)?", "What was the location of the (X)?", "which (X) is the location of (X)?", "which (X) is the location of the (X)?", "which (X) was the location of (X)?", "which (X) was the location of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) editors.", "Give me all editors of (X).", "Give me the (X) editor.", "Give me the (X) editors.", "List all editors of (X).", "List all the editors of (X).", "List all the persons with editor of (X).", "show me all editors of (X).", "What are the editors of (X)?", "What are the editors of the (X)?", "What is the editor of (X)?", "What is the editor of the (X)?", "What was the editor of (X)?", "What was the editor of the (X)?", "What were the editors of (X)?", "What were the editors of the (X)?", "which (X) are the editors of (X)?", "which (X) are the editors of the (X)?", "which (X) is the editor of (X)?", "which (X) is the editor of the (X)?", "which (X) was the editor of (X)?", "which (X) was the editor of the (X)?", "which (X) were the editors of (X)?", "which (X) were the editors of the (X)?", "Who are the editors of the (X)?", "Who is (X) 's editor?", "Who is the editor of (X)?", "Who is the editor of the (X)?", "Who was (X) 's editor?", "Who was the editor of (X)?", "Who was the editor of the (X)?", "Who were the editors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of (X)?", "the editors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) loyalties.", "Give me all loyalties  (X).", "Give me the (X) loyalties.", "Give me the (X) loyalty.", "List all loyalties  (X).", "List all the colors with loyalty  (X).", "List all the loyalties  (X).", "show me all loyalties  (X).", "What (X) are the loyalties  the (X)?", "What (X) is (X) 's loyalty?", "What (X) is the loyalty  (X)?", "What (X) is the loyalty  the (X)?", "What (X) was (X) 's loyalty?", "What (X) was the loyalty  (X)?", "What (X) was the loyalty  the (X)?", "What (X) were the loyalties  the (X)?", "What are the loyalties  (X)?", "What are the loyalties  the (X)?", "What is the loyalty  (X)?", "What is the loyalty  the (X)?", "What was the loyalty  (X)?", "What was the loyalty  the (X)?", "What were the loyalties  (X)?", "What were the loyalties  the (X)?", "which (X) are the loyalties  (X)?", "which (X) are the loyalties  the (X)?", "which (X) is the loyalty  (X)?", "which (X) is the loyalty  the (X)?", "which (X) was the loyalty  (X)?", "which (X) was the loyalty  the (X)?", "which (X) were the loyalties  (X)?", "which (X) were the loyalties  the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the loyalties  (X)?", "the loyalty  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ComicsCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) alter ego.", "List all the persons with alter ego of (X).", "What is the alter ego of (X)?", "What is the alter ego of the (X)?", "What was the alter ego of (X)?", "What was the alter ego of the (X)?", "which (X) is the alter ego of (X)?", "which (X) is the alter ego of the (X)?", "which (X) was the alter ego of (X)?", "which (X) was the alter ego of the (X)?", "Who is (X) 's alter ego?", "Who is the alter ego of (X)?", "Who is the alter ego of the (X)?", "Who was (X) 's alter ego?", "Who was the alter ego of (X)?", "Who was the alter ego of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ComicsCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alter ego of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) first Ascent Persons.", "Give me all first Ascent Persons of (X).", "Give me the (X) first Ascent Person.", "Give me the (X) first Ascent Persons.", "List all first Ascent Persons of (X).", "List all the first Ascent Persons of (X).", "List all the places with first Ascent Person of (X).", "show me all first Ascent Persons of (X).", "What (X) are the first Ascent Persons of the (X)?", "What (X) is (X) 's first Ascent Person?", "What (X) is the first Ascent Person of (X)?", "What (X) is the first Ascent Person of the (X)?", "What (X) was (X) 's first Ascent Person?", "What (X) was the first Ascent Person of (X)?", "What (X) was the first Ascent Person of the (X)?", "What (X) were the first Ascent Persons of the (X)?", "What are the first Ascent Persons of (X)?", "What are the first Ascent Persons of the (X)?", "What is the first Ascent Person of (X)?", "What is the first Ascent Person of the (X)?", "What was the first Ascent Person of (X)?", "What was the first Ascent Person of the (X)?", "What were the first Ascent Persons of (X)?", "What were the first Ascent Persons of the (X)?", "which (X) are the first Ascent Persons of (X)?", "which (X) are the first Ascent Persons of the (X)?", "which (X) is the first Ascent Person of (X)?", "which (X) is the first Ascent Person of the (X)?", "which (X) was the first Ascent Person of (X)?", "which (X) was the first Ascent Person of the (X)?", "which (X) were the first Ascent Persons of (X)?", "which (X) were the first Ascent Persons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Ascent Person of (X)?", "the first Ascent Persons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) isbns.", "Give me all isbns of (X).", "Give me the (X) isbn.", "Give me the (X) isbns.", "List all isbns of (X).", "List all the isbns of (X).", "show me all isbns of (X).", "What (X) are the isbns of the (X)?", "What (X) is (X) 's isbn?", "What (X) is the isbn of (X)?", "What (X) is the isbn of the (X)?", "What (X) was (X) 's isbn?", "What (X) was the isbn of (X)?", "What (X) was the isbn of the (X)?", "What (X) were the isbns of the (X)?", "What are the isbns of (X)?", "What are the isbns of the (X)?", "What is the isbn of (X)?", "What is the isbn of the (X)?", "What was the isbn of (X)?", "What was the isbn of the (X)?", "What were the isbns of (X)?", "What were the isbns of the (X)?", "which (X) are the isbns of (X)?", "which (X) are the isbns of the (X)?", "which (X) is the isbn of (X)?", "which (X) is the isbn of the (X)?", "which (X) was the isbn of (X)?", "which (X) was the isbn of the (X)?", "which (X) were the isbns of (X)?", "which (X) were the isbns of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isbn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the isbn of (X)?", "the isbns of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isbn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) mayors.", "Give me all mayors of (X).", "Give me the (X) mayor.", "Give me the (X) mayors.", "List all mayors of (X).", "List all the mayors of (X).", "List all the persons with mayor of (X).", "show me all mayors of (X).", "What are the mayors of (X)?", "What are the mayors of the (X)?", "What is the mayor of (X)?", "What is the mayor of the (X)?", "What was the mayor of (X)?", "What was the mayor of the (X)?", "What were the mayors of (X)?", "What were the mayors of the (X)?", "which (X) are the mayors of (X)?", "which (X) are the mayors of the (X)?", "which (X) is the mayor of (X)?", "which (X) is the mayor of the (X)?", "which (X) was the mayor of (X)?", "which (X) was the mayor of the (X)?", "which (X) were the mayors of (X)?", "which (X) were the mayors of the (X)?", "Who are the mayors of the (X)?", "Who is (X) 's mayor?", "Who is the mayor of (X)?", "Who is the mayor of the (X)?", "Who was (X) 's mayor?", "Who was the mayor of (X)?", "Who was the mayor of the (X)?", "Who were the mayors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of (X)?", "the mayors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) official languages.", "Give me all official languages of (X).", "Give me the (X) official language.", "Give me the (X) official languages.", "List all official languages of (X).", "List all the languages with official language of (X).", "List all the official languages of (X).", "show me all official languages of (X).", "What (X) are the official languages of the (X)?", "What (X) is (X) 's official language?", "What (X) is the official language of (X)?", "What (X) is the official language of the (X)?", "What (X) was (X) 's official language?", "What (X) was the official language of (X)?", "What (X) was the official language of the (X)?", "What (X) were the official languages of the (X)?", "What are the official languages of (X)?", "What are the official languages of the (X)?", "What is the official language of (X)?", "What is the official language of the (X)?", "What was the official language of (X)?", "What was the official language of the (X)?", "What were the official languages of (X)?", "What were the official languages of the (X)?", "which (X) are the official languages of (X)?", "which (X) are the official languages of the (X)?", "which (X) is the official language of (X)?", "which (X) is the official language of the (X)?", "which (X) was the official language of (X)?", "which (X) was the official language of the (X)?", "which (X) were the official languages of (X)?", "which (X) were the official languages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of (X)?", "the official languages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) leaders.", "Give me all leaders of (X).", "Give me the (X) leader.", "Give me the (X) leaders.", "List all leaders of (X).", "List all the leaders of (X).", "List all the organizations with leader of (X).", "show me all leaders of (X).", "What are the leaders of (X)?", "What are the leaders of the (X)?", "What is the leader of (X)?", "What is the leader of the (X)?", "What was the leader of (X)?", "What was the leader of the (X)?", "What were the leaders of (X)?", "What were the leaders of the (X)?", "which (X) are the leaders of (X)?", "which (X) are the leaders of the (X)?", "which (X) is the leader of (X)?", "which (X) is the leader of the (X)?", "which (X) was the leader of (X)?", "which (X) was the leader of the (X)?", "which (X) were the leaders of (X)?", "which (X) were the leaders of the (X)?", "Who are the leaders of the (X)?", "Who is (X) 's leader?", "Who is the leader of (X)?", "Who is the leader of the (X)?", "Who was (X) 's leader?", "Who was the leader of (X)?", "Who was the leader of the (X)?", "Who were the leaders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the leader of (X)?", "the leaders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) programming languages.", "Give me all programming languages of (X).", "Give me the (X) programming language.", "Give me the (X) programming languages.", "List all programming languages of (X).", "List all the languages with programming language of (X).", "List all the programming languages of (X).", "show me all programming languages of (X).", "What (X) are the programming languages of the (X)?", "What (X) is (X) 's programming language?", "What (X) is the programming language of (X)?", "What (X) is the programming language of the (X)?", "What (X) was (X) 's programming language?", "What (X) was the programming language of (X)?", "What (X) was the programming language of the (X)?", "What (X) were the programming languages of the (X)?", "What are the programming languages of (X)?", "What are the programming languages of the (X)?", "What is the programming language of (X)?", "What is the programming language of the (X)?", "What was the programming language of (X)?", "What was the programming language of the (X)?", "What were the programming languages of (X)?", "What were the programming languages of the (X)?", "which (X) are the programming languages of (X)?", "which (X) are the programming languages of the (X)?", "which (X) is the programming language of (X)?", "which (X) is the programming language of the (X)?", "which (X) was the programming language of (X)?", "which (X) was the programming language of the (X)?", "which (X) were the programming languages of (X)?", "which (X) were the programming languages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the programming language of (X)?", "the programming languages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) resting place.", "What (X) is (X) 's resting place?", "What (X) is the resting place of (X)?", "What (X) is the resting place of the (X)?", "What (X) was (X) 's resting place?", "What (X) was the resting place of (X)?", "What (X) was the resting place of the (X)?", "which (X) is the resting place of (X)?", "which (X) is the resting place of the (X)?", "which (X) was the resting place of (X)?", "which (X) was the resting place of the (X)?", "Who is the resting place of (X)?", "Who is the resting place of the (X)?", "Who was the resting place of (X)?", "Who was the resting place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) employers.", "Give me all employers of (X).", "Give me the (X) employer.", "Give me the (X) employers.", "List all employers of (X).", "List all the employers of (X).", "List all the places with employer of (X).", "show me all employers of (X).", "What (X) are the employers of the (X)?", "What (X) is (X) 's employer?", "What (X) is the employer of (X)?", "What (X) is the employer of the (X)?", "What (X) was (X) 's employer?", "What (X) was the employer of (X)?", "What (X) was the employer of the (X)?", "What (X) were the employers of the (X)?", "which (X) are the employers of (X)?", "which (X) are the employers of the (X)?", "which (X) is the employer of (X)?", "which (X) is the employer of the (X)?", "which (X) was the employer of (X)?", "which (X) was the employer of the (X)?", "which (X) were the employers of (X)?", "which (X) were the employers of the (X)?", "Who are the employers of (X)?", "Who are the employers of the (X)?", "Who is the employer of (X)?", "Who is the employer of the (X)?", "Who was the employer of (X)?", "Who was the employer of the (X)?", "Who were the employers of (X)?", "Who were the employers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/employer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employer of (X)?", "the employers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/employer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) doctoral supervisors.", "Give me all doctoral supervisors of (X).", "Give me the (X) doctoral supervisor.", "Give me the (X) doctoral supervisors.", "List all doctoral supervisors of (X).", "List all the doctoral supervisors of (X).", "List all the persons with doctoral supervisor of (X).", "show me all doctoral supervisors of (X).", "which (X) are the doctoral supervisors of (X)?", "which (X) are the doctoral supervisors of the (X)?", "which (X) is the doctoral supervisor of (X)?", "which (X) is the doctoral supervisor of the (X)?", "which (X) was the doctoral supervisor of (X)?", "which (X) was the doctoral supervisor of the (X)?", "which (X) were the doctoral supervisors of (X)?", "which (X) were the doctoral supervisors of the (X)?", "Who are the doctoral supervisors of (X)?", "Who are the doctoral supervisors of the (X)?", "Who is (X) 's doctoral supervisor?", "Who is the doctoral supervisor of (X)?", "Who is the doctoral supervisor of the (X)?", "Who was (X) 's doctoral supervisor?", "Who was the doctoral supervisor of (X)?", "Who was the doctoral supervisor of the (X)?", "Who were the doctoral supervisors of (X)?", "Who were the doctoral supervisors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of (X)?", "the doctoral supervisors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) producers.", "Give me all producers of (X).", "Give me the (X) producer.", "Give me the (X) producers.", "List all producers of (X).", "List all the company with producer of (X).", "List all the producers of (X).", "show me all producers of (X).", "What are the producers of (X)?", "What are the producers of the (X)?", "What is the producer of (X)?", "What is the producer of the (X)?", "What was the producer of (X)?", "What was the producer of the (X)?", "What were the producers of (X)?", "What were the producers of the (X)?", "which (X) are the producers of (X)?", "which (X) are the producers of the (X)?", "which (X) is the producer of (X)?", "which (X) is the producer of the (X)?", "which (X) was the producer of (X)?", "which (X) was the producer of the (X)?", "which (X) were the producers of (X)?", "which (X) were the producers of the (X)?", "Who are the producers of the (X)?", "Who is (X) 's producer?", "Who is the producer of (X)?", "Who is the producer of the (X)?", "Who was (X) 's producer?", "Who was the producer of (X)?", "Who was the producer of the (X)?", "Who were the producers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the producer of (X)?", "the producers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) hosts.", "Give me all hosts of (X).", "Give me the (X) host.", "Give me the (X) hosts.", "List all hosts of (X).", "List all the hosts of (X).", "List all the persons with host of (X).", "show me all hosts of (X).", "What are the hosts of (X)?", "What are the hosts of the (X)?", "What is the host of (X)?", "What is the host of the (X)?", "What was the host of (X)?", "What was the host of the (X)?", "What were the hosts of (X)?", "What were the hosts of the (X)?", "which (X) are the hosts of (X)?", "which (X) are the hosts of the (X)?", "which (X) is the host of (X)?", "which (X) is the host of the (X)?", "which (X) was the host of (X)?", "which (X) was the host of the (X)?", "which (X) were the hosts of (X)?", "which (X) were the hosts of the (X)?", "Who are the hosts of the (X)?", "Who is (X) 's host?", "Who is the host of (X)?", "Who is the host of the (X)?", "Who was (X) 's host?", "Who was the host of (X)?", "Who was the host of the (X)?", "Who were the hosts of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of (X)?", "the hosts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) residences.", "Give me all residences of (X).", "Give me the (X) residence.", "Give me the (X) residences.", "List all residences of (X).", "List all the persons with residence of (X).", "List all the residences of (X).", "show me all residences of (X).", "What are the residences of (X)?", "What are the residences of the (X)?", "What is the residence of (X)?", "What is the residence of the (X)?", "What was the residence of (X)?", "What was the residence of the (X)?", "What were the residences of (X)?", "What were the residences of the (X)?", "which (X) are the residences of (X)?", "which (X) are the residences of the (X)?", "which (X) is the residence of (X)?", "which (X) is the residence of the (X)?", "which (X) was the residence of (X)?", "which (X) was the residence of the (X)?", "which (X) were the residences of (X)?", "which (X) were the residences of the (X)?", "Who are the residences of the (X)?", "Who is (X) 's residence?", "Who is the residence of (X)?", "Who is the residence of the (X)?", "Who was (X) 's residence?", "Who was the residence of (X)?", "Who was the residence of the (X)?", "Who were the residences of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of (X)?", "the residences of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) closing Dates.", "Give me all closing Dates of (X).", "Give me the (X) closing Date.", "Give me the (X) closing Dates.", "List all closing Dates of (X).", "List all the closing Dates of (X).", "show me all closing Dates of (X).", "What (X) are the closing Dates of the (X)?", "What (X) is (X) 's closing Date?", "What (X) is the closing Date of (X)?", "What (X) is the closing Date of the (X)?", "What (X) was (X) 's closing Date?", "What (X) was the closing Date of (X)?", "What (X) was the closing Date of the (X)?", "What (X) were the closing Dates of the (X)?", "which (X) are the closing Dates of (X)?", "which (X) are the closing Dates of the (X)?", "which (X) is the closing Date of (X)?", "which (X) is the closing Date of the (X)?", "which (X) was the closing Date of (X)?", "which (X) was the closing Date of the (X)?", "which (X) were the closing Dates of (X)?", "which (X) were the closing Dates of the (X)?", "Who are the closing Dates of (X)?", "Who are the closing Dates of the (X)?", "Who is the closing Date of (X)?", "Who is the closing Date of the (X)?", "Who was the closing Date of (X)?", "Who was the closing Date of the (X)?", "Who were the closing Dates of (X)?", "Who were the closing Dates of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the closing Date of (X)?", "the closing Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) residences.", "Give me all residences of (X).", "Give me the (X) residence.", "Give me the (X) residences.", "List all residences of (X).", "List all the cities with residence of (X).", "List all the residences of (X).", "show me all residences of (X).", "What (X) are the residences of the (X)?", "What (X) is (X) 's residence?", "What (X) is the residence of (X)?", "What (X) is the residence of the (X)?", "What (X) was (X) 's residence?", "What (X) was the residence of (X)?", "What (X) was the residence of the (X)?", "What (X) were the residences of the (X)?", "which (X) are the residences of (X)?", "which (X) are the residences of the (X)?", "which (X) is the residence of (X)?", "which (X) is the residence of the (X)?", "which (X) was the residence of (X)?", "which (X) was the residence of the (X)?", "which (X) were the residences of (X)?", "which (X) were the residences of the (X)?", "Who are the residences of (X)?", "Who are the residences of the (X)?", "Who is the residence of (X)?", "Who is the residence of the (X)?", "Who was the residence of (X)?", "Who was the residence of the (X)?", "Who were the residences of (X)?", "Who were the residences of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of (X)?", "the residences of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) headquarter.", "List all the cities with headquarter of (X).", "What (X) is (X) 's headquarter?", "What (X) is the headquarter of (X)?", "What (X) is the headquarter of the (X)?", "What (X) was (X) 's headquarter?", "What (X) was the headquarter of (X)?", "What (X) was the headquarter of the (X)?", "What is the headquarter of (X)?", "What is the headquarter of the (X)?", "What was the headquarter of (X)?", "What was the headquarter of the (X)?", "which (X) is the headquarter of (X)?", "which (X) is the headquarter of the (X)?", "which (X) was the headquarter of (X)?", "which (X) was the headquarter of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Building" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) headquarter.", "List all the populated places with headquarter of (X).", "What (X) is (X) 's headquarter?", "What (X) is the headquarter of (X)?", "What (X) is the headquarter of the (X)?", "What (X) was (X) 's headquarter?", "What (X) was the headquarter of (X)?", "What (X) was the headquarter of the (X)?", "which (X) is the headquarter of (X)?", "which (X) is the headquarter of the (X)?", "which (X) was the headquarter of (X)?", "which (X) was the headquarter of the (X)?", "Who is the headquarter of (X)?", "Who is the headquarter of the (X)?", "Who was the headquarter of (X)?", "Who was the headquarter of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) area code.", "What (X) is (X) 's area code?", "What (X) is the area code of (X)?", "What (X) is the area code of the (X)?", "What (X) was (X) 's area code?", "What (X) was the area code of (X)?", "What (X) was the area code of the (X)?", "What is the area code of (X)?", "What is the area code of the (X)?", "What was the area code of (X)?", "What was the area code of the (X)?", "which (X) is the area code of (X)?", "which (X) is the area code of the (X)?", "which (X) was the area code of (X)?", "which (X) was the area code of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the area code of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) number of locations.", "What (X) is (X) 's number of locations?", "What (X) is the number of locations of (X)?", "What (X) is the number of locations of the (X)?", "What (X) was (X) 's number of locations?", "What (X) was the number of locations of (X)?", "What (X) was the number of locations of the (X)?", "which (X) is the number of locations of (X)?", "which (X) is the number of locations of the (X)?", "which (X) was the number of locations of (X)?", "which (X) was the number of locations of the (X)?", "Who is the number of locations of (X)?", "Who is the number of locations of the (X)?", "Who was the number of locations of (X)?", "Who was the number of locations of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of locations of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) music composers.", "Give me all music composers of (X).", "Give me the (X) music composer.", "Give me the (X) music composers.", "List all music composers of (X).", "List all the music composers of (X).", "List all the persons with music composer of (X).", "show me all music composers of (X).", "What are the music composers of (X)?", "What are the music composers of the (X)?", "What is the music composer of (X)?", "What is the music composer of the (X)?", "What was the music composer of (X)?", "What was the music composer of the (X)?", "What were the music composers of (X)?", "What were the music composers of the (X)?", "which (X) are the music composers of (X)?", "which (X) are the music composers of the (X)?", "which (X) is the music composer of (X)?", "which (X) is the music composer of the (X)?", "which (X) was the music composer of (X)?", "which (X) was the music composer of the (X)?", "which (X) were the music composers of (X)?", "which (X) were the music composers of the (X)?", "Who are the music composers of the (X)?", "Who is (X) 's music composer?", "Who is the music composer of (X)?", "Who is the music composer of the (X)?", "Who was (X) 's music composer?", "Who was the music composer of (X)?", "Who was the music composer of the (X)?", "Who were the music composers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of (X)?", "the music composers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) first to climb.", "List all the persons with first to climb  (X).", "What is the first to climb  (X)?", "What is the first to climb  the (X)?", "What was the first to climb  (X)?", "What was the first to climb  the (X)?", "which (X) is the first to climb  (X)?", "which (X) is the first to climb  the (X)?", "which (X) was the first to climb  (X)?", "which (X) was the first to climb  the (X)?", "Who is (X) 's first to climb?", "Who is the first to climb  (X)?", "Who is the first to climb  the (X)?", "Who was (X) 's first to climb?", "Who was the first to climb  (X)?", "Who was the first to climb  the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first to climb  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) ingredients.", "Give me all ingredients of (X).", "Give me the (X) ingredient.", "Give me the (X) ingredients.", "List all ingredients of (X).", "List all the ingredients of (X).", "show me all ingredients of (X).", "What (X) are the ingredients of the (X)?", "What (X) is (X) 's ingredient?", "What (X) is the ingredient of (X)?", "What (X) is the ingredient of the (X)?", "What (X) was (X) 's ingredient?", "What (X) was the ingredient of (X)?", "What (X) was the ingredient of the (X)?", "What (X) were the ingredients of the (X)?", "What are the ingredients of (X)?", "What are the ingredients of the (X)?", "What is the ingredient of (X)?", "What is the ingredient of the (X)?", "What was the ingredient of (X)?", "What was the ingredient of the (X)?", "What were the ingredients of (X)?", "What were the ingredients of the (X)?", "which (X) are the ingredients of (X)?", "which (X) are the ingredients of the (X)?", "which (X) is the ingredient of (X)?", "which (X) is the ingredient of the (X)?", "which (X) was the ingredient of (X)?", "which (X) was the ingredient of the (X)?", "which (X) were the ingredients of (X)?", "which (X) were the ingredients of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of (X)?", "the ingredients of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) ingredients.", "Give me all ingredients of (X).", "Give me the (X) ingredient.", "Give me the (X) ingredients.", "List all ingredients of (X).", "List all the ingredients of (X).", "show me all ingredients of (X).", "What (X) are the ingredients of the (X)?", "What (X) is (X) 's ingredient?", "What (X) is the ingredient of (X)?", "What (X) is the ingredient of the (X)?", "What (X) was (X) 's ingredient?", "What (X) was the ingredient of (X)?", "What (X) was the ingredient of the (X)?", "What (X) were the ingredients of the (X)?", "What are the ingredients of (X)?", "What are the ingredients of the (X)?", "What is the ingredient of (X)?", "What is the ingredient of the (X)?", "What was the ingredient of (X)?", "What was the ingredient of the (X)?", "What were the ingredients of (X)?", "What were the ingredients of the (X)?", "which (X) are the ingredients of (X)?", "which (X) are the ingredients of the (X)?", "which (X) is the ingredient of (X)?", "which (X) is the ingredient of the (X)?", "which (X) was the ingredient of (X)?", "which (X) was the ingredient of the (X)?", "which (X) were the ingredients of (X)?", "which (X) were the ingredients of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of (X)?", "the ingredients of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) cities.", "Give me all cities of (X).", "Give me the (X) cities.", "Give me the (X) city.", "List all cities of (X).", "List all the cities of (X).", "List all the cities with city of (X).", "show me all cities of (X).", "What (X) are the cities of the (X)?", "What (X) is (X) 's city?", "What (X) is the city of (X)?", "What (X) is the city of the (X)?", "What (X) was (X) 's city?", "What (X) was the city of (X)?", "What (X) was the city of the (X)?", "What (X) were the cities of the (X)?", "What are the cities of (X)?", "What are the cities of the (X)?", "What is the city of (X)?", "What is the city of the (X)?", "What was the city of (X)?", "What was the city of the (X)?", "What were the cities of (X)?", "What were the cities of the (X)?", "which (X) are the cities of (X)?", "which (X) are the cities of the (X)?", "which (X) is the city of (X)?", "which (X) is the city of the (X)?", "which (X) was the city of (X)?", "which (X) was the city of the (X)?", "which (X) were the cities of (X)?", "which (X) were the cities of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities of (X)?", "the city of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) flags.", "Give me all flags of (X).", "Give me the (X) flag.", "Give me the (X) flags.", "List all flags of (X).", "List all the flags of (X).", "show me all flags of (X).", "What (X) are the flags of the (X)?", "What (X) is (X) 's flag?", "What (X) is the flag of (X)?", "What (X) is the flag of the (X)?", "What (X) was (X) 's flag?", "What (X) was the flag of (X)?", "What (X) was the flag of the (X)?", "What (X) were the flags of the (X)?", "What are the flags of (X)?", "What are the flags of the (X)?", "What is the flag of (X)?", "What is the flag of the (X)?", "What was the flag of (X)?", "What was the flag of the (X)?", "What were the flags of (X)?", "What were the flags of the (X)?", "which (X) are the flags of (X)?", "which (X) are the flags of the (X)?", "which (X) is the flag of (X)?", "which (X) is the flag of the (X)?", "which (X) was the flag of (X)?", "which (X) was the flag of the (X)?", "which (X) were the flags of (X)?", "which (X) were the flags of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/flag> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the flag of (X)?", "the flags of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/flag> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) sons.", "Give me all sons of (X).", "Give me the (X) son.", "Give me the (X) sons.", "List all sons of (X).", "List all the persons with son of (X).", "List all the sons of (X).", "show me all sons of (X).", "which (X) are the sons of (X)?", "which (X) are the sons of the (X)?", "which (X) is the son of (X)?", "which (X) is the son of the (X)?", "which (X) was the son of (X)?", "which (X) was the son of the (X)?", "which (X) were the sons of (X)?", "which (X) were the sons of the (X)?", "Who are the sons of (X)?", "Who are the sons of the (X)?", "Who is (X) 's son?", "Who is the son of (X)?", "Who is the son of the (X)?", "Who was (X) 's son?", "Who was the son of (X)?", "Who was the son of the (X)?", "Who were the sons of (X)?", "Who were the sons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of (X)?", "the sons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) sons.", "Give me all sons of (X).", "Give me the (X) son.", "Give me the (X) sons.", "List all sons of (X).", "List all the persons with son of (X).", "List all the sons of (X).", "show me all sons of (X).", "which (X) are the sons of (X)?", "which (X) are the sons of the (X)?", "which (X) is the son of (X)?", "which (X) is the son of the (X)?", "which (X) was the son of (X)?", "which (X) was the son of the (X)?", "which (X) were the sons of (X)?", "which (X) were the sons of the (X)?", "Who are the sons of (X)?", "Who are the sons of the (X)?", "Who is (X) 's son?", "Who is the son of (X)?", "Who is the son of the (X)?", "Who was (X) 's son?", "Who was the son of (X)?", "Who was the son of the (X)?", "Who were the sons of (X)?", "Who were the sons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of (X)?", "the sons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) kings.", "Give me all kings of (X).", "Give me the (X) king.", "Give me the (X) kings.", "List all kings of (X).", "List all the kings of (X).", "List all the persons with king of (X).", "show me all kings of (X).", "What are the kings of (X)?", "What are the kings of the (X)?", "What is the king of (X)?", "What is the king of the (X)?", "What was the king of (X)?", "What was the king of the (X)?", "What were the kings of (X)?", "What were the kings of the (X)?", "which (X) are the kings of (X)?", "which (X) are the kings of the (X)?", "which (X) is the king of (X)?", "which (X) is the king of the (X)?", "which (X) was the king of (X)?", "which (X) was the king of the (X)?", "which (X) were the kings of (X)?", "which (X) were the kings of the (X)?", "Who are the kings of the (X)?", "Who is (X) 's king?", "Who is the king of (X)?", "Who is the king of the (X)?", "Who was (X) 's king?", "Who was the king of (X)?", "Who was the king of the (X)?", "Who were the kings of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of (X)?", "the kings of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) location.", "List all the countries with location of (X).", "What (X) is (X) 's location?", "What (X) is the location of (X)?", "What (X) is the location of the (X)?", "What (X) was (X) 's location?", "What (X) was the location of (X)?", "What (X) was the location of the (X)?", "What is the location of (X)?", "What is the location of the (X)?", "What was the location of (X)?", "What was the location of the (X)?", "which (X) is the location of (X)?", "which (X) is the location of the (X)?", "which (X) was the location of (X)?", "which (X) was the location of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) games.", "Give me all games by (X).", "Give me the (X) game.", "Give me the (X) games.", "List all games by (X).", "List all the company with game by (X).", "List all the games by (X).", "show me all games by (X).", "What (X) are the games by the (X)?", "What (X) is (X) 's game?", "What (X) is the game by (X)?", "What (X) is the game by the (X)?", "What (X) was (X) 's game?", "What (X) was the game by (X)?", "What (X) was the game by the (X)?", "What (X) were the games by the (X)?", "which (X) are the games by (X)?", "which (X) are the games by the (X)?", "which (X) is the game by (X)?", "which (X) is the game by the (X)?", "which (X) was the game by (X)?", "which (X) was the game by the (X)?", "which (X) were the games by (X)?", "which (X) were the games by the (X)?", "Who are the games by (X)?", "Who are the games by the (X)?", "Who is the game by (X)?", "Who is the game by the (X)?", "Who was the game by (X)?", "Who was the game by the (X)?", "Who were the games by (X)?", "Who were the games by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by (X)?", "the games by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) borough.", "Give me all borough of (X).", "Give me the (X) borough.", "List all borough of (X).", "List all the borough of (X).", "show me all borough of (X).", "What (X) are the borough of the (X)?", "What (X) is (X) 's borough?", "What (X) is the borough of (X)?", "What (X) is the borough of the (X)?", "What (X) was (X) 's borough?", "What (X) was the borough of (X)?", "What (X) was the borough of the (X)?", "What (X) were the borough of the (X)?", "What are the borough of (X)?", "What are the borough of the (X)?", "What is the borough of (X)?", "What is the borough of the (X)?", "What was the borough of (X)?", "What was the borough of the (X)?", "What were the borough of (X)?", "What were the borough of the (X)?", "which (X) are the borough of (X)?", "which (X) are the borough of the (X)?", "which (X) is the borough of (X)?", "which (X) is the borough of the (X)?", "which (X) was the borough of (X)?", "which (X) was the borough of the (X)?", "which (X) were the borough of (X)?", "which (X) were the borough of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) musics.", "Give me all musics by (X).", "Give me the (X) music.", "Give me the (X) musics.", "List all musics by (X).", "List all the musicals with music by (X).", "List all the musics by (X).", "show me all musics by (X).", "What are the musics by (X)?", "What are the musics by the (X)?", "What is the music by (X)?", "What is the music by the (X)?", "What was the music by (X)?", "What was the music by the (X)?", "What were the musics by (X)?", "What were the musics by the (X)?", "which (X) are the musics by (X)?", "which (X) are the musics by the (X)?", "which (X) is the music by (X)?", "which (X) is the music by the (X)?", "which (X) was the music by (X)?", "which (X) was the music by the (X)?", "which (X) were the musics by (X)?", "which (X) were the musics by the (X)?", "Who are the musics by the (X)?", "Who is (X) 's music?", "Who is the music by (X)?", "Who is the music by the (X)?", "Who was (X) 's music?", "Who was the music by (X)?", "Who was the music by the (X)?", "Who were the musics by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by (X)?", "the musics by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) foundation series.", "Give me all foundation series of (X).", "Give me the (X) foundation series.", "List all foundation series of (X).", "List all the foundation series of (X).", "List all the persons with foundation series of (X).", "show me all foundation series of (X).", "What are the foundation series of (X)?", "What are the foundation series of the (X)?", "What is the foundation series of (X)?", "What is the foundation series of the (X)?", "What was the foundation series of (X)?", "What was the foundation series of the (X)?", "What were the foundation series of (X)?", "What were the foundation series of the (X)?", "which (X) are the foundation series of (X)?", "which (X) are the foundation series of the (X)?", "which (X) is the foundation series of (X)?", "which (X) is the foundation series of the (X)?", "which (X) was the foundation series of (X)?", "which (X) was the foundation series of the (X)?", "which (X) were the foundation series of (X)?", "which (X) were the foundation series of the (X)?", "Who are the foundation series of the (X)?", "Who is (X) 's foundation series?", "Who is the foundation series of (X)?", "Who is the foundation series of the (X)?", "Who was (X) 's foundation series?", "Who was the foundation series of (X)?", "Who was the foundation series of the (X)?", "Who were the foundation series of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation series of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (X) are the presidents of the (X)?", "What (X) is (X) 's president?", "What (X) is the president of (X)?", "What (X) is the president of the (X)?", "What (X) was (X) 's president?", "What (X) was the president of (X)?", "What (X) was the president of the (X)?", "What (X) were the presidents of the (X)?", "which (X) are the presidents of (X)?", "which (X) are the presidents of the (X)?", "which (X) is the president of (X)?", "which (X) is the president of the (X)?", "which (X) was the president of (X)?", "which (X) was the president of the (X)?", "which (X) were the presidents of (X)?", "which (X) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/office> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/office> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parties.", "Give me all parties of (X).", "Give me the (X) parties.", "Give me the (X) party.", "List all parties of (X).", "List all the parties of (X).", "show me all parties of (X).", "What (X) are the parties of the (X)?", "What (X) is (X) 's party?", "What (X) is the party of (X)?", "What (X) is the party of the (X)?", "What (X) was (X) 's party?", "What (X) was the party of (X)?", "What (X) was the party of the (X)?", "What (X) were the parties of the (X)?", "which (X) are the parties of (X)?", "which (X) are the parties of the (X)?", "which (X) is the party of (X)?", "which (X) is the party of the (X)?", "which (X) was the party of (X)?", "which (X) was the party of the (X)?", "which (X) were the parties of (X)?", "which (X) were the parties of the (X)?", "Who are the parties of (X)?", "Who are the parties of the (X)?", "Who is the party of (X)?", "Who is the party of the (X)?", "Who was the party of (X)?", "Who was the party of the (X)?", "Who were the parties of (X)?", "Who were the parties of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of (X)?", "the party of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parties.", "Give me all parties of (X).", "Give me the (X) parties.", "Give me the (X) party.", "List all parties of (X).", "List all the parties of (X).", "show me all parties of (X).", "What (X) are the parties of the (X)?", "What (X) is (X) 's party?", "What (X) is the party of (X)?", "What (X) is the party of the (X)?", "What (X) was (X) 's party?", "What (X) was the party of (X)?", "What (X) was the party of the (X)?", "What (X) were the parties of the (X)?", "which (X) are the parties of (X)?", "which (X) are the parties of the (X)?", "which (X) is the party of (X)?", "which (X) is the party of the (X)?", "which (X) was the party of (X)?", "which (X) was the party of the (X)?", "which (X) were the parties of (X)?", "which (X) were the parties of the (X)?", "Who are the parties of (X)?", "Who are the parties of the (X)?", "Who is the party of (X)?", "Who is the party of the (X)?", "Who was the party of (X)?", "Who was the party of the (X)?", "Who were the parties of (X)?", "Who were the parties of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of (X)?", "the party of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) population.", "What (X) is (X) 's population?", "What (X) is the population of (X)?", "What (X) is the population of the (X)?", "What (X) was (X) 's population?", "What (X) was the population of (X)?", "What (X) was the population of the (X)?", "What is the population of (X)?", "What is the population of the (X)?", "What was the population of (X)?", "What was the population of the (X)?", "which (X) is the population of (X)?", "which (X) is the population of the (X)?", "which (X) was the population of (X)?", "which (X) was the population of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) form of government.", "List all the countries with form of government of (X).", "What (X) is (X) 's form of government?", "What (X) is the form of government of (X)?", "What (X) is the form of government of the (X)?", "What (X) was (X) 's form of government?", "What (X) was the form of government of (X)?", "What (X) was the form of government of the (X)?", "What is the form of government of (X)?", "What is the form of government of the (X)?", "What was the form of government of (X)?", "What was the form of government of the (X)?", "which (X) is the form of government of (X)?", "which (X) is the form of government of the (X)?", "which (X) was the form of government of (X)?", "which (X) was the form of government of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) dissolution date.", "What (X) is (X) 's dissolution date?", "What (X) is the dissolution date of (X)?", "What (X) is the dissolution date of the (X)?", "What (X) was (X) 's dissolution date?", "What (X) was the dissolution date of (X)?", "What (X) was the dissolution date of the (X)?", "What is the dissolution date of (X)?", "What is the dissolution date of the (X)?", "What was the dissolution date of (X)?", "What was the dissolution date of the (X)?", "which (X) is the dissolution date of (X)?", "which (X) is the dissolution date of the (X)?", "which (X) was the dissolution date of (X)?", "which (X) was the dissolution date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the dissolution date of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) currencies.", "Give me all currencies of (X).", "Give me the (X) currencies.", "Give me the (X) currency.", "List all currencies of (X).", "List all the currencies of (X).", "List all the currencies with currency of (X).", "show me all currencies of (X).", "What (X) are the currencies of the (X)?", "What (X) is (X) 's currency?", "What (X) is the currency of (X)?", "What (X) is the currency of the (X)?", "What (X) was (X) 's currency?", "What (X) was the currency of (X)?", "What (X) was the currency of the (X)?", "What (X) were the currencies of the (X)?", "What are the currencies of (X)?", "What are the currencies of the (X)?", "What is the currency of (X)?", "What is the currency of the (X)?", "What was the currency of (X)?", "What was the currency of the (X)?", "What were the currencies of (X)?", "What were the currencies of the (X)?", "which (X) are the currencies of (X)?", "which (X) are the currencies of the (X)?", "which (X) is the currency of (X)?", "which (X) is the currency of the (X)?", "which (X) was the currency of (X)?", "which (X) was the currency of the (X)?", "which (X) were the currencies of (X)?", "which (X) were the currencies of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of (X)?", "the currency of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) currencies.", "Give me all currencies of (X).", "Give me the (X) currencies.", "Give me the (X) currency.", "List all currencies of (X).", "List all the currencies of (X).", "List all the currencies with currency of (X).", "show me all currencies of (X).", "What (X) are the currencies of the (X)?", "What (X) is (X) 's currency?", "What (X) is the currency of (X)?", "What (X) is the currency of the (X)?", "What (X) was (X) 's currency?", "What (X) was the currency of (X)?", "What (X) was the currency of the (X)?", "What (X) were the currencies of the (X)?", "What are the currencies of (X)?", "What are the currencies of the (X)?", "What is the currency of (X)?", "What is the currency of the (X)?", "What was the currency of (X)?", "What was the currency of the (X)?", "What were the currencies of (X)?", "What were the currencies of the (X)?", "which (X) are the currencies of (X)?", "which (X) are the currencies of the (X)?", "which (X) is the currency of (X)?", "which (X) is the currency of the (X)?", "which (X) was the currency of (X)?", "which (X) was the currency of the (X)?", "which (X) were the currencies of (X)?", "which (X) were the currencies of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of (X)?", "the currency of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) religion.", "What (X) is (X) 's religion?", "What (X) is the religion of (X)?", "What (X) is the religion of the (X)?", "What (X) was (X) 's religion?", "What (X) was the religion of (X)?", "What (X) was the religion of the (X)?", "which (X) is the religion of (X)?", "which (X) is the religion of the (X)?", "which (X) was the religion of (X)?", "which (X) was the religion of the (X)?", "Who is the religion of (X)?", "Who is the religion of the (X)?", "Who was the religion of (X)?", "Who was the religion of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/religion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the religion of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/religion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the company with founder of (X).", "List all the founders of (X).", "show me all founders of (X).", "What are the founders of (X)?", "What are the founders of the (X)?", "What is the founder of (X)?", "What is the founder of the (X)?", "What was the founder of (X)?", "What was the founder of the (X)?", "What were the founders of (X)?", "What were the founders of the (X)?", "which (X) are the founders of (X)?", "which (X) are the founders of the (X)?", "which (X) is the founder of (X)?", "which (X) is the founder of the (X)?", "which (X) was the founder of (X)?", "which (X) was the founder of the (X)?", "which (X) were the founders of (X)?", "which (X) were the founders of the (X)?", "Who are the founders of the (X)?", "Who is (X) 's founder?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was (X) 's founder?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) children.", "Give me all children of (X).", "Give me the (X) child.", "Give me the (X) children.", "List all children of (X).", "List all the children of (X).", "List all the persons with child of (X).", "show me all children of (X).", "which (X) are the children of (X)?", "which (X) are the children of the (X)?", "which (X) is the child of (X)?", "which (X) is the child of the (X)?", "which (X) was the child of (X)?", "which (X) was the child of the (X)?", "which (X) were the children of (X)?", "which (X) were the children of the (X)?", "Who are the children of (X)?", "Who are the children of the (X)?", "Who is (X) 's child?", "Who is the child of (X)?", "Who is the child of the (X)?", "Who was (X) 's child?", "Who was the child of (X)?", "Who was the child of the (X)?", "Who were the children of (X)?", "Who were the children of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of (X)?", "the children of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the agents with founder of (X).", "List all the founders of (X).", "show me all founders of (X).", "What are the founders of (X)?", "What are the founders of the (X)?", "What is the founder of (X)?", "What is the founder of the (X)?", "What was the founder of (X)?", "What was the founder of the (X)?", "What were the founders of (X)?", "What were the founders of the (X)?", "which (X) are the founders of (X)?", "which (X) are the founders of the (X)?", "which (X) is the founder of (X)?", "which (X) is the founder of the (X)?", "which (X) was the founder of (X)?", "which (X) was the founder of the (X)?", "which (X) were the founders of (X)?", "which (X) were the founders of the (X)?", "Who are the founders of the (X)?", "Who is (X) 's founder?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was (X) 's founder?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) foundation place.", "List all the cities with foundation place of (X).", "What (X) is (X) 's foundation place?", "What (X) is the foundation place of (X)?", "What (X) is the foundation place of the (X)?", "What (X) was (X) 's foundation place?", "What (X) was the foundation place of (X)?", "What (X) was the foundation place of the (X)?", "which (X) is the foundation place of (X)?", "which (X) is the foundation place of the (X)?", "which (X) was the foundation place of (X)?", "which (X) was the foundation place of the (X)?", "Who is the foundation place of (X)?", "Who is the foundation place of the (X)?", "Who was the foundation place of (X)?", "Who was the foundation place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) nationality.", "List all the countries with nationality of (X).", "What (X) is (X) 's nationality?", "What (X) is the nationality of (X)?", "What (X) is the nationality of the (X)?", "What (X) was (X) 's nationality?", "What (X) was the nationality of (X)?", "What (X) was the nationality of the (X)?", "which (X) is the nationality of (X)?", "which (X) is the nationality of the (X)?", "which (X) was the nationality of (X)?", "which (X) was the nationality of the (X)?", "Who is the nationality of (X)?", "Who is the nationality of the (X)?", "Who was the nationality of (X)?", "Who was the nationality of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) father.", "List all the persons with father of (X).", "What is the father of (X)?", "What is the father of the (X)?", "What was the father of (X)?", "What was the father of the (X)?", "which (X) is the father of (X)?", "which (X) is the father of the (X)?", "which (X) was the father of (X)?", "which (X) was the father of the (X)?", "Who is (X) 's father?", "Who is the father of (X)?", "Who is the father of the (X)?", "Who was (X) 's father?", "Who was the father of (X)?", "Who was the father of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) music composers.", "Give me all music composers of (X).", "Give me the (X) music composer.", "Give me the (X) music composers.", "List all music composers of (X).", "List all the music composers of (X).", "List all the persons with music composer of (X).", "show me all music composers of (X).", "What are the music composers of (X)?", "What are the music composers of the (X)?", "What is the music composer of (X)?", "What is the music composer of the (X)?", "What was the music composer of (X)?", "What was the music composer of the (X)?", "What were the music composers of (X)?", "What were the music composers of the (X)?", "which (X) are the music composers of (X)?", "which (X) are the music composers of the (X)?", "which (X) is the music composer of (X)?", "which (X) is the music composer of the (X)?", "which (X) was the music composer of (X)?", "which (X) was the music composer of the (X)?", "which (X) were the music composers of (X)?", "which (X) were the music composers of the (X)?", "Who are the music composers of the (X)?", "Who is (X) 's music composer?", "Who is the music composer of (X)?", "Who is the music composer of the (X)?", "Who was (X) 's music composer?", "Who was the music composer of (X)?", "Who was the music composer of the (X)?", "Who were the music composers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of (X)?", "the music composers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "259",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest city.", "List all the cities with largest city of (X).", "What (X) is (X) 's largest city?", "What (X) is the largest city of (X)?", "What (X) is the largest city of the (X)?", "What (X) was (X) 's largest city?", "What (X) was the largest city of (X)?", "What (X) was the largest city of the (X)?", "What is the largest city of (X)?", "What is the largest city of the (X)?", "What was the largest city of (X)?", "What was the largest city of the (X)?", "which (X) is the largest city of (X)?", "which (X) is the largest city of the (X)?", "which (X) was the largest city of (X)?", "which (X) was the largest city of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "262",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "263",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) birth year.", "What (X) is (X) 's birth year?", "What (X) is the birth year of (X)?", "What (X) is the birth year of the (X)?", "What (X) was (X) 's birth year?", "What (X) was the birth year of (X)?", "What (X) was the birth year of the (X)?", "which (X) is the birth year of (X)?", "which (X) is the birth year of the (X)?", "which (X) was the birth year of (X)?", "which (X) was the birth year of the (X)?", "Who is the birth year of (X)?", "Who is the birth year of the (X)?", "Who was the birth year of (X)?", "Who was the birth year of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "266",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth year of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "267",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) first season.", "What (X) is (X) 's first season?", "What (X) is the first season of (X)?", "What (X) is the first season of the (X)?", "What (X) was (X) 's first season?", "What (X) was the first season of (X)?", "What (X) was the first season of the (X)?", "What is the first season of (X)?", "What is the first season of the (X)?", "What was the first season of (X)?", "What was the first season of the (X)?", "which (X) is the first season of (X)?", "which (X) is the first season of the (X)?", "which (X) was the first season of (X)?", "which (X) was the first season of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "270",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first season of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "271",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) founding year.", "What (X) is (X) 's founding year?", "What (X) is the founding year of (X)?", "What (X) is the founding year of the (X)?", "What (X) was (X) 's founding year?", "What (X) was the founding year of (X)?", "What (X) was the founding year of the (X)?", "which (X) is the founding year of (X)?", "which (X) is the founding year of the (X)?", "which (X) was the founding year of (X)?", "which (X) was the founding year of the (X)?", "Who is the founding year of (X)?", "Who is the founding year of the (X)?", "Who was the founding year of (X)?", "Who was the founding year of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "274",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding year of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "275",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parents.", "Give me all parents of (X).", "Give me the (X) parent.", "Give me the (X) parents.", "List all parents of (X).", "List all the parents of (X).", "List all the persons with parent of (X).", "show me all parents of (X).", "which (X) are the parents of (X)?", "which (X) are the parents of the (X)?", "which (X) is the parent of (X)?", "which (X) is the parent of the (X)?", "which (X) was the parent of (X)?", "which (X) was the parent of the (X)?", "which (X) were the parents of (X)?", "which (X) were the parents of the (X)?", "Who are the parents of (X)?", "Who are the parents of the (X)?", "Who is (X) 's parent?", "Who is the parent of (X)?", "Who is the parent of the (X)?", "Who was (X) 's parent?", "Who was the parent of (X)?", "Who was the parent of the (X)?", "Who were the parents of (X)?", "Who were the parents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "279",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parent of (X)?", "the parents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "280",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) books.", "Give me all books by (X).", "Give me the (X) book.", "Give me the (X) books.", "List all books by (X).", "List all the books by (X).", "List all the writers with book by (X).", "show me all books by (X).", "What (X) are the books by the (X)?", "What (X) is (X) 's book?", "What (X) is the book by (X)?", "What (X) is the book by the (X)?", "What (X) was (X) 's book?", "What (X) was the book by (X)?", "What (X) was the book by the (X)?", "What (X) were the books by the (X)?", "which (X) are the books by (X)?", "which (X) are the books by the (X)?", "which (X) is the book by (X)?", "which (X) is the book by the (X)?", "which (X) was the book by (X)?", "which (X) was the book by the (X)?", "which (X) were the books by (X)?", "which (X) were the books by the (X)?", "Who are the books by (X)?", "Who are the books by the (X)?", "Who is the book by (X)?", "Who is the book by the (X)?", "Who was the book by (X)?", "Who was the book by the (X)?", "Who were the books by (X)?", "Who were the books by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "284",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by (X)?", "the books by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) coaches.", "Give me all coaches of (X).", "Give me the (X) coach.", "Give me the (X) coaches.", "List all coaches of (X).", "List all the coaches of (X).", "List all the persons with coach of (X).", "show me all coaches of (X).", "What are the coaches of (X)?", "What are the coaches of the (X)?", "What is the coach of (X)?", "What is the coach of the (X)?", "What was the coach of (X)?", "What was the coach of the (X)?", "What were the coaches of (X)?", "What were the coaches of the (X)?", "which (X) are the coaches of (X)?", "which (X) are the coaches of the (X)?", "which (X) is the coach of (X)?", "which (X) is the coach of the (X)?", "which (X) was the coach of (X)?", "which (X) was the coach of the (X)?", "which (X) were the coaches of (X)?", "which (X) were the coaches of the (X)?", "Who are the coaches of the (X)?", "Who is (X) 's coach?", "Who is the coach of (X)?", "Who is the coach of the (X)?", "Who was (X) 's coach?", "Who was the coach of (X)?", "Who was the coach of the (X)?", "Who were the coaches of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of (X)?", "the coaches of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) coaches.", "Give me all coaches of (X).", "Give me the (X) coach.", "Give me the (X) coaches.", "List all coaches of (X).", "List all the coaches of (X).", "List all the persons with coach of (X).", "show me all coaches of (X).", "What are the coaches of (X)?", "What are the coaches of the (X)?", "What is the coach of (X)?", "What is the coach of the (X)?", "What was the coach of (X)?", "What was the coach of the (X)?", "What were the coaches of (X)?", "What were the coaches of the (X)?", "which (X) are the coaches of (X)?", "which (X) are the coaches of the (X)?", "which (X) is the coach of (X)?", "which (X) is the coach of the (X)?", "which (X) was the coach of (X)?", "which (X) was the coach of the (X)?", "which (X) were the coaches of (X)?", "which (X) were the coaches of the (X)?", "Who are the coaches of the (X)?", "Who is (X) 's coach?", "Who is the coach of (X)?", "Who is the coach of the (X)?", "Who was (X) 's coach?", "Who was the coach of (X)?", "Who was the coach of the (X)?", "Who were the coaches of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of (X)?", "the coaches of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "295",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) albums.", "Give me all albums of (X).", "Give me the (X) album.", "Give me the (X) albums.", "List all albums of (X).", "List all the albums of (X).", "List all the albums with album of (X).", "show me all albums of (X).", "What (X) are the albums of the (X)?", "What (X) is (X) 's album?", "What (X) is the album of (X)?", "What (X) is the album of the (X)?", "What (X) was (X) 's album?", "What (X) was the album of (X)?", "What (X) was the album of the (X)?", "What (X) were the albums of the (X)?", "What are the albums of (X)?", "What are the albums of the (X)?", "What is the album of (X)?", "What is the album of the (X)?", "What was the album of (X)?", "What was the album of the (X)?", "What were the albums of (X)?", "What were the albums of the (X)?", "which (X) are the albums of (X)?", "which (X) are the albums of the (X)?", "which (X) is the album of (X)?", "which (X) is the album of the (X)?", "which (X) was the album of (X)?", "which (X) was the album of the (X)?", "which (X) were the albums of (X)?", "which (X) were the albums of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the album of (X)?", "the albums of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "300",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) members.", "Give me all members of (X).", "Give me the (X) member.", "Give me the (X) members.", "List all members of (X).", "List all the members of (X).", "List all the musical artists with member of (X).", "show me all members of (X).", "What are the members of (X)?", "What are the members of the (X)?", "What is the member of (X)?", "What is the member of the (X)?", "What was the member of (X)?", "What was the member of the (X)?", "What were the members of (X)?", "What were the members of the (X)?", "which (X) are the members of (X)?", "which (X) are the members of the (X)?", "which (X) is the member of (X)?", "which (X) is the member of the (X)?", "which (X) was the member of (X)?", "which (X) was the member of the (X)?", "which (X) were the members of (X)?", "which (X) were the members of the (X)?", "Who are the members of the (X)?", "Who is (X) 's member?", "Who is the member of (X)?", "Who is the member of the (X)?", "Who was (X) 's member?", "Who was the member of (X)?", "Who was the member of the (X)?", "Who were the members of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of (X)?", "the members of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "305",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) last Election Dates.", "Give me all last Election Dates of (X).", "Give me the (X) last Election Date.", "Give me the (X) last Election Dates.", "List all last Election Dates of (X).", "List all the last Election Dates of (X).", "show me all last Election Dates of (X).", "What (X) are the last Election Dates of the (X)?", "What (X) is (X) 's last Election Date?", "What (X) is the last Election Date of (X)?", "What (X) is the last Election Date of the (X)?", "What (X) was (X) 's last Election Date?", "What (X) was the last Election Date of (X)?", "What (X) was the last Election Date of the (X)?", "What (X) were the last Election Dates of the (X)?", "which (X) are the last Election Dates of (X)?", "which (X) are the last Election Dates of the (X)?", "which (X) is the last Election Date of (X)?", "which (X) is the last Election Date of the (X)?", "which (X) was the last Election Date of (X)?", "which (X) was the last Election Date of the (X)?", "which (X) were the last Election Dates of (X)?", "which (X) were the last Election Dates of the (X)?", "Who are the last Election Dates of (X)?", "Who are the last Election Dates of the (X)?", "Who is the last Election Date of (X)?", "Who is the last Election Date of the (X)?", "Who was the last Election Date of (X)?", "Who was the last Election Date of the (X)?", "Who were the last Election Dates of (X)?", "Who were the last Election Dates of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the last Election Date of (X)?", "the last Election Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "310",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) opening Dates.", "Give me all opening Dates of (X).", "Give me the (X) opening Date.", "Give me the (X) opening Dates.", "List all opening Dates of (X).", "List all the opening Dates of (X).", "show me all opening Dates of (X).", "What (X) are the opening Dates of the (X)?", "What (X) is (X) 's opening Date?", "What (X) is the opening Date of (X)?", "What (X) is the opening Date of the (X)?", "What (X) was (X) 's opening Date?", "What (X) was the opening Date of (X)?", "What (X) was the opening Date of the (X)?", "What (X) were the opening Dates of the (X)?", "What are the opening Dates of (X)?", "What are the opening Dates of the (X)?", "What is the opening Date of (X)?", "What is the opening Date of the (X)?", "What was the opening Date of (X)?", "What was the opening Date of the (X)?", "What were the opening Dates of (X)?", "What were the opening Dates of the (X)?", "which (X) are the opening Dates of (X)?", "which (X) are the opening Dates of the (X)?", "which (X) is the opening Date of (X)?", "which (X) is the opening Date of the (X)?", "which (X) was the opening Date of (X)?", "which (X) was the opening Date of the (X)?", "which (X) were the opening Dates of (X)?", "which (X) were the opening Dates of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the opening Date of (X)?", "the opening Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "315",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) artistic movements.", "Give me all artistic movements of (X).", "Give me the (X) artistic movement.", "Give me the (X) artistic movements.", "List all artistic movements of (X).", "List all the artistic movements of (X).", "show me all artistic movements of (X).", "What (X) are the artistic movements of the (X)?", "What (X) is (X) 's artistic movement?", "What (X) is the artistic movement of (X)?", "What (X) is the artistic movement of the (X)?", "What (X) was (X) 's artistic movement?", "What (X) was the artistic movement of (X)?", "What (X) was the artistic movement of the (X)?", "What (X) were the artistic movements of the (X)?", "which (X) are the artistic movements of (X)?", "which (X) are the artistic movements of the (X)?", "which (X) is the artistic movement of (X)?", "which (X) is the artistic movement of the (X)?", "which (X) was the artistic movement of (X)?", "which (X) was the artistic movement of the (X)?", "which (X) were the artistic movements of (X)?", "which (X) were the artistic movements of the (X)?", "Who are the artistic movements of (X)?", "Who are the artistic movements of the (X)?", "Who is the artistic movement of (X)?", "Who is the artistic movement of the (X)?", "Who was the artistic movement of (X)?", "Who was the artistic movement of the (X)?", "Who were the artistic movements of (X)?", "Who were the artistic movements of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of (X)?", "the artistic movements of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "320",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) artistic movements.", "Give me all artistic movements of (X).", "Give me the (X) artistic movement.", "Give me the (X) artistic movements.", "List all artistic movements of (X).", "List all the artistic movements of (X).", "show me all artistic movements of (X).", "What (X) are the artistic movements of the (X)?", "What (X) is (X) 's artistic movement?", "What (X) is the artistic movement of (X)?", "What (X) is the artistic movement of the (X)?", "What (X) was (X) 's artistic movement?", "What (X) was the artistic movement of (X)?", "What (X) was the artistic movement of the (X)?", "What (X) were the artistic movements of the (X)?", "which (X) are the artistic movements of (X)?", "which (X) are the artistic movements of the (X)?", "which (X) is the artistic movement of (X)?", "which (X) is the artistic movement of the (X)?", "which (X) was the artistic movement of (X)?", "which (X) was the artistic movement of the (X)?", "which (X) were the artistic movements of (X)?", "which (X) were the artistic movements of the (X)?", "Who are the artistic movements of (X)?", "Who are the artistic movements of the (X)?", "Who is the artistic movement of (X)?", "Who is the artistic movement of the (X)?", "Who was the artistic movement of (X)?", "Who was the artistic movement of the (X)?", "Who were the artistic movements of (X)?", "Who were the artistic movements of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of (X)?", "the artistic movements of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "325",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "School" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) number Of Students.", "Give me all number Of Students of (X).", "Give me the (X) number Of Student.", "Give me the (X) number Of Students.", "List all number Of Students of (X).", "List all the number Of Students of (X).", "show me all number Of Students of (X).", "What (X) are the number Of Students of the (X)?", "What (X) is (X) 's number Of Student?", "What (X) is the number Of Student of (X)?", "What (X) is the number Of Student of the (X)?", "What (X) was (X) 's number Of Student?", "What (X) was the number Of Student of (X)?", "What (X) was the number Of Student of the (X)?", "What (X) were the number Of Students of the (X)?", "What are the number Of Students of (X)?", "What are the number Of Students of the (X)?", "What is the number Of Student of (X)?", "What is the number Of Student of the (X)?", "What was the number Of Student of (X)?", "What was the number Of Student of the (X)?", "What were the number Of Students of (X)?", "What were the number Of Students of the (X)?", "which (X) are the number Of Students of (X)?", "which (X) are the number Of Students of the (X)?", "which (X) is the number Of Student of (X)?", "which (X) is the number Of Student of the (X)?", "which (X) was the number Of Student of (X)?", "which (X) was the number Of Student of the (X)?", "which (X) were the number Of Students of (X)?", "which (X) were the number Of Students of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "School" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Student of (X)?", "the number Of Students of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "330",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) influencers.", "Give me all influencers of (X).", "Give me the (X) influencer.", "Give me the (X) influencers.", "List all influencers of (X).", "List all the influencers of (X).", "List all the persons with influencer of (X).", "show me all influencers of (X).", "which (X) are the influencers of (X)?", "which (X) are the influencers of the (X)?", "which (X) is the influencer of (X)?", "which (X) is the influencer of the (X)?", "which (X) was the influencer of (X)?", "which (X) was the influencer of the (X)?", "which (X) were the influencers of (X)?", "which (X) were the influencers of the (X)?", "Who are the influencers of (X)?", "Who are the influencers of the (X)?", "Who is (X) 's influencer?", "Who is the influencer of (X)?", "Who is the influencer of the (X)?", "Who was (X) 's influencer?", "Who was the influencer of (X)?", "Who was the influencer of the (X)?", "Who were the influencers of (X)?", "Who were the influencers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "334",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the influencer of (X)?", "the influencers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "335",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the founders of (X).", "List all the popes with founder of (X).", "show me all founders of (X).", "which (X) are the founders of (X)?", "which (X) are the founders of the (X)?", "which (X) is the founder of (X)?", "which (X) is the founder of the (X)?", "which (X) was the founder of (X)?", "which (X) was the founder of the (X)?", "which (X) were the founders of (X)?", "which (X) were the founders of the (X)?", "Who are the founders of (X)?", "Who are the founders of the (X)?", "Who is (X) 's founder?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was (X) 's founder?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "339",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "340",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) record labels.", "Give me all record labels of (X).", "Give me the (X) record label.", "Give me the (X) record labels.", "List all record labels of (X).", "List all the record labels of (X).", "show me all record labels of (X).", "What (X) are the record labels of the (X)?", "What (X) is (X) 's record label?", "What (X) is the record label of (X)?", "What (X) is the record label of the (X)?", "What (X) was (X) 's record label?", "What (X) was the record label of (X)?", "What (X) was the record label of the (X)?", "What (X) were the record labels of the (X)?", "What are the record labels of (X)?", "What are the record labels of the (X)?", "What is the record label of (X)?", "What is the record label of the (X)?", "What was the record label of (X)?", "What was the record label of the (X)?", "What were the record labels of (X)?", "What were the record labels of the (X)?", "which (X) are the record labels of (X)?", "which (X) are the record labels of the (X)?", "which (X) is the record label of (X)?", "which (X) is the record label of the (X)?", "which (X) was the record label of (X)?", "which (X) was the record label of the (X)?", "which (X) were the record labels of (X)?", "which (X) were the record labels of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "344",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the record label of (X)?", "the record labels of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "345",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) autobiography.", "List all the authors with autobiography of (X).", "What (X) is (X) 's autobiography?", "What (X) is the autobiography of (X)?", "What (X) is the autobiography of the (X)?", "What (X) was (X) 's autobiography?", "What (X) was the autobiography of (X)?", "What (X) was the autobiography of the (X)?", "What is the autobiography of (X)?", "What is the autobiography of the (X)?", "What was the autobiography of (X)?", "What was the autobiography of the (X)?", "which (X) is the autobiography of (X)?", "which (X) is the autobiography of the (X)?", "which (X) was the autobiography of (X)?", "which (X) was the autobiography of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "348",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "349",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) wives.", "Give me all wives of (X).", "Give me the (X) wife.", "Give me the (X) wives.", "List all the persons with wife of (X).", "List all the wives of (X).", "List all wives of (X).", "show me all wives of (X).", "which (X) are the wives of (X)?", "which (X) are the wives of the (X)?", "which (X) is the wife of (X)?", "which (X) is the wife of the (X)?", "which (X) was the wife of (X)?", "which (X) was the wife of the (X)?", "which (X) were the wives of (X)?", "which (X) were the wives of the (X)?", "Who are the wives of (X)?", "Who are the wives of the (X)?", "Who is (X) 's wife?", "Who is the wife of (X)?", "Who is the wife of the (X)?", "Who was (X) 's wife?", "Who was the wife of (X)?", "Who was the wife of the (X)?", "Who were the wives of (X)?", "Who were the wives of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "353",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of (X)?", "the wives of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "354",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) first Air Dates.", "Give me all first Air Dates of (X).", "Give me the (X) first Air Date.", "Give me the (X) first Air Dates.", "List all first Air Dates of (X).", "List all the first Air Dates of (X).", "show me all first Air Dates of (X).", "What (X) are the first Air Dates of the (X)?", "What (X) is (X) 's first Air Date?", "What (X) is the first Air Date of (X)?", "What (X) is the first Air Date of the (X)?", "What (X) was (X) 's first Air Date?", "What (X) was the first Air Date of (X)?", "What (X) was the first Air Date of the (X)?", "What (X) were the first Air Dates of the (X)?", "What are the first Air Dates of (X)?", "What are the first Air Dates of the (X)?", "What is the first Air Date of (X)?", "What is the first Air Date of the (X)?", "What was the first Air Date of (X)?", "What was the first Air Date of the (X)?", "What were the first Air Dates of (X)?", "What were the first Air Dates of the (X)?", "which (X) are the first Air Dates of (X)?", "which (X) are the first Air Dates of the (X)?", "which (X) is the first Air Date of (X)?", "which (X) is the first Air Date of the (X)?", "which (X) was the first Air Date of (X)?", "which (X) was the first Air Date of the (X)?", "which (X) were the first Air Dates of (X)?", "which (X) were the first Air Dates of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "358",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Air Date of (X)?", "the first Air Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "359",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) cities.", "Give me all cities in (X).", "Give me the (X) cities.", "Give me the (X) city.", "List all cities in (X).", "List all the cities in (X).", "List all the cities with city in (X).", "show me all cities in (X).", "What (X) are the cities in the (X)?", "What (X) is (X) 's city?", "What (X) is the city in (X)?", "What (X) is the city in the (X)?", "What (X) was (X) 's city?", "What (X) was the city in (X)?", "What (X) was the city in the (X)?", "What (X) were the cities in the (X)?", "What are the cities in (X)?", "What are the cities in the (X)?", "What is the city in (X)?", "What is the city in the (X)?", "What was the city in (X)?", "What was the city in the (X)?", "What were the cities in (X)?", "What were the cities in the (X)?", "which (X) are the cities in (X)?", "which (X) are the cities in the (X)?", "which (X) is the city in (X)?", "which (X) is the city in the (X)?", "which (X) was the city in (X)?", "which (X) was the city in the (X)?", "which (X) were the cities in (X)?", "which (X) were the cities in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "363",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities in (X)?", "the city in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "364",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) wine productions.", "Give me all wine productions of (X).", "Give me the (X) wine production.", "Give me the (X) wine productions.", "List all the locations with wine production of (X).", "List all the wine productions of (X).", "List all wine productions of (X).", "show me all wine productions of (X).", "What (X) are the wine productions of the (X)?", "What (X) is (X) 's wine production?", "What (X) is the wine production of (X)?", "What (X) is the wine production of the (X)?", "What (X) was (X) 's wine production?", "What (X) was the wine production of (X)?", "What (X) was the wine production of the (X)?", "What (X) were the wine productions of the (X)?", "which (X) are the wine productions of (X)?", "which (X) are the wine productions of the (X)?", "which (X) is the wine production of (X)?", "which (X) is the wine production of the (X)?", "which (X) was the wine production of (X)?", "which (X) was the wine production of the (X)?", "which (X) were the wine productions of (X)?", "which (X) were the wine productions of the (X)?", "Who are the wine productions of (X)?", "Who are the wine productions of the (X)?", "Who is the wine production of (X)?", "Who is the wine production of the (X)?", "Who was the wine production of (X)?", "Who was the wine production of the (X)?", "Who were the wine productions of (X)?", "Who were the wine productions of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "368",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine production of (X)?", "the wine productions of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "369",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) daughters.", "Give me all daughters of (X).", "Give me the (X) daughter.", "Give me the (X) daughters.", "List all daughters of (X).", "List all the daughters of (X).", "List all the persons with daughter of (X).", "show me all daughters of (X).", "which (X) are the daughters of (X)?", "which (X) are the daughters of the (X)?", "which (X) is the daughter of (X)?", "which (X) is the daughter of the (X)?", "which (X) was the daughter of (X)?", "which (X) was the daughter of the (X)?", "which (X) were the daughters of (X)?", "which (X) were the daughters of the (X)?", "Who are the daughters of (X)?", "Who are the daughters of the (X)?", "Who is (X) 's daughter?", "Who is the daughter of (X)?", "Who is the daughter of the (X)?", "Who was (X) 's daughter?", "Who was the daughter of (X)?", "Who was the daughter of the (X)?", "Who were the daughters of (X)?", "Who were the daughters of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "373",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the daughter of (X)?", "the daughters of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "374",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) number of pages.", "What (X) is (X) 's number of pages?", "What (X) is the number of pages of (X)?", "What (X) is the number of pages of the (X)?", "What (X) was (X) 's number of pages?", "What (X) was the number of pages of (X)?", "What (X) was the number of pages of the (X)?", "What is the number of pages of (X)?", "What is the number of pages of the (X)?", "What was the number of pages of (X)?", "What was the number of pages of the (X)?", "which (X) is the number of pages of (X)?", "which (X) is the number of pages of the (X)?", "which (X) was the number of pages of (X)?", "which (X) was the number of pages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "377",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "378",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) home stadiums.", "Give me all home stadiums of (X).", "Give me the (X) home stadium.", "Give me the (X) home stadiums.", "List all home stadiums of (X).", "List all the home stadiums of (X).", "List all the stadiums with home stadium of (X).", "show me all home stadiums of (X).", "What (X) are the home stadiums of the (X)?", "What (X) is (X) 's home stadium?", "What (X) is the home stadium of (X)?", "What (X) is the home stadium of the (X)?", "What (X) was (X) 's home stadium?", "What (X) was the home stadium of (X)?", "What (X) was the home stadium of the (X)?", "What (X) were the home stadiums of the (X)?", "What are the home stadiums of (X)?", "What are the home stadiums of the (X)?", "What is the home stadium of (X)?", "What is the home stadium of the (X)?", "What was the home stadium of (X)?", "What was the home stadium of the (X)?", "What were the home stadiums of (X)?", "What were the home stadiums of the (X)?", "which (X) are the home stadiums of (X)?", "which (X) are the home stadiums of the (X)?", "which (X) is the home stadium of (X)?", "which (X) is the home stadium of the (X)?", "which (X) was the home stadium of (X)?", "which (X) was the home stadium of the (X)?", "which (X) were the home stadiums of (X)?", "which (X) were the home stadiums of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "382",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the home stadium of (X)?", "the home stadiums of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "383",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) mayors.", "Give me all mayors of (X).", "Give me the (X) mayor.", "Give me the (X) mayors.", "List all mayors of (X).", "List all the mayors of (X).", "List all the persons with mayor of (X).", "show me all mayors of (X).", "What are the mayors of (X)?", "What are the mayors of the (X)?", "What is the mayor of (X)?", "What is the mayor of the (X)?", "What was the mayor of (X)?", "What was the mayor of the (X)?", "What were the mayors of (X)?", "What were the mayors of the (X)?", "which (X) are the mayors of (X)?", "which (X) are the mayors of the (X)?", "which (X) is the mayor of (X)?", "which (X) is the mayor of the (X)?", "which (X) was the mayor of (X)?", "which (X) was the mayor of the (X)?", "which (X) were the mayors of (X)?", "which (X) were the mayors of the (X)?", "Who are the mayors of the (X)?", "Who is (X) 's mayor?", "Who is the mayor of (X)?", "Who is the mayor of the (X)?", "Who was (X) 's mayor?", "Who was the mayor of (X)?", "Who was the mayor of the (X)?", "Who were the mayors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "387",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of (X)?", "the mayors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "388",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest country.", "List all the countries with largest country of (X).", "What (X) is (X) 's largest country?", "What (X) is the largest country of (X)?", "What (X) is the largest country of the (X)?", "What (X) was (X) 's largest country?", "What (X) was the largest country of (X)?", "What (X) was the largest country of the (X)?", "What is the largest country of (X)?", "What is the largest country of the (X)?", "What was the largest country of (X)?", "What was the largest country of the (X)?", "which (X) is the largest country of (X)?", "which (X) is the largest country of the (X)?", "which (X) was the largest country of (X)?", "which (X) was the largest country of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "391",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "392",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) teams.", "Give me all teams of (X).", "Give me the (X) team.", "Give me the (X) teams.", "List all teams of (X).", "List all the Ice Hockey Leagues with team of (X).", "List all the teams of (X).", "show me all teams of (X).", "What (X) are the teams of the (X)?", "What (X) is (X) 's team?", "What (X) is the team of (X)?", "What (X) is the team of the (X)?", "What (X) was (X) 's team?", "What (X) was the team of (X)?", "What (X) was the team of the (X)?", "What (X) were the teams of the (X)?", "What are the teams of (X)?", "What are the teams of the (X)?", "What is the team of (X)?", "What is the team of the (X)?", "What was the team of (X)?", "What was the team of the (X)?", "What were the teams of (X)?", "What were the teams of the (X)?", "which (X) are the teams of (X)?", "which (X) are the teams of the (X)?", "which (X) is the team of (X)?", "which (X) is the team of the (X)?", "which (X) was the team of (X)?", "which (X) was the team of the (X)?", "which (X) were the teams of (X)?", "which (X) were the teams of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "396",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the team of (X)?", "the teams of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "397",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) elevation.", "What (X) is (X) 's elevation?", "What (X) is the elevation of (X)?", "What (X) is the elevation of the (X)?", "What (X) was (X) 's elevation?", "What (X) was the elevation of (X)?", "What (X) was the elevation of the (X)?", "What is the elevation of (X)?", "What is the elevation of the (X)?", "What was the elevation of (X)?", "What was the elevation of the (X)?", "which (X) is the elevation of (X)?", "which (X) is the elevation of the (X)?", "which (X) was the elevation of (X)?", "which (X) was the elevation of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "400",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the elevation of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "401",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) birth place.", "List all the countries with birth place of (X).", "What (X) is (X) 's birth place?", "What (X) is the birth place of (X)?", "What (X) is the birth place of the (X)?", "What (X) was (X) 's birth place?", "What (X) was the birth place of (X)?", "What (X) was the birth place of the (X)?", "which (X) is the birth place of (X)?", "which (X) is the birth place of the (X)?", "which (X) was the birth place of (X)?", "which (X) was the birth place of the (X)?", "Who is the birth place of (X)?", "Who is the birth place of the (X)?", "Who was the birth place of (X)?", "Who was the birth place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "404",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "405",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) capital.", "List all the cities with capital of (X).", "What (X) is (X) 's capital?", "What (X) is the capital of (X)?", "What (X) is the capital of the (X)?", "What (X) was (X) 's capital?", "What (X) was the capital of (X)?", "What (X) was the capital of the (X)?", "What is the capital of (X)?", "What is the capital of the (X)?", "What was the capital of (X)?", "What was the capital of the (X)?", "which (X) is the capital of (X)?", "which (X) is the capital of the (X)?", "which (X) was the capital of (X)?", "which (X) was the capital of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "408",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "409",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) death date.", "What (X) is (X) 's death date?", "What (X) is the death date of (X)?", "What (X) is the death date of the (X)?", "What (X) was (X) 's death date?", "What (X) was the death date of (X)?", "What (X) was the death date of the (X)?", "which (X) is the death date of (X)?", "which (X) is the death date of the (X)?", "which (X) was the death date of (X)?", "which (X) was the death date of the (X)?", "Who is the death date of (X)?", "Who is the death date of the (X)?", "Who was the death date of (X)?", "Who was the death date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "412",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death date of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "413",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) costs.", "Give me all costs of (X).", "Give me the (X) cost.", "Give me the (X) costs.", "List all costs of (X).", "List all the costs of (X).", "show me all costs of (X).", "What (X) are the costs of the (X)?", "What (X) is (X) 's cost?", "What (X) is the cost of (X)?", "What (X) is the cost of the (X)?", "What (X) was (X) 's cost?", "What (X) was the cost of (X)?", "What (X) was the cost of the (X)?", "What (X) were the costs of the (X)?", "What are the costs of (X)?", "What are the costs of the (X)?", "What is the cost of (X)?", "What is the cost of the (X)?", "What was the cost of (X)?", "What was the cost of the (X)?", "What were the costs of (X)?", "What were the costs of the (X)?", "which (X) are the costs of (X)?", "which (X) are the costs of the (X)?", "which (X) is the cost of (X)?", "which (X) is the cost of the (X)?", "which (X) was the cost of (X)?", "which (X) was the cost of the (X)?", "which (X) were the costs of (X)?", "which (X) were the costs of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "417",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cost of (X)?", "the costs of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "418",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) completion date.", "What (X) is (X) 's completion date?", "What (X) is the completion date of (X)?", "What (X) is the completion date of the (X)?", "What (X) was (X) 's completion date?", "What (X) was the completion date of (X)?", "What (X) was the completion date of the (X)?", "What is the completion date of (X)?", "What is the completion date of the (X)?", "What was the completion date of (X)?", "What was the completion date of the (X)?", "which (X) is the completion date of (X)?", "which (X) is the completion date of the (X)?", "which (X) was the completion date of (X)?", "which (X) was the completion date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "421",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the completion date of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "422",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) authors.", "Give me all authors of (X).", "Give me the (X) author.", "Give me the (X) authors.", "List all authors of (X).", "List all the authors of (X).", "List all the persons with author of (X).", "show me all authors of (X).", "What are the authors of (X)?", "What are the authors of the (X)?", "What is the author of (X)?", "What is the author of the (X)?", "What was the author of (X)?", "What was the author of the (X)?", "What were the authors of (X)?", "What were the authors of the (X)?", "which (X) are the authors of (X)?", "which (X) are the authors of the (X)?", "which (X) is the author of (X)?", "which (X) is the author of the (X)?", "which (X) was the author of (X)?", "which (X) was the author of the (X)?", "which (X) were the authors of (X)?", "which (X) were the authors of the (X)?", "Who are the authors of the (X)?", "Who is (X) 's author?", "Who is the author of (X)?", "Who is the author of the (X)?", "Who was (X) 's author?", "Who was the author of (X)?", "Who was the author of the (X)?", "Who were the authors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "426",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of (X)?", "the authors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "427",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) books.", "Give me all books in (X).", "Give me the (X) book.", "Give me the (X) books.", "List all books in (X).", "List all the books in (X).", "List all the television shows with book in (X).", "show me all books in (X).", "What (X) are the books in the (X)?", "What (X) is (X) 's book?", "What (X) is the book in (X)?", "What (X) is the book in the (X)?", "What (X) was (X) 's book?", "What (X) was the book in (X)?", "What (X) was the book in the (X)?", "What (X) were the books in the (X)?", "What are the books in (X)?", "What are the books in the (X)?", "What is the book in (X)?", "What is the book in the (X)?", "What was the book in (X)?", "What was the book in the (X)?", "What were the books in (X)?", "What were the books in the (X)?", "which (X) are the books in (X)?", "which (X) are the books in the (X)?", "which (X) is the book in (X)?", "which (X) is the book in the (X)?", "which (X) was the book in (X)?", "which (X) was the book in the (X)?", "which (X) were the books in (X)?", "which (X) were the books in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "431",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in (X)?", "the books in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "432",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) post code.", "What (X) is (X) 's post code?", "What (X) is the post code of (X)?", "What (X) is the post code of the (X)?", "What (X) was (X) 's post code?", "What (X) was the post code of (X)?", "What (X) was the post code of the (X)?", "What is the post code of (X)?", "What is the post code of the (X)?", "What was the post code of (X)?", "What was the post code of the (X)?", "which (X) is the post code of (X)?", "which (X) is the post code of the (X)?", "which (X) was the post code of (X)?", "which (X) was the post code of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "435",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the post code of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "436",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) release date.", "What (X) is (X) 's release date?", "What (X) is the release date of (X)?", "What (X) is the release date of the (X)?", "What (X) was (X) 's release date?", "What (X) was the release date of (X)?", "What (X) was the release date of the (X)?", "What is the release date of (X)?", "What is the release date of the (X)?", "What was the release date of (X)?", "What was the release date of the (X)?", "which (X) is the release date of (X)?", "which (X) is the release date of the (X)?", "which (X) was the release date of (X)?", "which (X) was the release date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "439",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the release date of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "440",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) creators.", "Give me all creators of (X).", "Give me the (X) creator.", "Give me the (X) creators.", "List all creators of (X).", "List all the creators of (X).", "List all the persons with creator of (X).", "show me all creators of (X).", "which (X) are the creators of (X)?", "which (X) are the creators of the (X)?", "which (X) is the creator of (X)?", "which (X) is the creator of the (X)?", "which (X) was the creator of (X)?", "which (X) was the creator of the (X)?", "which (X) were the creators of (X)?", "which (X) were the creators of the (X)?", "Who are the creators of (X)?", "Who are the creators of the (X)?", "Who is (X) 's creator?", "Who is the creator of (X)?", "Who is the creator of the (X)?", "Who was (X) 's creator?", "Who was the creator of (X)?", "Who was the creator of the (X)?", "Who were the creators of (X)?", "Who were the creators of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "444",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of (X)?", "the creators of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "445",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) wine regions.", "Give me all wine regions of (X).", "Give me the (X) wine region.", "Give me the (X) wine regions.", "List all the places with wine region of (X).", "List all the wine regions of (X).", "List all wine regions of (X).", "show me all wine regions of (X).", "What (X) are the wine regions of the (X)?", "What (X) is (X) 's wine region?", "What (X) is the wine region of (X)?", "What (X) is the wine region of the (X)?", "What (X) was (X) 's wine region?", "What (X) was the wine region of (X)?", "What (X) was the wine region of the (X)?", "What (X) were the wine regions of the (X)?", "What are the wine regions of (X)?", "What are the wine regions of the (X)?", "What is the wine region of (X)?", "What is the wine region of the (X)?", "What was the wine region of (X)?", "What was the wine region of the (X)?", "What were the wine regions of (X)?", "What were the wine regions of the (X)?", "which (X) are the wine regions of (X)?", "which (X) are the wine regions of the (X)?", "which (X) is the wine region of (X)?", "which (X) is the wine region of the (X)?", "which (X) was the wine region of (X)?", "which (X) was the wine region of the (X)?", "which (X) were the wine regions of (X)?", "which (X) were the wine regions of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "449",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine region of (X)?", "the wine regions of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "450",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) time zones.", "Give me all time zones of (X).", "Give me the (X) time zone.", "Give me the (X) time zones.", "List all the time zones of (X).", "List all time zones of (X).", "show me all time zones of (X).", "What (X) are the time zones of the (X)?", "What (X) is (X) 's time zone?", "What (X) is the time zone of (X)?", "What (X) is the time zone of the (X)?", "What (X) was (X) 's time zone?", "What (X) was the time zone of (X)?", "What (X) was the time zone of the (X)?", "What (X) were the time zones of the (X)?", "What are the time zones of (X)?", "What are the time zones of the (X)?", "What is the time zone of (X)?", "What is the time zone of the (X)?", "What was the time zone of (X)?", "What was the time zone of the (X)?", "What were the time zones of (X)?", "What were the time zones of the (X)?", "which (X) are the time zones of (X)?", "which (X) are the time zones of the (X)?", "which (X) is the time zone of (X)?", "which (X) is the time zone of the (X)?", "which (X) was the time zone of (X)?", "which (X) was the time zone of the (X)?", "which (X) were the time zones of (X)?", "which (X) were the time zones of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "454",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of (X)?", "the time zones of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "455",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) time zones.", "Give me all time zones of (X).", "Give me the (X) time zone.", "Give me the (X) time zones.", "List all the time zones of (X).", "List all time zones of (X).", "show me all time zones of (X).", "What (X) are the time zones of the (X)?", "What (X) is (X) 's time zone?", "What (X) is the time zone of (X)?", "What (X) is the time zone of the (X)?", "What (X) was (X) 's time zone?", "What (X) was the time zone of (X)?", "What (X) was the time zone of the (X)?", "What (X) were the time zones of the (X)?", "What are the time zones of (X)?", "What are the time zones of the (X)?", "What is the time zone of (X)?", "What is the time zone of the (X)?", "What was the time zone of (X)?", "What was the time zone of the (X)?", "What were the time zones of (X)?", "What were the time zones of the (X)?", "which (X) are the time zones of (X)?", "which (X) are the time zones of the (X)?", "which (X) is the time zone of (X)?", "which (X) is the time zone of the (X)?", "which (X) was the time zone of (X)?", "which (X) was the time zone of the (X)?", "which (X) were the time zones of (X)?", "which (X) were the time zones of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "459",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of (X)?", "the time zones of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "460",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) minimum Temperatures.", "Give me all minimum Temperatures of (X).", "Give me the (X) minimum Temperature.", "Give me the (X) minimum Temperatures.", "List all minimum Temperatures of (X).", "List all the minimum Temperatures of (X).", "show me all minimum Temperatures of (X).", "What (X) are the minimum Temperatures of the (X)?", "What (X) is (X) 's minimum Temperature?", "What (X) is the minimum Temperature of (X)?", "What (X) is the minimum Temperature of the (X)?", "What (X) was (X) 's minimum Temperature?", "What (X) was the minimum Temperature of (X)?", "What (X) was the minimum Temperature of the (X)?", "What (X) were the minimum Temperatures of the (X)?", "What are the minimum Temperatures of (X)?", "What are the minimum Temperatures of the (X)?", "What is the minimum Temperature of (X)?", "What is the minimum Temperature of the (X)?", "What was the minimum Temperature of (X)?", "What was the minimum Temperature of the (X)?", "What were the minimum Temperatures of (X)?", "What were the minimum Temperatures of the (X)?", "which (X) are the minimum Temperatures of (X)?", "which (X) are the minimum Temperatures of the (X)?", "which (X) is the minimum Temperature of (X)?", "which (X) is the minimum Temperature of the (X)?", "which (X) was the minimum Temperature of (X)?", "which (X) was the minimum Temperature of the (X)?", "which (X) were the minimum Temperatures of (X)?", "which (X) were the minimum Temperatures of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "464",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the minimum Temperature of (X)?", "the minimum Temperatures of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "465",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) nationality.", "List all the countries with nationality of (X).", "What (X) is (X) 's nationality?", "What (X) is the nationality of (X)?", "What (X) is the nationality of the (X)?", "What (X) was (X) 's nationality?", "What (X) was the nationality of (X)?", "What (X) was the nationality of the (X)?", "which (X) is the nationality of (X)?", "which (X) is the nationality of the (X)?", "which (X) was the nationality of (X)?", "which (X) was the nationality of the (X)?", "Who is the nationality of (X)?", "Who is the nationality of the (X)?", "Who was the nationality of (X)?", "Who was the nationality of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "468",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "469",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) developers.", "Give me all developers of (X).", "Give me the (X) developer.", "Give me the (X) developers.", "List all developers of (X).", "List all the agents with developer of (X).", "List all the developers of (X).", "show me all developers of (X).", "What are the developers of (X)?", "What are the developers of the (X)?", "What is the developer of (X)?", "What is the developer of the (X)?", "What was the developer of (X)?", "What was the developer of the (X)?", "What were the developers of (X)?", "What were the developers of the (X)?", "which (X) are the developers of (X)?", "which (X) are the developers of the (X)?", "which (X) is the developer of (X)?", "which (X) is the developer of the (X)?", "which (X) was the developer of (X)?", "which (X) was the developer of the (X)?", "which (X) were the developers of (X)?", "which (X) were the developers of the (X)?", "Who are the developers of the (X)?", "Who is (X) 's developer?", "Who is the developer of (X)?", "Who is the developer of the (X)?", "Who was (X) 's developer?", "Who was the developer of (X)?", "Who was the developer of the (X)?", "Who were the developers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "473",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the developer of (X)?", "the developers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "474",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) causes of death.", "Give me all causes of death of (X).", "Give me the (X) cause of death.", "Give me the (X) causes of death.", "List all causes of death of (X).", "List all the causes of death of (X).", "show me all causes of death of (X).", "What (X) are the causes of death of the (X)?", "What (X) is (X) 's cause of death?", "What (X) is the cause of death of (X)?", "What (X) is the cause of death of the (X)?", "What (X) was (X) 's cause of death?", "What (X) was the cause of death of (X)?", "What (X) was the cause of death of the (X)?", "What (X) were the causes of death of the (X)?", "which (X) are the causes of death of (X)?", "which (X) are the causes of death of the (X)?", "which (X) is the cause of death of (X)?", "which (X) is the cause of death of the (X)?", "which (X) was the cause of death of (X)?", "which (X) was the cause of death of the (X)?", "which (X) were the causes of death of (X)?", "which (X) were the causes of death of the (X)?", "Who are the causes of death of (X)?", "Who are the causes of death of the (X)?", "Who is the cause of death of (X)?", "Who is the cause of death of the (X)?", "Who was the cause of death of (X)?", "Who was the cause of death of the (X)?", "Who were the causes of death of (X)?", "Who were the causes of death of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "478",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of (X)?", "the causes of death of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "479",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) diameters.", "Give me all diameters of (X).", "Give me the (X) diameter.", "Give me the (X) diameters.", "List all diameters of (X).", "List all the diameters of (X).", "show me all diameters of (X).", "What (X) are the diameters of the (X)?", "What (X) is (X) 's diameter?", "What (X) is the diameter of (X)?", "What (X) is the diameter of the (X)?", "What (X) was (X) 's diameter?", "What (X) was the diameter of (X)?", "What (X) was the diameter of the (X)?", "What (X) were the diameters of the (X)?", "What are the diameters of (X)?", "What are the diameters of the (X)?", "What is the diameter of (X)?", "What is the diameter of the (X)?", "What was the diameter of (X)?", "What was the diameter of the (X)?", "What were the diameters of (X)?", "What were the diameters of the (X)?", "which (X) are the diameters of (X)?", "which (X) are the diameters of the (X)?", "which (X) is the diameter of (X)?", "which (X) is the diameter of the (X)?", "which (X) was the diameter of (X)?", "which (X) was the diameter of the (X)?", "which (X) were the diameters of (X)?", "which (X) were the diameters of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/diameter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "483",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the diameter of (X)?", "the diameters of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/diameter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "484",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) successor.", "List all the persons with successor of (X).", "which (X) is the successor of (X)?", "which (X) is the successor of the (X)?", "which (X) was the successor of (X)?", "which (X) was the successor of the (X)?", "Who is (X) 's successor?", "Who is the successor of (X)?", "Who is the successor of the (X)?", "Who was (X) 's successor?", "Who was the successor of (X)?", "Who was the successor of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "487",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "488",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) vice president.", "Give me all vice president of (X).", "Give me the (X) vice president.", "List all the politicians with vice president of (X).", "List all the vice president of (X).", "List all vice president of (X).", "show me all vice president of (X).", "which (X) are the vice president of (X)?", "which (X) are the vice president of the (X)?", "which (X) is the vice president of (X)?", "which (X) is the vice president of the (X)?", "which (X) was the vice president of (X)?", "which (X) was the vice president of the (X)?", "which (X) were the vice president of (X)?", "which (X) were the vice president of the (X)?", "Who are the vice president of (X)?", "Who are the vice president of the (X)?", "Who is (X) 's vice president?", "Who is the vice president of (X)?", "Who is the vice president of the (X)?", "Who was (X) 's vice president?", "Who was the vice president of (X)?", "Who was the vice president of the (X)?", "Who were the vice president of (X)?", "Who were the vice president of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "492",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "493",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) governors.", "Give me all governors of (X).", "Give me the (X) governor.", "Give me the (X) governors.", "List all governors of (X).", "List all the governors of (X).", "List all the persons with governor of (X).", "show me all governors of (X).", "which (X) are the governors of (X)?", "which (X) are the governors of the (X)?", "which (X) is the governor of (X)?", "which (X) is the governor of the (X)?", "which (X) was the governor of (X)?", "which (X) was the governor of the (X)?", "which (X) were the governors of (X)?", "which (X) were the governors of the (X)?", "Who are the governors of (X)?", "Who are the governors of the (X)?", "Who is (X) 's governor?", "Who is the governor of (X)?", "Who is the governor of the (X)?", "Who was (X) 's governor?", "Who was the governor of (X)?", "Who was the governor of the (X)?", "Who were the governors of (X)?", "Who were the governors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "497",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of (X)?", "the governors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "498",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) addresses.", "Give me all addresses of (X).", "Give me the (X) address.", "Give me the (X) addresses.", "List all addresses of (X).", "List all the addresses of (X).", "show me all addresses of (X).", "What (X) are the addresses of the (X)?", "What (X) is (X) 's address?", "What (X) is the address of (X)?", "What (X) is the address of the (X)?", "What (X) was (X) 's address?", "What (X) was the address of (X)?", "What (X) was the address of the (X)?", "What (X) were the addresses of the (X)?", "What are the addresses of (X)?", "What are the addresses of the (X)?", "What is the address of (X)?", "What is the address of the (X)?", "What was the address of (X)?", "What was the address of the (X)?", "What were the addresses of (X)?", "What were the addresses of the (X)?", "which (X) are the addresses of (X)?", "which (X) are the addresses of the (X)?", "which (X) is the address of (X)?", "which (X) is the address of the (X)?", "which (X) was the address of (X)?", "which (X) was the address of the (X)?", "which (X) were the addresses of (X)?", "which (X) were the addresses of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/address> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "502",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the address of (X)?", "the addresses of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/address> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "503",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) associated Musical Artists.", "Give me all associated Musical Artists of (X).", "Give me the (X) associated Musical Artist.", "Give me the (X) associated Musical Artists.", "List all associated Musical Artists of (X).", "List all the associated Musical Artists of (X).", "List all the places with associated Musical Artist of (X).", "show me all associated Musical Artists of (X).", "What (X) are the associated Musical Artists of the (X)?", "What (X) is (X) 's associated Musical Artist?", "What (X) is the associated Musical Artist of (X)?", "What (X) is the associated Musical Artist of the (X)?", "What (X) was (X) 's associated Musical Artist?", "What (X) was the associated Musical Artist of (X)?", "What (X) was the associated Musical Artist of the (X)?", "What (X) were the associated Musical Artists of the (X)?", "What are the associated Musical Artists of (X)?", "What are the associated Musical Artists of the (X)?", "What is the associated Musical Artist of (X)?", "What is the associated Musical Artist of the (X)?", "What was the associated Musical Artist of (X)?", "What was the associated Musical Artist of the (X)?", "What were the associated Musical Artists of (X)?", "What were the associated Musical Artists of the (X)?", "which (X) are the associated Musical Artists of (X)?", "which (X) are the associated Musical Artists of the (X)?", "which (X) is the associated Musical Artist of (X)?", "which (X) is the associated Musical Artist of the (X)?", "which (X) was the associated Musical Artist of (X)?", "which (X) was the associated Musical Artist of the (X)?", "which (X) were the associated Musical Artists of (X)?", "which (X) were the associated Musical Artists of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "507",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the associated Musical Artist of (X)?", "the associated Musical Artists of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "508",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) resting places.", "Give me all resting places of (X).", "Give me the (X) resting place.", "Give me the (X) resting places.", "List all resting places of (X).", "List all the countries with resting place of (X).", "List all the resting places of (X).", "show me all resting places of (X).", "What (X) are the resting places of the (X)?", "What (X) is (X) 's resting place?", "What (X) is the resting place of (X)?", "What (X) is the resting place of the (X)?", "What (X) was (X) 's resting place?", "What (X) was the resting place of (X)?", "What (X) was the resting place of the (X)?", "What (X) were the resting places of the (X)?", "which (X) are the resting places of (X)?", "which (X) are the resting places of the (X)?", "which (X) is the resting place of (X)?", "which (X) is the resting place of the (X)?", "which (X) was the resting place of (X)?", "which (X) was the resting place of the (X)?", "which (X) were the resting places of (X)?", "which (X) were the resting places of the (X)?", "Who are the resting places of (X)?", "Who are the resting places of the (X)?", "Who is the resting place of (X)?", "Who is the resting place of the (X)?", "Who was the resting place of (X)?", "Who was the resting place of the (X)?", "Who were the resting places of (X)?", "Who were the resting places of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "512",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of (X)?", "the resting places of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "513",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) nicknames.", "Give me all nicknames of (X).", "Give me the (X) nickname.", "Give me the (X) nicknames.", "List all nicknames of (X).", "List all the nicknames of (X).", "show me all nicknames of (X).", "What (X) are the nicknames of the (X)?", "What (X) is (X) 's nickname?", "What (X) is the nickname of (X)?", "What (X) is the nickname of the (X)?", "What (X) was (X) 's nickname?", "What (X) was the nickname of (X)?", "What (X) was the nickname of the (X)?", "What (X) were the nicknames of the (X)?", "What are the nicknames of (X)?", "What are the nicknames of the (X)?", "What is the nickname of (X)?", "What is the nickname of the (X)?", "What was the nickname of (X)?", "What was the nickname of the (X)?", "What were the nicknames of (X)?", "What were the nicknames of the (X)?", "which (X) are the nicknames of (X)?", "which (X) are the nicknames of the (X)?", "which (X) is the nickname of (X)?", "which (X) is the nickname of the (X)?", "which (X) was the nickname of (X)?", "which (X) was the nickname of the (X)?", "which (X) were the nicknames of (X)?", "which (X) were the nicknames of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "517",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nickname of (X)?", "the nicknames of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "518",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) height.", "What (X) is (X) 's height?", "What (X) is the height of (X)?", "What (X) is the height of the (X)?", "What (X) was (X) 's height?", "What (X) was the height of (X)?", "What (X) was the height of the (X)?", "which (X) is the height of (X)?", "which (X) is the height of the (X)?", "which (X) was the height of (X)?", "which (X) was the height of the (X)?", "Who is the height of (X)?", "Who is the height of the (X)?", "Who was the height of (X)?", "Who was the height of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "521",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the height of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "522",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons lead (X)?", "Give me all persons that led (X)?", "Give me all persons that led the (X)", "List all persons lead (X)?", "Who leads (X)?", "Who leads the (X)?", "Who leads the place (X)?", "Who leads the places (X)?", "Who led (X)?", "Who led the (X)?", "Who led the place (X)?", "Who led the places (X)?", "Who was the person that led (X)?", "which (X) did (X) lead?", "which (X) does (X) lead?", "which (X) lead (X)?", "which (X) leads (X)?", "which (X) led (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "523",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places led by (X)?", "Give me all places that led (X)?", "List all places led by (X)?", "What (X) was led by (X)?", "What (X) were led by (X)?", "What kind of place did (X) lead?", "show me all place that (X) led", "show me the place that (X) led", "which (X) did (X) lead?", "which (X) lead the (X)?", "which (X) leads the (X)?", "which (X) was led by (X)?", "which (X) were led by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "524",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are led by (X)?", "How often did (X) lead?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "525",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce (X)?", "Give me all persons that produced (X)?", "Give me all persons that produced the (X)", "List all persons produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produced the film (X)?", "Who produced the films (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the film (X)?", "Who produces the films (X)?", "Who was the person that produced (X)?", "which (X) did (X) produce?", "which (X) does (X) produce?", "which (X) produce (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "526",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films produced by (X)?", "Give me all films that produced (X)?", "List all films produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of film did (X) produce?", "show me all film that (X) produced", "show me the film that (X) produced", "which (X) did (X) produce?", "which (X) produce the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "527",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "528",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents create (X)?", "Give me all agents that created (X)?", "Give me all agents that created the (X)", "List all agents create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the television show (X)?", "Who created the television shows (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the television show (X)?", "Who creates the television shows (X)?", "Who was the agent that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "529",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows created by (X)?", "Give me all television shows that created (X)?", "List all television shows created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of television show did (X) create?", "show me all television show that (X) created", "show me the television show that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "530",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "531",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded (X)?", "Who founds (X)?", "Who was the person that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (X) founded (X)?", "which (X) founds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "532",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (X) was founded by (X)?", "which (X) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "533",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are founded by (X)?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "534",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons direct (X)?", "Give me all persons that directed (X)?", "Give me all persons that directed the (X)", "List all persons direct (X)?", "Who directed (X)?", "Who directed the (X)?", "Who directed the film (X)?", "Who directed the films (X)?", "Who directs (X)?", "Who directs the (X)?", "Who directs the film (X)?", "Who directs the films (X)?", "Who was the person that directed (X)?", "which (X) did (X) direct?", "which (X) direct (X)?", "which (X) directed (X)?", "which (X) directs (X)?", "which (X) does (X) direct?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "535",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films directed by (X)?", "Give me all films that directed (X)?", "List all films directed by (X)?", "What (X) was directed by (X)?", "What (X) were directed by (X)?", "What kind of film did (X) direct?", "show me all film that (X) directed", "show me the film that (X) directed", "which (X) did (X) direct?", "which (X) direct the (X)?", "which (X) directs the (X)?", "which (X) was directed by (X)?", "which (X) were directed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "536",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are directed by (X)?", "How often did (X) direct?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "537",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons discover (X)?", "Give me all persons that discovered (X)?", "Give me all persons that discovered the (X)", "List all persons discover (X)?", "Who discovered (X)?", "Who discovered the (X)?", "Who discovered the place (X)?", "Who discovered the places (X)?", "Who discovers (X)?", "Who discovers the (X)?", "Who discovers the place (X)?", "Who discovers the places (X)?", "Who was the person that discovered (X)?", "which (X) did (X) discover?", "which (X) discover (X)?", "which (X) discovered (X)?", "which (X) discovers (X)?", "which (X) does (X) discover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "538",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places discovered by (X)?", "Give me all places that discovered (X)?", "List all places discovered by (X)?", "What (X) was discovered by (X)?", "What (X) were discovered by (X)?", "What kind of place did (X) discover?", "show me all place that (X) discovered", "show me the place that (X) discovered", "which (X) did (X) discover?", "which (X) discover the (X)?", "which (X) discovers the (X)?", "which (X) was discovered by (X)?", "which (X) were discovered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "539",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are discovered by (X)?", "How often did (X) discover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "540",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all airports serve (X)?", "Give me all airports that served the (X)", "What (X) served (X)?", "What (X) served the (X)?", "What (X) served the airline (X)?", "What (X) served the airlines (X)?", "What (X) serves (X)?", "What (X) serves the (X)?", "What (X) serves the airline (X)?", "What (X) serves the airlines (X)?", "What (X) was the airport that served (X)?", "What served (X)?", "What serves (X)?", "which (X) did (X) serve?", "which (X) does (X) serve?", "which (X) serve (X)?", "which (X) served (X)?", "which (X) serves (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "541",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all airlines served by (X)?", "Give me all airlines that served (X)?", "List all airlines served by (X)?", "What (X) was served by (X)?", "What (X) were served by (X)?", "What kind of airline did (X) serve?", "show me all airline that (X) served", "show me the airline that (X) served", "which (X) did (X) serve?", "which (X) serve the (X)?", "which (X) serves the (X)?", "which (X) was served by (X)?", "which (X) were served by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "542",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are served by (X)?", "How often did (X) serve?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "543",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons program (X)?", "Give me all persons that programmed (X)?", "Give me all persons that programmed the (X)", "List all persons program (X)?", "Who programmed (X)?", "Who programmed the (X)?", "Who programmed the software (X)?", "Who programmed the softwares (X)?", "Who programs (X)?", "Who programs the (X)?", "Who programs the software (X)?", "Who programs the softwares (X)?", "Who was the person that programmed (X)?", "which (X) did (X) program?", "which (X) does (X) program?", "which (X) program (X)?", "which (X) programmed (X)?", "which (X) programs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/programmer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "544",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares programmed by (X)?", "Give me all softwares that programmed (X)?", "List all softwares programmed by (X)?", "What (X) was programmed by (X)?", "What (X) were programmed by (X)?", "What kind of software did (X) program?", "show me all software that (X) programmed", "show me the software that (X) programmed", "which (X) did (X) program?", "which (X) program the (X)?", "which (X) programs the (X)?", "which (X) was programmed by (X)?", "which (X) were programmed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "545",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are programmed by (X)?", "How often did (X) program?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "546",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors star (X)?", "Give me all actors that starred (X)?", "Give me all actors that starred the (X)", "List all actors star (X)?", "Who starred (X)?", "Who starred the (X)?", "Who starred the work (X)?", "Who starred the works (X)?", "Who stars (X)?", "Who stars the (X)?", "Who stars the work (X)?", "Who stars the works (X)?", "Who was the actor that starred (X)?", "which (X) did (X) star?", "which (X) does (X) star?", "which (X) star (X)?", "which (X) starred (X)?", "which (X) stars (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "547",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works starred by (X)?", "Give me all works that starred (X)?", "List all works starred by (X)?", "What (X) was starred by (X)?", "What (X) were starred by (X)?", "What kind of work did (X) star?", "show me all work that (X) starred", "show me the work that (X) starred", "which (X) did (X) star?", "which (X) star the (X)?", "which (X) stars the (X)?", "which (X) was starred by (X)?", "which (X) were starred by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "548",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are starred by (X)?", "How often did (X) star?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "549",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the television show (X)?", "Who writes the television shows (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the television show (X)?", "Who wrote the television shows (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "550",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows that wrote (X)?", "Give me all television shows wrote by (X)?", "List all television shows wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of television show did (X) write?", "show me all television show that (X) wrote", "show me the television show that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "551",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "552",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works precede (X)?", "Give me all works that preceded (X)?", "Give me all works that preceded the (X)", "List all works precede (X)?", "What (X) preceded (X)?", "What (X) preceded the (X)?", "What (X) preceded the work (X)?", "What (X) preceded the works (X)?", "What (X) precedes (X)?", "What (X) precedes the (X)?", "What (X) precedes the work (X)?", "What (X) precedes the works (X)?", "What (X) was the work that preceded (X)?", "which (X) did (X) precede?", "which (X) does (X) precede?", "which (X) precede (X)?", "which (X) preceded (X)?", "which (X) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "553",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works preceded by (X)?", "Give me all works that preceded (X)?", "List all works preceded by (X)?", "What (X) was preceded by (X)?", "What (X) were preceded by (X)?", "What kind of work did (X) precede?", "show me all work that (X) preceded", "show me the work that (X) preceded", "which (X) did (X) precede?", "which (X) precede the (X)?", "which (X) precedes the (X)?", "which (X) was preceded by (X)?", "which (X) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "554",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are preceded by (X)?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "555",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents publish (X)?", "Give me all agents that published (X)?", "Give me all agents that published the (X)", "List all agents publish (X)?", "Who published (X)?", "Who published the (X)?", "Who published the publisher (X)?", "Who published the publishers (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who publishes the publisher (X)?", "Who publishes the publishers (X)?", "Who was the agent that published (X)?", "which (X) did (X) publish?", "which (X) does (X) publish?", "which (X) publish (X)?", "which (X) published (X)?", "which (X) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "556",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all publishers published by (X)?", "Give me all publishers that published (X)?", "List all publishers published by (X)?", "What (X) was published by (X)?", "What (X) were published by (X)?", "What kind of publisher did (X) publish?", "show me all publisher that (X) published", "show me the publisher that (X) published", "which (X) did (X) publish?", "which (X) publish the (X)?", "which (X) publishes the (X)?", "which (X) was published by (X)?", "which (X) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "557",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are published by (X)?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "558",
    "lexicalEntryUri" : "http://localhost:8080#to_Win_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that won (X)?", "Give me all works that won the (X)", "Give me all works win (X)?", "List all works win (X)?", "What (X) was the work that won (X)?", "What (X) wins (X)?", "What (X) wins the (X)?", "What (X) wins the writer (X)?", "What (X) wins the writers (X)?", "What (X) won (X)?", "What (X) won the (X)?", "What (X) won the writer (X)?", "What (X) won the writers (X)?", "which (X) did (X) win?", "which (X) does (X) win?", "which (X) win (X)?", "which (X) wins (X)?", "which (X) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "559",
    "lexicalEntryUri" : "http://localhost:8080#to_Win_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Writer" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all writers that won (X)?", "Give me all writers won by (X)?", "List all writers won by (X)?", "Who kind of writer did (X) win?", "Who was won by (X)?", "Who were won by (X)?", "show me all writer that (X) won", "show me the writer that (X) won", "which (X) did (X) win?", "which (X) was won by (X)?", "which (X) were won by (X)?", "which (X) win the (X)?", "which (X) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "560",
    "lexicalEntryUri" : "http://localhost:8080#to_Win_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Writer" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are won by (X)?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "561",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons paint (X)?", "Give me all persons that painted (X)?", "Give me all persons that painted the (X)", "List all persons paint (X)?", "Who painted (X)?", "Who painted the (X)?", "Who painted the work (X)?", "Who painted the works (X)?", "Who paints (X)?", "Who paints the (X)?", "Who paints the work (X)?", "Who paints the works (X)?", "Who was the person that painted (X)?", "which (X) did (X) paint?", "which (X) does (X) paint?", "which (X) paint (X)?", "which (X) painted (X)?", "which (X) paints (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "562",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works painted by (X)?", "Give me all works that painted (X)?", "List all works painted by (X)?", "What (X) was painted by (X)?", "What (X) were painted by (X)?", "What kind of work did (X) paint?", "show me all work that (X) painted", "show me the work that (X) painted", "which (X) did (X) paint?", "which (X) paint the (X)?", "which (X) paints the (X)?", "which (X) was painted by (X)?", "which (X) were painted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "563",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are painted by (X)?", "How often did (X) paint?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "564",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents maintain (X)?", "Give me all agents that maintained (X)?", "Give me all agents that maintained the (X)", "List all agents maintain (X)?", "Who maintained (X)?", "Who maintained the (X)?", "Who maintained the ArchitecturalStructure (X)?", "Who maintained the ArchitecturalStructures (X)?", "Who maintains (X)?", "Who maintains the (X)?", "Who maintains the ArchitecturalStructure (X)?", "Who maintains the ArchitecturalStructures (X)?", "Who was the agent that maintained (X)?", "which (X) did (X) maintain?", "which (X) does (X) maintain?", "which (X) maintain (X)?", "which (X) maintained (X)?", "which (X) maintains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "565",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures maintained by (X)?", "Give me all ArchitecturalStructures that maintained (X)?", "List all ArchitecturalStructures maintained by (X)?", "What (X) was maintained by (X)?", "What (X) were maintained by (X)?", "What kind of ArchitecturalStructure did (X) maintain?", "show me all ArchitecturalStructure that (X) maintained", "show me the ArchitecturalStructure that (X) maintained", "which (X) did (X) maintain?", "which (X) maintain the (X)?", "which (X) maintains the (X)?", "which (X) was maintained by (X)?", "which (X) were maintained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "566",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are maintained by (X)?", "How often did (X) maintain?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "567",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who trained (X)?", "Who trains (X)?", "Who was the person that trained (X)?", "Whom is (X) train?", "Whom was (X) train?", "which (X) trained (X)?", "which (X) trains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/trainer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "568",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) trained by?", "Who was trained by (X)?", "Who were trained by (X)?", "Whom did (X) train?", "which (X) was trained by (X)?", "which (X) were trained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "569",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are trained by (X)?", "How often did (X) train?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "570",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EthnicGroup" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all countries live (X)?", "Give me all countries that lived (X)?", "Give me all countries that lived the (X)", "List all countries live (X)?", "What (X) lived (X)?", "What (X) lived the (X)?", "What (X) lived the ethnic group (X)?", "What (X) lived the ethnic groups (X)?", "What (X) lives (X)?", "What (X) lives the (X)?", "What (X) lives the ethnic group (X)?", "What (X) lives the ethnic groups (X)?", "What (X) was the country that lived (X)?", "which (X) did (X) live?", "which (X) does (X) live?", "which (X) live (X)?", "which (X) lived (X)?", "which (X) lives (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "571",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "EthnicGroup" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ethnic groups lived in (X)?", "Give me all ethnic groups that lived (X)?", "List all ethnic groups lived in (X)?", "What (X) was lived in (X)?", "What (X) were lived in (X)?", "What kind of ethnic group did (X) live?", "show me all ethnic group that (X) lived", "show me the ethnic group that (X) lived", "which (X) did (X) live?", "which (X) live the (X)?", "which (X) lives the (X)?", "which (X) was lived in (X)?", "which (X) were lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "572",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "EthnicGroup" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are lived in (X)?", "How often did (X) live?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "573",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents support (X)?", "Give me all agents that supported (X)?", "Give me all agents that supported the (X)", "List all agents support (X)?", "Who supported (X)?", "Who supported the (X)?", "Who supported the ideologies (X)?", "Who supported the ideology (X)?", "Who supports (X)?", "Who supports the (X)?", "Who supports the ideologies (X)?", "Who supports the ideology (X)?", "Who was the agent that supported (X)?", "which (X) did (X) support?", "which (X) does (X) support?", "which (X) support (X)?", "which (X) supported (X)?", "which (X) supports (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ideology> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "574",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ideologies supported by (X)?", "Give me all ideologies that supported (X)?", "List all ideologies supported by (X)?", "What (X) was supported by (X)?", "What (X) were supported by (X)?", "What kind of ideology did (X) support?", "show me all ideology that (X) supported", "show me the ideology that (X) supported", "which (X) did (X) support?", "which (X) support the (X)?", "which (X) supports the (X)?", "which (X) was supported by (X)?", "which (X) were supported by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "575",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are supported by (X)?", "How often did (X) support?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "576",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all awards that won (X)?", "Give me all awards that won the (X)", "Give me all awards win (X)?", "List all awards win (X)?", "What (X) was the award that won (X)?", "What (X) wins (X)?", "What (X) wins the (X)?", "What (X) wins the scientist (X)?", "What (X) wins the scientists (X)?", "What (X) won (X)?", "What (X) won the (X)?", "What (X) won the scientist (X)?", "What (X) won the scientists (X)?", "which (X) did (X) win?", "which (X) does (X) win?", "which (X) win (X)?", "which (X) wins (X)?", "which (X) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "577",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all scientists that won (X)?", "Give me all scientists won by (X)?", "List all scientists won by (X)?", "Who kind of scientist did (X) win?", "Who was won by (X)?", "Who were won by (X)?", "show me all scientist that (X) won", "show me the scientist that (X) won", "which (X) did (X) win?", "which (X) was won by (X)?", "which (X) were won by (X)?", "which (X) win the (X)?", "which (X) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "578",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are won by (X)?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "579",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents perform (X)?", "Give me all agents that performed (X)?", "Give me all agents that performed the (X)", "List all agents perform (X)?", "Who performed (X)?", "Who performed the (X)?", "Who performed the music (X)?", "Who performed the musics (X)?", "Who performs (X)?", "Who performs the (X)?", "Who performs the music (X)?", "Who performs the musics (X)?", "Who was the agent that performed (X)?", "which (X) did (X) perform?", "which (X) does (X) perform?", "which (X) perform (X)?", "which (X) performed (X)?", "which (X) performs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "580",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics performed by (X)?", "Give me all musics that performed (X)?", "List all musics performed by (X)?", "What (X) was performed by (X)?", "What (X) were performed by (X)?", "What kind of music did (X) perform?", "show me all music that (X) performed", "show me the music that (X) performed", "which (X) did (X) perform?", "which (X) perform the (X)?", "which (X) performs the (X)?", "which (X) was performed by (X)?", "which (X) were performed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "581",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are performed by (X)?", "How often did (X) perform?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "582",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons direct (X)?", "Give me all persons that directed (X)?", "Give me all persons that directed the (X)", "List all persons direct (X)?", "Who directed (X)?", "Who directed the (X)?", "Who directed the software (X)?", "Who directed the softwares (X)?", "Who directs (X)?", "Who directs the (X)?", "Who directs the software (X)?", "Who directs the softwares (X)?", "Who was the person that directed (X)?", "which (X) did (X) direct?", "which (X) direct (X)?", "which (X) directed (X)?", "which (X) directs (X)?", "which (X) does (X) direct?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "583",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares directed by (X)?", "Give me all softwares that directed (X)?", "List all softwares directed by (X)?", "What (X) was directed by (X)?", "What (X) were directed by (X)?", "What kind of software did (X) direct?", "show me all software that (X) directed", "show me the software that (X) directed", "which (X) did (X) direct?", "which (X) direct the (X)?", "which (X) directs the (X)?", "which (X) was directed by (X)?", "which (X) were directed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "584",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are directed by (X)?", "How often did (X) direct?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "585",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all museums exhibit (X)?", "Give me all museums that exhibited (X)?", "Give me all museums that exhibited the (X)", "List all museums exhibit (X)?", "What (X) exhibited (X)?", "What (X) exhibited the (X)?", "What (X) exhibited the artwork (X)?", "What (X) exhibited the artworks (X)?", "What (X) exhibits (X)?", "What (X) exhibits the (X)?", "What (X) exhibits the artwork (X)?", "What (X) exhibits the artworks (X)?", "What (X) was the museum that exhibited (X)?", "which (X) did (X) exhibit?", "which (X) does (X) exhibit?", "which (X) exhibit (X)?", "which (X) exhibited (X)?", "which (X) exhibits (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/museum> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "586",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all artworks exhibited by (X)?", "Give me all artworks that exhibited (X)?", "List all artworks exhibited by (X)?", "What (X) was exhibited by (X)?", "What (X) were exhibited by (X)?", "What kind of artwork did (X) exhibit?", "show me all artwork that (X) exhibited", "show me the artwork that (X) exhibited", "which (X) did (X) exhibit?", "which (X) exhibit the (X)?", "which (X) exhibits the (X)?", "which (X) was exhibited by (X)?", "which (X) were exhibited by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "587",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are exhibited by (X)?", "How often did (X) exhibit?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "588",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all populated places speak (X)?", "Give me all populated places that spoke (X)?", "Give me all populated places that spoke the (X)", "List all populated places speak (X)?", "What (X) speaks (X)?", "What (X) speaks the (X)?", "What (X) speaks the language (X)?", "What (X) speaks the languages (X)?", "What (X) spoke (X)?", "What (X) spoke the (X)?", "What (X) spoke the language (X)?", "What (X) spoke the languages (X)?", "What (X) was the populated place that spoke (X)?", "which (X) did (X) speak?", "which (X) does (X) speak?", "which (X) speak (X)?", "which (X) speaks (X)?", "which (X) spoke (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "589",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken by (X)?", "Give me all languages that spoke (X)?", "List all languages spoken by (X)?", "What (X) was spoken by (X)?", "What (X) were spoken by (X)?", "What kind of language did (X) speak?", "show me all language that (X) spoke", "show me the language that (X) spoke", "which (X) did (X) speak?", "which (X) speak the (X)?", "which (X) speaks the (X)?", "which (X) was spoken by (X)?", "which (X) were spoken by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "590",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are spoken by (X)?", "How often did (X) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "591",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all populated places speak (X)?", "Give me all populated places that spoke (X)?", "Give me all populated places that spoke the (X)", "List all populated places speak (X)?", "What (X) speaks (X)?", "What (X) speaks the (X)?", "What (X) speaks the language (X)?", "What (X) speaks the languages (X)?", "What (X) spoke (X)?", "What (X) spoke the (X)?", "What (X) spoke the language (X)?", "What (X) spoke the languages (X)?", "What (X) was the populated place that spoke (X)?", "which (X) did (X) speak?", "which (X) does (X) speak?", "which (X) speak (X)?", "which (X) speaks (X)?", "which (X) spoke (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "592",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken by (X)?", "Give me all languages that spoke (X)?", "List all languages spoken by (X)?", "What (X) was spoken by (X)?", "What (X) were spoken by (X)?", "What kind of language did (X) speak?", "show me all language that (X) spoke", "show me the language that (X) spoke", "which (X) did (X) speak?", "which (X) speak the (X)?", "which (X) speaks the (X)?", "which (X) was spoken by (X)?", "which (X) were spoken by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "593",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are spoken by (X)?", "How often did (X) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "594",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons breed (X)?", "Give me all persons that bred (X)?", "Give me all persons that bred the (X)", "List all persons breed (X)?", "Who bred (X)?", "Who bred the (X)?", "Who bred the animal (X)?", "Who bred the animals (X)?", "Who breeds (X)?", "Who breeds the (X)?", "Who breeds the animal (X)?", "Who breeds the animals (X)?", "Who was the person that bred (X)?", "which (X) bred (X)?", "which (X) breed (X)?", "which (X) breeds (X)?", "which (X) did (X) breed?", "which (X) does (X) breed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/breeder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "595",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all animals bred by (X)?", "Give me all animals that bred (X)?", "List all animals bred by (X)?", "What (X) was bred by (X)?", "What (X) were bred by (X)?", "What kind of animal did (X) breed?", "show me all animal that (X) bred", "show me the animal that (X) bred", "which (X) breed the (X)?", "which (X) breeds the (X)?", "which (X) did (X) breed?", "which (X) was bred by (X)?", "which (X) were bred by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "596",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are bred by (X)?", "How often did (X) breed?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "597",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares develop (X)?", "Give me all softwares that developed (X)?", "Give me all softwares that developed the (X)", "List all softwares develop (X)?", "What (X) developed (X)?", "What (X) developed the (X)?", "What (X) developed the company (X)?", "What (X) develops (X)?", "What (X) develops the (X)?", "What (X) develops the company (X)?", "What (X) was the software that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "598",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all company developed by (X)?", "Give me all company that developed (X)?", "List all company developed by (X)?", "Who kind of company did (X) develop?", "Who was developed by (X)?", "Who were developed by (X)?", "show me all company that (X) developed", "show me the company that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "599",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "600",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents develop (X)?", "Give me all agents that developed (X)?", "Give me all agents that developed the (X)", "List all agents develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who developed the video game (X)?", "Who developed the video games (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the video game (X)?", "Who develops the video games (X)?", "Who was the agent that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "601",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games developed by (X)?", "Give me all video games that developed (X)?", "List all video games developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of video game did (X) develop?", "show me all video game that (X) developed", "show me the video game that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "602",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "603",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded (X)?", "Who precedes (X)?", "Who was the politician that preceded (X)?", "Whom is (X) precede?", "Whom was (X) precede?", "which (X) preceded (X)?", "which (X) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/after> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "604",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) preceded by?", "Who was preceded by (X)?", "Who were preceded by (X)?", "Whom did (X) precede?", "which (X) was preceded by (X)?", "which (X) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "605",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are preceded by (X)?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "606",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all softwares develop (X)?", "Give me all softwares that developed the (X)", "Who developed (X)?", "Who developed the (X)?", "Who developed the company (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the company (X)?", "Who was the software that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "607",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company developed by (X)?", "Give me all company that developed (X)?", "List all company developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of company did (X) develop?", "show me all company that (X) developed", "show me the company that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "608",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "609",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all softwares develop (X)?", "Give me all softwares that developed the (X)", "Who developed (X)?", "Who developed the (X)?", "Who developed the company (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the company (X)?", "Who was the software that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "610",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company developed by (X)?", "Give me all company that developed (X)?", "List all company developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of company did (X) develop?", "show me all company that (X) developed", "show me the company that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "611",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "612",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors play (X)?", "Give me all actors that played (X)?", "Give me all actors that played the (X)", "List all actors play (X)?", "Who played (X)?", "Who played the (X)?", "Who played the work (X)?", "Who played the works (X)?", "Who plays (X)?", "Who plays the (X)?", "Who plays the work (X)?", "Who plays the works (X)?", "Who was the actor that played (X)?", "which (X) did (X) play?", "which (X) does (X) play?", "which (X) play (X)?", "which (X) played (X)?", "which (X) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "613",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works played by (X)?", "Give me all works that played (X)?", "List all works played by (X)?", "What (X) was played by (X)?", "What (X) were played by (X)?", "What kind of work did (X) play?", "show me all work that (X) played", "show me the work that (X) played", "which (X) did (X) play?", "which (X) play the (X)?", "which (X) plays the (X)?", "which (X) was played by (X)?", "which (X) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "614",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are played by (X)?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "615",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents own (X)?", "Give me all agents that owned (X)?", "Give me all agents that owned the (X)", "List all agents own (X)?", "Who owned (X)?", "Who owned the (X)?", "Who owned the animal (X)?", "Who owned the animals (X)?", "Who owns (X)?", "Who owns the (X)?", "Who owns the animal (X)?", "Who owns the animals (X)?", "Who was the agent that owned (X)?", "which (X) did (X) own?", "which (X) does (X) own?", "which (X) own (X)?", "which (X) owned (X)?", "which (X) owns (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "616",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all animals owned by (X)?", "Give me all animals that owned (X)?", "List all animals owned by (X)?", "What (X) was owned by (X)?", "What (X) were owned by (X)?", "What kind of animal did (X) own?", "show me all animal that (X) owned", "show me the animal that (X) owned", "which (X) did (X) own?", "which (X) own the (X)?", "which (X) owns the (X)?", "which (X) was owned by (X)?", "which (X) were owned by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "617",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are owned by (X)?", "How often did (X) own?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "618",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all works marry to (X)?", "Give me all works that produced the (X)", "Who produced (X)?", "Who produced the (X)?", "Who produced the company (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the company (X)?", "Who was the work that produced (X)?", "which (X) did (X) marry to?", "which (X) does (X) marry to?", "which (X) marry to (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "619",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company produced by (X)?", "Give me all company that produced (X)?", "List all company produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of company did (X) marry to?", "show me all company that (X) produced", "show me the company that (X) produced", "which (X) did (X) marry to?", "which (X) marry to the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "620",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) marry to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "621",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all academic journals cover (X)?", "Give me all academic journals that covered (X)?", "Give me all academic journals that covered the (X)", "List all academic journals cover (X)?", "What (X) covered (X)?", "What (X) covered the (X)?", "What (X) covers (X)?", "What (X) covers the (X)?", "What (X) was the academic journal that covered (X)?", "which (X) cover (X)?", "which (X) covered (X)?", "which (X) covers (X)?", "which (X) did (X) cover?", "which (X) does (X) cover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "622",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (X) was covered by (X)?", "What (X) were covered by (X)?", "which (X) cover the (X)?", "which (X) covers the (X)?", "which (X) did (X) cover?", "which (X) was covered by (X)?", "which (X) were covered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "623",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are covered by (X)?", "How often did (X) cover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "624",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all awards that won (X)?", "Give me all awards that won the (X)", "Give me all awards win (X)?", "List all awards win (X)?", "What (X) was the award that won (X)?", "What (X) wins (X)?", "What (X) wins the (X)?", "What (X) wins the person (X)?", "What (X) wins the persons (X)?", "What (X) won (X)?", "What (X) won the (X)?", "What (X) won the person (X)?", "What (X) won the persons (X)?", "which (X) did (X) win?", "which (X) does (X) win?", "which (X) win (X)?", "which (X) wins (X)?", "which (X) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "625",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that won (X)?", "Give me all persons won by (X)?", "List all persons won by (X)?", "Who kind of person did (X) win?", "Who was won by (X)?", "Who were won by (X)?", "show me all person that (X) won", "show me the person that (X) won", "which (X) did (X) win?", "which (X) was won by (X)?", "which (X) were won by (X)?", "which (X) win the (X)?", "which (X) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "626",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are won by (X)?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "627",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations control (X)?", "Give me all organizations that controlled (X)?", "Give me all organizations that controlled the (X)", "List all organizations control (X)?", "Who controlled (X)?", "Who controlled the (X)?", "Who controlled the airport (X)?", "Who controlled the airports (X)?", "Who controls (X)?", "Who controls the (X)?", "Who controls the airport (X)?", "Who controls the airports (X)?", "Who was the organization that controlled (X)?", "which (X) control (X)?", "which (X) controlled (X)?", "which (X) controls (X)?", "which (X) did (X) control?", "which (X) does (X) control?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/controlledby> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "628",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports controlled by (X)?", "Give me all airports that controlled (X)?", "List all airports controlled by (X)?", "What (X) was controlled by (X)?", "What (X) were controlled by (X)?", "What kind of airport did (X) control?", "show me all airport that (X) controlled", "show me the airport that (X) controlled", "which (X) control the (X)?", "which (X) controls the (X)?", "which (X) did (X) control?", "which (X) was controlled by (X)?", "which (X) were controlled by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "629",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are controlled by (X)?", "How often did (X) control?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "630",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who married (X)?", "Who marries (X)?", "Who was the person that married (X)?", "Whom is (X) marry?", "Whom was (X) marry?", "which (X) married (X)?", "which (X) marries (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "631",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) married to?", "Who was married to (X)?", "Who were married to (X)?", "Whom did (X) marry?", "which (X) was married to (X)?", "which (X) were married to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "632",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are married to (X)?", "How often did (X) marry?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "633",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the album (X)?", "Who writes the albums (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the album (X)?", "Who wrote the albums (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/allLyrics> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "634",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums that wrote (X)?", "Give me all albums wrote by (X)?", "List all albums wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of album did (X) write?", "show me all album that (X) wrote", "show me the album that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "635",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "636",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all countries speak (X)?", "Give me all countries that spoke (X)?", "Give me all countries that spoke the (X)", "List all countries speak (X)?", "What (X) speaks (X)?", "What (X) speaks the (X)?", "What (X) speaks the language (X)?", "What (X) speaks the languages (X)?", "What (X) spoke (X)?", "What (X) spoke the (X)?", "What (X) spoke the language (X)?", "What (X) spoke the languages (X)?", "What (X) was the country that spoke (X)?", "which (X) did (X) speak?", "which (X) does (X) speak?", "which (X) speak (X)?", "which (X) speaks (X)?", "which (X) spoke (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "637",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken in (X)?", "Give me all languages that spoke (X)?", "List all languages spoken in (X)?", "What (X) was spoken in (X)?", "What (X) were spoken in (X)?", "What kind of language did (X) speak?", "show me all language that (X) spoke", "show me the language that (X) spoke", "which (X) did (X) speak?", "which (X) speak the (X)?", "which (X) speaks the (X)?", "which (X) was spoken in (X)?", "which (X) were spoken in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "638",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are spoken in (X)?", "How often did (X) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "639",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons illustrate (X)?", "Give me all persons that illustrated (X)?", "Give me all persons that illustrated the (X)", "List all persons illustrate (X)?", "Who illustrated (X)?", "Who illustrated the (X)?", "Who illustrated the written work (X)?", "Who illustrates (X)?", "Who illustrates the (X)?", "Who illustrates the written work (X)?", "Who was the person that illustrated (X)?", "which (X) did (X) illustrate?", "which (X) does (X) illustrate?", "which (X) illustrate (X)?", "which (X) illustrated (X)?", "which (X) illustrates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "640",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all written work illustrated by (X)?", "Give me all written work that illustrated (X)?", "List all written work illustrated by (X)?", "What (X) was illustrated by (X)?", "What (X) were illustrated by (X)?", "What kind of written work did (X) illustrate?", "show me all written work that (X) illustrated", "show me the written work that (X) illustrated", "which (X) did (X) illustrate?", "which (X) illustrate the (X)?", "which (X) illustrates the (X)?", "which (X) was illustrated by (X)?", "which (X) were illustrated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "641",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are illustrated by (X)?", "How often did (X) illustrate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "642",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all broadcasters air (X)?", "Give me all broadcasters that aired (X)?", "Give me all broadcasters that aired the (X)", "List all broadcasters air (X)?", "What (X) aired (X)?", "What (X) aired the (X)?", "What (X) aired the film (X)?", "What (X) aired the films (X)?", "What (X) airs (X)?", "What (X) airs the (X)?", "What (X) airs the film (X)?", "What (X) airs the films (X)?", "What (X) was the broadcaster that aired (X)?", "which (X) air (X)?", "which (X) aired (X)?", "which (X) airs (X)?", "which (X) did (X) air?", "which (X) does (X) air?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/network> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "643",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films aired by (X)?", "Give me all films that aired (X)?", "List all films aired by (X)?", "What (X) was aired by (X)?", "What (X) were aired by (X)?", "What kind of film did (X) air?", "show me all film that (X) aired", "show me the film that (X) aired", "which (X) air the (X)?", "which (X) airs the (X)?", "which (X) did (X) air?", "which (X) was aired by (X)?", "which (X) were aired by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "644",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are aired by (X)?", "How often did (X) air?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "645",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works follow (X)?", "Give me all works that followed (X)?", "Give me all works that followed the (X)", "List all works follow (X)?", "What (X) followed (X)?", "What (X) followed the (X)?", "What (X) followed the work (X)?", "What (X) followed the works (X)?", "What (X) follows (X)?", "What (X) follows the (X)?", "What (X) follows the work (X)?", "What (X) follows the works (X)?", "What (X) was the work that followed (X)?", "which (X) did (X) follow?", "which (X) does (X) follow?", "which (X) follow (X)?", "which (X) followed (X)?", "which (X) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "646",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works followed by (X)?", "Give me all works that followed (X)?", "List all works followed by (X)?", "What (X) was followed by (X)?", "What (X) were followed by (X)?", "What kind of work did (X) follow?", "show me all work that (X) followed", "show me the work that (X) followed", "which (X) did (X) follow?", "which (X) follow the (X)?", "which (X) follows the (X)?", "which (X) was followed by (X)?", "which (X) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "647",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are followed by (X)?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "648",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums follow (X)?", "Give me all albums that followed (X)?", "Give me all albums that followed the (X)", "List all albums follow (X)?", "What (X) followed (X)?", "What (X) followed the (X)?", "What (X) followed the album (X)?", "What (X) followed the albums (X)?", "What (X) follows (X)?", "What (X) follows the (X)?", "What (X) follows the album (X)?", "What (X) follows the albums (X)?", "What (X) was the album that followed (X)?", "which (X) did (X) follow?", "which (X) does (X) follow?", "which (X) follow (X)?", "which (X) followed (X)?", "which (X) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nextTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "649",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums followed by (X)?", "Give me all albums that followed (X)?", "List all albums followed by (X)?", "What (X) was followed by (X)?", "What (X) were followed by (X)?", "What kind of album did (X) follow?", "show me all album that (X) followed", "show me the album that (X) followed", "which (X) did (X) follow?", "which (X) follow the (X)?", "which (X) follows the (X)?", "which (X) was followed by (X)?", "which (X) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "650",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are followed by (X)?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "651",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons design (X)?", "Give me all persons that designed (X)?", "Give me all persons that designed the (X)", "List all persons design (X)?", "Who designed (X)?", "Who designed the (X)?", "Who designed the software (X)?", "Who designed the softwares (X)?", "Who designs (X)?", "Who designs the (X)?", "Who designs the software (X)?", "Who designs the softwares (X)?", "Who was the person that designed (X)?", "which (X) design (X)?", "which (X) designed (X)?", "which (X) designs (X)?", "which (X) did (X) design?", "which (X) does (X) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "652",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares designed by (X)?", "Give me all softwares that designed (X)?", "List all softwares designed by (X)?", "What (X) was designed by (X)?", "What (X) were designed by (X)?", "What kind of software did (X) design?", "show me all software that (X) designed", "show me the software that (X) designed", "which (X) design the (X)?", "which (X) designs the (X)?", "which (X) did (X) design?", "which (X) was designed by (X)?", "which (X) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "653",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are designed by (X)?", "How often did (X) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "654",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "How much did (X) cost?", "How much does (X) cost?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "655",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "which (X) costed by (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "656",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are costed by (X)?", "How often did (X) cost?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "657",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons design (X)?", "Give me all persons that designed (X)?", "Give me all persons that designed the (X)", "List all persons design (X)?", "Who designed (X)?", "Who designed the (X)?", "Who designed the Building (X)?", "Who designed the dbo:Buildings (X)?", "Who designs (X)?", "Who designs the (X)?", "Who designs the Building (X)?", "Who designs the dbo:Buildings (X)?", "Who was the person that designed (X)?", "which (X) design (X)?", "which (X) designed (X)?", "which (X) designs (X)?", "which (X) did (X) design?", "which (X) does (X) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "658",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all dbo:Buildings designed by (X)?", "Give me all dbo:Buildings that designed (X)?", "List all dbo:Buildings designed by (X)?", "What (X) was designed by (X)?", "What (X) were designed by (X)?", "What kind of Building did (X) design?", "show me all Building that (X) designed", "show me the Building that (X) designed", "which (X) design the (X)?", "which (X) designs the (X)?", "which (X) did (X) design?", "which (X) was designed by (X)?", "which (X) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "659",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are designed by (X)?", "How often did (X) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "660",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the work (X)?", "Who writes the works (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the work (X)?", "Who wrote the works (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "661",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that wrote (X)?", "Give me all works wrote by (X)?", "List all works wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of work did (X) write?", "show me all work that (X) wrote", "show me the work that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "662",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "663",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded (X)?", "Who founds (X)?", "Who was the pope that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (X) founded (X)?", "which (X) founds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "664",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (X) was founded by (X)?", "which (X) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "665",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are founded by (X)?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "666",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents develop (X)?", "Give me all agents that developed (X)?", "Give me all agents that developed the (X)", "List all agents develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who developed the video game (X)?", "Who developed the video games (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the video game (X)?", "Who develops the video games (X)?", "Who was the agent that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "667",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games developed by (X)?", "Give me all video games that developed (X)?", "List all video games developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of video game did (X) develop?", "show me all video game that (X) developed", "show me the video game that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "668",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "669",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents create (X)?", "Give me all agents that created (X)?", "Give me all agents that created the (X)", "List all agents create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the television show (X)?", "Who created the television shows (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the television show (X)?", "Who creates the television shows (X)?", "Who was the agent that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "670",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows created by (X)?", "Give me all television shows that created (X)?", "List all television shows created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of television show did (X) create?", "show me all television show that (X) created", "show me the television show that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "671",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "672",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create (X)?", "Give me all persons that created (X)?", "Give me all persons that created the (X)", "List all persons create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the book (X)?", "Who created the books (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the book (X)?", "Who creates the books (X)?", "Who was the person that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "673",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books created by (X)?", "Give me all books that created (X)?", "List all books created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of book did (X) create?", "show me all book that (X) created", "show me the book that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "674",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "675",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (X) called (X)?", "What (X) called the (X)?", "What (X) called the person (X)?", "What (X) called the persons (X)?", "What (X) calls (X)?", "What (X) calls the (X)?", "What (X) calls the person (X)?", "What (X) calls the persons (X)?", "which (X) call (X)?", "which (X) called (X)?", "which (X) calls (X)?", "which (X) did (X) call?", "which (X) does (X) call?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "676",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons called  (X)?", "Give me all persons that called (X)?", "List all persons called  (X)?", "Who kind of person did (X) call?", "Who was called  (X)?", "Who were called  (X)?", "show me all person that (X) called", "show me the person that (X) called", "which (X) call the (X)?", "which (X) calls the (X)?", "which (X) did (X) call?", "which (X) was called  (X)?", "which (X) were called  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "677",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are called  (X)?", "How often did (X) call?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "678",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents own (X)?", "Give me all agents that owned (X)?", "Give me all agents that owned the (X)", "List all agents own (X)?", "Who owned (X)?", "Who owned the (X)?", "Who owned the airport (X)?", "Who owned the airports (X)?", "Who owns (X)?", "Who owns the (X)?", "Who owns the airport (X)?", "Who owns the airports (X)?", "Who was the agent that owned (X)?", "which (X) did (X) own?", "which (X) does (X) own?", "which (X) own (X)?", "which (X) owned (X)?", "which (X) owns (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "679",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports owned by (X)?", "Give me all airports that owned (X)?", "List all airports owned by (X)?", "What (X) was owned by (X)?", "What (X) were owned by (X)?", "What kind of airport did (X) own?", "show me all airport that (X) owned", "show me the airport that (X) owned", "which (X) did (X) own?", "which (X) own the (X)?", "which (X) owns the (X)?", "which (X) was owned by (X)?", "which (X) were owned by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "680",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are owned by (X)?", "How often did (X) own?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "681",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded (X)?", "Who precedes (X)?", "Who was the politician that preceded (X)?", "Whom is (X) precede?", "Whom was (X) precede?", "which (X) preceded (X)?", "which (X) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/predecessor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "682",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) preceded by?", "Who was preceded by (X)?", "Who were preceded by (X)?", "Whom did (X) precede?", "which (X) was preceded by (X)?", "which (X) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "683",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are preceded by (X)?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "684",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that won (X)?", "Give me all persons that won the (X)", "Give me all persons win (X)?", "List all persons win (X)?", "Who was the person that won (X)?", "Who wins (X)?", "Who wins the (X)?", "Who wins the work (X)?", "Who wins the works (X)?", "Who won (X)?", "Who won the (X)?", "Who won the work (X)?", "Who won the works (X)?", "which (X) did (X) win?", "which (X) does (X) win?", "which (X) win (X)?", "which (X) wins (X)?", "which (X) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "685",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that won (X)?", "Give me all works won by (X)?", "List all works won by (X)?", "What (X) was won by (X)?", "What (X) were won by (X)?", "What kind of work did (X) win?", "show me all work that (X) won", "show me the work that (X) won", "which (X) did (X) win?", "which (X) was won by (X)?", "which (X) were won by (X)?", "which (X) win the (X)?", "which (X) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "686",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are won by (X)?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "687",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all states border (X)?", "Give me all states that bordered (X)?", "Give me all states that bordered the (X)", "List all states border (X)?", "What (X) bordered (X)?", "What (X) bordered the (X)?", "What (X) bordered the state (X)?", "What (X) bordered the states (X)?", "What (X) borders (X)?", "What (X) borders the (X)?", "What (X) borders the state (X)?", "What (X) borders the states (X)?", "What (X) was the state that bordered (X)?", "which (X) border (X)?", "which (X) bordered (X)?", "which (X) borders (X)?", "which (X) did (X) border?", "which (X) does (X) border?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "688",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all states bordered by (X)?", "Give me all states that bordered (X)?", "List all states bordered by (X)?", "What (X) was bordered by (X)?", "What (X) were bordered by (X)?", "What kind of state did (X) border?", "show me all state that (X) bordered", "show me the state that (X) bordered", "which (X) border the (X)?", "which (X) borders the (X)?", "which (X) did (X) border?", "which (X) was bordered by (X)?", "which (X) were bordered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "689",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are bordered by (X)?", "How often did (X) border?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "690",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded (X)?", "Who founds (X)?", "Who was the pope that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (X) founded (X)?", "which (X) founds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "691",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (X) was founded by (X)?", "which (X) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "692",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are founded by (X)?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "693",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons play (X)?", "Give me all persons that played (X)?", "Give me all persons that played the (X)", "List all persons play (X)?", "Who played (X)?", "Who played the (X)?", "Who played the film (X)?", "Who played the films (X)?", "Who plays (X)?", "Who plays the (X)?", "Who plays the film (X)?", "Who plays the films (X)?", "Who was the person that played (X)?", "which (X) did (X) play?", "which (X) does (X) play?", "which (X) play (X)?", "which (X) played (X)?", "which (X) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "694",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films played by (X)?", "Give me all films that played (X)?", "List all films played by (X)?", "What (X) was played by (X)?", "What (X) were played by (X)?", "What kind of film did (X) play?", "show me all film that (X) played", "show me the film that (X) played", "which (X) did (X) play?", "which (X) play the (X)?", "which (X) plays the (X)?", "which (X) was played by (X)?", "which (X) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "695",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are played by (X)?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "696",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who played (X)?", "Who plays (X)?", "Who was the person that played (X)?", "Whom is (X) play?", "Whom was (X) play?", "which (X) played (X)?", "which (X) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "697",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) played by?", "Who was played by (X)?", "Who were played by (X)?", "Whom did (X) play?", "which (X) was played by (X)?", "which (X) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "698",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are played by (X)?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "699",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the music (X)?", "Who writes the musics (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the music (X)?", "Who wrote the musics (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "700",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics that wrote (X)?", "Give me all musics wrote by (X)?", "List all musics wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of music did (X) write?", "show me all music that (X) wrote", "show me the music that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "701",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "702",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose (X)?", "Give me all persons that composed (X)?", "Give me all persons that composed the (X)", "List all persons compose (X)?", "Who composed (X)?", "Who composed the (X)?", "Who composed the work (X)?", "Who composed the works (X)?", "Who composes (X)?", "Who composes the (X)?", "Who composes the work (X)?", "Who composes the works (X)?", "Who was the person that composed (X)?", "which (X) compose (X)?", "which (X) composed (X)?", "which (X) composes (X)?", "which (X) did (X) compose?", "which (X) does (X) compose?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "703",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works composed by (X)?", "Give me all works that composed (X)?", "List all works composed by (X)?", "What (X) was composed by (X)?", "What (X) were composed by (X)?", "What kind of work did (X) compose?", "show me all work that (X) composed", "show me the work that (X) composed", "which (X) compose the (X)?", "which (X) composes the (X)?", "which (X) did (X) compose?", "which (X) was composed by (X)?", "which (X) were composed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "704",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are composed by (X)?", "How often did (X) compose?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "705",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents publish (X)?", "Give me all agents that published (X)?", "Give me all agents that published the (X)", "List all agents publish (X)?", "Who published (X)?", "Who published the (X)?", "Who published the work (X)?", "Who published the works (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who publishes the work (X)?", "Who publishes the works (X)?", "Who was the agent that published (X)?", "which (X) did (X) publish?", "which (X) does (X) publish?", "which (X) publish (X)?", "which (X) published (X)?", "which (X) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "706",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works published by (X)?", "Give me all works that published (X)?", "List all works published by (X)?", "What (X) was published by (X)?", "What (X) were published by (X)?", "What kind of work did (X) publish?", "show me all work that (X) published", "show me the work that (X) published", "which (X) did (X) publish?", "which (X) publish the (X)?", "which (X) publishes the (X)?", "which (X) was published by (X)?", "which (X) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "707",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are published by (X)?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "708",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all publishers publish (X)?", "Give me all publishers that published (X)?", "Give me all publishers that published the (X)", "List all publishers publish (X)?", "What (X) published (X)?", "What (X) published the (X)?", "What (X) published the book (X)?", "What (X) published the books (X)?", "What (X) publishes (X)?", "What (X) publishes the (X)?", "What (X) publishes the book (X)?", "What (X) publishes the books (X)?", "What (X) was the publisher that published (X)?", "which (X) did (X) publish?", "which (X) does (X) publish?", "which (X) publish (X)?", "which (X) published (X)?", "which (X) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "709",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books published by (X)?", "Give me all books that published (X)?", "List all books published by (X)?", "What (X) was published by (X)?", "What (X) were published by (X)?", "What kind of book did (X) publish?", "show me all book that (X) published", "show me the book that (X) published", "which (X) did (X) publish?", "which (X) publish the (X)?", "which (X) publishes the (X)?", "which (X) was published by (X)?", "which (X) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "710",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are published by (X)?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "711",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers drain (X)?", "Give me all rivers that drained (X)?", "Give me all rivers that drained the (X)", "List all rivers drain (X)?", "What (X) drained (X)?", "What (X) drained the (X)?", "What (X) drained the river (X)?", "What (X) drained the rivers (X)?", "What (X) drains (X)?", "What (X) drains the (X)?", "What (X) drains the river (X)?", "What (X) drains the rivers (X)?", "What (X) was the river that drained (X)?", "which (X) did (X) drain?", "which (X) does (X) drain?", "which (X) drain (X)?", "which (X) drained (X)?", "which (X) drains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/outflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "712",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers drained by (X)?", "Give me all rivers that drained (X)?", "List all rivers drained by (X)?", "What (X) was drained by (X)?", "What (X) were drained by (X)?", "What kind of river did (X) drain?", "show me all river that (X) drained", "show me the river that (X) drained", "which (X) did (X) drain?", "which (X) drain the (X)?", "which (X) drains the (X)?", "which (X) was drained by (X)?", "which (X) were drained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "713",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are drained by (X)?", "How often did (X) drain?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "714",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the song (X)?", "Who writes the songs (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the song (X)?", "Who wrote the songs (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "715",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all songs that wrote (X)?", "Give me all songs wrote by (X)?", "List all songs wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of song did (X) write?", "show me all song that (X) wrote", "show me the song that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "716",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "717",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who inspired (X)?", "Who inspires (X)?", "Who was the person that inspired (X)?", "Whom is (X) inspire?", "Whom was (X) inspire?", "which (X) inspired (X)?", "which (X) inspires (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "718",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) inspired by?", "Who was inspired by (X)?", "Who were inspired by (X)?", "Whom did (X) inspire?", "which (X) was inspired by (X)?", "which (X) were inspired by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "719",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are inspired by (X)?", "How often did (X) inspire?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "720",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons paint (X)?", "Give me all persons that painted (X)?", "Give me all persons that painted the (X)", "List all persons paint (X)?", "Who painted (X)?", "Who painted the (X)?", "Who painted the work (X)?", "Who painted the works (X)?", "Who paints (X)?", "Who paints the (X)?", "Who paints the work (X)?", "Who paints the works (X)?", "Who was the person that painted (X)?", "which (X) did (X) paint?", "which (X) does (X) paint?", "which (X) paint (X)?", "which (X) painted (X)?", "which (X) paints (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "721",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works painted by (X)?", "Give me all works that painted (X)?", "List all works painted by (X)?", "What (X) was painted by (X)?", "What (X) were painted by (X)?", "What kind of work did (X) paint?", "show me all work that (X) painted", "show me the work that (X) painted", "which (X) did (X) paint?", "which (X) paint the (X)?", "which (X) paints the (X)?", "which (X) was painted by (X)?", "which (X) were painted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "722",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are painted by (X)?", "How often did (X) paint?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "723",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operate (X)?", "Give me all organizations that operated (X)?", "Give me all organizations that operated the (X)", "List all organizations operate (X)?", "Who operated (X)?", "Who operated the (X)?", "Who operated the airport (X)?", "Who operated the airports (X)?", "Who operates (X)?", "Who operates the (X)?", "Who operates the airport (X)?", "Who operates the airports (X)?", "Who was the organization that operated (X)?", "which (X) did (X) operate?", "which (X) does (X) operate?", "which (X) operate (X)?", "which (X) operated (X)?", "which (X) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "724",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports operated by (X)?", "Give me all airports that operated (X)?", "List all airports operated by (X)?", "What (X) was operated by (X)?", "What (X) were operated by (X)?", "What kind of airport did (X) operate?", "show me all airport that (X) operated", "show me the airport that (X) operated", "which (X) did (X) operate?", "which (X) operate the (X)?", "which (X) operates the (X)?", "which (X) was operated by (X)?", "which (X) were operated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "725",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are operated by (X)?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "726",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all launch pads operate (X)?", "Give me all launch pads that operated (X)?", "Give me all launch pads that operated the (X)", "List all launch pads operate (X)?", "What (X) operated (X)?", "What (X) operated the (X)?", "What (X) operated the organization (X)?", "What (X) operated the organizations (X)?", "What (X) operates (X)?", "What (X) operates the (X)?", "What (X) operates the organization (X)?", "What (X) operates the organizations (X)?", "What (X) was the launch pad that operated (X)?", "which (X) did (X) operate?", "which (X) does (X) operate?", "which (X) operate (X)?", "which (X) operated (X)?", "which (X) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "727",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operated by (X)?", "Give me all organizations that operated (X)?", "List all organizations operated by (X)?", "Who kind of organization did (X) operate?", "Who was operated by (X)?", "Who were operated by (X)?", "show me all organization that (X) operated", "show me the organization that (X) operated", "which (X) did (X) operate?", "which (X) operate the (X)?", "which (X) operates the (X)?", "which (X) was operated by (X)?", "which (X) were operated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "728",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are operated by (X)?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "729",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all architects design (X)?", "Give me all architects that designed (X)?", "Give me all architects that designed the (X)", "List all architects design (X)?", "Who designed (X)?", "Who designed the (X)?", "Who designed the ArchitecturalStructure (X)?", "Who designed the ArchitecturalStructures (X)?", "Who designs (X)?", "Who designs the (X)?", "Who designs the ArchitecturalStructure (X)?", "Who designs the ArchitecturalStructures (X)?", "Who was the architect that designed (X)?", "which (X) design (X)?", "which (X) designed (X)?", "which (X) designs (X)?", "which (X) did (X) design?", "which (X) does (X) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "730",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures designed by (X)?", "Give me all ArchitecturalStructures that designed (X)?", "List all ArchitecturalStructures designed by (X)?", "What (X) was designed by (X)?", "What (X) were designed by (X)?", "What kind of ArchitecturalStructure did (X) design?", "show me all ArchitecturalStructure that (X) designed", "show me the ArchitecturalStructure that (X) designed", "which (X) design the (X)?", "which (X) designs the (X)?", "which (X) did (X) design?", "which (X) was designed by (X)?", "which (X) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "731",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are designed by (X)?", "How often did (X) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "732",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operate (X)?", "Give me all organizations that operated (X)?", "Give me all organizations that operated the (X)", "List all organizations operate (X)?", "Who operated (X)?", "Who operated the (X)?", "Who operated the airport (X)?", "Who operated the airports (X)?", "Who operates (X)?", "Who operates the (X)?", "Who operates the airport (X)?", "Who operates the airports (X)?", "Who was the organization that operated (X)?", "which (X) did (X) operate?", "which (X) does (X) operate?", "which (X) operate (X)?", "which (X) operated (X)?", "which (X) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "733",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports operated by (X)?", "Give me all airports that operated (X)?", "List all airports operated by (X)?", "What (X) was operated by (X)?", "What (X) were operated by (X)?", "What kind of airport did (X) operate?", "show me all airport that (X) operated", "show me the airport that (X) operated", "which (X) did (X) operate?", "which (X) operate the (X)?", "which (X) operates the (X)?", "which (X) was operated by (X)?", "which (X) were operated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "734",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are operated by (X)?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "735",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents that wrote (X)?", "Give me all agents that wrote the (X)", "Give me all agents write (X)?", "List all agents write (X)?", "Who was the agent that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the book (X)?", "Who writes the books (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the book (X)?", "Who wrote the books (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "736",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books that wrote (X)?", "Give me all books wrote by (X)?", "List all books wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of book did (X) write?", "show me all book that (X) wrote", "show me the book that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "737",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "738",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations distribute (X)?", "Give me all organizations that distributed (X)?", "Give me all organizations that distributed the (X)", "List all organizations distribute (X)?", "Who distributed (X)?", "Who distributed the (X)?", "Who distributed the film (X)?", "Who distributed the films (X)?", "Who distributes (X)?", "Who distributes the (X)?", "Who distributes the film (X)?", "Who distributes the films (X)?", "Who was the organization that distributed (X)?", "which (X) did (X) distribute?", "which (X) distribute (X)?", "which (X) distributed (X)?", "which (X) distributes (X)?", "which (X) does (X) distribute?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "739",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films distributed by (X)?", "Give me all films that distributed (X)?", "List all films distributed by (X)?", "What (X) was distributed by (X)?", "What (X) were distributed by (X)?", "What kind of film did (X) distribute?", "show me all film that (X) distributed", "show me the film that (X) distributed", "which (X) did (X) distribute?", "which (X) distribute the (X)?", "which (X) distributes the (X)?", "which (X) was distributed by (X)?", "which (X) were distributed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "740",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are distributed by (X)?", "How often did (X) distribute?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "741",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations distribute (X)?", "Give me all organizations that distributed (X)?", "Give me all organizations that distributed the (X)", "List all organizations distribute (X)?", "Who distributed (X)?", "Who distributed the (X)?", "Who distributed the television show (X)?", "Who distributed the television shows (X)?", "Who distributes (X)?", "Who distributes the (X)?", "Who distributes the television show (X)?", "Who distributes the television shows (X)?", "Who was the organization that distributed (X)?", "which (X) did (X) distribute?", "which (X) distribute (X)?", "which (X) distributed (X)?", "which (X) distributes (X)?", "which (X) does (X) distribute?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "742",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows distributed by (X)?", "Give me all television shows that distributed (X)?", "List all television shows distributed by (X)?", "What (X) was distributed by (X)?", "What (X) were distributed by (X)?", "What kind of television show did (X) distribute?", "show me all television show that (X) distributed", "show me the television show that (X) distributed", "which (X) did (X) distribute?", "which (X) distribute the (X)?", "which (X) distributes the (X)?", "which (X) was distributed by (X)?", "which (X) were distributed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "743",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are distributed by (X)?", "How often did (X) distribute?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "744",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the work (X)?", "Who writes the works (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the work (X)?", "Who wrote the works (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "745",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that wrote (X)?", "Give me all works wrote by (X)?", "List all works wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of work did (X) write?", "show me all work that (X) wrote", "show me the work that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "746",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "747",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons present (X)?", "Give me all persons that presented (X)?", "Give me all persons that presented the (X)", "List all persons present (X)?", "Who presented (X)?", "Who presented the (X)?", "Who presented the television show (X)?", "Who presented the television shows (X)?", "Who presents (X)?", "Who presents the (X)?", "Who presents the television show (X)?", "Who presents the television shows (X)?", "Who was the person that presented (X)?", "which (X) did (X) present?", "which (X) does (X) present?", "which (X) present (X)?", "which (X) presented (X)?", "which (X) presents (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "748",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows presented by (X)?", "Give me all television shows that presented (X)?", "List all television shows presented by (X)?", "What (X) was presented by (X)?", "What (X) were presented by (X)?", "What kind of television show did (X) present?", "show me all television show that (X) presented", "show me the television show that (X) presented", "which (X) did (X) present?", "which (X) present the (X)?", "which (X) presents the (X)?", "which (X) was presented by (X)?", "which (X) were presented by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "749",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are presented by (X)?", "How often did (X) present?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "750",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers cross (X)?", "Give me all rivers that crossed (X)?", "Give me all rivers that crossed the (X)", "List all rivers cross (X)?", "What (X) crossed (X)?", "What (X) crossed the (X)?", "What (X) crossed the Bridge (X)?", "What (X) crossed the Bridges (X)?", "What (X) crosses (X)?", "What (X) crosses the (X)?", "What (X) crosses the Bridge (X)?", "What (X) crosses the Bridges (X)?", "What (X) was the river that crossed (X)?", "which (X) cross (X)?", "which (X) crossed (X)?", "which (X) crosses (X)?", "which (X) did (X) cross?", "which (X) does (X) cross?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "751",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all Bridges crossed by (X)?", "Give me all Bridges that crossed (X)?", "List all Bridges crossed by (X)?", "What (X) was crossed by (X)?", "What (X) were crossed by (X)?", "What kind of Bridge did (X) cross?", "show me all Bridge that (X) crossed", "show me the Bridge that (X) crossed", "which (X) cross the (X)?", "which (X) crosses the (X)?", "which (X) did (X) cross?", "which (X) was crossed by (X)?", "which (X) were crossed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "752",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are crossed by (X)?", "How often did (X) cross?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "753",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums precede (X)?", "Give me all albums that preceded (X)?", "Give me all albums that preceded the (X)", "List all albums precede (X)?", "What (X) preceded (X)?", "What (X) preceded the (X)?", "What (X) preceded the album (X)?", "What (X) preceded the albums (X)?", "What (X) precedes (X)?", "What (X) precedes the (X)?", "What (X) precedes the album (X)?", "What (X) precedes the albums (X)?", "What (X) was the album that preceded (X)?", "which (X) did (X) precede?", "which (X) does (X) precede?", "which (X) precede (X)?", "which (X) preceded (X)?", "which (X) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/prevTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "754",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums preceded by (X)?", "Give me all albums that preceded (X)?", "List all albums preceded by (X)?", "What (X) was preceded by (X)?", "What (X) were preceded by (X)?", "What kind of album did (X) precede?", "show me all album that (X) preceded", "show me the album that (X) preceded", "which (X) did (X) precede?", "which (X) precede the (X)?", "which (X) precedes the (X)?", "which (X) was preceded by (X)?", "which (X) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "755",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are preceded by (X)?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "756",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed (X)?", "Who follows (X)?", "Who was the politician that followed (X)?", "Whom is (X) follow?", "Whom was (X) follow?", "which (X) followed (X)?", "which (X) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/before> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "757",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) followed by?", "Who was followed by (X)?", "Who were followed by (X)?", "Whom did (X) follow?", "which (X) was followed by (X)?", "which (X) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "758",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are followed by (X)?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "759",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons leave (X)?", "Give me all persons that left (X)?", "Give me all persons that left the (X)", "List all persons leave (X)?", "Who leaves (X)?", "Who leaves the (X)?", "Who leaves the band (X)?", "Who leaves the bands (X)?", "Who left (X)?", "Who left the (X)?", "Who left the band (X)?", "Who left the bands (X)?", "Who was the person that left (X)?", "which (X) did (X) leave?", "which (X) does (X) leave?", "which (X) leave (X)?", "which (X) leaves (X)?", "which (X) left (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "760",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all bands left by (X)?", "Give me all bands that left (X)?", "List all bands left by (X)?", "What (X) was left by (X)?", "What (X) were left by (X)?", "What kind of band did (X) leave?", "show me all band that (X) left", "show me the band that (X) left", "which (X) did (X) leave?", "which (X) leave the (X)?", "which (X) leaves the (X)?", "which (X) was left by (X)?", "which (X) were left by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "761",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are left by (X)?", "How often did (X) leave?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "762",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create (X)?", "Give me all persons that created (X)?", "Give me all persons that created the (X)", "List all persons create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the Website (X)?", "Who created the Websites (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the Website (X)?", "Who creates the Websites (X)?", "Who was the person that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "763",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all Websites created by (X)?", "Give me all Websites that created (X)?", "List all Websites created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of Website did (X) create?", "show me all Website that (X) created", "show me the Website that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "764",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "765",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce (X)?", "Give me all persons that produced (X)?", "Give me all persons that produced the (X)", "List all persons produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produced the work (X)?", "Who produced the works (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the work (X)?", "Who produces the works (X)?", "Who was the person that produced (X)?", "which (X) did (X) produce?", "which (X) does (X) produce?", "which (X) produce (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "766",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works produced by (X)?", "Give me all works that produced (X)?", "List all works produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of work did (X) produce?", "show me all work that (X) produced", "show me the work that (X) produced", "which (X) did (X) produce?", "which (X) produce the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "767",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "768",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create (X)?", "Give me all persons that created (X)?", "Give me all persons that created the (X)", "List all persons create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the work (X)?", "Who created the works (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the work (X)?", "Who creates the works (X)?", "Who was the person that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "769",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works created by (X)?", "Give me all works that created (X)?", "List all works created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of work did (X) create?", "show me all work that (X) created", "show me the work that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "770",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "771",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded (X)?", "Who founds (X)?", "Who was the person that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (X) founded (X)?", "which (X) founds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "772",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (X) was founded by (X)?", "which (X) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "773",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are founded by (X)?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "774",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all athlete manage (X)?", "Give me all athlete that managed (X)?", "Give me all athlete that managed the (X)", "List all athlete manage (X)?", "Who managed (X)?", "Who managed the (X)?", "Who managed the sports team (X)?", "Who managed the sports teams (X)?", "Who manages (X)?", "Who manages the (X)?", "Who manages the sports team (X)?", "Who manages the sports teams (X)?", "Who was the athlete that managed (X)?", "which (X) did (X) manage?", "which (X) does (X) manage?", "which (X) manage (X)?", "which (X) managed (X)?", "which (X) manages (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "775",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all sports teams managed by (X)?", "Give me all sports teams that managed (X)?", "List all sports teams managed by (X)?", "What (X) was managed by (X)?", "What (X) were managed by (X)?", "What kind of sports team did (X) manage?", "show me all sports team that (X) managed", "show me the sports team that (X) managed", "which (X) did (X) manage?", "which (X) manage the (X)?", "which (X) manages the (X)?", "which (X) was managed by (X)?", "which (X) were managed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "776",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are managed by (X)?", "How often did (X) manage?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "777",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers join (X)?", "Give me all rivers that joined (X)?", "Give me all rivers that joined the (X)", "List all rivers join (X)?", "What (X) joined (X)?", "What (X) joined the (X)?", "What (X) joined the river (X)?", "What (X) joined the rivers (X)?", "What (X) joins (X)?", "What (X) joins the (X)?", "What (X) joins the river (X)?", "What (X) joins the rivers (X)?", "What (X) was the river that joined (X)?", "which (X) did (X) join?", "which (X) does (X) join?", "which (X) join (X)?", "which (X) joined (X)?", "which (X) joins (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "778",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers joined by (X)?", "Give me all rivers that joined (X)?", "List all rivers joined by (X)?", "What (X) was joined by (X)?", "What (X) were joined by (X)?", "What kind of river did (X) join?", "show me all river that (X) joined", "show me the river that (X) joined", "which (X) did (X) join?", "which (X) join the (X)?", "which (X) joins the (X)?", "which (X) was joined by (X)?", "which (X) were joined by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "779",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are joined by (X)?", "How often did (X) join?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "780",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who succeeded (X)?", "Who succeeds (X)?", "Who was the person that succeeded (X)?", "Whom is (X) succeed?", "Whom was (X) succeed?", "which (X) succeeded (X)?", "which (X) succeeds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "781",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) succeeded by?", "Who was succeeded by (X)?", "Who were succeeded by (X)?", "Whom did (X) succeed?", "which (X) was succeeded by (X)?", "which (X) were succeeded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "782",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are succeeded by (X)?", "How often did (X) succeed?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "783",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the work (X)?", "Who writes the works (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the work (X)?", "Who wrote the works (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "784",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that wrote (X)?", "Give me all works wrote by (X)?", "List all works wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of work did (X) write?", "show me all work that (X) wrote", "show me the work that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "785",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "786",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "What (X) expressed (X)?", "What (X) expressed the (X)?", "What (X) expressed the color (X)?", "What (X) expressed the colors (X)?", "What (X) expresses (X)?", "What (X) expresses the (X)?", "What (X) expresses the color (X)?", "What (X) expresses the colors (X)?", "What expressed (X)?", "What expresses (X)?", "which (X) did (X) express?", "which (X) does (X) express?", "which (X) express (X)?", "which (X) expressed (X)?", "which (X) expresses (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "787",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all colors expressed by (X)?", "Give me all colors that expressed (X)?", "List all colors expressed by (X)?", "What (X) was expressed by (X)?", "What (X) were expressed by (X)?", "What kind of color did (X) express?", "show me all color that (X) expressed", "show me the color that (X) expressed", "which (X) did (X) express?", "which (X) express the (X)?", "which (X) expresses the (X)?", "which (X) was expressed by (X)?", "which (X) were expressed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "788",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are expressed by (X)?", "How often did (X) express?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "789",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons starring in (X)?", "Give me all persons that starred in (X)?", "Give me all persons that starred in the (X)", "List all persons starring in (X)?", "Who starred in (X)?", "Who starred in the (X)?", "Who starred in the film (X)?", "Who starred in the films (X)?", "Who starring in (X)?", "Who starring in the (X)?", "Who starring in the film (X)?", "Who starring in the films (X)?", "Who was the person that starred in (X)?", "which (X) did (X) starring in?", "which (X) does (X) starring in?", "which (X) starred in (X)?", "which (X) starring in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "790",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films starred_in by (X)?", "Give me all films that starred in (X)?", "List all films starred_in by (X)?", "What (X) was starred_in by (X)?", "What (X) were starred_in by (X)?", "What kind of film did (X) starring in?", "show me all film that (X) starred in", "show me the film that (X) starred in", "which (X) did (X) starring in?", "which (X) starring in the (X)?", "which (X) was starred_in by (X)?", "which (X) were starred_in by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "791",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are starred_in by (X)?", "How often did (X) starring in?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "792",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations produce (X)?", "Give me all organizations that produced (X)?", "Give me all organizations that produced the (X)", "List all organizations produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produced the beverage (X)?", "Who produced the beverages (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the beverage (X)?", "Who produces the beverages (X)?", "Who was the organization that produced (X)?", "which (X) did (X) produce?", "which (X) does (X) produce?", "which (X) produce (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "793",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all beverages produced by (X)?", "Give me all beverages that produced (X)?", "List all beverages produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of beverage did (X) produce?", "show me all beverage that (X) produced", "show me the beverage that (X) produced", "which (X) did (X) produce?", "which (X) produce the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "794",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "795",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all countries adopted by (X)?", "List all countries adopted by (X)?", "What (X) was adopted by (X)?", "What (X) were adopted by (X)?", "show me the country that (X) adopted", "which (X) adopt (X)?", "which (X) adopted (X)?", "which (X) did (X) adopt?", "which (X) was adopted by (X)?", "which (X) were adopted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "796",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all currencies adopt (X)?", "What (X) adopted (X)?", "What (X) adopted the (X)?", "What (X) adopted the countries (X)?", "What (X) adopts (X)?", "What (X) adopts the (X)?", "What (X) adopts the countries (X)?", "What (X) adopts the country (X)?", "What (X) was the currency that adopted (X)?", "which (X) adopt (X)?", "which (X) adopted (X)?", "which (X) adopts (X)?", "which (X) did (X) adopt?", "which (X) does (X) adopt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "797",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are adopted by (X)?", "How often did (X) adopt?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "798",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed (X)?", "Who follows (X)?", "Who was the politician that followed (X)?", "Whom is (X) follow?", "Whom was (X) follow?", "which (X) followed (X)?", "which (X) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "799",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) followed by?", "Who was followed by (X)?", "Who were followed by (X)?", "Whom did (X) follow?", "which (X) was followed by (X)?", "which (X) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "800",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are followed by (X)?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "801",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations rent (X)?", "Give me all organizations that rented (X)?", "Give me all organizations that rented the (X)", "List all organizations rent (X)?", "Who rented (X)?", "Who rented the (X)?", "Who rented the ArchitecturalStructure (X)?", "Who rented the ArchitecturalStructures (X)?", "Who rents (X)?", "Who rents the (X)?", "Who rents the ArchitecturalStructure (X)?", "Who rents the ArchitecturalStructures (X)?", "Who was the organization that rented (X)?", "which (X) did (X) rent?", "which (X) does (X) rent?", "which (X) rent (X)?", "which (X) rented (X)?", "which (X) rents (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/tenant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "802",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures rented by (X)?", "Give me all ArchitecturalStructures that rented (X)?", "List all ArchitecturalStructures rented by (X)?", "What (X) was rented by (X)?", "What (X) were rented by (X)?", "What kind of ArchitecturalStructure did (X) rent?", "show me all ArchitecturalStructure that (X) rented", "show me the ArchitecturalStructure that (X) rented", "which (X) did (X) rent?", "which (X) rent the (X)?", "which (X) rents the (X)?", "which (X) was rented by (X)?", "which (X) were rented by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "803",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are rented by (X)?", "How often did (X) rent?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "804",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons discover (X)?", "Give me all persons that discovered (X)?", "Give me all persons that discovered the (X)", "List all persons discover (X)?", "Who discovered (X)?", "Who discovered the (X)?", "Who discovered the planets (X)?", "Who discovered the plant (X)?", "Who discovers (X)?", "Who discovers the (X)?", "Who discovers the planets (X)?", "Who discovers the plant (X)?", "Who was the person that discovered (X)?", "which (X) did (X) discover?", "which (X) discover (X)?", "which (X) discovered (X)?", "which (X) discovers (X)?", "which (X) does (X) discover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "805",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all planets discovered by (X)?", "Give me all planets that discovered (X)?", "List all planets discovered by (X)?", "What (X) was discovered by (X)?", "What (X) were discovered by (X)?", "What kind of plant did (X) discover?", "show me all plant that (X) discovered", "show me the plant that (X) discovered", "which (X) did (X) discover?", "which (X) discover the (X)?", "which (X) discovers the (X)?", "which (X) was discovered by (X)?", "which (X) were discovered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "806",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are discovered by (X)?", "How often did (X) discover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "807",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons play (X)?", "Give me all persons that played (X)?", "Give me all persons that played the (X)", "List all persons play (X)?", "Who played (X)?", "Who played the (X)?", "Who played the music (X)?", "Who played the musics (X)?", "Who plays (X)?", "Who plays the (X)?", "Who plays the music (X)?", "Who plays the musics (X)?", "Who was the person that played (X)?", "which (X) did (X) play?", "which (X) does (X) play?", "which (X) play (X)?", "which (X) played (X)?", "which (X) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "808",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics played by (X)?", "Give me all musics that played (X)?", "List all musics played by (X)?", "What (X) was played by (X)?", "What (X) were played by (X)?", "What kind of music did (X) play?", "show me all music that (X) played", "show me the music that (X) played", "which (X) did (X) play?", "which (X) play the (X)?", "which (X) plays the (X)?", "which (X) was played by (X)?", "which (X) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "809",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are played by (X)?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "810",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all company publish (X)?", "Give me all company that published (X)?", "Give me all company that published the (X)", "List all company publish (X)?", "Who published (X)?", "Who published the (X)?", "Who published the video game (X)?", "Who published the video games (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who publishes the video game (X)?", "Who publishes the video games (X)?", "Who was the company that published (X)?", "which (X) did (X) publish?", "which (X) does (X) publish?", "which (X) publish (X)?", "which (X) published (X)?", "which (X) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "811",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games published by (X)?", "Give me all video games that published (X)?", "List all video games published by (X)?", "What (X) was published by (X)?", "What (X) were published by (X)?", "What kind of video game did (X) publish?", "show me all video game that (X) published", "show me the video game that (X) published", "which (X) did (X) publish?", "which (X) publish the (X)?", "which (X) publishes the (X)?", "which (X) was published by (X)?", "which (X) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "812",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are published by (X)?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "813",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the book (X)?", "Who writes the books (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the book (X)?", "Who wrote the books (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "814",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books that wrote (X)?", "Give me all books wrote by (X)?", "List all books wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of book did (X) write?", "show me all book that (X) wrote", "show me the book that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "815",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "816",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce (X)?", "Give me all persons that produced (X)?", "Give me all persons that produced the (X)", "List all persons produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produced the television show (X)?", "Who produced the television shows (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the television show (X)?", "Who produces the television shows (X)?", "Who was the person that produced (X)?", "which (X) did (X) produce?", "which (X) does (X) produce?", "which (X) produce (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "817",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows produced by (X)?", "Give me all television shows that produced (X)?", "List all television shows produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of television show did (X) produce?", "show me all television show that (X) produced", "show me the television show that (X) produced", "which (X) did (X) produce?", "which (X) produce the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "818",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "819",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors starring in (X)?", "Give me all actors that starred in (X)?", "Give me all actors that starred in the (X)", "List all actors starring in (X)?", "Who starred in (X)?", "Who starred in the (X)?", "Who starred in the film (X)?", "Who starred in the films (X)?", "Who starring in (X)?", "Who starring in the (X)?", "Who starring in the film (X)?", "Who starring in the films (X)?", "Who was the actor that starred in (X)?", "which (X) did (X) starring in?", "which (X) does (X) starring in?", "which (X) starred in (X)?", "which (X) starring in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "820",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films starred_in by (X)?", "Give me all films that starred in (X)?", "List all films starred_in by (X)?", "What (X) was starred_in by (X)?", "What (X) were starred_in by (X)?", "What kind of film did (X) starring in?", "show me all film that (X) starred in", "show me the film that (X) starred in", "which (X) did (X) starring in?", "which (X) starring in the (X)?", "which (X) was starred_in by (X)?", "which (X) were starred_in by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "821",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are starred_in by (X)?", "How often did (X) starring in?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "822",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents edit (X)?", "Give me all agents that edited (X)?", "Give me all agents that edited the (X)", "List all agents edit (X)?", "Who edited (X)?", "Who edited the (X)?", "Who edited the academic journal (X)?", "Who edited the academic journals (X)?", "Who edits (X)?", "Who edits the (X)?", "Who edits the academic journal (X)?", "Who edits the academic journals (X)?", "Who was the agent that edited (X)?", "which (X) did (X) edit?", "which (X) does (X) edit?", "which (X) edit (X)?", "which (X) edited (X)?", "which (X) edits (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "823",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all academic journals edited by (X)?", "Give me all academic journals that edited (X)?", "List all academic journals edited by (X)?", "What (X) was edited by (X)?", "What (X) were edited by (X)?", "What kind of academic journal did (X) edit?", "show me all academic journal that (X) edited", "show me the academic journal that (X) edited", "which (X) did (X) edit?", "which (X) edit the (X)?", "which (X) edits the (X)?", "which (X) was edited by (X)?", "which (X) were edited by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "824",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are edited by (X)?", "How often did (X) edit?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "825",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) fight in?", "Where is (X) fought?", "in which (X)  (X) fight?", "in which (X) are (X) fought?", "in which (X) does (X) fight?", "in which (X) does fight (X)?", "in which (X) is (X) fought?", "which (X) does (X) fight in?", "which (X) does the (X) fight in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/combatant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "826",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) fight in?", "What fights in (X)?", "What fought in (X)?", "Where does (X) fight?", "which (X) fight in (X)?", "which (X) fights in (X)?", "which (X) fought in (X)?", "which (X) was fought in (X)?", "which (X) were fought in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/combatant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "827",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) fight in?", "How many (X) fight in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/combatant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "828",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) bury?", "Where is (X) buried?", "Where was (X) buried?", "in which (X) did (X) bury?", "which (X) does (X) bury in?", "which (X) was (X) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/burialPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "829",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were buried in (X)?", "Give me all persons Who were buried in (X)?", "Which people were buried in (X)?", "Who was buried in (X)?", "which (X) was buried in (X)?", "which (X) were buried in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/burialPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "830",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/burialPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "831",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) associate with?", "Where is (X) associated?", "which (X) does (X) associate with?", "which (X) does the (X) associate with?", "with which (X)  (X) associate?", "with which (X) are (X) associated?", "with which (X) does (X) associate?", "with which (X) does associate (X)?", "with which (X) is (X) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "832",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) associate?", "Who associated with (X)?", "Who does (X) associate with?", "which (X) associate with (X)?", "which (X) associated with (X)?", "which (X) was associated with (X)?", "which (X) were associated with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "833",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) associate with (X)?", "How many (X) did (X) associate with?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "834",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) start in?", "Where is (X) started?", "in which (X)  (X) start?", "in which (X) are (X) started?", "in which (X) does (X) start?", "in which (X) does start (X)?", "in which (X) is (X) started?", "which (X) does (X) start in?", "which (X) does the (X) start in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "835",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) start in?", "What started in (X)?", "What starts in (X)?", "Where does (X) start?", "which (X) start in (X)?", "which (X) started in (X)?", "which (X) starts in (X)?", "which (X) was started in (X)?", "which (X) were started in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/mouthLocation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "836",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) start in?", "How many (X) start in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/mouthLocation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "837",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) locate?", "Where is (X) located?", "Where was (X) located?", "in which (X) did (X) locate?", "which (X) does (X) locate in?", "which (X) was (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "838",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all organizations that were located in (X)?", "Give me all organizations Who were located in (X)?", "Which people were located in (X)?", "Who was located in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "839",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "840",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "841",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) belong?", "Who belonged to (X)?", "Who belongs to (X)?", "Who does (X) belong to?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "842",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "843",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) did (X) die from?", "What (X) does (X) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "844",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who is died from (X)?", "Who was died from (X)?", "which (X) are died from (X)?", "which (X) is died from (X)?", "which (X) was died from (X)?", "which (X) were died from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "845",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "846",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) did (X) die from?", "What (X) does (X) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "847",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who is died from (X)?", "Who was died from (X)?", "which (X) are died from (X)?", "which (X) is died from (X)?", "which (X) was died from (X)?", "which (X) were died from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "848",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "849",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "850",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "851",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "852",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) born?", "Where is (X) born?", "Where was (X) born?", "in which (X) did (X) born?", "which (X) does (X) born in?", "which (X) was (X) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "853",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all actors that were born in (X)?", "Give me all actors Who were born in (X)?", "Which people were born in (X)?", "Who was born in (X)?", "which (X) was born in (X)?", "which (X) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "854",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "855",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Play" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) play in?", "Where is (X) played?", "in which (X)  (X) play?", "in which (X) are (X) played?", "in which (X) does (X) play?", "in which (X) does play (X)?", "in which (X) is (X) played?", "which (X) does (X) play in?", "which (X) does the (X) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "856",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Play" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) play?", "Who does (X) play in?", "Who played in (X)?", "Who plays in (X)?", "which (X) play in (X)?", "which (X) played in (X)?", "which (X) plays in (X)?", "which (X) was played in (X)?", "which (X) were played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "857",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Play" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) play in?", "How many (X) play in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "858",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Single" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) live in?", "Where is (X) lived?", "in which (X)  (X) live?", "in which (X) are (X) lived?", "in which (X) does (X) live?", "in which (X) does live (X)?", "in which (X) is (X) lived?", "which (X) does (X) live in?", "which (X) does the (X) live in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "859",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Single" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) live in?", "What lived in (X)?", "What lives in (X)?", "Where does (X) live?", "which (X) live in (X)?", "which (X) lived in (X)?", "which (X) lives in (X)?", "which (X) was lived in (X)?", "which (X) were lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "860",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Single" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) live in?", "How many (X) live in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "861",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) discontinue?", "When did the (X) discontinue?", "When was (X) discontinued?", "When was the (X) discontinued?", "When were (X) discontinued?", "When were the (X) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "862",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) discontinued in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "863",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "864",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) destroy?", "When did the (X) destroy?", "When was (X) destroyed?", "When was the (X) destroyed?", "When were (X) destroyed?", "When were the (X) destroyed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "865",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) destroyed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "866",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "867",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Article" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "868",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Article" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) published on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "869",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Article" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "870",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) flow through?", "Where is (X) flown?", "through which (X)  (X) flow?", "through which (X) are (X) flown?", "through which (X) does (X) flow?", "through which (X) does flow (X)?", "through which (X) is (X) flown?", "which (X) does (X) flow through?", "which (X) does the (X) flow through?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "871",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) flow through?", "What flowed through (X)?", "What flows through (X)?", "Where does (X) flow?", "which (X) flow through (X)?", "which (X) flowed through (X)?", "which (X) flows through (X)?", "which (X) was flown through (X)?", "which (X) were flown through (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "872",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) flow through?", "How many (X) flow through (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "873",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) open?", "When did the (X) open?", "When was (X) opened?", "When was the (X) opened?", "When were (X) opened?", "When were the (X) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "874",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) opened in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "875",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "876",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) commence?", "When did the (X) commence?", "When was (X) commenced?", "When was the (X) commenced?", "When were (X) commenced?", "When were the (X) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "877",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) commenced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "878",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "879",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) born?", "Where is (X) born?", "Where was (X) born?", "in which (X) did (X) born?", "which (X) does (X) born in?", "which (X) was (X) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "880",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were born in (X)?", "Give me all persons Who were born in (X)?", "Which people were born in (X)?", "Who was born in (X)?", "which (X) was born in (X)?", "which (X) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "881",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "882",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) locate in?", "Where is (X) located?", "in which (X)  (X) locate?", "in which (X) are (X) located?", "in which (X) does (X) locate?", "in which (X) does locate (X)?", "in which (X) is (X) located?", "which (X) does (X) locate in?", "which (X) does the (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "883",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (X) locate in (X)?", "which (X) located in (X)?", "which (X) locates in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "884",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) locate in?", "How many (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "885",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) locate in?", "Where is (X) located?", "in which (X)  (X) locate?", "in which (X) are (X) located?", "in which (X) does (X) locate?", "in which (X) does locate (X)?", "in which (X) is (X) located?", "which (X) does (X) locate in?", "which (X) does the (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "886",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (X) locate in (X)?", "which (X) located in (X)?", "which (X) locates in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "887",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) locate in?", "How many (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "888",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) complete?", "When did the (X) complete?", "When was (X) completed?", "When was the (X) completed?", "When were (X) completed?", "When were the (X) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "889",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) completed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "890",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "891",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryPerson" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) participate in?", "Where is (X) participated?", "in which (X)  (X) participate?", "in which (X) are (X) participated?", "in which (X) does (X) participate?", "in which (X) does participate (X)?", "in which (X) is (X) participated?", "which (X) does (X) participate in?", "which (X) does the (X) participate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/battle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "892",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "MilitaryPerson" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) participate?", "Who does (X) participate in?", "Who participated in (X)?", "Who participates in (X)?", "which (X) participate in (X)?", "which (X) participated in (X)?", "which (X) participates in (X)?", "which (X) was participated in (X)?", "which (X) were participated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "893",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "MilitaryPerson" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) participate in?", "How many (X) participate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "894",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) did (X) known for?", "What (X) does (X) known for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "895",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who is known for (X)?", "Who was known for (X)?", "which (X) are known for (X)?", "which (X) is known for (X)?", "which (X) was known for (X)?", "which (X) were known for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "896",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "897",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "898",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "899",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "900",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) study at?", "Where is (X) studied?", "at which (X)  (X) study?", "at which (X) are (X) studied?", "at which (X) does (X) study?", "at which (X) does study (X)?", "at which (X) is (X) studied?", "which (X) does (X) study at?", "which (X) does the (X) study at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "901",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) study?", "Who does (X) study at?", "Who studied at (X)?", "Who studies at (X)?", "which (X) studied at (X)?", "which (X) studies at (X)?", "which (X) study at (X)?", "which (X) was studied at (X)?", "which (X) were studied at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "902",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) study at?", "How many (X) study at (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "903",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) study at?", "Where is (X) studied?", "at which (X)  (X) study?", "at which (X) are (X) studied?", "at which (X) does (X) study?", "at which (X) does study (X)?", "at which (X) is (X) studied?", "which (X) does (X) study at?", "which (X) does the (X) study at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "904",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) study?", "Who does (X) study at?", "Who studied at (X)?", "Who studies at (X)?", "which (X) studied at (X)?", "which (X) studies at (X)?", "which (X) study at (X)?", "which (X) was studied at (X)?", "which (X) were studied at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "905",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) study at?", "How many (X) study at (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "906",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) initially use for?", "Where is (X) initially used?", "for which (X)  (X) initially use?", "for which (X) are (X) initially used?", "for which (X) does (X) initially use?", "for which (X) does initially use (X)?", "for which (X) is (X) initially used?", "which (X) does (X) initially use for?", "which (X) does the (X) initially use for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "907",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) initially use for?", "What initially used for (X)?", "What initially uses for (X)?", "Where does (X) initially use?", "which (X) initially use for (X)?", "which (X) initially used for (X)?", "which (X) initially uses for (X)?", "which (X) was initially used for (X)?", "which (X) were initially used for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "908",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) initially use for?", "How many (X) initially use for (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "909",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) die?", "Where is (X) died?", "Where was (X) died?", "in which (X) did (X) die?", "which (X) does (X) die in?", "which (X) was (X) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "910",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Politician" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all politicians that were died in (X)?", "Give me all politicians Who were died in (X)?", "Which people were died in (X)?", "Who was died in (X)?", "which (X) was died in (X)?", "which (X) were died in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "911",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Politician" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "912",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) die?", "Where is (X) died?", "Where was (X) died?", "in which (X) did (X) die?", "which (X) does (X) die in?", "which (X) was (X) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "913",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all writers that were died in (X)?", "Give me all writers Who were died in (X)?", "Which people were died in (X)?", "Who was died in (X)?", "which (X) was died in (X)?", "which (X) were died in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "914",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "915",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) release on?", "Where is (X) released?", "on which (X)  (X) release?", "on which (X) are (X) released?", "on which (X) does (X) release?", "on which (X) does release (X)?", "on which (X) is (X) released?", "which (X) does (X) release on?", "which (X) does the (X) release on?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "916",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) release on?", "What released on (X)?", "What releases on (X)?", "Where does (X) release?", "which (X) release on (X)?", "which (X) released on (X)?", "which (X) releases on (X)?", "which (X) was released on (X)?", "which (X) were released on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/computingPlatform> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "917",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) release on?", "How many (X) release on (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/computingPlatform> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "918",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) flow into?", "Where is (X) flown?", "into which (X)  (X) flow?", "into which (X) are (X) flown?", "into which (X) does (X) flow?", "into which (X) does flow (X)?", "into which (X) is (X) flown?", "which (X) does (X) flow into?", "which (X) does the (X) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "919",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) flow into?", "What flowed into (X)?", "What flows into (X)?", "Where does (X) flow?", "which (X) flow into (X)?", "which (X) flowed into (X)?", "which (X) flows into (X)?", "which (X) was flown into (X)?", "which (X) were flown into (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "920",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) flow into?", "How many (X) flow into (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "921",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) locate in?", "Where is (X) located?", "in which (X)  (X) locate?", "in which (X) are (X) located?", "in which (X) does (X) locate?", "in which (X) does locate (X)?", "in which (X) is (X) located?", "which (X) does (X) locate in?", "which (X) does the (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "922",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (X) locate in (X)?", "which (X) located in (X)?", "which (X) locates in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "923",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) locate in?", "How many (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "924",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) die?", "When was (X) died?", "in which (X) was (X) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "925",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was died in (X)?", "which (X) was died in (X)?", "which (X) were died in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "926",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "927",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "928",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) published on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "929",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "930",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When was (X) founded?", "on which (X) was (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "931",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded on (X)?", "which (X) was founded on (X)?", "which (X) were founded on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "932",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "933",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) complete?", "When did the (X) complete?", "When was (X) completed?", "When was the (X) completed?", "When were (X) completed?", "When were the (X) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "934",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) completed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "935",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "936",
    "lexicalEntryUri" : "http://localhost:8080#study_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) study in?", "Where is (X) studied?", "in which (X)  (X) study?", "in which (X) are (X) studied?", "in which (X) does (X) study?", "in which (X) does study (X)?", "in which (X) is (X) studied?", "which (X) does (X) study in?", "which (X) does the (X) study in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "937",
    "lexicalEntryUri" : "http://localhost:8080#study_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) study?", "Who does (X) study in?", "Who studied in (X)?", "Who studies in (X)?", "which (X) studied in (X)?", "which (X) studies in (X)?", "which (X) study in (X)?", "which (X) was studied in (X)?", "which (X) were studied in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "938",
    "lexicalEntryUri" : "http://localhost:8080#study_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) study in?", "How many (X) study in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "939",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) locate in?", "Where is (X) located?", "in which (X)  (X) locate?", "in which (X) are (X) located?", "in which (X) does (X) locate?", "in which (X) does locate (X)?", "in which (X) is (X) located?", "which (X) does (X) locate in?", "which (X) does the (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "940",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (X) locate in (X)?", "which (X) located in (X)?", "which (X) locates in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "941",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) locate in?", "How many (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "942",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) locate in?", "Where is (X) located?", "in which (X)  (X) locate?", "in which (X) are (X) located?", "in which (X) does (X) locate?", "in which (X) does locate (X)?", "in which (X) is (X) located?", "which (X) does (X) locate in?", "which (X) does the (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "943",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (X) locate in (X)?", "which (X) located in (X)?", "which (X) locates in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "944",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) locate in?", "How many (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "945",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) composed?", "Who does (X) compose for?", "for which (X)  (X) compose?", "for which (X) are (X) composed?", "for which (X) does (X) compose?", "for which (X) does compose (X)?", "for which (X) is (X) composed?", "which (X) does (X) compose for?", "which (X) does the (X) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "946",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What composed for (X)?", "What composes for (X)?", "What does (X) compose for?", "Where does (X) compose?", "which (X) compose for (X)?", "which (X) composed for (X)?", "which (X) composes for (X)?", "which (X) was composed for (X)?", "which (X) were composed for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "947",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) compose for (X)?", "How many (X) did (X) compose for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "948",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) born?", "Where is (X) born?", "Where was (X) born?", "in which (X) did (X) born?", "which (X) does (X) born in?", "which (X) was (X) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "949",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were born in (X)?", "Give me all persons Who were born in (X)?", "Which people were born in (X)?", "Who was born in (X)?", "which (X) was born in (X)?", "which (X) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "950",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "951",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) release?", "When did the (X) release?", "When was (X) released?", "When was the (X) released?", "When were (X) released?", "When were the (X) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "952",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) released at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "953",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "954",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "955",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "956",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "957",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (X) are (X) located?", "in which (X) are the (X)?", "in which (X) is (X) located?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "958",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "959",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "960",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) end his active career?", "When was (X) ended his active career?", "on which (X) was (X) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "961",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was ended his active career on (X)?", "which (X) was ended his active career on (X)?", "which (X) were ended his active career on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "962",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "963",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did (X) known for?", "Who does (X) known for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "964",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (X) is known for (X)?", "What (X) was known for (X)?", "which (X) are known for (X)?", "which (X) is known for (X)?", "which (X) was known for (X)?", "which (X) were known for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "965",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "966",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) play for?", "Where is (X) played?", "for which (X)  (X) play?", "for which (X) are (X) played?", "for which (X) does (X) play?", "for which (X) does play (X)?", "for which (X) is (X) played?", "which (X) does (X) play for?", "which (X) does the (X) play for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "967",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) play?", "Who does (X) play for?", "Who played for (X)?", "Who plays for (X)?", "which (X) play for (X)?", "which (X) played for (X)?", "which (X) plays for (X)?", "which (X) was played for (X)?", "which (X) were played for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/debutTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "968",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) play for?", "How many (X) play for (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/debutTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "969",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Swimmer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) born?", "Where is (X) born?", "Where was (X) born?", "in which (X) did (X) born?", "which (X) does (X) born in?", "which (X) was (X) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "970",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Swimmer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all swimmers that were born in (X)?", "Give me all swimmers Who were born in (X)?", "Which people were born in (X)?", "Who was born in (X)?", "which (X) was born in (X)?", "which (X) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "971",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Swimmer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "972",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) born?", "in which (X) are (X) born?", "in which (X) are the (X)?", "in which (X) is (X) born?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "973",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What born in (X)?", "What does (X) born in?", "which (X) born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "974",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "975",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Disease" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) die from?", "Where is (X) died?", "from which (X)  (X) die?", "from which (X) are (X) died?", "from which (X) does (X) die?", "from which (X) does die (X)?", "from which (X) is (X) died?", "which (X) does (X) die from?", "which (X) does the (X) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "976",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Disease" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) die?", "Who died from (X)?", "Who dies from (X)?", "Who does (X) die from?", "which (X) die from (X)?", "which (X) died from (X)?", "which (X) dies from (X)?", "which (X) was died from (X)?", "which (X) were died from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "977",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Disease" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) die from?", "How many (X) die from (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "978",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) flow through?", "Where is (X) flown?", "through which (X)  (X) flow?", "through which (X) are (X) flown?", "through which (X) does (X) flow?", "through which (X) does flow (X)?", "through which (X) is (X) flown?", "which (X) does (X) flow through?", "which (X) does the (X) flow through?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "979",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) flow through?", "What flowed through (X)?", "What flows through (X)?", "Where does (X) flow?", "which (X) flow through (X)?", "which (X) flowed through (X)?", "which (X) flows through (X)?", "which (X) was flown through (X)?", "which (X) were flown through (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "980",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) flow through?", "How many (X) flow through (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "981",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) associated?", "Who does (X) associate with?", "which (X) does (X) associate with?", "which (X) does the (X) associate with?", "with which (X)  (X) associate?", "with which (X) are (X) associated?", "with which (X) does (X) associate?", "with which (X) does associate (X)?", "with which (X) is (X) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "982",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What associated with (X)?", "What does (X) associate with?", "Where does (X) associate?", "which (X) associate with (X)?", "which (X) associated with (X)?", "which (X) was associated with (X)?", "which (X) were associated with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "983",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) associate with (X)?", "How many (X) did (X) associate with?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "984",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) stop acting?", "When was (X) stopped acting?", "on which (X) was (X) stopped acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "985",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was stopped acting on (X)?", "which (X) was stopped acting on (X)?", "which (X) were stopped acting on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "986",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "987",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "988",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "989",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "990",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "991",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/album> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "992",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/album> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "993",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "994",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) belong?", "Who belonged to (X)?", "Who belongs to (X)?", "Who does (X) belong to?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "995",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "996",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) found in?", "Where is (X) founded?", "in which (X)  (X) found?", "in which (X) are (X) founded?", "in which (X) does (X) found?", "in which (X) does found (X)?", "in which (X) is (X) founded?", "which (X) does (X) found in?", "which (X) does the (X) found in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founded> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "997",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) found?", "Who does (X) found in?", "Who founded in (X)?", "Who founds in (X)?", "which (X) found in (X)?", "which (X) founded in (X)?", "which (X) founds in (X)?", "which (X) was founded in (X)?", "which (X) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/founded> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "998",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) found in?", "How many (X) found in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/founded> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "999",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) discontinue?", "When did the (X) discontinue?", "When was (X) discontinued?", "When was the (X) discontinued?", "When were (X) discontinued?", "When were the (X) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1000",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) discontinued on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1001",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1002",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) introduce?", "When did the (X) introduce?", "When was (X) introduced?", "When was the (X) introduced?", "When were (X) introduced?", "When were the (X) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1003",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) introduced in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1004",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1005",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AmericanFootballPlayer" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) draft?", "When was (X) drafted?", "in which (X) was (X) drafted?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1006",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "AmericanFootballPlayer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was drafted in (X)?", "which (X) was drafted in (X)?", "which (X) were drafted in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/draftYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1007",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "AmericanFootballPlayer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/draftYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1008",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1009",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/keyPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1010",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/keyPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1011",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) relate to?", "Where is (X) related?", "to which (X)  (X) relate?", "to which (X) are (X) related?", "to which (X) does (X) relate?", "to which (X) does relate (X)?", "to which (X) is (X) related?", "which (X) does (X) relate to?", "which (X) does the (X) relate to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/related> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1012",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) relate to?", "What is related to (X)?", "What related to (X)?", "Where does (X) relate?", "which (X) is related to (X)?", "which (X) relate to (X)?", "which (X) related to (X)?", "which (X) was related to (X)?", "which (X) were related to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/related> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1013",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) relate to?", "How many (X) relate to (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/related> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1014",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) open?", "When did the (X) open?", "When was (X) opened?", "When was the (X) opened?", "When were (X) opened?", "When were the (X) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1015",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) opened on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1016",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1017",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) composed?", "Who does (X) compose for?", "for which (X)  (X) compose?", "for which (X) are (X) composed?", "for which (X) does (X) compose?", "for which (X) does compose (X)?", "for which (X) is (X) composed?", "which (X) does (X) compose for?", "which (X) does the (X) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/music> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1018",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What composed for (X)?", "What composes for (X)?", "What does (X) compose for?", "Where does (X) compose?", "which (X) compose for (X)?", "which (X) composed for (X)?", "which (X) composes for (X)?", "which (X) was composed for (X)?", "which (X) were composed for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/music> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1019",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) compose for (X)?", "How many (X) did (X) compose for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/music> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1020",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (X) are (X) located?", "in which (X) are the (X)?", "in which (X) is (X) located?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1021",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1022",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1023",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) start in?", "Where is (X) started?", "in which (X)  (X) start?", "in which (X) are (X) started?", "in which (X) does (X) start?", "in which (X) does start (X)?", "in which (X) is (X) started?", "which (X) does (X) start in?", "which (X) does the (X) start in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1024",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) start in?", "What started in (X)?", "What starts in (X)?", "Where does (X) start?", "which (X) start in (X)?", "which (X) started in (X)?", "which (X) starts in (X)?", "which (X) was started in (X)?", "which (X) were started in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeStart> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1025",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) start in?", "How many (X) start in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeStart> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1026",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1027",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1028",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1029",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1030",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1031",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1032",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) establish?", "When did the (X) establish?", "When was (X) established?", "When was the (X) established?", "When were (X) established?", "When were the (X) established?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstPublicationYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1033",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) established in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1034",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1035",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1036",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1037",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1038",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) begin at?", "Where is (X) began?", "at which (X)  (X) begin?", "at which (X) are (X) began?", "at which (X) does (X) begin?", "at which (X) does begin (X)?", "at which (X) is (X) began?", "which (X) does (X) begin at?", "which (X) does the (X) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source1Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1039",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What began at (X)?", "What begins at (X)?", "What does (X) begin at?", "Where does (X) begin?", "which (X) began at (X)?", "which (X) begin at (X)?", "which (X) begins at (X)?", "which (X) was began at (X)?", "which (X) were began at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/source1Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1040",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) begin at (X)?", "How many (X) did (X) begin at?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/source1Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1041",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) release?", "When did the (X) release?", "When was (X) released?", "When was the (X) released?", "When were (X) released?", "When were the (X) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1042",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) released at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1043",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1044",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) release?", "When did the (X) release?", "When was (X) released?", "When was the (X) released?", "When were (X) released?", "When were the (X) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1045",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) released at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1046",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1047",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) starred?", "Who does (X) star in?", "in which (X)  (X) star?", "in which (X) are (X) starred?", "in which (X) does (X) star?", "in which (X) does star (X)?", "in which (X) is (X) starred?", "which (X) does (X) star in?", "which (X) does the (X) star in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1048",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) star in?", "What starred in (X)?", "What stars in (X)?", "Where does (X) star?", "which (X) star in (X)?", "which (X) starred in (X)?", "which (X) stars in (X)?", "which (X) was starred in (X)?", "which (X) were starred in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1049",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) star in?", "How many (X) star in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1050",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) rebuild?", "When did the (X) rebuild?", "When was (X) rebuilt?", "When was the (X) rebuilt?", "When were (X) rebuilt?", "When were the (X) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1051",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) rebuilt in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1052",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1053",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) begin at?", "Where is (X) began?", "at which (X)  (X) begin?", "at which (X) are (X) began?", "at which (X) does (X) begin?", "at which (X) does begin (X)?", "at which (X) is (X) began?", "which (X) does (X) begin at?", "which (X) does the (X) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source2Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1054",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What began at (X)?", "What begins at (X)?", "What does (X) begin at?", "Where does (X) begin?", "which (X) began at (X)?", "which (X) begin at (X)?", "which (X) begins at (X)?", "which (X) was began at (X)?", "which (X) were began at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/source2Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1055",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) begin at (X)?", "How many (X) did (X) begin at?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/source2Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1056",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "How many (X) does (X) People live?", "How many People live in (X)?", "How many People lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1057",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1058",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1059",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1060",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1061",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1062",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1063",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1064",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1065",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) play in?", "Where is (X) played?", "in which (X)  (X) play?", "in which (X) are (X) played?", "in which (X) does (X) play?", "in which (X) does play (X)?", "in which (X) is (X) played?", "which (X) does (X) play in?", "which (X) does the (X) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/position> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1066",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) play?", "Who does (X) play in?", "Who played in (X)?", "Who plays in (X)?", "which (X) play in (X)?", "which (X) played in (X)?", "which (X) plays in (X)?", "which (X) was played in (X)?", "which (X) were played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/position> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1067",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) play in?", "How many (X) play in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/position> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1068",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (X) are (X) located?", "in which (X) are the (X)?", "in which (X) is (X) located?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1069",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1070",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1071",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) named?", "Who does (X) name after?", "after which (X)  (X) name?", "after which (X) are (X) named?", "after which (X) does (X) name?", "after which (X) does name (X)?", "after which (X) is (X) named?", "which (X) does (X) name after?", "which (X) does the (X) name after?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1072",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) name after?", "What named after (X)?", "Where does (X) name?", "which (X) name after (X)?", "which (X) named after (X)?", "which (X) was named after (X)?", "which (X) were named after (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/namedAfter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1073",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) name after?", "How many (X) name after (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/namedAfter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1074",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1075",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) belong?", "Who belonged to (X)?", "Who belongs to (X)?", "Who does (X) belong to?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1076",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formerTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1077",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) born?", "When was (X) born?", "in which (X) was (X) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1078",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in (X)?", "which (X) was born in (X)?", "which (X) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1079",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1080",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) complete?", "When did the (X) complete?", "When was (X) completed?", "When was the (X) completed?", "When were (X) completed?", "When were the (X) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1081",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) completed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1082",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1083",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) flow into?", "Where is (X) flown?", "into which (X)  (X) flow?", "into which (X) are (X) flown?", "into which (X) does (X) flow?", "into which (X) does flow (X)?", "into which (X) is (X) flown?", "which (X) does (X) flow into?", "which (X) does the (X) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1084",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) flow into?", "What flowed into (X)?", "What flows into (X)?", "Where does (X) flow?", "which (X) flow into (X)?", "which (X) flowed into (X)?", "which (X) flows into (X)?", "which (X) was flown into (X)?", "which (X) were flown into (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1085",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) flow into?", "How many (X) flow into (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1086",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) fight?", "When did the (X) fight?", "When was (X) fought?", "When was the (X) fought?", "When were (X) fought?", "When were the (X) fought?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1087",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) fought in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1088",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1089",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1090",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) published on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1091",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1092",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) bury?", "Where is (X) buried?", "Where was (X) buried?", "in which (X) did (X) bury?", "which (X) does (X) bury in?", "which (X) was (X) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1093",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were buried in (X)?", "Give me all persons Who were buried in (X)?", "Which people were buried in (X)?", "Who was buried in (X)?", "which (X) was buried in (X)?", "which (X) were buried in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1094",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1095",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "President" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) born?", "When was (X) born?", "in which (X) was (X) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1096",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "President" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in (X)?", "which (X) was born in (X)?", "which (X) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1097",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "President" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1098",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) associate with?", "Where is (X) associated?", "which (X) does (X) associate with?", "which (X) does the (X) associate with?", "with which (X)  (X) associate?", "with which (X) are (X) associated?", "with which (X) does (X) associate?", "with which (X) does associate (X)?", "with which (X) is (X) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1099",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What associated with (X)?", "What does (X) associate with?", "Where does (X) associate?", "which (X) associate with (X)?", "which (X) associated with (X)?", "which (X) was associated with (X)?", "which (X) were associated with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedBand> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1100",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) associate with (X)?", "How many (X) did (X) associate with?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/associatedBand> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1101",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When did the (X) found?", "When was (X) founded?", "When was the (X) founded?", "When were (X) founded?", "When were the (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1102",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1103",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1104",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "MountainRange" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1105",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MountainRange" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mountainRange> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1106",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MountainRange" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mountainRange> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1107",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) form?", "When did the (X) form?", "When was (X) formed?", "When was the (X) formed?", "When were (X) formed?", "When were the (X) formed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1108",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) formed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1109",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1110",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (X) are (X) located?", "in which (X) are the (X)?", "in which (X) is (X) located?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1111",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1112",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1113",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (X) are (X) located?", "in which (X) are the (X)?", "in which (X) is (X) located?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1114",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1115",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1116",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When was (X) founded?", "in which (X) was (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1117",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in (X)?", "which (X) was founded in (X)?", "which (X) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1118",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1119",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) build?", "When did the (X) build?", "When was (X) built?", "When was the (X) built?", "When were (X) built?", "When were the (X) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1120",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) built in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1121",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1122",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) locate in?", "Where is (X) located?", "in which (X)  (X) locate?", "in which (X) are (X) located?", "in which (X) does (X) locate?", "in which (X) does locate (X)?", "in which (X) is (X) located?", "which (X) does (X) locate in?", "which (X) does the (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1123",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (X) locate in (X)?", "which (X) located in (X)?", "which (X) locates in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1124",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) locate in?", "How many (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1125",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (X) are (X) located?", "in which (X) are the (X)?", "in which (X) is (X) located?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1126",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1127",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1128",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) played?", "Who does (X) play in?", "in which (X)  (X) play?", "in which (X) are (X) played?", "in which (X) does (X) play?", "in which (X) does play (X)?", "in which (X) is (X) played?", "which (X) does (X) play in?", "which (X) does the (X) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1129",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) play in?", "What played in (X)?", "What plays in (X)?", "Where does (X) play?", "which (X) play in (X)?", "which (X) played in (X)?", "which (X) plays in (X)?", "which (X) was played in (X)?", "which (X) were played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1130",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) play in?", "How many (X) play in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1131",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/keyPeople> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1132",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/keyPeople> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1133",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/keyPeople> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1134",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) complete?", "When did the (X) complete?", "When was (X) completed?", "When was the (X) completed?", "When were (X) completed?", "When were the (X) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1135",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) completed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1136",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1137",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) rebuild?", "When did the (X) rebuild?", "When was (X) rebuilt?", "When was the (X) rebuilt?", "When were (X) rebuilt?", "When were the (X) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1138",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) rebuilt on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1139",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1140",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "How many (X) does (X) People live?", "How many People live in (X)?", "How many People lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1141",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1142",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1143",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) born?", "Where is (X) born?", "Where was (X) born?", "in which (X) did (X) born?", "which (X) does (X) born in?", "which (X) was (X) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1144",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were born in (X)?", "Give me all persons Who were born in (X)?", "Which people were born in (X)?", "Who was born in (X)?", "which (X) was born in (X)?", "which (X) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1145",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1146",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) dissolve?", "When did the (X) dissolve?", "When was (X) dissolved?", "When was the (X) dissolved?", "When were (X) dissolved?", "When were the (X) dissolved?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1147",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) dissolved on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1148",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1149",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) split ?", "When did the (X) split ?", "When was (X) splited?", "When was the (X) splited?", "When were (X) splited?", "When were the (X) splited?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1150",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) splited up (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1151",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1152",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) die?", "Where is (X) died?", "Where was (X) died?", "in which (X) did (X) die?", "which (X) does (X) die in?", "which (X) was (X) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1153",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all writers that were died in (X)?", "Give me all writers Who were died in (X)?", "Which people were died in (X)?", "Who was died in (X)?", "which (X) was died in (X)?", "which (X) were died in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1154",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1155",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1156",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1157",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1158",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) currently use for?", "Where is (X) currently used?", "for which (X)  (X) currently use?", "for which (X) are (X) currently used?", "for which (X) does (X) currently use?", "for which (X) does currently use (X)?", "for which (X) is (X) currently used?", "which (X) does (X) currently use for?", "which (X) does the (X) currently use for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1159",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What currently used for (X)?", "What currently uses for (X)?", "What does (X) currently use for?", "Where does (X) currently use?", "which (X) currently use for (X)?", "which (X) currently used for (X)?", "which (X) currently uses for (X)?", "which (X) was currently used for (X)?", "which (X) were currently used for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1160",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) currently use for (X)?", "How many (X) did (X) currently use for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1161",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) produce?", "When did the (X) produce?", "When was (X) produced?", "When was the (X) produced?", "When were (X) produced?", "When were the (X) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1162",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) produced in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1163",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1164",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1165",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) belong?", "Who belonged to (X)?", "Who belongs to (X)?", "Who does (X) belong to?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1166",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1167",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1168",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) belong?", "Who belonged to (X)?", "Who belongs to (X)?", "Who does (X) belong to?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1169",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1170",
    "lexicalEntryUri" : "http://localhost:8080#launch_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceStation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) launch from?", "Where is (X) launched?", "from which (X)  (X) launch?", "from which (X) are (X) launched?", "from which (X) does (X) launch?", "from which (X) does launch (X)?", "from which (X) is (X) launched?", "which (X) does (X) launch from?", "which (X) does the (X) launch from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/launchPad> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1171",
    "lexicalEntryUri" : "http://localhost:8080#launch_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "SpaceStation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) launch from?", "What launched from (X)?", "What launches from (X)?", "Where does (X) launch?", "which (X) launch from (X)?", "which (X) launched from (X)?", "which (X) launches from (X)?", "which (X) was launched from (X)?", "which (X) were launched from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/launchPad> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1172",
    "lexicalEntryUri" : "http://localhost:8080#launch_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "SpaceStation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) launch from?", "How many (X) launch from (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/launchPad> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1173",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) produce?", "Where is (X) produced?", "Where was (X) produced?", "in which (X) did (X) produce?", "which (X) does (X) produce in?", "which (X) was (X) produce in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1174",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all company that were produced in (X)?", "Give me all company Who were produced in (X)?", "Which people were produced in (X)?", "Who was produced in (X)?", "which (X) was produced in (X)?", "which (X) were produced in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1175",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1176",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) complete?", "When did the (X) complete?", "When was (X) completed?", "When was the (X) completed?", "When were (X) completed?", "When were the (X) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1177",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) completed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1178",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1179",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "How many (X) does (X) have?", "How many had  (X)?", "How many have  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1180",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1181",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1182",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) grew in (X)?", "What (X) grow in (X)?", "which (X) grew in (X)?", "which (X) grow in (X)?", "which (X) grows in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1183",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which (X) are (X) grown?", "in which (X) does (X) grow?", "in which (X) is (X) grown?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1184",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1185",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) live?", "Where is (X) lived?", "Where was (X) lived?", "in which (X) did (X) live?", "which (X) does (X) live in?", "which (X) was (X) live in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1186",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were lived in (X)?", "Give me all persons Who were lived in (X)?", "Which people were lived in (X)?", "Who was lived in (X)?", "which (X) was lived in (X)?", "which (X) were lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1187",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1188",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) born?", "When was (X) born?", "on which (X) was (X) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1189",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born on (X)?", "which (X) was born on (X)?", "which (X) were born on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1190",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1191",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Infrastructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1192",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Infrastructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1193",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Infrastructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1194",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) commence?", "When did the (X) commence?", "When was (X) commenced?", "When was the (X) commenced?", "When were (X) commenced?", "When were the (X) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1195",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) commenced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1196",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1197",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (X) are (X) located?", "in which (X) are the (X)?", "in which (X) is (X) located?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1198",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1199",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1200",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) border in?", "Where is (X) bordered?", "in which (X)  (X) border?", "in which (X) are (X) bordered?", "in which (X) does (X) border?", "in which (X) does border (X)?", "in which (X) is (X) bordered?", "which (X) does (X) border in?", "which (X) does the (X) border in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1201",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What bordered in (X)?", "What borders in (X)?", "What does (X) border in?", "Where does (X) border?", "which (X) border in (X)?", "which (X) bordered in (X)?", "which (X) borders in (X)?", "which (X) was bordered in (X)?", "which (X) were bordered in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1202",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) border in (X)?", "How many (X) did (X) border in?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1203",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1204",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) published in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1205",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1206",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) record in?", "Where is (X) recored?", "in which (X)  (X) record?", "in which (X) are (X) recored?", "in which (X) does (X) record?", "in which (X) does record (X)?", "in which (X) is (X) recored?", "which (X) does (X) record in?", "which (X) does the (X) record in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1207",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) record in?", "What records in (X)?", "What recored in (X)?", "Where does (X) record?", "which (X) record in (X)?", "which (X) records in (X)?", "which (X) recored in (X)?", "which (X) was recored in (X)?", "which (X) were recored in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/recordedIn> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1208",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) record in?", "How many (X) record in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/recordedIn> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1209",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) stand for?", "Where is (X) stood?", "for which (X)  (X) stand?", "for which (X) are (X) stood?", "for which (X) does (X) stand?", "for which (X) does stand (X)?", "for which (X) is (X) stood?", "which (X) does (X) stand for?", "which (X) does the (X) stand for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1210",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) stand for?", "What stands for (X)?", "What stood for (X)?", "Where does (X) stand?", "which (X) stand for (X)?", "which (X) stands for (X)?", "which (X) stood for (X)?", "which (X) was stood for (X)?", "which (X) were stood for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1211",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) stand for?", "How many (X) stand for (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1212",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) start acting?", "When was (X) started acting?", "on which (X) was (X) started acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1213",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was started acting on (X)?", "which (X) was started acting on (X)?", "which (X) were started acting on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1214",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1215",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) build?", "When did the (X) build?", "When was (X) built?", "When was the (X) built?", "When were (X) built?", "When were the (X) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1216",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) built in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1217",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1218",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1219",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1220",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1221",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) write in?", "Where is (X) wrote?", "in which (X)  (X) write?", "in which (X) are (X) wrote?", "in which (X) does (X) write?", "in which (X) does write (X)?", "in which (X) is (X) wrote?", "which (X) does (X) write in?", "which (X) does the (X) write in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1222",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) write in?", "What writes in (X)?", "What wrote in (X)?", "Where does (X) write?", "which (X) was wrote in (X)?", "which (X) were wrote in (X)?", "which (X) write in (X)?", "which (X) writes in (X)?", "which (X) wrote in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1223",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) write in?", "How many (X) write in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1224",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "RouteOfTransportation" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1225",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "RouteOfTransportation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1226",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "RouteOfTransportation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1227",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) build?", "When did the (X) build?", "When was (X) built?", "When was the (X) built?", "When were (X) built?", "When were the (X) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1228",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) built in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1229",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1230",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) born?", "Where is (X) born?", "Where was (X) born?", "in which (X) did (X) born?", "which (X) does (X) born in?", "which (X) was (X) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1231",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all actors that were born in (X)?", "Give me all actors Who were born in (X)?", "Which people were born in (X)?", "Who was born in (X)?", "which (X) was born in (X)?", "which (X) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1232",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1233",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) locate in?", "Where is (X) located?", "in which (X)  (X) locate?", "in which (X) are (X) located?", "in which (X) does (X) locate?", "in which (X) does locate (X)?", "in which (X) is (X) located?", "which (X) does (X) locate in?", "which (X) does the (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1234",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (X) locate in (X)?", "which (X) located in (X)?", "which (X) locates in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1235",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) locate in?", "How many (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1236",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) reopen?", "When did the (X) reopen?", "When was (X) reopened?", "When was the (X) reopened?", "When were (X) reopened?", "When were the (X) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1237",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) reopened in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1238",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1239",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When did the (X) found?", "When was (X) founded?", "When was the (X) founded?", "When were (X) founded?", "When were the (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1240",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) founded on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1241",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1242",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) destroy?", "When did the (X) destroy?", "When was (X) destroyed?", "When was the (X) destroyed?", "When were (X) destroyed?", "When were the (X) destroyed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1243",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) destroyed on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1244",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1245",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Article" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1246",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Article" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) published in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1247",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Article" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1248",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) inaugurate?", "When did the (X) inaugurate?", "When was (X) inaugurated?", "When was the (X) inaugurated?", "When were (X) inaugurated?", "When were the (X) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1249",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) inaugurated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1250",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1251",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) found?", "Where is (X) founded?", "Where was (X) founded?", "in which (X) did (X) found?", "which (X) does (X) found in?", "which (X) was (X) found in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1252",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all company that were founded in (X)?", "Give me all company Who were founded in (X)?", "Which people were founded in (X)?", "Who was founded in (X)?", "which (X) was founded in (X)?", "which (X) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1253",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1254",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) play in?", "Where is (X) played?", "in which (X)  (X) play?", "in which (X) are (X) played?", "in which (X) does (X) play?", "in which (X) does play (X)?", "in which (X) is (X) played?", "which (X) does (X) play in?", "which (X) does the (X) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1255",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) play?", "Who does (X) play in?", "Who played in (X)?", "Who plays in (X)?", "which (X) play in (X)?", "which (X) played in (X)?", "which (X) plays in (X)?", "which (X) was played in (X)?", "which (X) were played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1256",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) play in?", "How many (X) play in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1257",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1258",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_ACTIVITY",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1259",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1260",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When did the (X) found?", "When was (X) founded?", "When was the (X) founded?", "When were (X) founded?", "When were the (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1261",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1262",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1263",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1264",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1265",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1266",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) inaugurate?", "When did the (X) inaugurate?", "When was (X) inaugurated?", "When was the (X) inaugurated?", "When were (X) inaugurated?", "When were the (X) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1267",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) inaugurated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1268",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1269",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) produce?", "When did the (X) produce?", "When was (X) produced?", "When was the (X) produced?", "When were (X) produced?", "When were the (X) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1270",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) produced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1271",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1272",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) produce?", "When did the (X) produce?", "When was (X) produced?", "When was the (X) produced?", "When were (X) produced?", "When were the (X) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1273",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) produced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1274",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1275",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) come?", "Where is (X) come?", "Where was (X) come?", "from which (X) did (X) come?", "which (X) does (X) come from?", "which (X) was (X) come from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1276",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were come from (X)?", "Give me all persons Who were come from (X)?", "Which people were come from (X)?", "Who was come from (X)?", "which (X) was come from (X)?", "which (X) were come from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1277",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1278",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) flow into?", "Where is (X) flown?", "into which (X)  (X) flow?", "into which (X) are (X) flown?", "into which (X) does (X) flow?", "into which (X) does flow (X)?", "into which (X) is (X) flown?", "which (X) does (X) flow into?", "which (X) does the (X) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1279",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) flow into?", "What flowed into (X)?", "What flows into (X)?", "Where does (X) flow?", "which (X) flow into (X)?", "which (X) flowed into (X)?", "which (X) flows into (X)?", "which (X) was flown into (X)?", "which (X) were flown into (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1280",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) flow into?", "How many (X) flow into (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1281",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1282",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subdivision> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1283",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/subdivision> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1284",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1285",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does (X) belong?", "Who belonged to (X)?", "Who belongs to (X)?", "Who does (X) belong to?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/team> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1286",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/team> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1287",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1288",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) published in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1289",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1290",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) die?", "When was (X) died?", "on which (X) was (X) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1291",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was died on (X)?", "which (X) was died on (X)?", "which (X) were died on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1292",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1293",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) originate in?", "Where is (X) originated?", "in which (X)  (X) originate?", "in which (X) are (X) originated?", "in which (X) does (X) originate?", "in which (X) does originate (X)?", "in which (X) is (X) originated?", "which (X) does (X) originate in?", "which (X) does the (X) originate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1294",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) originate in?", "What originated in (X)?", "What originates in (X)?", "Where does (X) originate?", "which (X) originate in (X)?", "which (X) originated in (X)?", "which (X) originates in (X)?", "which (X) was originated in (X)?", "which (X) were originated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/sourceCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1295",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) originate in?", "How many (X) originate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/sourceCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1296",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When did the (X) found?", "When was (X) founded?", "When was the (X) founded?", "When were (X) founded?", "When were the (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1297",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) founded on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1298",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1299",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (X) are (X) located?", "in which (X) are the (X)?", "in which (X) is (X) located?", "in which (X) is the (X)?", "what (X) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1300",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1301",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1302",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) locate in?", "Where is (X) located?", "in which (X)  (X) locate?", "in which (X) are (X) located?", "in which (X) does (X) locate?", "in which (X) does locate (X)?", "in which (X) is (X) located?", "which (X) does (X) locate in?", "which (X) does the (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1303",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (X) locate in (X)?", "which (X) located in (X)?", "which (X) locates in (X)?", "which (X) was located in (X)?", "which (X) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1304",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) locate in?", "How many (X) locate in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1305",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) introduce?", "When did the (X) introduce?", "When was (X) introduced?", "When was the (X) introduced?", "When were (X) introduced?", "When were the (X) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1306",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) introduced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1307",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1308",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) inaugurate?", "When did the (X) inaugurate?", "When was (X) inaugurated?", "When was the (X) inaugurated?", "When were (X) inaugurated?", "When were the (X) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1309",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) inaugurated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1310",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1311",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) reopen?", "When did the (X) reopen?", "When was (X) reopened?", "When was the (X) reopened?", "When were (X) reopened?", "When were the (X) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1312",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (X) reopened on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1313",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1314",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) find?", "When was (X) founded?", "in which (X) was (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1315",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in (X)?", "which (X) was founded in (X)?", "which (X) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1316",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1317",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) did (X) call ?", "What (X) does (X) call ?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1318",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who is called  (X)?", "Who was called  (X)?", "which (X) are called  (X)?", "which (X) is called  (X)?", "which (X) was called  (X)?", "which (X) were called  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1319",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1320",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did (X) die?", "Where is (X) died?", "Where was (X) died?", "in which (X) did (X) die?", "which (X) does (X) die in?", "which (X) was (X) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1321",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Politician" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all politicians that were died in (X)?", "Give me all politicians Who were died in (X)?", "Which people were died in (X)?", "Who was died in (X)?", "which (X) was died in (X)?", "which (X) were died in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1322",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Politician" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1323",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) grew in (X)?", "What (X) grow in (X)?", "which (X) grew in (X)?", "which (X) grow in (X)?", "which (X) grows in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1324",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which (X) are (X) grown?", "in which (X) does (X) grow?", "in which (X) is (X) grown?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1325",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1326",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) belong to?", "Where is (X) belonged?", "to which (X)  (X) belong?", "to which (X) are (X) belonged?", "to which (X) does (X) belong?", "to which (X) does belong (X)?", "to which (X) is (X) belonged?", "which (X) does (X) belong to?", "which (X) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1327",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to (X)?", "What belongs to (X)?", "What does (X) belong to?", "Where does (X) belong?", "which (X) belong to (X)?", "which (X) belonged to (X)?", "which (X) belongs to (X)?", "which (X) was belonged to (X)?", "which (X) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1328",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) belong to (X)?", "How many (X) did (X) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1329",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "returnVariable" : null,
    "combination" : false
  } ]
}