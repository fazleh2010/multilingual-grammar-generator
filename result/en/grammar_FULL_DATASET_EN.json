{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb_312",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) first to climb.", "List all the persons with first to climb  (X).", "What (Y) is (X) 's first to climb?", "What (Y) is the first to climb  (X)?", "What (Y) is the first to climb  the (X)?", "What (Y) was (X) 's first to climb?", "What (Y) was the first to climb  (X)?", "What (Y) was the first to climb  the (X)?", "which (Y) is the first to climb  (X)?", "which (Y) is the first to climb  the (X)?", "which (Y) was the first to climb  (X)?", "which (Y) was the first to climb  the (X)?", "Who is the first to climb  (X)?", "Who is the first to climb  the (X)?", "Who was the first to climb  (X)?", "Who was the first to climb  the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb_312",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Mountain" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the first to climb  (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb_312",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the first to climb  which (Y)?", "(X) was the first to climb  which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb_312",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first to climb  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#residence_of_259",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) residences.", "Give me all residences of (X).", "Give me the (X) residence.", "Give me the (X) residences.", "List all residences of (X).", "List all the cities with residence of (X).", "List all the residences of (X).", "show me all residences of (X).", "What are the residences of (X)?", "What are the residences of the (X)?", "What is the residence of (X)?", "What is the residence of the (X)?", "What was the residence of (X)?", "What was the residence of the (X)?", "What were the residences of (X)?", "What were the residences of the (X)?", "which (Y) are the residences of (X)?", "which (Y) are the residences of the (X)?", "which (Y) is the residence of (X)?", "which (Y) is the residence of the (X)?", "which (Y) was the residence of (X)?", "which (Y) was the residence of the (X)?", "which (Y) were the residences of (X)?", "which (Y) were the residences of the (X)?", "Who is (X) 's residence?", "Who is the residence of (X)?", "Who is the residence of the (X)?", "Who was (X) 's residence?", "Who was the residence of (X)?", "Who was the residence of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#residence_of_259",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the residence of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#residence_of_259",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the residence of which (Y)?", "(X) was the residence of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#residence_of_259",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many residences does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#residence_of_259",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of (X)?", "the residences of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#deathplace_307",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) death place.", "List all the places with death place of (X).", "What is the death place of (X)?", "What is the death place of the (X)?", "What was the death place of (X)?", "What was the death place of the (X)?", "which (Y) is the death place of (X)?", "which (Y) is the death place of the (X)?", "which (Y) was the death place of (X)?", "which (Y) was the death place of the (X)?", "Who is (X) 's death place?", "Who is the death place of (X)?", "Who is the death place of the (X)?", "Who was (X) 's death place?", "Who was the death place of (X)?", "Who was the death place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#deathplace_307",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the death place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#deathplace_307",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the death place of which (Y)?", "(X) was the death place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#deathplace_307",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#foundingyear_of_374",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) founding year.", "What is the founding year of (X)?", "What is the founding year of the (X)?", "What was the founding year of (X)?", "What was the founding year of the (X)?", "which (Y) is the founding year of (X)?", "which (Y) is the founding year of the (X)?", "which (Y) was the founding year of (X)?", "which (Y) was the founding year of the (X)?", "Who is (X) 's founding year?", "Who is the founding year of (X)?", "Who is the founding year of the (X)?", "Who was (X) 's founding year?", "Who was the founding year of (X)?", "Who was the founding year of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#foundingyear_of_374",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founding year of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#foundingyear_of_374",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founding year of which (Y)?", "(X) was the founding year of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#foundingyear_of_374",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding year of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) holidays.", "Give me all holidays of (X).", "Give me the (X) holiday.", "Give me the (X) holidays.", "List all holidays of (X).", "List all the holidays of (X).", "show me all holidays of (X).", "What (Y) is (X) 's holiday?", "What (Y) is the holiday of (X)?", "What (Y) is the holiday of the (X)?", "What (Y) was (X) 's holiday?", "What (Y) was the holiday of (X)?", "What (Y) was the holiday of the (X)?", "What are the holidays of (X)?", "What are the holidays of the (X)?", "What is the holiday of (X)?", "What is the holiday of the (X)?", "What was the holiday of (X)?", "What was the holiday of the (X)?", "What were the holidays of (X)?", "What were the holidays of the (X)?", "which (Y) are the holidays of (X)?", "which (Y) are the holidays of the (X)?", "which (Y) is the holiday of (X)?", "which (Y) is the holiday of the (X)?", "which (Y) was the holiday of (X)?", "which (Y) was the holiday of the (X)?", "which (Y) were the holidays of (X)?", "which (Y) were the holidays of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the holiday of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the holiday of which (Y)?", "(X) was the holiday of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many holidays does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the holiday of (X)?", "the holidays of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) holidays.", "Give me all holidays of (X).", "Give me the (X) holiday.", "Give me the (X) holidays.", "List all holidays of (X).", "List all the holidays of (X).", "show me all holidays of (X).", "What (Y) is (X) 's holiday?", "What (Y) is the holiday of (X)?", "What (Y) is the holiday of the (X)?", "What (Y) was (X) 's holiday?", "What (Y) was the holiday of (X)?", "What (Y) was the holiday of the (X)?", "What are the holidays of (X)?", "What are the holidays of the (X)?", "What is the holiday of (X)?", "What is the holiday of the (X)?", "What was the holiday of (X)?", "What was the holiday of the (X)?", "What were the holidays of (X)?", "What were the holidays of the (X)?", "which (Y) are the holidays of (X)?", "which (Y) are the holidays of the (X)?", "which (Y) is the holiday of (X)?", "which (Y) is the holiday of the (X)?", "which (Y) was the holiday of (X)?", "which (Y) was the holiday of the (X)?", "which (Y) were the holidays of (X)?", "which (Y) were the holidays of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the holiday of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the holiday of which (Y)?", "(X) was the holiday of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many holidays does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the holiday of (X)?", "the holidays of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#president-of_254",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What are the presidents of (X)?", "What are the presidents of the (X)?", "What is the president of (X)?", "What is the president of the (X)?", "What was the president of (X)?", "What was the president of the (X)?", "What were the presidents of (X)?", "What were the presidents of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who is (X) 's president?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was (X) 's president?", "Who was the president of (X)?", "Who was the president of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#president-of_254",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#president-of_254",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#president-of_254",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#president-of_254",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#flag-of_272",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) flags.", "Give me all flags of (X).", "Give me the (X) flag.", "Give me the (X) flags.", "List all flags of (X).", "List all the flags of (X).", "show me all flags of (X).", "What (Y) is (X) 's flag?", "What (Y) is the flag of (X)?", "What (Y) is the flag of the (X)?", "What (Y) was (X) 's flag?", "What (Y) was the flag of (X)?", "What (Y) was the flag of the (X)?", "What are the flags of (X)?", "What are the flags of the (X)?", "What is the flag of (X)?", "What is the flag of the (X)?", "What was the flag of (X)?", "What was the flag of the (X)?", "What were the flags of (X)?", "What were the flags of the (X)?", "which (Y) are the flags of (X)?", "which (Y) are the flags of the (X)?", "which (Y) is the flag of (X)?", "which (Y) is the flag of the (X)?", "which (Y) was the flag of (X)?", "which (Y) was the flag of the (X)?", "which (Y) were the flags of (X)?", "which (Y) were the flags of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/flag> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#flag-of_272",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the flag of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/flag> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#flag-of_272",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the flag of which (Y)?", "(X) was the flag of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/flag> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#flag-of_272",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many flags does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/flag> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#flag-of_272",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the flag of (X)?", "the flags of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/flag> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#book-in_291",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) books.", "Give me all books in (X).", "Give me the (X) book.", "Give me the (X) books.", "List all books in (X).", "List all the books in (X).", "List all the television shows with book in (X).", "show me all books in (X).", "What (Y) is (X) 's book?", "What (Y) is the book in (X)?", "What (Y) is the book in the (X)?", "What (Y) was (X) 's book?", "What (Y) was the book in (X)?", "What (Y) was the book in the (X)?", "What are the books in (X)?", "What are the books in the (X)?", "What is the book in (X)?", "What is the book in the (X)?", "What was the book in (X)?", "What was the book in the (X)?", "What were the books in (X)?", "What were the books in the (X)?", "which (Y) are the books in (X)?", "which (Y) are the books in the (X)?", "which (Y) is the book in (X)?", "which (Y) is the book in the (X)?", "which (Y) was the book in (X)?", "which (Y) was the book in the (X)?", "which (Y) were the books in (X)?", "which (Y) were the books in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#book-in_291",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow", "Book" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the book in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#book-in_291",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the book in which (Y)?", "(X) was the book in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#book-in_291",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many books does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#book-in_291",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in (X)?", "the books in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (Y) is (X) 's president?", "What (Y) is the president of (X)?", "What (Y) is the president of the (X)?", "What (Y) was (X) 's president?", "What (Y) was the president of (X)?", "What (Y) was the president of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (Y) is (X) 's president?", "What (Y) is the president of (X)?", "What (Y) is the president of the (X)?", "What (Y) was (X) 's president?", "What (Y) was the president of (X)?", "What (Y) was the president of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (Y) is (X) 's president?", "What (Y) is the president of (X)?", "What (Y) is the president of the (X)?", "What (Y) was (X) 's president?", "What (Y) was the president of (X)?", "What (Y) was the president of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (Y) is (X) 's president?", "What (Y) is the president of (X)?", "What (Y) is the president of the (X)?", "What (Y) was (X) 's president?", "What (Y) was the president of (X)?", "What (Y) was the president of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) authors.", "Give me all authors of (X).", "Give me the (X) author.", "Give me the (X) authors.", "List all authors of (X).", "List all the authors of (X).", "List all the persons with author of (X).", "show me all authors of (X).", "What (Y) is (X) 's author?", "What (Y) is the author of (X)?", "What (Y) is the author of the (X)?", "What (Y) was (X) 's author?", "What (Y) was the author of (X)?", "What (Y) was the author of the (X)?", "which (Y) are the authors of (X)?", "which (Y) are the authors of the (X)?", "which (Y) is the author of (X)?", "which (Y) is the author of the (X)?", "which (Y) was the author of (X)?", "which (Y) was the author of the (X)?", "which (Y) were the authors of (X)?", "which (Y) were the authors of the (X)?", "Who are the authors of (X)?", "Who are the authors of the (X)?", "Who is the author of (X)?", "Who is the author of the (X)?", "Who was the author of (X)?", "Who was the author of the (X)?", "Who were the authors of (X)?", "Who were the authors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the author of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the author of which (Y)?", "(X) was the author of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many authors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of (X)?", "the authors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) authors.", "Give me all authors of (X).", "Give me the (X) author.", "Give me the (X) authors.", "List all authors of (X).", "List all the authors of (X).", "List all the persons with author of (X).", "show me all authors of (X).", "What (Y) is (X) 's author?", "What (Y) is the author of (X)?", "What (Y) is the author of the (X)?", "What (Y) was (X) 's author?", "What (Y) was the author of (X)?", "What (Y) was the author of the (X)?", "which (Y) are the authors of (X)?", "which (Y) are the authors of the (X)?", "which (Y) is the author of (X)?", "which (Y) is the author of the (X)?", "which (Y) was the author of (X)?", "which (Y) was the author of the (X)?", "which (Y) were the authors of (X)?", "which (Y) were the authors of the (X)?", "Who are the authors of (X)?", "Who are the authors of the (X)?", "Who is the author of (X)?", "Who is the author of the (X)?", "Who was the author of (X)?", "Who was the author of the (X)?", "Who were the authors of (X)?", "Who were the authors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the author of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the author of which (Y)?", "(X) was the author of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many authors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of (X)?", "the authors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) authors.", "Give me all authors of (X).", "Give me the (X) author.", "Give me the (X) authors.", "List all authors of (X).", "List all the authors of (X).", "List all the persons with author of (X).", "show me all authors of (X).", "What (Y) is (X) 's author?", "What (Y) is the author of (X)?", "What (Y) is the author of the (X)?", "What (Y) was (X) 's author?", "What (Y) was the author of (X)?", "What (Y) was the author of the (X)?", "which (Y) are the authors of (X)?", "which (Y) are the authors of the (X)?", "which (Y) is the author of (X)?", "which (Y) is the author of the (X)?", "which (Y) was the author of (X)?", "which (Y) was the author of the (X)?", "which (Y) were the authors of (X)?", "which (Y) were the authors of the (X)?", "Who are the authors of (X)?", "Who are the authors of the (X)?", "Who is the author of (X)?", "Who is the author of the (X)?", "Who was the author of (X)?", "Who was the author of the (X)?", "Who were the authors of (X)?", "Who were the authors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the author of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the author of which (Y)?", "(X) was the author of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many authors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of (X)?", "the authors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of_375",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) foundation series.", "Give me all foundation series of (X).", "Give me the (X) foundation series.", "List all foundation series of (X).", "List all the foundation series of (X).", "List all the persons with foundation series of (X).", "show me all foundation series of (X).", "What (Y) is (X) 's foundation series?", "What (Y) is the foundation series of (X)?", "What (Y) is the foundation series of the (X)?", "What (Y) was (X) 's foundation series?", "What (Y) was the foundation series of (X)?", "What (Y) was the foundation series of the (X)?", "which (Y) are the foundation series of (X)?", "which (Y) are the foundation series of the (X)?", "which (Y) is the foundation series of (X)?", "which (Y) is the foundation series of the (X)?", "which (Y) was the foundation series of (X)?", "which (Y) was the foundation series of the (X)?", "which (Y) were the foundation series of (X)?", "which (Y) were the foundation series of the (X)?", "Who are the foundation series of (X)?", "Who are the foundation series of the (X)?", "Who is the foundation series of (X)?", "Who is the foundation series of the (X)?", "Who was the foundation series of (X)?", "Who was the foundation series of the (X)?", "Who were the foundation series of (X)?", "Who were the foundation series of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of_375",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the foundation series of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of_375",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the foundation series of which (Y)?", "(X) was the foundation series of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of_375",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many foundation series does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of_375",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation series of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) TV show.", "Give me all TV show with (X).", "Give me the (X) TV show.", "List all the actors with TV show with (X).", "List all the TV show with (X).", "List all TV show with (X).", "show me all TV show with (X).", "which (Y) are the TV show with (X)?", "which (Y) are the TV show with the (X)?", "which (Y) is the TV show with (X)?", "which (Y) is the TV show with the (X)?", "which (Y) was the TV show with (X)?", "which (Y) was the TV show with the (X)?", "which (Y) were the TV show with (X)?", "which (Y) were the TV show with the (X)?", "Who are the TV show with (X)?", "Who are the TV show with the (X)?", "Who is (X) 's TV show?", "Who is the TV show with (X)?", "Who is the TV show with the (X)?", "Who was (X) 's TV show?", "Who was the TV show with (X)?", "Who was the TV show with the (X)?", "Who were the TV show with (X)?", "Who were the TV show with the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the TV show with (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Actor" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the TV show with which (Y)?", "(X) was the TV show with which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many TV show does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the TV show with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) TV show.", "Give me all TV show with (X).", "Give me the (X) TV show.", "List all the actors with TV show with (X).", "List all the TV show with (X).", "List all TV show with (X).", "show me all TV show with (X).", "which (Y) are the TV show with (X)?", "which (Y) are the TV show with the (X)?", "which (Y) is the TV show with (X)?", "which (Y) is the TV show with the (X)?", "which (Y) was the TV show with (X)?", "which (Y) was the TV show with the (X)?", "which (Y) were the TV show with (X)?", "which (Y) were the TV show with the (X)?", "Who are the TV show with (X)?", "Who are the TV show with the (X)?", "Who is (X) 's TV show?", "Who is the TV show with (X)?", "Who is the TV show with the (X)?", "Who was (X) 's TV show?", "Who was the TV show with (X)?", "Who was the TV show with the (X)?", "Who were the TV show with (X)?", "Who were the TV show with the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "89",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the TV show with (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Actor" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the TV show with which (Y)?", "(X) was the TV show with which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many TV show does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the TV show with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) countries.", "Give me all countries from (X).", "Give me the (X) countries.", "Give me the (X) country.", "List all countries from (X).", "List all the cities with country from (X).", "List all the countries from (X).", "show me all countries from (X).", "What are the countries from (X)?", "What are the countries from the (X)?", "What is the country from (X)?", "What is the country from the (X)?", "What was the country from (X)?", "What was the country from the (X)?", "What were the countries from (X)?", "What were the countries from the (X)?", "which (Y) are the countries from (X)?", "which (Y) are the countries from the (X)?", "which (Y) is the country from (X)?", "which (Y) is the country from the (X)?", "which (Y) was the country from (X)?", "which (Y) was the country from the (X)?", "which (Y) were the countries from (X)?", "which (Y) were the countries from the (X)?", "Who is (X) 's country?", "Who is the country from (X)?", "Who is the country from the (X)?", "Who was (X) 's country?", "Who was the country from (X)?", "Who was the country from the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the country from (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the country from which (Y)?", "(X) was the country from which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many countries does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the countries from (X)?", "the country from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) countries.", "Give me all countries from (X).", "Give me the (X) countries.", "Give me the (X) country.", "List all countries from (X).", "List all the cities with country from (X).", "List all the countries from (X).", "show me all countries from (X).", "What are the countries from (X)?", "What are the countries from the (X)?", "What is the country from (X)?", "What is the country from the (X)?", "What was the country from (X)?", "What was the country from the (X)?", "What were the countries from (X)?", "What were the countries from the (X)?", "which (Y) are the countries from (X)?", "which (Y) are the countries from the (X)?", "which (Y) is the country from (X)?", "which (Y) is the country from the (X)?", "which (Y) was the country from (X)?", "which (Y) was the country from the (X)?", "which (Y) were the countries from (X)?", "which (Y) were the countries from the (X)?", "Who is (X) 's country?", "Who is the country from (X)?", "Who is the country from the (X)?", "Who was (X) 's country?", "Who was the country from (X)?", "Who was the country from the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the country from (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the country from which (Y)?", "(X) was the country from which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many countries does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the countries from (X)?", "the country from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) location.", "List all the countries with location of (X).", "What (Y) is (X) 's location?", "What (Y) is the location of (X)?", "What (Y) is the location of the (X)?", "What (Y) was (X) 's location?", "What (Y) was the location of (X)?", "What (Y) was the location of the (X)?", "What is the location of (X)?", "What is the location of the (X)?", "What was the location of (X)?", "What was the location of the (X)?", "which (Y) is the location of (X)?", "which (Y) is the location of the (X)?", "which (Y) was the location of (X)?", "which (Y) was the location of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "104",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Mountain" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the location of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the location of which (Y)?", "(X) was the location of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) location.", "List all the countries with location of (X).", "What (Y) is (X) 's location?", "What (Y) is the location of (X)?", "What (Y) is the location of the (X)?", "What (Y) was (X) 's location?", "What (Y) was the location of (X)?", "What (Y) was the location of the (X)?", "What is the location of (X)?", "What is the location of the (X)?", "What was the location of (X)?", "What was the location of the (X)?", "which (Y) is the location of (X)?", "which (Y) is the location of the (X)?", "which (Y) was the location of (X)?", "which (Y) was the location of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Mountain" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the location of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the location of which (Y)?", "(X) was the location of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) location.", "List all the countries with location of (X).", "What (Y) is (X) 's location?", "What (Y) is the location of (X)?", "What (Y) is the location of the (X)?", "What (Y) was (X) 's location?", "What (Y) was the location of (X)?", "What (Y) was the location of the (X)?", "What is the location of (X)?", "What is the location of the (X)?", "What was the location of (X)?", "What was the location of the (X)?", "which (Y) is the location of (X)?", "which (Y) is the location of the (X)?", "which (Y) was the location of (X)?", "which (Y) was the location of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Mountain" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the location of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the location of which (Y)?", "(X) was the location of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#composer-of_275",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) music composers.", "Give me all music composers of (X).", "Give me the (X) music composer.", "Give me the (X) music composers.", "List all music composers of (X).", "List all the music composers of (X).", "List all the persons with music composer of (X).", "show me all music composers of (X).", "What (Y) is (X) 's music composer?", "What (Y) is the music composer of (X)?", "What (Y) is the music composer of the (X)?", "What (Y) was (X) 's music composer?", "What (Y) was the music composer of (X)?", "What (Y) was the music composer of the (X)?", "which (Y) are the music composers of (X)?", "which (Y) are the music composers of the (X)?", "which (Y) is the music composer of (X)?", "which (Y) is the music composer of the (X)?", "which (Y) was the music composer of (X)?", "which (Y) was the music composer of the (X)?", "which (Y) were the music composers of (X)?", "which (Y) were the music composers of the (X)?", "Who are the music composers of (X)?", "Who are the music composers of the (X)?", "Who is the music composer of (X)?", "Who is the music composer of the (X)?", "Who was the music composer of (X)?", "Who was the music composer of the (X)?", "Who were the music composers of (X)?", "Who were the music composers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "116",
    "lexicalEntryUri" : "http://localhost:8080#composer-of_275",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the music composer of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#composer-of_275",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the music composer of which (Y)?", "(X) was the music composer of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#composer-of_275",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many music composers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#composer-of_275",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of (X)?", "the music composers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) federal chancellors.", "Give me all federal chancellors of (X).", "Give me the (X) federal chancellor.", "Give me the (X) federal chancellors.", "List all federal chancellors of (X).", "List all the cities with federal chancellor of (X).", "List all the federal chancellors of (X).", "show me all federal chancellors of (X).", "What are the federal chancellors of (X)?", "What are the federal chancellors of the (X)?", "What is the federal chancellor of (X)?", "What is the federal chancellor of the (X)?", "What was the federal chancellor of (X)?", "What was the federal chancellor of the (X)?", "What were the federal chancellors of (X)?", "What were the federal chancellors of the (X)?", "which (Y) are the federal chancellors of (X)?", "which (Y) are the federal chancellors of the (X)?", "which (Y) is the federal chancellor of (X)?", "which (Y) is the federal chancellor of the (X)?", "which (Y) was the federal chancellor of (X)?", "which (Y) was the federal chancellor of the (X)?", "which (Y) were the federal chancellors of (X)?", "which (Y) were the federal chancellors of the (X)?", "Who is (X) 's federal chancellor?", "Who is the federal chancellor of (X)?", "Who is the federal chancellor of the (X)?", "Who was (X) 's federal chancellor?", "Who was the federal chancellor of (X)?", "Who was the federal chancellor of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the federal chancellor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the federal chancellor of which (Y)?", "(X) was the federal chancellor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many federal chancellors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the federal chancellor of (X)?", "the federal chancellors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) federal chancellors.", "Give me all federal chancellors of (X).", "Give me the (X) federal chancellor.", "Give me the (X) federal chancellors.", "List all federal chancellors of (X).", "List all the cities with federal chancellor of (X).", "List all the federal chancellors of (X).", "show me all federal chancellors of (X).", "What are the federal chancellors of (X)?", "What are the federal chancellors of the (X)?", "What is the federal chancellor of (X)?", "What is the federal chancellor of the (X)?", "What was the federal chancellor of (X)?", "What was the federal chancellor of the (X)?", "What were the federal chancellors of (X)?", "What were the federal chancellors of the (X)?", "which (Y) are the federal chancellors of (X)?", "which (Y) are the federal chancellors of the (X)?", "which (Y) is the federal chancellor of (X)?", "which (Y) is the federal chancellor of the (X)?", "which (Y) was the federal chancellor of (X)?", "which (Y) was the federal chancellor of the (X)?", "which (Y) were the federal chancellors of (X)?", "which (Y) were the federal chancellors of the (X)?", "Who is (X) 's federal chancellor?", "Who is the federal chancellor of (X)?", "Who is the federal chancellor of the (X)?", "Who was (X) 's federal chancellor?", "Who was the federal chancellor of (X)?", "Who was the federal chancellor of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the federal chancellor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the federal chancellor of which (Y)?", "(X) was the federal chancellor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "128",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many federal chancellors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the federal chancellor of (X)?", "the federal chancellors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#city-of_321",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) cities.", "Give me all cities of (X).", "Give me the (X) cities.", "Give me the (X) city.", "List all cities of (X).", "List all the cities of (X).", "List all the cities with city of (X).", "show me all cities of (X).", "What (Y) is (X) 's city?", "What (Y) is the city of (X)?", "What (Y) is the city of the (X)?", "What (Y) was (X) 's city?", "What (Y) was the city of (X)?", "What (Y) was the city of the (X)?", "What are the cities of (X)?", "What are the cities of the (X)?", "What is the city of (X)?", "What is the city of the (X)?", "What was the city of (X)?", "What was the city of the (X)?", "What were the cities of (X)?", "What were the cities of the (X)?", "which (Y) are the cities of (X)?", "which (Y) are the cities of the (X)?", "which (Y) is the city of (X)?", "which (Y) is the city of the (X)?", "which (Y) was the city of (X)?", "which (Y) was the city of the (X)?", "which (Y) were the cities of (X)?", "which (Y) were the cities of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#city-of_321",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "AdministrativeRegion" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the city of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#city-of_321",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the city of which (Y)?", "(X) was the city of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "133",
    "lexicalEntryUri" : "http://localhost:8080#city-of_321",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many cities does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#city-of_321",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities of (X)?", "the city of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) members.", "Give me all members of (X).", "Give me the (X) member.", "Give me the (X) members.", "List all members of (X).", "List all the members of (X).", "List all the musical artists with member of (X).", "show me all members of (X).", "What (Y) is (X) 's member?", "What (Y) is the member of (X)?", "What (Y) is the member of the (X)?", "What (Y) was (X) 's member?", "What (Y) was the member of (X)?", "What (Y) was the member of the (X)?", "which (Y) are the members of (X)?", "which (Y) are the members of the (X)?", "which (Y) is the member of (X)?", "which (Y) is the member of the (X)?", "which (Y) was the member of (X)?", "which (Y) was the member of the (X)?", "which (Y) were the members of (X)?", "which (Y) were the members of the (X)?", "Who are the members of (X)?", "Who are the members of the (X)?", "Who is the member of (X)?", "Who is the member of the (X)?", "Who was the member of (X)?", "Who was the member of the (X)?", "Who were the members of (X)?", "Who were the members of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist", "Band" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the member of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the member of which (Y)?", "(X) was the member of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "138",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many members does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of (X)?", "the members of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) members.", "Give me all members of (X).", "Give me the (X) member.", "Give me the (X) members.", "List all members of (X).", "List all the members of (X).", "List all the musical artists with member of (X).", "show me all members of (X).", "What (Y) is (X) 's member?", "What (Y) is the member of (X)?", "What (Y) is the member of the (X)?", "What (Y) was (X) 's member?", "What (Y) was the member of (X)?", "What (Y) was the member of the (X)?", "which (Y) are the members of (X)?", "which (Y) are the members of the (X)?", "which (Y) is the member of (X)?", "which (Y) is the member of the (X)?", "which (Y) was the member of (X)?", "which (Y) was the member of the (X)?", "which (Y) were the members of (X)?", "which (Y) were the members of the (X)?", "Who are the members of (X)?", "Who are the members of the (X)?", "Who is the member of (X)?", "Who is the member of the (X)?", "Who was the member of (X)?", "Who was the member of the (X)?", "Who were the members of (X)?", "Who were the members of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist", "Band" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the member of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the member of which (Y)?", "(X) was the member of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "143",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many members does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of (X)?", "the members of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) members.", "Give me all members of (X).", "Give me the (X) member.", "Give me the (X) members.", "List all members of (X).", "List all the members of (X).", "List all the musical artists with member of (X).", "show me all members of (X).", "What (Y) is (X) 's member?", "What (Y) is the member of (X)?", "What (Y) is the member of the (X)?", "What (Y) was (X) 's member?", "What (Y) was the member of (X)?", "What (Y) was the member of the (X)?", "which (Y) are the members of (X)?", "which (Y) are the members of the (X)?", "which (Y) is the member of (X)?", "which (Y) is the member of the (X)?", "which (Y) was the member of (X)?", "which (Y) was the member of the (X)?", "which (Y) were the members of (X)?", "which (Y) were the members of the (X)?", "Who are the members of (X)?", "Who are the members of the (X)?", "Who is the member of (X)?", "Who is the member of the (X)?", "Who was the member of (X)?", "Who was the member of the (X)?", "Who were the members of (X)?", "Who were the members of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist", "Band" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the member of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the member of which (Y)?", "(X) was the member of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "148",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many members does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of (X)?", "the members of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#city-in_238",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) cities.", "Give me all cities in (X).", "Give me the (X) cities.", "Give me the (X) city.", "List all cities in (X).", "List all the cities in (X).", "List all the cities with city in (X).", "show me all cities in (X).", "What (Y) is (X) 's city?", "What (Y) is the city in (X)?", "What (Y) is the city in the (X)?", "What (Y) was (X) 's city?", "What (Y) was the city in (X)?", "What (Y) was the city in the (X)?", "What are the cities in (X)?", "What are the cities in the (X)?", "What is the city in (X)?", "What is the city in the (X)?", "What was the city in (X)?", "What was the city in the (X)?", "What were the cities in (X)?", "What were the cities in the (X)?", "which (Y) are the cities in (X)?", "which (Y) are the cities in the (X)?", "which (Y) is the city in (X)?", "which (Y) is the city in the (X)?", "which (Y) was the city in (X)?", "which (Y) was the city in the (X)?", "which (Y) were the cities in (X)?", "which (Y) were the cities in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#city-in_238",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "AdministrativeRegion" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the city in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#city-in_238",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the city in which (Y)?", "(X) was the city in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "153",
    "lexicalEntryUri" : "http://localhost:8080#city-in_238",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many cities does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#city-in_238",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities in (X)?", "the city in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) movies.", "Give me all movies of (X).", "Give me the (X) movie.", "Give me the (X) movies.", "List all movies of (X).", "List all the movies of (X).", "show me all movies of (X).", "What are the movies of (X)?", "What are the movies of the (X)?", "What is the movie of (X)?", "What is the movie of the (X)?", "What was the movie of (X)?", "What was the movie of the (X)?", "What were the movies of (X)?", "What were the movies of the (X)?", "which (Y) are the movies of (X)?", "which (Y) are the movies of the (X)?", "which (Y) is the movie of (X)?", "which (Y) is the movie of the (X)?", "which (Y) was the movie of (X)?", "which (Y) was the movie of the (X)?", "which (Y) were the movies of (X)?", "which (Y) were the movies of the (X)?", "Who is (X) 's movie?", "Who is the movie of (X)?", "Who is the movie of the (X)?", "Who was (X) 's movie?", "Who was the movie of (X)?", "Who was the movie of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the movie of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the movie of which (Y)?", "(X) was the movie of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "158",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many movies does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the movie of (X)?", "the movies of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) movies.", "Give me all movies of (X).", "Give me the (X) movie.", "Give me the (X) movies.", "List all movies of (X).", "List all the movies of (X).", "show me all movies of (X).", "What are the movies of (X)?", "What are the movies of the (X)?", "What is the movie of (X)?", "What is the movie of the (X)?", "What was the movie of (X)?", "What was the movie of the (X)?", "What were the movies of (X)?", "What were the movies of the (X)?", "which (Y) are the movies of (X)?", "which (Y) are the movies of the (X)?", "which (Y) is the movie of (X)?", "which (Y) is the movie of the (X)?", "which (Y) was the movie of (X)?", "which (Y) was the movie of the (X)?", "which (Y) were the movies of (X)?", "which (Y) were the movies of the (X)?", "Who is (X) 's movie?", "Who is the movie of (X)?", "Who is the movie of the (X)?", "Who was (X) 's movie?", "Who was the movie of (X)?", "Who was the movie of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the movie of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the movie of which (Y)?", "(X) was the movie of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "163",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many movies does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the movie of (X)?", "the movies of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#birthyear_of_327",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) birth year.", "What is the birth year of (X)?", "What is the birth year of the (X)?", "What was the birth year of (X)?", "What was the birth year of the (X)?", "which (Y) is the birth year of (X)?", "which (Y) is the birth year of the (X)?", "which (Y) was the birth year of (X)?", "which (Y) was the birth year of the (X)?", "Who is (X) 's birth year?", "Who is the birth year of (X)?", "Who is the birth year of the (X)?", "Who was (X) 's birth year?", "Who was the birth year of (X)?", "Who was the birth year of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#birthyear_of_327",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth year of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "167",
    "lexicalEntryUri" : "http://localhost:8080#birthyear_of_327",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth year of which (Y)?", "(X) was the birth year of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#birthyear_of_327",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth year of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#foundationplace_of_360",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) foundation place.", "List all the cities with foundation place of (X).", "What is the foundation place of (X)?", "What is the foundation place of the (X)?", "What was the foundation place of (X)?", "What was the foundation place of the (X)?", "which (Y) is the foundation place of (X)?", "which (Y) is the foundation place of the (X)?", "which (Y) was the foundation place of (X)?", "which (Y) was the foundation place of the (X)?", "Who is (X) 's foundation place?", "Who is the foundation place of (X)?", "Who is the foundation place of the (X)?", "Who was (X) 's foundation place?", "Who was the foundation place of (X)?", "Who was the foundation place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#foundationplace_of_360",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the foundation place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#foundationplace_of_360",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the foundation place of which (Y)?", "(X) was the foundation place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#foundationplace_of_360",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) origin.", "List all the countries with origin of (X).", "What (Y) is (X) 's origin?", "What (Y) is the origin of (X)?", "What (Y) is the origin of the (X)?", "What (Y) was (X) 's origin?", "What (Y) was the origin of (X)?", "What (Y) was the origin of the (X)?", "What is the origin of (X)?", "What is the origin of the (X)?", "What was the origin of (X)?", "What was the origin of the (X)?", "which (Y) is the origin of (X)?", "which (Y) is the origin of the (X)?", "which (Y) was the origin of (X)?", "which (Y) was the origin of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "174",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the origin of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the origin of which (Y)?", "(X) was the origin of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the origin of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) origin.", "List all the countries with origin of (X).", "What (Y) is (X) 's origin?", "What (Y) is the origin of (X)?", "What (Y) is the origin of the (X)?", "What (Y) was (X) 's origin?", "What (Y) was the origin of (X)?", "What (Y) was the origin of the (X)?", "What is the origin of (X)?", "What is the origin of the (X)?", "What was the origin of (X)?", "What was the origin of the (X)?", "which (Y) is the origin of (X)?", "which (Y) is the origin of the (X)?", "which (Y) was the origin of (X)?", "which (Y) was the origin of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "178",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the origin of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the origin of which (Y)?", "(X) was the origin of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the origin of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#programminglanguage_of_339",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) programming languages.", "Give me all programming languages of (X).", "Give me the (X) programming language.", "Give me the (X) programming languages.", "List all programming languages of (X).", "List all the languages with programming language of (X).", "List all the programming languages of (X).", "show me all programming languages of (X).", "What (Y) is (X) 's programming language?", "What (Y) is the programming language of (X)?", "What (Y) is the programming language of the (X)?", "What (Y) was (X) 's programming language?", "What (Y) was the programming language of (X)?", "What (Y) was the programming language of the (X)?", "What are the programming languages of (X)?", "What are the programming languages of the (X)?", "What is the programming language of (X)?", "What is the programming language of the (X)?", "What was the programming language of (X)?", "What was the programming language of the (X)?", "What were the programming languages of (X)?", "What were the programming languages of the (X)?", "which (Y) are the programming languages of (X)?", "which (Y) are the programming languages of the (X)?", "which (Y) is the programming language of (X)?", "which (Y) is the programming language of the (X)?", "which (Y) was the programming language of (X)?", "which (Y) was the programming language of the (X)?", "which (Y) were the programming languages of (X)?", "which (Y) were the programming languages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "182",
    "lexicalEntryUri" : "http://localhost:8080#programminglanguage_of_339",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the programming language of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "183",
    "lexicalEntryUri" : "http://localhost:8080#programminglanguage_of_339",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the programming language of which (Y)?", "(X) was the programming language of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#programminglanguage_of_339",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many programming languages does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#programminglanguage_of_339",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the programming language of (X)?", "the programming languages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) total amount of employee.", "Give me all total amount of employee of (X).", "Give me the (X) total amount of employee.", "List all the agents with total amount of employee of (X).", "List all the total amount of employee of (X).", "List all total amount of employee of (X).", "show me all total amount of employee of (X).", "What (Y) is (X) 's total amount of employee?", "What (Y) is the total amount of employee of (X)?", "What (Y) is the total amount of employee of the (X)?", "What (Y) was (X) 's total amount of employee?", "What (Y) was the total amount of employee of (X)?", "What (Y) was the total amount of employee of the (X)?", "which (Y) are the total amount of employee of (X)?", "which (Y) are the total amount of employee of the (X)?", "which (Y) is the total amount of employee of (X)?", "which (Y) is the total amount of employee of the (X)?", "which (Y) was the total amount of employee of (X)?", "which (Y) was the total amount of employee of the (X)?", "which (Y) were the total amount of employee of (X)?", "which (Y) were the total amount of employee of the (X)?", "Who are the total amount of employee of (X)?", "Who are the total amount of employee of the (X)?", "Who is the total amount of employee of (X)?", "Who is the total amount of employee of the (X)?", "Who was the total amount of employee of (X)?", "Who was the total amount of employee of the (X)?", "Who were the total amount of employee of (X)?", "Who were the total amount of employee of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "187",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Event" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the total amount of employee of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "188",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the total amount of employee of which (Y)?", "(X) was the total amount of employee of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many total amount of employee does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the total amount of employee of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) total amount of employee.", "Give me all total amount of employee of (X).", "Give me the (X) total amount of employee.", "List all the agents with total amount of employee of (X).", "List all the total amount of employee of (X).", "List all total amount of employee of (X).", "show me all total amount of employee of (X).", "What (Y) is (X) 's total amount of employee?", "What (Y) is the total amount of employee of (X)?", "What (Y) is the total amount of employee of the (X)?", "What (Y) was (X) 's total amount of employee?", "What (Y) was the total amount of employee of (X)?", "What (Y) was the total amount of employee of the (X)?", "which (Y) are the total amount of employee of (X)?", "which (Y) are the total amount of employee of the (X)?", "which (Y) is the total amount of employee of (X)?", "which (Y) is the total amount of employee of the (X)?", "which (Y) was the total amount of employee of (X)?", "which (Y) was the total amount of employee of the (X)?", "which (Y) were the total amount of employee of (X)?", "which (Y) were the total amount of employee of the (X)?", "Who are the total amount of employee of (X)?", "Who are the total amount of employee of the (X)?", "Who is the total amount of employee of (X)?", "Who is the total amount of employee of the (X)?", "Who was the total amount of employee of (X)?", "Who was the total amount of employee of the (X)?", "Who were the total amount of employee of (X)?", "Who were the total amount of employee of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "192",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Event" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the total amount of employee of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "193",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the total amount of employee of which (Y)?", "(X) was the total amount of employee of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many total amount of employee does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the total amount of employee of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#deliverydate-of_245",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MeanOfTransportation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) delivery Dates.", "Give me all delivery Dates of (X).", "Give me the (X) delivery Date.", "Give me the (X) delivery Dates.", "List all delivery Dates of (X).", "List all the delivery Dates of (X).", "show me all delivery Dates of (X).", "What (Y) is (X) 's delivery Date?", "What (Y) is the delivery Date of (X)?", "What (Y) is the delivery Date of the (X)?", "What (Y) was (X) 's delivery Date?", "What (Y) was the delivery Date of (X)?", "What (Y) was the delivery Date of the (X)?", "What are the delivery Dates of (X)?", "What are the delivery Dates of the (X)?", "What is the delivery Date of (X)?", "What is the delivery Date of the (X)?", "What was the delivery Date of (X)?", "What was the delivery Date of the (X)?", "What were the delivery Dates of (X)?", "What were the delivery Dates of the (X)?", "which (Y) are the delivery Dates of (X)?", "which (Y) are the delivery Dates of the (X)?", "which (Y) is the delivery Date of (X)?", "which (Y) is the delivery Date of the (X)?", "which (Y) was the delivery Date of (X)?", "which (Y) was the delivery Date of the (X)?", "which (Y) were the delivery Dates of (X)?", "which (Y) were the delivery Dates of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deliveryDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "197",
    "lexicalEntryUri" : "http://localhost:8080#deliverydate-of_245",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "MeanOfTransportation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the delivery Date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/deliveryDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "198",
    "lexicalEntryUri" : "http://localhost:8080#deliverydate-of_245",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MeanOfTransportation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the delivery Date of which (Y)?", "(X) was the delivery Date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deliveryDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#deliverydate-of_245",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MeanOfTransportation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many delivery Dates does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deliveryDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#deliverydate-of_245",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "MeanOfTransportation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the delivery Date of (X)?", "the delivery Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deliveryDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#address-of_334",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) addresses.", "Give me all addresses of (X).", "Give me the (X) address.", "Give me the (X) addresses.", "List all addresses of (X).", "List all the addresses of (X).", "show me all addresses of (X).", "What (Y) is (X) 's address?", "What (Y) is the address of (X)?", "What (Y) is the address of the (X)?", "What (Y) was (X) 's address?", "What (Y) was the address of (X)?", "What (Y) was the address of the (X)?", "What are the addresses of (X)?", "What are the addresses of the (X)?", "What is the address of (X)?", "What is the address of the (X)?", "What was the address of (X)?", "What was the address of the (X)?", "What were the addresses of (X)?", "What were the addresses of the (X)?", "which (Y) are the addresses of (X)?", "which (Y) are the addresses of the (X)?", "which (Y) is the address of (X)?", "which (Y) is the address of the (X)?", "which (Y) was the address of (X)?", "which (Y) was the address of the (X)?", "which (Y) were the addresses of (X)?", "which (Y) were the addresses of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/address> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "202",
    "lexicalEntryUri" : "http://localhost:8080#address-of_334",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "ArchitecturalStructure" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the address of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/address> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "203",
    "lexicalEntryUri" : "http://localhost:8080#address-of_334",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the address of which (Y)?", "(X) was the address of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/address> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#address-of_334",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many addresses does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/address> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#address-of_334",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the address of (X)?", "the addresses of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/address> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#musiccomposer-of_310",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) music composers.", "Give me all music composers of (X).", "Give me the (X) music composer.", "Give me the (X) music composers.", "List all music composers of (X).", "List all the music composers of (X).", "List all the persons with music composer of (X).", "show me all music composers of (X).", "What (Y) is (X) 's music composer?", "What (Y) is the music composer of (X)?", "What (Y) is the music composer of the (X)?", "What (Y) was (X) 's music composer?", "What (Y) was the music composer of (X)?", "What (Y) was the music composer of the (X)?", "which (Y) are the music composers of (X)?", "which (Y) are the music composers of the (X)?", "which (Y) is the music composer of (X)?", "which (Y) is the music composer of the (X)?", "which (Y) was the music composer of (X)?", "which (Y) was the music composer of the (X)?", "which (Y) were the music composers of (X)?", "which (Y) were the music composers of the (X)?", "Who are the music composers of (X)?", "Who are the music composers of the (X)?", "Who is the music composer of (X)?", "Who is the music composer of the (X)?", "Who was the music composer of (X)?", "Who was the music composer of the (X)?", "Who were the music composers of (X)?", "Who were the music composers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "207",
    "lexicalEntryUri" : "http://localhost:8080#musiccomposer-of_310",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the music composer of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#musiccomposer-of_310",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the music composer of which (Y)?", "(X) was the music composer of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#musiccomposer-of_310",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many music composers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#musiccomposer-of_310",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of (X)?", "the music composers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) boardgames.", "Give me all boardgames by (X).", "Give me the (X) boardgame.", "Give me the (X) boardgames.", "List all boardgames by (X).", "List all the agents with boardgame by (X).", "List all the boardgames by (X).", "show me all boardgames by (X).", "What (Y) is (X) 's boardgame?", "What (Y) is the boardgame by (X)?", "What (Y) is the boardgame by the (X)?", "What (Y) was (X) 's boardgame?", "What (Y) was the boardgame by (X)?", "What (Y) was the boardgame by the (X)?", "which (Y) are the boardgames by (X)?", "which (Y) are the boardgames by the (X)?", "which (Y) is the boardgame by (X)?", "which (Y) is the boardgame by the (X)?", "which (Y) was the boardgame by (X)?", "which (Y) was the boardgame by the (X)?", "which (Y) were the boardgames by (X)?", "which (Y) were the boardgames by the (X)?", "Who are the boardgames by (X)?", "Who are the boardgames by the (X)?", "Who is the boardgame by (X)?", "Who is the boardgame by the (X)?", "Who was the boardgame by (X)?", "Who was the boardgame by the (X)?", "Who were the boardgames by (X)?", "Who were the boardgames by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the boardgame by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the boardgame by which (Y)?", "(X) was the boardgame by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many boardgames does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the boardgame by (X)?", "the boardgames by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) boardgames.", "Give me all boardgames by (X).", "Give me the (X) boardgame.", "Give me the (X) boardgames.", "List all boardgames by (X).", "List all the agents with boardgame by (X).", "List all the boardgames by (X).", "show me all boardgames by (X).", "What (Y) is (X) 's boardgame?", "What (Y) is the boardgame by (X)?", "What (Y) is the boardgame by the (X)?", "What (Y) was (X) 's boardgame?", "What (Y) was the boardgame by (X)?", "What (Y) was the boardgame by the (X)?", "which (Y) are the boardgames by (X)?", "which (Y) are the boardgames by the (X)?", "which (Y) is the boardgame by (X)?", "which (Y) is the boardgame by the (X)?", "which (Y) was the boardgame by (X)?", "which (Y) was the boardgame by the (X)?", "which (Y) were the boardgames by (X)?", "which (Y) were the boardgames by the (X)?", "Who are the boardgames by (X)?", "Who are the boardgames by the (X)?", "Who is the boardgame by (X)?", "Who is the boardgame by the (X)?", "Who was the boardgame by (X)?", "Who was the boardgame by the (X)?", "Who were the boardgames by (X)?", "Who were the boardgames by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the boardgame by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the boardgame by which (Y)?", "(X) was the boardgame by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many boardgames does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the boardgame by (X)?", "the boardgames by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) boardgames.", "Give me all boardgames by (X).", "Give me the (X) boardgame.", "Give me the (X) boardgames.", "List all boardgames by (X).", "List all the agents with boardgame by (X).", "List all the boardgames by (X).", "show me all boardgames by (X).", "What (Y) is (X) 's boardgame?", "What (Y) is the boardgame by (X)?", "What (Y) is the boardgame by the (X)?", "What (Y) was (X) 's boardgame?", "What (Y) was the boardgame by (X)?", "What (Y) was the boardgame by the (X)?", "which (Y) are the boardgames by (X)?", "which (Y) are the boardgames by the (X)?", "which (Y) is the boardgame by (X)?", "which (Y) is the boardgame by the (X)?", "which (Y) was the boardgame by (X)?", "which (Y) was the boardgame by the (X)?", "which (Y) were the boardgames by (X)?", "which (Y) were the boardgames by the (X)?", "Who are the boardgames by (X)?", "Who are the boardgames by the (X)?", "Who is the boardgame by (X)?", "Who is the boardgame by the (X)?", "Who was the boardgame by (X)?", "Who was the boardgame by the (X)?", "Who were the boardgames by (X)?", "Who were the boardgames by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the boardgame by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the boardgame by which (Y)?", "(X) was the boardgame by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many boardgames does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the boardgame by (X)?", "the boardgames by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) serieses.", "Give me all serieses of (X).", "Give me the (X) series.", "Give me the (X) serieses.", "List all serieses of (X).", "List all the serieses of (X).", "List all the works with series of (X).", "show me all serieses of (X).", "What (Y) is (X) 's series?", "What (Y) is the series of (X)?", "What (Y) is the series of the (X)?", "What (Y) was (X) 's series?", "What (Y) was the series of (X)?", "What (Y) was the series of the (X)?", "What are the serieses of (X)?", "What are the serieses of the (X)?", "What is the series of (X)?", "What is the series of the (X)?", "What was the series of (X)?", "What was the series of the (X)?", "What were the serieses of (X)?", "What were the serieses of the (X)?", "which (Y) are the serieses of (X)?", "which (Y) are the serieses of the (X)?", "which (Y) is the series of (X)?", "which (Y) is the series of the (X)?", "which (Y) was the series of (X)?", "which (Y) was the series of the (X)?", "which (Y) were the serieses of (X)?", "which (Y) were the serieses of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work", "TelevisionEpisode" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the series of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionEpisode" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the series of which (Y)?", "(X) was the series of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "229",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many serieses does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the series of (X)?", "the serieses of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) serieses.", "Give me all serieses of (X).", "Give me the (X) series.", "Give me the (X) serieses.", "List all serieses of (X).", "List all the serieses of (X).", "List all the works with series of (X).", "show me all serieses of (X).", "What (Y) is (X) 's series?", "What (Y) is the series of (X)?", "What (Y) is the series of the (X)?", "What (Y) was (X) 's series?", "What (Y) was the series of (X)?", "What (Y) was the series of the (X)?", "What are the serieses of (X)?", "What are the serieses of the (X)?", "What is the series of (X)?", "What is the series of the (X)?", "What was the series of (X)?", "What was the series of the (X)?", "What were the serieses of (X)?", "What were the serieses of the (X)?", "which (Y) are the serieses of (X)?", "which (Y) are the serieses of the (X)?", "which (Y) is the series of (X)?", "which (Y) is the series of the (X)?", "which (Y) was the series of (X)?", "which (Y) was the series of the (X)?", "which (Y) were the serieses of (X)?", "which (Y) were the serieses of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work", "TelevisionEpisode" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the series of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "233",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionEpisode" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the series of which (Y)?", "(X) was the series of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "234",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many serieses does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the series of (X)?", "the serieses of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#completiondate-of_380",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) completion date.", "What (Y) is (X) 's completion date?", "What (Y) is the completion date of (X)?", "What (Y) is the completion date of the (X)?", "What (Y) was (X) 's completion date?", "What (Y) was the completion date of (X)?", "What (Y) was the completion date of the (X)?", "What is the completion date of (X)?", "What is the completion date of the (X)?", "What was the completion date of (X)?", "What was the completion date of the (X)?", "which (Y) is the completion date of (X)?", "which (Y) is the completion date of the (X)?", "which (Y) was the completion date of (X)?", "which (Y) was the completion date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#completiondate-of_380",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Ship" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the completion date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "238",
    "lexicalEntryUri" : "http://localhost:8080#completiondate-of_380",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the completion date of which (Y)?", "(X) was the completion date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#completiondate-of_380",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the completion date of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#parent-of_338",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parents.", "Give me all parents of (X).", "Give me the (X) parent.", "Give me the (X) parents.", "List all parents of (X).", "List all the parents of (X).", "List all the persons with parent of (X).", "show me all parents of (X).", "which (Y) are the parents of (X)?", "which (Y) are the parents of the (X)?", "which (Y) is the parent of (X)?", "which (Y) is the parent of the (X)?", "which (Y) was the parent of (X)?", "which (Y) was the parent of the (X)?", "which (Y) were the parents of (X)?", "which (Y) were the parents of the (X)?", "Who are the parents of (X)?", "Who are the parents of the (X)?", "Who is (X) 's parent?", "Who is the parent of (X)?", "Who is the parent of the (X)?", "Who was (X) 's parent?", "Who was the parent of (X)?", "Who was the parent of the (X)?", "Who were the parents of (X)?", "Who were the parents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/parent> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#parent-of_338",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the parent of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/parent> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#parent-of_338",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the parent of which (Y)?", "(X) was the parent of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/parent> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "243",
    "lexicalEntryUri" : "http://localhost:8080#parent-of_338",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many parents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/parent> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#parent-of_338",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parent of (X)?", "the parents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/parent> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of_287",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) elevation.", "What (Y) is (X) 's elevation?", "What (Y) is the elevation of (X)?", "What (Y) is the elevation of the (X)?", "What (Y) was (X) 's elevation?", "What (Y) was the elevation of (X)?", "What (Y) was the elevation of the (X)?", "What is the elevation of (X)?", "What is the elevation of the (X)?", "What was the elevation of (X)?", "What was the elevation of the (X)?", "which (Y) is the elevation of (X)?", "which (Y) is the elevation of the (X)?", "which (Y) was the elevation of (X)?", "which (Y) was the elevation of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of_287",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Mountain" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the elevation of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/elevation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "247",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of_287",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the elevation of which (Y)?", "(X) was the elevation of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of_287",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the elevation of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) ruling parties.", "Give me all ruling parties in (X).", "Give me the (X) ruling parties.", "Give me the (X) ruling party.", "List all ruling parties in (X).", "List all the agents with ruling party in (X).", "List all the ruling parties in (X).", "show me all ruling parties in (X).", "What (Y) is (X) 's ruling party?", "What (Y) is the ruling party in (X)?", "What (Y) is the ruling party in the (X)?", "What (Y) was (X) 's ruling party?", "What (Y) was the ruling party in (X)?", "What (Y) was the ruling party in the (X)?", "which (Y) are the ruling parties in (X)?", "which (Y) are the ruling parties in the (X)?", "which (Y) is the ruling party in (X)?", "which (Y) is the ruling party in the (X)?", "which (Y) was the ruling party in (X)?", "which (Y) was the ruling party in the (X)?", "which (Y) were the ruling parties in (X)?", "which (Y) were the ruling parties in the (X)?", "Who are the ruling parties in (X)?", "Who are the ruling parties in the (X)?", "Who is the ruling party in (X)?", "Who is the ruling party in the (X)?", "Who was the ruling party in (X)?", "Who was the ruling party in the (X)?", "Who were the ruling parties in (X)?", "Who were the ruling parties in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the ruling party in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the ruling party in which (Y)?", "(X) was the ruling party in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "252",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many ruling parties does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ruling parties in (X)?", "the ruling party in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) ruling parties.", "Give me all ruling parties in (X).", "Give me the (X) ruling parties.", "Give me the (X) ruling party.", "List all ruling parties in (X).", "List all the agents with ruling party in (X).", "List all the ruling parties in (X).", "show me all ruling parties in (X).", "What (Y) is (X) 's ruling party?", "What (Y) is the ruling party in (X)?", "What (Y) is the ruling party in the (X)?", "What (Y) was (X) 's ruling party?", "What (Y) was the ruling party in (X)?", "What (Y) was the ruling party in the (X)?", "which (Y) are the ruling parties in (X)?", "which (Y) are the ruling parties in the (X)?", "which (Y) is the ruling party in (X)?", "which (Y) is the ruling party in the (X)?", "which (Y) was the ruling party in (X)?", "which (Y) was the ruling party in the (X)?", "which (Y) were the ruling parties in (X)?", "which (Y) were the ruling parties in the (X)?", "Who are the ruling parties in (X)?", "Who are the ruling parties in the (X)?", "Who is the ruling party in (X)?", "Who is the ruling party in the (X)?", "Who was the ruling party in (X)?", "Who was the ruling party in the (X)?", "Who were the ruling parties in (X)?", "Who were the ruling parties in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the ruling party in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the ruling party in which (Y)?", "(X) was the ruling party in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "257",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many ruling parties does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ruling parties in (X)?", "the ruling party in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "259",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) causes of death.", "Give me all causes of death of (X).", "Give me the (X) cause of death.", "Give me the (X) causes of death.", "List all causes of death of (X).", "List all the causes of death of (X).", "show me all causes of death of (X).", "What are the causes of death of (X)?", "What are the causes of death of the (X)?", "What is the cause of death of (X)?", "What is the cause of death of the (X)?", "What was the cause of death of (X)?", "What was the cause of death of the (X)?", "What were the causes of death of (X)?", "What were the causes of death of the (X)?", "which (Y) are the causes of death of (X)?", "which (Y) are the causes of death of the (X)?", "which (Y) is the cause of death of (X)?", "which (Y) is the cause of death of the (X)?", "which (Y) was the cause of death of (X)?", "which (Y) was the cause of death of the (X)?", "which (Y) were the causes of death of (X)?", "which (Y) were the causes of death of the (X)?", "Who is (X) 's cause of death?", "Who is the cause of death of (X)?", "Who is the cause of death of the (X)?", "Who was (X) 's cause of death?", "Who was the cause of death of (X)?", "Who was the cause of death of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "260",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the cause of death of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "261",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the cause of death of which (Y)?", "(X) was the cause of death of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "262",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many causes of death does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "263",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of (X)?", "the causes of death of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) causes of death.", "Give me all causes of death of (X).", "Give me the (X) cause of death.", "Give me the (X) causes of death.", "List all causes of death of (X).", "List all the causes of death of (X).", "show me all causes of death of (X).", "What are the causes of death of (X)?", "What are the causes of death of the (X)?", "What is the cause of death of (X)?", "What is the cause of death of the (X)?", "What was the cause of death of (X)?", "What was the cause of death of the (X)?", "What were the causes of death of (X)?", "What were the causes of death of the (X)?", "which (Y) are the causes of death of (X)?", "which (Y) are the causes of death of the (X)?", "which (Y) is the cause of death of (X)?", "which (Y) is the cause of death of the (X)?", "which (Y) was the cause of death of (X)?", "which (Y) was the cause of death of the (X)?", "which (Y) were the causes of death of (X)?", "which (Y) were the causes of death of the (X)?", "Who is (X) 's cause of death?", "Who is the cause of death of (X)?", "Who is the cause of death of the (X)?", "Who was (X) 's cause of death?", "Who was the cause of death of (X)?", "Who was the cause of death of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "265",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the cause of death of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "266",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the cause of death of which (Y)?", "(X) was the cause of death of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "267",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many causes of death does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of (X)?", "the causes of death of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) causes of death.", "Give me all causes of death of (X).", "Give me the (X) cause of death.", "Give me the (X) causes of death.", "List all causes of death of (X).", "List all the causes of death of (X).", "show me all causes of death of (X).", "What are the causes of death of (X)?", "What are the causes of death of the (X)?", "What is the cause of death of (X)?", "What is the cause of death of the (X)?", "What was the cause of death of (X)?", "What was the cause of death of the (X)?", "What were the causes of death of (X)?", "What were the causes of death of the (X)?", "which (Y) are the causes of death of (X)?", "which (Y) are the causes of death of the (X)?", "which (Y) is the cause of death of (X)?", "which (Y) is the cause of death of the (X)?", "which (Y) was the cause of death of (X)?", "which (Y) was the cause of death of the (X)?", "which (Y) were the causes of death of (X)?", "which (Y) were the causes of death of the (X)?", "Who is (X) 's cause of death?", "Who is the cause of death of (X)?", "Who is the cause of death of the (X)?", "Who was (X) 's cause of death?", "Who was the cause of death of (X)?", "Who was the cause of death of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "270",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the cause of death of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "271",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the cause of death of which (Y)?", "(X) was the cause of death of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "272",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many causes of death does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of (X)?", "the causes of death of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "274",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (Y) is (X) 's president?", "What (Y) is the president of (X)?", "What (Y) is the president of the (X)?", "What (Y) was (X) 's president?", "What (Y) was the president of (X)?", "What (Y) was the president of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "275",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "276",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "277",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "279",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (Y) is (X) 's president?", "What (Y) is the president of (X)?", "What (Y) is the president of the (X)?", "What (Y) was (X) 's president?", "What (Y) was the president of (X)?", "What (Y) was the president of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "280",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "281",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "282",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "283",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "284",
    "lexicalEntryUri" : "http://localhost:8080#openingdate-of_373",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) opening Dates.", "Give me all opening Dates of (X).", "Give me the (X) opening Date.", "Give me the (X) opening Dates.", "List all opening Dates of (X).", "List all the opening Dates of (X).", "show me all opening Dates of (X).", "What (Y) is (X) 's opening Date?", "What (Y) is the opening Date of (X)?", "What (Y) is the opening Date of the (X)?", "What (Y) was (X) 's opening Date?", "What (Y) was the opening Date of (X)?", "What (Y) was the opening Date of the (X)?", "What are the opening Dates of (X)?", "What are the opening Dates of the (X)?", "What is the opening Date of (X)?", "What is the opening Date of the (X)?", "What was the opening Date of (X)?", "What was the opening Date of the (X)?", "What were the opening Dates of (X)?", "What were the opening Dates of the (X)?", "which (Y) are the opening Dates of (X)?", "which (Y) are the opening Dates of the (X)?", "which (Y) is the opening Date of (X)?", "which (Y) is the opening Date of the (X)?", "which (Y) was the opening Date of (X)?", "which (Y) was the opening Date of the (X)?", "which (Y) were the opening Dates of (X)?", "which (Y) were the opening Dates of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#openingdate-of_373",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "ArchitecturalStructure" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the opening Date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "286",
    "lexicalEntryUri" : "http://localhost:8080#openingdate-of_373",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the opening Date of which (Y)?", "(X) was the opening Date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "287",
    "lexicalEntryUri" : "http://localhost:8080#openingdate-of_373",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many opening Dates does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "288",
    "lexicalEntryUri" : "http://localhost:8080#openingdate-of_373",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the opening Date of (X)?", "the opening Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) time zones.", "Give me all time zones of (X).", "Give me the (X) time zone.", "Give me the (X) time zones.", "List all the time zones of (X).", "List all time zones of (X).", "show me all time zones of (X).", "What (Y) is (X) 's time zone?", "What (Y) is the time zone of (X)?", "What (Y) is the time zone of the (X)?", "What (Y) was (X) 's time zone?", "What (Y) was the time zone of (X)?", "What (Y) was the time zone of the (X)?", "What are the time zones of (X)?", "What are the time zones of the (X)?", "What is the time zone of (X)?", "What is the time zone of the (X)?", "What was the time zone of (X)?", "What was the time zone of the (X)?", "What were the time zones of (X)?", "What were the time zones of the (X)?", "which (Y) are the time zones of (X)?", "which (Y) are the time zones of the (X)?", "which (Y) is the time zone of (X)?", "which (Y) is the time zone of the (X)?", "which (Y) was the time zone of (X)?", "which (Y) was the time zone of the (X)?", "which (Y) were the time zones of (X)?", "which (Y) were the time zones of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "City" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the time zone of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "291",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the time zone of which (Y)?", "(X) was the time zone of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "292",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many time zones does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of (X)?", "the time zones of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) time zones.", "Give me all time zones of (X).", "Give me the (X) time zone.", "Give me the (X) time zones.", "List all the time zones of (X).", "List all time zones of (X).", "show me all time zones of (X).", "What (Y) is (X) 's time zone?", "What (Y) is the time zone of (X)?", "What (Y) is the time zone of the (X)?", "What (Y) was (X) 's time zone?", "What (Y) was the time zone of (X)?", "What (Y) was the time zone of the (X)?", "What are the time zones of (X)?", "What are the time zones of the (X)?", "What is the time zone of (X)?", "What is the time zone of the (X)?", "What was the time zone of (X)?", "What was the time zone of the (X)?", "What were the time zones of (X)?", "What were the time zones of the (X)?", "which (Y) are the time zones of (X)?", "which (Y) are the time zones of the (X)?", "which (Y) is the time zone of (X)?", "which (Y) is the time zone of the (X)?", "which (Y) was the time zone of (X)?", "which (Y) was the time zone of the (X)?", "which (Y) were the time zones of (X)?", "which (Y) were the time zones of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "295",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "City" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the time zone of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "296",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the time zone of which (Y)?", "(X) was the time zone of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "297",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many time zones does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of (X)?", "the time zones of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) time zones.", "Give me all time zones of (X).", "Give me the (X) time zone.", "Give me the (X) time zones.", "List all the time zones of (X).", "List all time zones of (X).", "show me all time zones of (X).", "What (Y) is (X) 's time zone?", "What (Y) is the time zone of (X)?", "What (Y) is the time zone of the (X)?", "What (Y) was (X) 's time zone?", "What (Y) was the time zone of (X)?", "What (Y) was the time zone of the (X)?", "What are the time zones of (X)?", "What are the time zones of the (X)?", "What is the time zone of (X)?", "What is the time zone of the (X)?", "What was the time zone of (X)?", "What was the time zone of the (X)?", "What were the time zones of (X)?", "What were the time zones of the (X)?", "which (Y) are the time zones of (X)?", "which (Y) are the time zones of the (X)?", "which (Y) is the time zone of (X)?", "which (Y) is the time zone of the (X)?", "which (Y) was the time zone of (X)?", "which (Y) was the time zone of the (X)?", "which (Y) were the time zones of (X)?", "which (Y) were the time zones of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "300",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "City" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the time zone of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "301",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the time zone of which (Y)?", "(X) was the time zone of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "302",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many time zones does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of (X)?", "the time zones of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) time zones.", "Give me all time zones of (X).", "Give me the (X) time zone.", "Give me the (X) time zones.", "List all the time zones of (X).", "List all time zones of (X).", "show me all time zones of (X).", "What (Y) is (X) 's time zone?", "What (Y) is the time zone of (X)?", "What (Y) is the time zone of the (X)?", "What (Y) was (X) 's time zone?", "What (Y) was the time zone of (X)?", "What (Y) was the time zone of the (X)?", "What are the time zones of (X)?", "What are the time zones of the (X)?", "What is the time zone of (X)?", "What is the time zone of the (X)?", "What was the time zone of (X)?", "What was the time zone of the (X)?", "What were the time zones of (X)?", "What were the time zones of the (X)?", "which (Y) are the time zones of (X)?", "which (Y) are the time zones of the (X)?", "which (Y) is the time zone of (X)?", "which (Y) is the time zone of the (X)?", "which (Y) was the time zone of (X)?", "which (Y) was the time zone of the (X)?", "which (Y) were the time zones of (X)?", "which (Y) were the time zones of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "305",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "City" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the time zone of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "306",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the time zone of which (Y)?", "(X) was the time zone of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "307",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many time zones does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of (X)?", "the time zones of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#associatedmusicalartist-of_332",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) associated Musical Artists.", "Give me all associated Musical Artists of (X).", "Give me the (X) associated Musical Artist.", "Give me the (X) associated Musical Artists.", "List all associated Musical Artists of (X).", "List all the associated Musical Artists of (X).", "List all the places with associated Musical Artist of (X).", "show me all associated Musical Artists of (X).", "What (Y) is (X) 's associated Musical Artist?", "What (Y) is the associated Musical Artist of (X)?", "What (Y) is the associated Musical Artist of the (X)?", "What (Y) was (X) 's associated Musical Artist?", "What (Y) was the associated Musical Artist of (X)?", "What (Y) was the associated Musical Artist of the (X)?", "What are the associated Musical Artists of (X)?", "What are the associated Musical Artists of the (X)?", "What is the associated Musical Artist of (X)?", "What is the associated Musical Artist of the (X)?", "What was the associated Musical Artist of (X)?", "What was the associated Musical Artist of the (X)?", "What were the associated Musical Artists of (X)?", "What were the associated Musical Artists of the (X)?", "which (Y) are the associated Musical Artists of (X)?", "which (Y) are the associated Musical Artists of the (X)?", "which (Y) is the associated Musical Artist of (X)?", "which (Y) is the associated Musical Artist of the (X)?", "which (Y) was the associated Musical Artist of (X)?", "which (Y) was the associated Musical Artist of the (X)?", "which (Y) were the associated Musical Artists of (X)?", "which (Y) were the associated Musical Artists of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "310",
    "lexicalEntryUri" : "http://localhost:8080#associatedmusicalartist-of_332",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Band" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the associated Musical Artist of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "311",
    "lexicalEntryUri" : "http://localhost:8080#associatedmusicalartist-of_332",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the associated Musical Artist of which (Y)?", "(X) was the associated Musical Artist of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "312",
    "lexicalEntryUri" : "http://localhost:8080#associatedmusicalartist-of_332",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many associated Musical Artists does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "313",
    "lexicalEntryUri" : "http://localhost:8080#associatedmusicalartist-of_332",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the associated Musical Artist of (X)?", "the associated Musical Artists of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) wives.", "Give me all wives of (X).", "Give me the (X) wife.", "Give me the (X) wives.", "List all the persons with wife of (X).", "List all the wives of (X).", "List all wives of (X).", "show me all wives of (X).", "which (Y) are the wives of (X)?", "which (Y) are the wives of the (X)?", "which (Y) is the wife of (X)?", "which (Y) is the wife of the (X)?", "which (Y) was the wife of (X)?", "which (Y) was the wife of the (X)?", "which (Y) were the wives of (X)?", "which (Y) were the wives of the (X)?", "Who are the wives of (X)?", "Who are the wives of the (X)?", "Who is (X) 's wife?", "Who is the wife of (X)?", "Who is the wife of the (X)?", "Who was (X) 's wife?", "Who was the wife of (X)?", "Who was the wife of the (X)?", "Who were the wives of (X)?", "Who were the wives of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "315",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the wife of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "316",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the wife of which (Y)?", "(X) was the wife of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "317",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many wives does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "318",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of (X)?", "the wives of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) wives.", "Give me all wives of (X).", "Give me the (X) wife.", "Give me the (X) wives.", "List all the persons with wife of (X).", "List all the wives of (X).", "List all wives of (X).", "show me all wives of (X).", "which (Y) are the wives of (X)?", "which (Y) are the wives of the (X)?", "which (Y) is the wife of (X)?", "which (Y) is the wife of the (X)?", "which (Y) was the wife of (X)?", "which (Y) was the wife of the (X)?", "which (Y) were the wives of (X)?", "which (Y) were the wives of the (X)?", "Who are the wives of (X)?", "Who are the wives of the (X)?", "Who is (X) 's wife?", "Who is the wife of (X)?", "Who is the wife of the (X)?", "Who was (X) 's wife?", "Who was the wife of (X)?", "Who was the wife of the (X)?", "Who were the wives of (X)?", "Who were the wives of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "320",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the wife of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "321",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the wife of which (Y)?", "(X) was the wife of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "322",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many wives does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "323",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of (X)?", "the wives of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) wives.", "Give me all wives of (X).", "Give me the (X) wife.", "Give me the (X) wives.", "List all the persons with wife of (X).", "List all the wives of (X).", "List all wives of (X).", "show me all wives of (X).", "which (Y) are the wives of (X)?", "which (Y) are the wives of the (X)?", "which (Y) is the wife of (X)?", "which (Y) is the wife of the (X)?", "which (Y) was the wife of (X)?", "which (Y) was the wife of the (X)?", "which (Y) were the wives of (X)?", "which (Y) were the wives of the (X)?", "Who are the wives of (X)?", "Who are the wives of the (X)?", "Who is (X) 's wife?", "Who is the wife of (X)?", "Who is the wife of the (X)?", "Who was (X) 's wife?", "Who was the wife of (X)?", "Who was the wife of the (X)?", "Who were the wives of (X)?", "Who were the wives of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "325",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the wife of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "326",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the wife of which (Y)?", "(X) was the wife of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "327",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many wives does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "328",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of (X)?", "the wives of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#museum_in_230",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) museums.", "Give me all museums in (X).", "Give me the (X) museum.", "Give me the (X) museums.", "List all museums in (X).", "List all the cities with museum in (X).", "List all the museums in (X).", "show me all museums in (X).", "What (Y) is (X) 's museum?", "What (Y) is the museum in (X)?", "What (Y) is the museum in the (X)?", "What (Y) was (X) 's museum?", "What (Y) was the museum in (X)?", "What (Y) was the museum in the (X)?", "What are the museums in (X)?", "What are the museums in the (X)?", "What is the museum in (X)?", "What is the museum in the (X)?", "What was the museum in (X)?", "What was the museum in the (X)?", "What were the museums in (X)?", "What were the museums in the (X)?", "which (Y) are the museums in (X)?", "which (Y) are the museums in the (X)?", "which (Y) is the museum in (X)?", "which (Y) is the museum in the (X)?", "which (Y) was the museum in (X)?", "which (Y) was the museum in the (X)?", "which (Y) were the museums in (X)?", "which (Y) were the museums in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "330",
    "lexicalEntryUri" : "http://localhost:8080#museum_in_230",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Building" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the museum in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "331",
    "lexicalEntryUri" : "http://localhost:8080#museum_in_230",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the museum in which (Y)?", "(X) was the museum in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "332",
    "lexicalEntryUri" : "http://localhost:8080#museum_in_230",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many museums does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "333",
    "lexicalEntryUri" : "http://localhost:8080#museum_in_230",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the museum in (X)?", "the museums in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "334",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is (X) 's president?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was (X) 's president?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "335",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "336",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "337",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "338",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "339",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is (X) 's president?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was (X) 's president?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "340",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "341",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "342",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "343",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "344",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) museums.", "Give me all museums in (X).", "Give me the (X) museum.", "Give me the (X) museums.", "List all museums in (X).", "List all the museums in (X).", "List all the settlements with museum in (X).", "show me all museums in (X).", "What are the museums in (X)?", "What are the museums in the (X)?", "What is the museum in (X)?", "What is the museum in the (X)?", "What was the museum in (X)?", "What was the museum in the (X)?", "What were the museums in (X)?", "What were the museums in the (X)?", "which (Y) are the museums in (X)?", "which (Y) are the museums in the (X)?", "which (Y) is the museum in (X)?", "which (Y) is the museum in the (X)?", "which (Y) was the museum in (X)?", "which (Y) was the museum in the (X)?", "which (Y) were the museums in (X)?", "which (Y) were the museums in the (X)?", "Who is (X) 's museum?", "Who is the museum in (X)?", "Who is the museum in the (X)?", "Who was (X) 's museum?", "Who was the museum in (X)?", "Who was the museum in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "345",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the museum in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "346",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the museum in which (Y)?", "(X) was the museum in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "347",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many museums does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "348",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the museum in (X)?", "the museums in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "349",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) museums.", "Give me all museums in (X).", "Give me the (X) museum.", "Give me the (X) museums.", "List all museums in (X).", "List all the museums in (X).", "List all the museums with museum in (X).", "show me all museums in (X).", "What (Y) is (X) 's museum?", "What (Y) is the museum in (X)?", "What (Y) is the museum in the (X)?", "What (Y) was (X) 's museum?", "What (Y) was the museum in (X)?", "What (Y) was the museum in the (X)?", "What are the museums in (X)?", "What are the museums in the (X)?", "What is the museum in (X)?", "What is the museum in the (X)?", "What was the museum in (X)?", "What was the museum in the (X)?", "What were the museums in (X)?", "What were the museums in the (X)?", "which (Y) are the museums in (X)?", "which (Y) are the museums in the (X)?", "which (Y) is the museum in (X)?", "which (Y) is the museum in the (X)?", "which (Y) was the museum in (X)?", "which (Y) was the museum in the (X)?", "which (Y) were the museums in (X)?", "which (Y) were the museums in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "350",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum", "Artwork" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the museum in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "351",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the museum in which (Y)?", "(X) was the museum in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "352",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many museums does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "353",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the museum in (X)?", "the museums in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "354",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the company with founder of (X).", "List all the founders of (X).", "show me all founders of (X).", "What (Y) is (X) 's founder?", "What (Y) is the founder of (X)?", "What (Y) is the founder of the (X)?", "What (Y) was (X) 's founder?", "What (Y) was the founder of (X)?", "What (Y) was the founder of the (X)?", "which (Y) are the founders of (X)?", "which (Y) are the founders of the (X)?", "which (Y) is the founder of (X)?", "which (Y) is the founder of the (X)?", "which (Y) was the founder of (X)?", "which (Y) was the founder of the (X)?", "which (Y) were the founders of (X)?", "which (Y) were the founders of the (X)?", "Who are the founders of (X)?", "Who are the founders of the (X)?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "355",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founder of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "356",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founder of which (Y)?", "(X) was the founder of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "357",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founders does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "358",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "359",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the company with founder of (X).", "List all the founders of (X).", "show me all founders of (X).", "What (Y) is (X) 's founder?", "What (Y) is the founder of (X)?", "What (Y) is the founder of the (X)?", "What (Y) was (X) 's founder?", "What (Y) was the founder of (X)?", "What (Y) was the founder of the (X)?", "which (Y) are the founders of (X)?", "which (Y) are the founders of the (X)?", "which (Y) is the founder of (X)?", "which (Y) is the founder of the (X)?", "which (Y) was the founder of (X)?", "which (Y) was the founder of the (X)?", "which (Y) were the founders of (X)?", "which (Y) were the founders of the (X)?", "Who are the founders of (X)?", "Who are the founders of the (X)?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "360",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founder of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "361",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founder of which (Y)?", "(X) was the founder of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "362",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founders does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "363",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "364",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the company with founder of (X).", "List all the founders of (X).", "show me all founders of (X).", "What (Y) is (X) 's founder?", "What (Y) is the founder of (X)?", "What (Y) is the founder of the (X)?", "What (Y) was (X) 's founder?", "What (Y) was the founder of (X)?", "What (Y) was the founder of the (X)?", "which (Y) are the founders of (X)?", "which (Y) are the founders of the (X)?", "which (Y) is the founder of (X)?", "which (Y) is the founder of the (X)?", "which (Y) was the founder of (X)?", "which (Y) was the founder of the (X)?", "which (Y) were the founders of (X)?", "which (Y) were the founders of the (X)?", "Who are the founders of (X)?", "Who are the founders of the (X)?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "365",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founder of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "366",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founder of which (Y)?", "(X) was the founder of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "367",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founders does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "368",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "369",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the company with founder of (X).", "List all the founders of (X).", "show me all founders of (X).", "What (Y) is (X) 's founder?", "What (Y) is the founder of (X)?", "What (Y) is the founder of the (X)?", "What (Y) was (X) 's founder?", "What (Y) was the founder of (X)?", "What (Y) was the founder of the (X)?", "which (Y) are the founders of (X)?", "which (Y) are the founders of the (X)?", "which (Y) is the founder of (X)?", "which (Y) is the founder of the (X)?", "which (Y) was the founder of (X)?", "which (Y) was the founder of the (X)?", "which (Y) were the founders of (X)?", "which (Y) were the founders of the (X)?", "Who are the founders of (X)?", "Who are the founders of the (X)?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "370",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founder of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "371",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founder of which (Y)?", "(X) was the founder of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "372",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founders does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "373",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "374",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the company with founder of (X).", "List all the founders of (X).", "show me all founders of (X).", "What (Y) is (X) 's founder?", "What (Y) is the founder of (X)?", "What (Y) is the founder of the (X)?", "What (Y) was (X) 's founder?", "What (Y) was the founder of (X)?", "What (Y) was the founder of the (X)?", "which (Y) are the founders of (X)?", "which (Y) are the founders of the (X)?", "which (Y) is the founder of (X)?", "which (Y) is the founder of the (X)?", "which (Y) was the founder of (X)?", "which (Y) was the founder of the (X)?", "which (Y) were the founders of (X)?", "which (Y) were the founders of the (X)?", "Who are the founders of (X)?", "Who are the founders of the (X)?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "375",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founder of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "376",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founder of which (Y)?", "(X) was the founder of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "377",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founders does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "378",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "379",
    "lexicalEntryUri" : "http://localhost:8080#recordlabel_of_318",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Genre" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) record labels.", "Give me all record labels of (X).", "Give me the (X) record label.", "Give me the (X) record labels.", "List all record labels of (X).", "List all the record labels of (X).", "show me all record labels of (X).", "What (Y) is (X) 's record label?", "What (Y) is the record label of (X)?", "What (Y) is the record label of the (X)?", "What (Y) was (X) 's record label?", "What (Y) was the record label of (X)?", "What (Y) was the record label of the (X)?", "What are the record labels of (X)?", "What are the record labels of the (X)?", "What is the record label of (X)?", "What is the record label of the (X)?", "What was the record label of (X)?", "What was the record label of the (X)?", "What were the record labels of (X)?", "What were the record labels of the (X)?", "which (Y) are the record labels of (X)?", "which (Y) are the record labels of the (X)?", "which (Y) is the record label of (X)?", "which (Y) is the record label of the (X)?", "which (Y) was the record label of (X)?", "which (Y) was the record label of the (X)?", "which (Y) were the record labels of (X)?", "which (Y) were the record labels of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/RecordLabel> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "380",
    "lexicalEntryUri" : "http://localhost:8080#recordlabel_of_318",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Genre" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the record label of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/RecordLabel> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "381",
    "lexicalEntryUri" : "http://localhost:8080#recordlabel_of_318",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the record label of which (Y)?", "(X) was the record label of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/RecordLabel> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "382",
    "lexicalEntryUri" : "http://localhost:8080#recordlabel_of_318",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Genre" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many record labels does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/RecordLabel> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "383",
    "lexicalEntryUri" : "http://localhost:8080#recordlabel_of_318",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Genre" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the record label of (X)?", "the record labels of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/RecordLabel> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "384",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of_358",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) Fmayor.", "Give me all Fmayor of (X).", "Give me the (X) Fmayor.", "Give me the (X) nickname.", "List all Fmayor of (X).", "List all the Fmayor of (X).", "show me all Fmayor of (X).", "What (Y) is (X) 's nickname?", "What (Y) is the nickname of (X)?", "What (Y) is the nickname of the (X)?", "What (Y) was (X) 's nickname?", "What (Y) was the nickname of (X)?", "What (Y) was the nickname of the (X)?", "What are the Fmayor of (X)?", "What are the Fmayor of the (X)?", "What is the nickname of (X)?", "What is the nickname of the (X)?", "What was the nickname of (X)?", "What was the nickname of the (X)?", "What were the Fmayor of (X)?", "What were the Fmayor of the (X)?", "which (Y) are the Fmayor of (X)?", "which (Y) are the Fmayor of the (X)?", "which (Y) is the nickname of (X)?", "which (Y) is the nickname of the (X)?", "which (Y) was the nickname of (X)?", "which (Y) was the nickname of the (X)?", "which (Y) were the Fmayor of (X)?", "which (Y) were the Fmayor of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "385",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of_358",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "City" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the nickname of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "386",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of_358",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the nickname of which (Y)?", "(X) was the nickname of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "387",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of_358",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many Fmayor does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "388",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of_358",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the Fmayor of (X)?", "the nickname of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "389",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) autobiography.", "List all the authors with autobiography of (X).", "What (Y) is (X) 's autobiography?", "What (Y) is the autobiography of (X)?", "What (Y) is the autobiography of the (X)?", "What (Y) was (X) 's autobiography?", "What (Y) was the autobiography of (X)?", "What (Y) was the autobiography of the (X)?", "What is the autobiography of (X)?", "What is the autobiography of the (X)?", "What was the autobiography of (X)?", "What was the autobiography of the (X)?", "which (Y) is the autobiography of (X)?", "which (Y) is the autobiography of the (X)?", "which (Y) was the autobiography of (X)?", "which (Y) was the autobiography of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "390",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the autobiography of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "391",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the autobiography of which (Y)?", "(X) was the autobiography of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "392",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "393",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) autobiography.", "List all the authors with autobiography of (X).", "What (Y) is (X) 's autobiography?", "What (Y) is the autobiography of (X)?", "What (Y) is the autobiography of the (X)?", "What (Y) was (X) 's autobiography?", "What (Y) was the autobiography of (X)?", "What (Y) was the autobiography of the (X)?", "What is the autobiography of (X)?", "What is the autobiography of the (X)?", "What was the autobiography of (X)?", "What was the autobiography of the (X)?", "which (Y) is the autobiography of (X)?", "which (Y) is the autobiography of the (X)?", "which (Y) was the autobiography of (X)?", "which (Y) was the autobiography of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "394",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the autobiography of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "395",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the autobiography of which (Y)?", "(X) was the autobiography of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "396",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "397",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) autobiography.", "List all the authors with autobiography of (X).", "What (Y) is (X) 's autobiography?", "What (Y) is the autobiography of (X)?", "What (Y) is the autobiography of the (X)?", "What (Y) was (X) 's autobiography?", "What (Y) was the autobiography of (X)?", "What (Y) was the autobiography of the (X)?", "What is the autobiography of (X)?", "What is the autobiography of the (X)?", "What was the autobiography of (X)?", "What was the autobiography of the (X)?", "which (Y) is the autobiography of (X)?", "which (Y) is the autobiography of the (X)?", "which (Y) was the autobiography of (X)?", "which (Y) was the autobiography of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "398",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the autobiography of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "399",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the autobiography of which (Y)?", "(X) was the autobiography of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "400",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "401",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) specialities.", "Give me all specialities of (X).", "Give me the (X) specialities.", "Give me the (X) speciality.", "List all specialities of (X).", "List all the specialities of (X).", "show me all specialities of (X).", "What are the specialities of (X)?", "What are the specialities of the (X)?", "What is the speciality of (X)?", "What is the speciality of the (X)?", "What was the speciality of (X)?", "What was the speciality of the (X)?", "What were the specialities of (X)?", "What were the specialities of the (X)?", "which (Y) are the specialities of (X)?", "which (Y) are the specialities of the (X)?", "which (Y) is the speciality of (X)?", "which (Y) is the speciality of the (X)?", "which (Y) was the speciality of (X)?", "which (Y) was the speciality of the (X)?", "which (Y) were the specialities of (X)?", "which (Y) were the specialities of the (X)?", "Who is (X) 's speciality?", "Who is the speciality of (X)?", "Who is the speciality of the (X)?", "Who was (X) 's speciality?", "Who was the speciality of (X)?", "Who was the speciality of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "402",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the speciality of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "403",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the speciality of which (Y)?", "(X) was the speciality of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "404",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many specialities does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "405",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the specialities of (X)?", "the speciality of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "406",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) specialities.", "Give me all specialities of (X).", "Give me the (X) specialities.", "Give me the (X) speciality.", "List all specialities of (X).", "List all the specialities of (X).", "show me all specialities of (X).", "What are the specialities of (X)?", "What are the specialities of the (X)?", "What is the speciality of (X)?", "What is the speciality of the (X)?", "What was the speciality of (X)?", "What was the speciality of the (X)?", "What were the specialities of (X)?", "What were the specialities of the (X)?", "which (Y) are the specialities of (X)?", "which (Y) are the specialities of the (X)?", "which (Y) is the speciality of (X)?", "which (Y) is the speciality of the (X)?", "which (Y) was the speciality of (X)?", "which (Y) was the speciality of the (X)?", "which (Y) were the specialities of (X)?", "which (Y) were the specialities of the (X)?", "Who is (X) 's speciality?", "Who is the speciality of (X)?", "Who is the speciality of the (X)?", "Who was (X) 's speciality?", "Who was the speciality of (X)?", "Who was the speciality of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "407",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the speciality of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "408",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the speciality of which (Y)?", "(X) was the speciality of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "409",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many specialities does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "410",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the specialities of (X)?", "the speciality of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "411",
    "lexicalEntryUri" : "http://localhost:8080#leader-of-1_234",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) leaders.", "Give me all leaders of (X).", "Give me the (X) leader.", "Give me the (X) leaders.", "List all leaders of (X).", "List all the leaders of (X).", "List all the organizations with leader of (X).", "show me all leaders of (X).", "What (Y) is (X) 's leader?", "What (Y) is the leader of (X)?", "What (Y) is the leader of the (X)?", "What (Y) was (X) 's leader?", "What (Y) was the leader of (X)?", "What (Y) was the leader of the (X)?", "which (Y) are the leaders of (X)?", "which (Y) are the leaders of the (X)?", "which (Y) is the leader of (X)?", "which (Y) is the leader of the (X)?", "which (Y) was the leader of (X)?", "which (Y) was the leader of the (X)?", "which (Y) were the leaders of (X)?", "which (Y) were the leaders of the (X)?", "Who are the leaders of (X)?", "Who are the leaders of the (X)?", "Who is the leader of (X)?", "Who is the leader of the (X)?", "Who was the leader of (X)?", "Who was the leader of the (X)?", "Who were the leaders of (X)?", "Who were the leaders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "412",
    "lexicalEntryUri" : "http://localhost:8080#leader-of-1_234",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation", "Legislature" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the leader of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "413",
    "lexicalEntryUri" : "http://localhost:8080#leader-of-1_234",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the leader of which (Y)?", "(X) was the leader of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "414",
    "lexicalEntryUri" : "http://localhost:8080#leader-of-1_234",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many leaders does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "415",
    "lexicalEntryUri" : "http://localhost:8080#leader-of-1_234",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the leader of (X)?", "the leaders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "416",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of_268",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) isbns.", "Give me all isbns of (X).", "Give me the (X) isbn.", "Give me the (X) isbns.", "List all isbns of (X).", "List all the isbns of (X).", "show me all isbns of (X).", "What (Y) is (X) 's isbn?", "What (Y) is the isbn of (X)?", "What (Y) is the isbn of the (X)?", "What (Y) was (X) 's isbn?", "What (Y) was the isbn of (X)?", "What (Y) was the isbn of the (X)?", "What are the isbns of (X)?", "What are the isbns of the (X)?", "What is the isbn of (X)?", "What is the isbn of the (X)?", "What was the isbn of (X)?", "What was the isbn of the (X)?", "What were the isbns of (X)?", "What were the isbns of the (X)?", "which (Y) are the isbns of (X)?", "which (Y) are the isbns of the (X)?", "which (Y) is the isbn of (X)?", "which (Y) is the isbn of the (X)?", "which (Y) was the isbn of (X)?", "which (Y) was the isbn of the (X)?", "which (Y) were the isbns of (X)?", "which (Y) were the isbns of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isbn> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "417",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of_268",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Book" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the isbn of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/isbn> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "418",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of_268",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the isbn of which (Y)?", "(X) was the isbn of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isbn> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "419",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of_268",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many isbns does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/isbn> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "420",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of_268",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the isbn of (X)?", "the isbns of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isbn> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "421",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) governors.", "Give me all governors of (X).", "Give me the (X) governor.", "Give me the (X) governors.", "List all governors of (X).", "List all the governors of (X).", "List all the persons with governor of (X).", "show me all governors of (X).", "What (Y) is (X) 's governor?", "What (Y) is the governor of (X)?", "What (Y) is the governor of the (X)?", "What (Y) was (X) 's governor?", "What (Y) was the governor of (X)?", "What (Y) was the governor of the (X)?", "which (Y) are the governors of (X)?", "which (Y) are the governors of the (X)?", "which (Y) is the governor of (X)?", "which (Y) is the governor of the (X)?", "which (Y) was the governor of (X)?", "which (Y) was the governor of the (X)?", "which (Y) were the governors of (X)?", "which (Y) were the governors of the (X)?", "Who are the governors of (X)?", "Who are the governors of the (X)?", "Who is the governor of (X)?", "Who is the governor of the (X)?", "Who was the governor of (X)?", "Who was the governor of the (X)?", "Who were the governors of (X)?", "Who were the governors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "422",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the governor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "423",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the governor of which (Y)?", "(X) was the governor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "424",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many governors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "425",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of (X)?", "the governors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "426",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) governors.", "Give me all governors of (X).", "Give me the (X) governor.", "Give me the (X) governors.", "List all governors of (X).", "List all the governors of (X).", "List all the persons with governor of (X).", "show me all governors of (X).", "What (Y) is (X) 's governor?", "What (Y) is the governor of (X)?", "What (Y) is the governor of the (X)?", "What (Y) was (X) 's governor?", "What (Y) was the governor of (X)?", "What (Y) was the governor of the (X)?", "which (Y) are the governors of (X)?", "which (Y) are the governors of the (X)?", "which (Y) is the governor of (X)?", "which (Y) is the governor of the (X)?", "which (Y) was the governor of (X)?", "which (Y) was the governor of the (X)?", "which (Y) were the governors of (X)?", "which (Y) were the governors of the (X)?", "Who are the governors of (X)?", "Who are the governors of the (X)?", "Who is the governor of (X)?", "Who is the governor of the (X)?", "Who was the governor of (X)?", "Who was the governor of the (X)?", "Who were the governors of (X)?", "Who were the governors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "427",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the governor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "428",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the governor of which (Y)?", "(X) was the governor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "429",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many governors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "430",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of (X)?", "the governors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "431",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) official languages.", "Give me all official languages of (X).", "Give me the (X) official language.", "Give me the (X) official languages.", "List all official languages of (X).", "List all the languages with official language of (X).", "List all the official languages of (X).", "show me all official languages of (X).", "What (Y) is (X) 's official language?", "What (Y) is the official language of (X)?", "What (Y) is the official language of the (X)?", "What (Y) was (X) 's official language?", "What (Y) was the official language of (X)?", "What (Y) was the official language of the (X)?", "What are the official languages of (X)?", "What are the official languages of the (X)?", "What is the official language of (X)?", "What is the official language of the (X)?", "What was the official language of (X)?", "What was the official language of the (X)?", "What were the official languages of (X)?", "What were the official languages of the (X)?", "which (Y) are the official languages of (X)?", "which (Y) are the official languages of the (X)?", "which (Y) is the official language of (X)?", "which (Y) is the official language of the (X)?", "which (Y) was the official language of (X)?", "which (Y) was the official language of the (X)?", "which (Y) were the official languages of (X)?", "which (Y) were the official languages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "432",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the official language of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "433",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the official language of which (Y)?", "(X) was the official language of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "434",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many official languages does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "435",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of (X)?", "the official languages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "436",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) official languages.", "Give me all official languages of (X).", "Give me the (X) official language.", "Give me the (X) official languages.", "List all official languages of (X).", "List all the languages with official language of (X).", "List all the official languages of (X).", "show me all official languages of (X).", "What (Y) is (X) 's official language?", "What (Y) is the official language of (X)?", "What (Y) is the official language of the (X)?", "What (Y) was (X) 's official language?", "What (Y) was the official language of (X)?", "What (Y) was the official language of the (X)?", "What are the official languages of (X)?", "What are the official languages of the (X)?", "What is the official language of (X)?", "What is the official language of the (X)?", "What was the official language of (X)?", "What was the official language of the (X)?", "What were the official languages of (X)?", "What were the official languages of the (X)?", "which (Y) are the official languages of (X)?", "which (Y) are the official languages of the (X)?", "which (Y) is the official language of (X)?", "which (Y) is the official language of the (X)?", "which (Y) was the official language of (X)?", "which (Y) was the official language of the (X)?", "which (Y) were the official languages of (X)?", "which (Y) were the official languages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "437",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the official language of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "438",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the official language of which (Y)?", "(X) was the official language of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "439",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many official languages does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "440",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of (X)?", "the official languages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "441",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) astronauts.", "Give me all astronauts of (X).", "Give me the (X) astronaut.", "Give me the (X) astronauts.", "List all astronauts of (X).", "List all the astronauts of (X).", "List all the Space missions with astronaut of (X).", "show me all astronauts of (X).", "What are the astronauts of (X)?", "What are the astronauts of the (X)?", "What is the astronaut of (X)?", "What is the astronaut of the (X)?", "What was the astronaut of (X)?", "What was the astronaut of the (X)?", "What were the astronauts of (X)?", "What were the astronauts of the (X)?", "which (Y) are the astronauts of (X)?", "which (Y) are the astronauts of the (X)?", "which (Y) is the astronaut of (X)?", "which (Y) is the astronaut of the (X)?", "which (Y) was the astronaut of (X)?", "which (Y) was the astronaut of the (X)?", "which (Y) were the astronauts of (X)?", "which (Y) were the astronauts of the (X)?", "Who is (X) 's astronaut?", "Who is the astronaut of (X)?", "Who is the astronaut of the (X)?", "Who was (X) 's astronaut?", "Who was the astronaut of (X)?", "Who was the astronaut of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "442",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the astronaut of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "443",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SpaceMission" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the astronaut of which (Y)?", "(X) was the astronaut of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "444",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many astronauts does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "445",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the astronaut of (X)?", "the astronauts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "446",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) astronauts.", "Give me all astronauts of (X).", "Give me the (X) astronaut.", "Give me the (X) astronauts.", "List all astronauts of (X).", "List all the astronauts of (X).", "List all the Space missions with astronaut of (X).", "show me all astronauts of (X).", "What are the astronauts of (X)?", "What are the astronauts of the (X)?", "What is the astronaut of (X)?", "What is the astronaut of the (X)?", "What was the astronaut of (X)?", "What was the astronaut of the (X)?", "What were the astronauts of (X)?", "What were the astronauts of the (X)?", "which (Y) are the astronauts of (X)?", "which (Y) are the astronauts of the (X)?", "which (Y) is the astronaut of (X)?", "which (Y) is the astronaut of the (X)?", "which (Y) was the astronaut of (X)?", "which (Y) was the astronaut of the (X)?", "which (Y) were the astronauts of (X)?", "which (Y) were the astronauts of the (X)?", "Who is (X) 's astronaut?", "Who is the astronaut of (X)?", "Who is the astronaut of the (X)?", "Who was (X) 's astronaut?", "Who was the astronaut of (X)?", "Who was the astronaut of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "447",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the astronaut of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "448",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SpaceMission" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the astronaut of which (Y)?", "(X) was the astronaut of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "449",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many astronauts does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "450",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the astronaut of (X)?", "the astronauts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "451",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) currencies.", "Give me all currencies of (X).", "Give me the (X) currencies.", "Give me the (X) currency.", "List all currencies of (X).", "List all the currencies of (X).", "List all the currencies with currency of (X).", "show me all currencies of (X).", "What (Y) is (X) 's currency?", "What (Y) is the currency of (X)?", "What (Y) is the currency of the (X)?", "What (Y) was (X) 's currency?", "What (Y) was the currency of (X)?", "What (Y) was the currency of the (X)?", "What are the currencies of (X)?", "What are the currencies of the (X)?", "What is the currency of (X)?", "What is the currency of the (X)?", "What was the currency of (X)?", "What was the currency of the (X)?", "What were the currencies of (X)?", "What were the currencies of the (X)?", "which (Y) are the currencies of (X)?", "which (Y) are the currencies of the (X)?", "which (Y) is the currency of (X)?", "which (Y) is the currency of the (X)?", "which (Y) was the currency of (X)?", "which (Y) was the currency of the (X)?", "which (Y) were the currencies of (X)?", "which (Y) were the currencies of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "452",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the currency of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "453",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the currency of which (Y)?", "(X) was the currency of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "454",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many currencies does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "455",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of (X)?", "the currency of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "456",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) currencies.", "Give me all currencies of (X).", "Give me the (X) currencies.", "Give me the (X) currency.", "List all currencies of (X).", "List all the currencies of (X).", "List all the currencies with currency of (X).", "show me all currencies of (X).", "What (Y) is (X) 's currency?", "What (Y) is the currency of (X)?", "What (Y) is the currency of the (X)?", "What (Y) was (X) 's currency?", "What (Y) was the currency of (X)?", "What (Y) was the currency of the (X)?", "What are the currencies of (X)?", "What are the currencies of the (X)?", "What is the currency of (X)?", "What is the currency of the (X)?", "What was the currency of (X)?", "What was the currency of the (X)?", "What were the currencies of (X)?", "What were the currencies of the (X)?", "which (Y) are the currencies of (X)?", "which (Y) are the currencies of the (X)?", "which (Y) is the currency of (X)?", "which (Y) is the currency of the (X)?", "which (Y) was the currency of (X)?", "which (Y) was the currency of the (X)?", "which (Y) were the currencies of (X)?", "which (Y) were the currencies of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "457",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the currency of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "458",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the currency of which (Y)?", "(X) was the currency of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "459",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many currencies does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "460",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of (X)?", "the currency of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "461",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) currencies.", "Give me all currencies of (X).", "Give me the (X) currencies.", "Give me the (X) currency.", "List all currencies of (X).", "List all the currencies of (X).", "List all the currencies with currency of (X).", "show me all currencies of (X).", "What (Y) is (X) 's currency?", "What (Y) is the currency of (X)?", "What (Y) is the currency of the (X)?", "What (Y) was (X) 's currency?", "What (Y) was the currency of (X)?", "What (Y) was the currency of the (X)?", "What are the currencies of (X)?", "What are the currencies of the (X)?", "What is the currency of (X)?", "What is the currency of the (X)?", "What was the currency of (X)?", "What was the currency of the (X)?", "What were the currencies of (X)?", "What were the currencies of the (X)?", "which (Y) are the currencies of (X)?", "which (Y) are the currencies of the (X)?", "which (Y) is the currency of (X)?", "which (Y) is the currency of the (X)?", "which (Y) was the currency of (X)?", "which (Y) was the currency of the (X)?", "which (Y) were the currencies of (X)?", "which (Y) were the currencies of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "462",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the currency of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "463",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the currency of which (Y)?", "(X) was the currency of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "464",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many currencies does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "465",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of (X)?", "the currency of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "466",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) currencies.", "Give me all currencies of (X).", "Give me the (X) currencies.", "Give me the (X) currency.", "List all currencies of (X).", "List all the currencies of (X).", "List all the currencies with currency of (X).", "show me all currencies of (X).", "What (Y) is (X) 's currency?", "What (Y) is the currency of (X)?", "What (Y) is the currency of the (X)?", "What (Y) was (X) 's currency?", "What (Y) was the currency of (X)?", "What (Y) was the currency of the (X)?", "What are the currencies of (X)?", "What are the currencies of the (X)?", "What is the currency of (X)?", "What is the currency of the (X)?", "What was the currency of (X)?", "What was the currency of the (X)?", "What were the currencies of (X)?", "What were the currencies of the (X)?", "which (Y) are the currencies of (X)?", "which (Y) are the currencies of the (X)?", "which (Y) is the currency of (X)?", "which (Y) is the currency of the (X)?", "which (Y) was the currency of (X)?", "which (Y) was the currency of the (X)?", "which (Y) were the currencies of (X)?", "which (Y) were the currencies of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "467",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the currency of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "468",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the currency of which (Y)?", "(X) was the currency of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "469",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many currencies does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "470",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of (X)?", "the currency of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "471",
    "lexicalEntryUri" : "http://localhost:8080#height_of_252",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Model" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) height.", "What is the height of (X)?", "What is the height of the (X)?", "What was the height of (X)?", "What was the height of the (X)?", "which (Y) is the height of (X)?", "which (Y) is the height of the (X)?", "which (Y) was the height of (X)?", "which (Y) was the height of the (X)?", "Who is (X) 's height?", "Who is the height of (X)?", "Who is the height of the (X)?", "Who was (X) 's height?", "Who was the height of (X)?", "Who was the height of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "472",
    "lexicalEntryUri" : "http://localhost:8080#height_of_252",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Model" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the height of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/height> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "473",
    "lexicalEntryUri" : "http://localhost:8080#height_of_252",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the height of which (Y)?", "(X) was the height of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "474",
    "lexicalEntryUri" : "http://localhost:8080#height_of_252",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Model" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the height of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "475",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1_347",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the agents with founder of (X).", "List all the founders of (X).", "show me all founders of (X).", "What (Y) is (X) 's founder?", "What (Y) is the founder of (X)?", "What (Y) is the founder of the (X)?", "What (Y) was (X) 's founder?", "What (Y) was the founder of (X)?", "What (Y) was the founder of the (X)?", "which (Y) are the founders of (X)?", "which (Y) are the founders of the (X)?", "which (Y) is the founder of (X)?", "which (Y) is the founder of the (X)?", "which (Y) was the founder of (X)?", "which (Y) was the founder of the (X)?", "which (Y) were the founders of (X)?", "which (Y) were the founders of the (X)?", "Who are the founders of (X)?", "Who are the founders of the (X)?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/founder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "476",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1_347",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Publisher" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founder of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/founder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "477",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1_347",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founder of which (Y)?", "(X) was the founder of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/founder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "478",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1_347",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founders does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/founder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "479",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1_347",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/founder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "480",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of_355",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) nationality.", "List all the countries with nationality of (X).", "What is the nationality of (X)?", "What is the nationality of the (X)?", "What was the nationality of (X)?", "What was the nationality of the (X)?", "which (Y) is the nationality of (X)?", "which (Y) is the nationality of the (X)?", "which (Y) was the nationality of (X)?", "which (Y) was the nationality of the (X)?", "Who is (X) 's nationality?", "Who is the nationality of (X)?", "Who is the nationality of the (X)?", "Who was (X) 's nationality?", "Who was the nationality of (X)?", "Who was the nationality of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/citizenship> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "481",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of_355",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the nationality of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/citizenship> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "482",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of_355",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the nationality of which (Y)?", "(X) was the nationality of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/citizenship> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "483",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of_355",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/citizenship> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "484",
    "lexicalEntryUri" : "http://localhost:8080#producer-of_315",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) producers.", "Give me all producers of (X).", "Give me the (X) producer.", "Give me the (X) producers.", "List all producers of (X).", "List all the company with producer of (X).", "List all the producers of (X).", "show me all producers of (X).", "What (Y) is (X) 's producer?", "What (Y) is the producer of (X)?", "What (Y) is the producer of the (X)?", "What (Y) was (X) 's producer?", "What (Y) was the producer of (X)?", "What (Y) was the producer of the (X)?", "which (Y) are the producers of (X)?", "which (Y) are the producers of the (X)?", "which (Y) is the producer of (X)?", "which (Y) is the producer of the (X)?", "which (Y) was the producer of (X)?", "which (Y) was the producer of the (X)?", "which (Y) were the producers of (X)?", "which (Y) were the producers of the (X)?", "Who are the producers of (X)?", "Who are the producers of the (X)?", "Who is the producer of (X)?", "Who is the producer of the (X)?", "Who was the producer of (X)?", "Who was the producer of the (X)?", "Who were the producers of (X)?", "Who were the producers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "485",
    "lexicalEntryUri" : "http://localhost:8080#producer-of_315",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "Film" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the producer of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "486",
    "lexicalEntryUri" : "http://localhost:8080#producer-of_315",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the producer of which (Y)?", "(X) was the producer of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "487",
    "lexicalEntryUri" : "http://localhost:8080#producer-of_315",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many producers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "488",
    "lexicalEntryUri" : "http://localhost:8080#producer-of_315",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the producer of (X)?", "the producers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "489",
    "lexicalEntryUri" : "http://localhost:8080#firstascentperson-of_282",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) first Ascent Persons.", "Give me all first Ascent Persons of (X).", "Give me the (X) first Ascent Person.", "Give me the (X) first Ascent Persons.", "List all first Ascent Persons of (X).", "List all the first Ascent Persons of (X).", "List all the places with first Ascent Person of (X).", "show me all first Ascent Persons of (X).", "What (Y) is (X) 's first Ascent Person?", "What (Y) is the first Ascent Person of (X)?", "What (Y) is the first Ascent Person of the (X)?", "What (Y) was (X) 's first Ascent Person?", "What (Y) was the first Ascent Person of (X)?", "What (Y) was the first Ascent Person of the (X)?", "What are the first Ascent Persons of (X)?", "What are the first Ascent Persons of the (X)?", "What is the first Ascent Person of (X)?", "What is the first Ascent Person of the (X)?", "What was the first Ascent Person of (X)?", "What was the first Ascent Person of the (X)?", "What were the first Ascent Persons of (X)?", "What were the first Ascent Persons of the (X)?", "which (Y) are the first Ascent Persons of (X)?", "which (Y) are the first Ascent Persons of the (X)?", "which (Y) is the first Ascent Person of (X)?", "which (Y) is the first Ascent Person of the (X)?", "which (Y) was the first Ascent Person of (X)?", "which (Y) was the first Ascent Person of the (X)?", "which (Y) were the first Ascent Persons of (X)?", "which (Y) were the first Ascent Persons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "490",
    "lexicalEntryUri" : "http://localhost:8080#firstascentperson-of_282",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Mountain" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the first Ascent Person of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "491",
    "lexicalEntryUri" : "http://localhost:8080#firstascentperson-of_282",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the first Ascent Person of which (Y)?", "(X) was the first Ascent Person of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "492",
    "lexicalEntryUri" : "http://localhost:8080#firstascentperson-of_282",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many first Ascent Persons does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "493",
    "lexicalEntryUri" : "http://localhost:8080#firstascentperson-of_282",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Ascent Person of (X)?", "the first Ascent Persons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "494",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) inhabitants.", "Give me all inhabitants of (X).", "Give me the (X) inhabitant.", "Give me the (X) inhabitants.", "List all inhabitants of (X).", "List all the inhabitants of (X).", "show me all inhabitants of (X).", "What (Y) is (X) 's inhabitant?", "What (Y) is the inhabitant of (X)?", "What (Y) is the inhabitant of the (X)?", "What (Y) was (X) 's inhabitant?", "What (Y) was the inhabitant of (X)?", "What (Y) was the inhabitant of the (X)?", "What are the inhabitants of (X)?", "What are the inhabitants of the (X)?", "What is the inhabitant of (X)?", "What is the inhabitant of the (X)?", "What was the inhabitant of (X)?", "What was the inhabitant of the (X)?", "What were the inhabitants of (X)?", "What were the inhabitants of the (X)?", "which (Y) are the inhabitants of (X)?", "which (Y) are the inhabitants of the (X)?", "which (Y) is the inhabitant of (X)?", "which (Y) is the inhabitant of the (X)?", "which (Y) was the inhabitant of (X)?", "which (Y) was the inhabitant of the (X)?", "which (Y) were the inhabitants of (X)?", "which (Y) were the inhabitants of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "495",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the inhabitant of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "496",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the inhabitant of which (Y)?", "(X) was the inhabitant of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "497",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many inhabitants does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "498",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the inhabitant of (X)?", "the inhabitants of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "499",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) inhabitants.", "Give me all inhabitants of (X).", "Give me the (X) inhabitant.", "Give me the (X) inhabitants.", "List all inhabitants of (X).", "List all the inhabitants of (X).", "show me all inhabitants of (X).", "What (Y) is (X) 's inhabitant?", "What (Y) is the inhabitant of (X)?", "What (Y) is the inhabitant of the (X)?", "What (Y) was (X) 's inhabitant?", "What (Y) was the inhabitant of (X)?", "What (Y) was the inhabitant of the (X)?", "What are the inhabitants of (X)?", "What are the inhabitants of the (X)?", "What is the inhabitant of (X)?", "What is the inhabitant of the (X)?", "What was the inhabitant of (X)?", "What was the inhabitant of the (X)?", "What were the inhabitants of (X)?", "What were the inhabitants of the (X)?", "which (Y) are the inhabitants of (X)?", "which (Y) are the inhabitants of the (X)?", "which (Y) is the inhabitant of (X)?", "which (Y) is the inhabitant of the (X)?", "which (Y) was the inhabitant of (X)?", "which (Y) was the inhabitant of the (X)?", "which (Y) were the inhabitants of (X)?", "which (Y) were the inhabitants of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "500",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the inhabitant of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "501",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the inhabitant of which (Y)?", "(X) was the inhabitant of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "502",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many inhabitants does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "503",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the inhabitant of (X)?", "the inhabitants of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "504",
    "lexicalEntryUri" : "http://localhost:8080#employer-of_319",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) employers.", "Give me all employers of (X).", "Give me the (X) employer.", "Give me the (X) employers.", "List all employers of (X).", "List all the employers of (X).", "List all the places with employer of (X).", "show me all employers of (X).", "What are the employers of (X)?", "What are the employers of the (X)?", "What is the employer of (X)?", "What is the employer of the (X)?", "What was the employer of (X)?", "What was the employer of the (X)?", "What were the employers of (X)?", "What were the employers of the (X)?", "which (Y) are the employers of (X)?", "which (Y) are the employers of the (X)?", "which (Y) is the employer of (X)?", "which (Y) is the employer of the (X)?", "which (Y) was the employer of (X)?", "which (Y) was the employer of the (X)?", "which (Y) were the employers of (X)?", "which (Y) were the employers of the (X)?", "Who is (X) 's employer?", "Who is the employer of (X)?", "Who is the employer of the (X)?", "Who was (X) 's employer?", "Who was the employer of (X)?", "Who was the employer of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "505",
    "lexicalEntryUri" : "http://localhost:8080#employer-of_319",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the employer of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/employer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "506",
    "lexicalEntryUri" : "http://localhost:8080#employer-of_319",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the employer of which (Y)?", "(X) was the employer of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "507",
    "lexicalEntryUri" : "http://localhost:8080#employer-of_319",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many employers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/employer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "508",
    "lexicalEntryUri" : "http://localhost:8080#employer-of_319",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employer of (X)?", "the employers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "509",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) members.", "Give me all members of (X).", "Give me the (X) member.", "Give me the (X) members.", "List all members of (X).", "List all the company with member of (X).", "List all the members of (X).", "show me all members of (X).", "which (Y) are the members of (X)?", "which (Y) are the members of the (X)?", "which (Y) is the member of (X)?", "which (Y) is the member of the (X)?", "which (Y) was the member of (X)?", "which (Y) was the member of the (X)?", "which (Y) were the members of (X)?", "which (Y) were the members of the (X)?", "Who are the members of (X)?", "Who are the members of the (X)?", "Who is (X) 's member?", "Who is the member of (X)?", "Who is the member of the (X)?", "Who was (X) 's member?", "Who was the member of (X)?", "Who was the member of the (X)?", "Who were the members of (X)?", "Who were the members of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "510",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the member of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "511",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the member of which (Y)?", "(X) was the member of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "512",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many members does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "513",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of (X)?", "the members of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "514",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) members.", "Give me all members of (X).", "Give me the (X) member.", "Give me the (X) members.", "List all members of (X).", "List all the company with member of (X).", "List all the members of (X).", "show me all members of (X).", "which (Y) are the members of (X)?", "which (Y) are the members of the (X)?", "which (Y) is the member of (X)?", "which (Y) is the member of the (X)?", "which (Y) was the member of (X)?", "which (Y) was the member of the (X)?", "which (Y) were the members of (X)?", "which (Y) were the members of the (X)?", "Who are the members of (X)?", "Who are the members of the (X)?", "Who is (X) 's member?", "Who is the member of (X)?", "Who is the member of the (X)?", "Who was (X) 's member?", "Who was the member of (X)?", "Who was the member of the (X)?", "Who were the members of (X)?", "Who were the members of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "515",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the member of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "516",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the member of which (Y)?", "(X) was the member of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "517",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many members does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "518",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of (X)?", "the members of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "519",
    "lexicalEntryUri" : "http://localhost:8080#restingplace-of_237",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) resting place.", "What is the resting place of (X)?", "What is the resting place of the (X)?", "What was the resting place of (X)?", "What was the resting place of the (X)?", "which (Y) is the resting place of (X)?", "which (Y) is the resting place of the (X)?", "which (Y) was the resting place of (X)?", "which (Y) was the resting place of the (X)?", "Who is (X) 's resting place?", "Who is the resting place of (X)?", "Who is the resting place of the (X)?", "Who was (X) 's resting place?", "Who was the resting place of (X)?", "Who was the resting place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "520",
    "lexicalEntryUri" : "http://localhost:8080#restingplace-of_237",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the resting place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "521",
    "lexicalEntryUri" : "http://localhost:8080#restingplace-of_237",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the resting place of which (Y)?", "(X) was the resting place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "522",
    "lexicalEntryUri" : "http://localhost:8080#restingplace-of_237",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "523",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) official languages.", "Give me all official languages of (X).", "Give me the (X) official language.", "Give me the (X) official languages.", "List all official languages of (X).", "List all the languages with official language of (X).", "List all the official languages of (X).", "show me all official languages of (X).", "What (Y) is (X) 's official language?", "What (Y) is the official language of (X)?", "What (Y) is the official language of the (X)?", "What (Y) was (X) 's official language?", "What (Y) was the official language of (X)?", "What (Y) was the official language of the (X)?", "What are the official languages of (X)?", "What are the official languages of the (X)?", "What is the official language of (X)?", "What is the official language of the (X)?", "What was the official language of (X)?", "What was the official language of the (X)?", "What were the official languages of (X)?", "What were the official languages of the (X)?", "which (Y) are the official languages of (X)?", "which (Y) are the official languages of the (X)?", "which (Y) is the official language of (X)?", "which (Y) is the official language of the (X)?", "which (Y) was the official language of (X)?", "which (Y) was the official language of the (X)?", "which (Y) were the official languages of (X)?", "which (Y) were the official languages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "524",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the official language of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "525",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the official language of which (Y)?", "(X) was the official language of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "526",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many official languages does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "527",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of (X)?", "the official languages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "528",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) official languages.", "Give me all official languages of (X).", "Give me the (X) official language.", "Give me the (X) official languages.", "List all official languages of (X).", "List all the languages with official language of (X).", "List all the official languages of (X).", "show me all official languages of (X).", "What (Y) is (X) 's official language?", "What (Y) is the official language of (X)?", "What (Y) is the official language of the (X)?", "What (Y) was (X) 's official language?", "What (Y) was the official language of (X)?", "What (Y) was the official language of the (X)?", "What are the official languages of (X)?", "What are the official languages of the (X)?", "What is the official language of (X)?", "What is the official language of the (X)?", "What was the official language of (X)?", "What was the official language of the (X)?", "What were the official languages of (X)?", "What were the official languages of the (X)?", "which (Y) are the official languages of (X)?", "which (Y) are the official languages of the (X)?", "which (Y) is the official language of (X)?", "which (Y) is the official language of the (X)?", "which (Y) was the official language of (X)?", "which (Y) was the official language of the (X)?", "which (Y) were the official languages of (X)?", "which (Y) were the official languages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "529",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the official language of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "530",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the official language of which (Y)?", "(X) was the official language of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "531",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many official languages does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "532",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of (X)?", "the official languages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "533",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) official languages.", "Give me all official languages of (X).", "Give me the (X) official language.", "Give me the (X) official languages.", "List all official languages of (X).", "List all the languages with official language of (X).", "List all the official languages of (X).", "show me all official languages of (X).", "What (Y) is (X) 's official language?", "What (Y) is the official language of (X)?", "What (Y) is the official language of the (X)?", "What (Y) was (X) 's official language?", "What (Y) was the official language of (X)?", "What (Y) was the official language of the (X)?", "What are the official languages of (X)?", "What are the official languages of the (X)?", "What is the official language of (X)?", "What is the official language of the (X)?", "What was the official language of (X)?", "What was the official language of the (X)?", "What were the official languages of (X)?", "What were the official languages of the (X)?", "which (Y) are the official languages of (X)?", "which (Y) are the official languages of the (X)?", "which (Y) is the official language of (X)?", "which (Y) is the official language of the (X)?", "which (Y) was the official language of (X)?", "which (Y) was the official language of the (X)?", "which (Y) were the official languages of (X)?", "which (Y) were the official languages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "534",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the official language of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "535",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the official language of which (Y)?", "(X) was the official language of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "536",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many official languages does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "537",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of (X)?", "the official languages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "538",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) names.", "Give me all names of (X).", "Give me the (X) name.", "Give me the (X) names.", "List all names of (X).", "List all the names of (X).", "show me all names of (X).", "What (Y) is (X) 's name?", "What (Y) is the name of (X)?", "What (Y) is the name of the (X)?", "What (Y) was (X) 's name?", "What (Y) was the name of (X)?", "What (Y) was the name of the (X)?", "What are the names of (X)?", "What are the names of the (X)?", "What is the name of (X)?", "What is the name of the (X)?", "What was the name of (X)?", "What was the name of the (X)?", "What were the names of (X)?", "What were the names of the (X)?", "which (Y) are the names of (X)?", "which (Y) are the names of the (X)?", "which (Y) is the name of (X)?", "which (Y) is the name of the (X)?", "which (Y) was the name of (X)?", "which (Y) was the name of the (X)?", "which (Y) were the names of (X)?", "which (Y) were the names of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "539",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the name of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "540",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the name of which (Y)?", "(X) was the name of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "541",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many names does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "542",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the name of (X)?", "the names of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "543",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) names.", "Give me all names of (X).", "Give me the (X) name.", "Give me the (X) names.", "List all names of (X).", "List all the names of (X).", "show me all names of (X).", "What (Y) is (X) 's name?", "What (Y) is the name of (X)?", "What (Y) is the name of the (X)?", "What (Y) was (X) 's name?", "What (Y) was the name of (X)?", "What (Y) was the name of the (X)?", "What are the names of (X)?", "What are the names of the (X)?", "What is the name of (X)?", "What is the name of the (X)?", "What was the name of (X)?", "What was the name of the (X)?", "What were the names of (X)?", "What were the names of the (X)?", "which (Y) are the names of (X)?", "which (Y) are the names of the (X)?", "which (Y) is the name of (X)?", "which (Y) is the name of the (X)?", "which (Y) was the name of (X)?", "which (Y) was the name of the (X)?", "which (Y) were the names of (X)?", "which (Y) were the names of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "544",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the name of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "545",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the name of which (Y)?", "(X) was the name of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "546",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many names does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "547",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the name of (X)?", "the names of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "548",
    "lexicalEntryUri" : "http://localhost:8080#music_by_388",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) musics.", "Give me all musics by (X).", "Give me the (X) music.", "Give me the (X) musics.", "List all musics by (X).", "List all the musicals with music by (X).", "List all the musics by (X).", "show me all musics by (X).", "What are the musics by (X)?", "What are the musics by the (X)?", "What is the music by (X)?", "What is the music by the (X)?", "What was the music by (X)?", "What was the music by the (X)?", "What were the musics by (X)?", "What were the musics by the (X)?", "which (Y) are the musics by (X)?", "which (Y) are the musics by the (X)?", "which (Y) is the music by (X)?", "which (Y) is the music by the (X)?", "which (Y) was the music by (X)?", "which (Y) was the music by the (X)?", "which (Y) were the musics by (X)?", "which (Y) were the musics by the (X)?", "Who is (X) 's music?", "Who is the music by (X)?", "Who is the music by the (X)?", "Who was (X) 's music?", "Who was the music by (X)?", "Who was the music by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "549",
    "lexicalEntryUri" : "http://localhost:8080#music_by_388",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Musical", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the music by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "550",
    "lexicalEntryUri" : "http://localhost:8080#music_by_388",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Musical" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the music by which (Y)?", "(X) was the music by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "551",
    "lexicalEntryUri" : "http://localhost:8080#music_by_388",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many musics does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "552",
    "lexicalEntryUri" : "http://localhost:8080#music_by_388",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by (X)?", "the musics by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "553",
    "lexicalEntryUri" : "http://localhost:8080#lastelectiondate-of_304",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) last Election Dates.", "Give me all last Election Dates of (X).", "Give me the (X) last Election Date.", "Give me the (X) last Election Dates.", "List all last Election Dates of (X).", "List all the last Election Dates of (X).", "show me all last Election Dates of (X).", "What are the last Election Dates of (X)?", "What are the last Election Dates of the (X)?", "What is the last Election Date of (X)?", "What is the last Election Date of the (X)?", "What was the last Election Date of (X)?", "What was the last Election Date of the (X)?", "What were the last Election Dates of (X)?", "What were the last Election Dates of the (X)?", "which (Y) are the last Election Dates of (X)?", "which (Y) are the last Election Dates of the (X)?", "which (Y) is the last Election Date of (X)?", "which (Y) is the last Election Date of the (X)?", "which (Y) was the last Election Date of (X)?", "which (Y) was the last Election Date of the (X)?", "which (Y) were the last Election Dates of (X)?", "which (Y) were the last Election Dates of the (X)?", "Who is (X) 's last Election Date?", "Who is the last Election Date of (X)?", "Who is the last Election Date of the (X)?", "Who was (X) 's last Election Date?", "Who was the last Election Date of (X)?", "Who was the last Election Date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "554",
    "lexicalEntryUri" : "http://localhost:8080#lastelectiondate-of_304",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the last Election Date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "555",
    "lexicalEntryUri" : "http://localhost:8080#lastelectiondate-of_304",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the last Election Date of which (Y)?", "(X) was the last Election Date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "556",
    "lexicalEntryUri" : "http://localhost:8080#lastelectiondate-of_304",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many last Election Dates does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "557",
    "lexicalEntryUri" : "http://localhost:8080#lastelectiondate-of_304",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the last Election Date of (X)?", "the last Election Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "558",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parts.", "Give me all parts of (X).", "Give me the (X) part.", "Give me the (X) parts.", "List all parts of (X).", "List all the parts of (X).", "List all the politicalParties with part of (X).", "show me all parts of (X).", "What are the parts of (X)?", "What are the parts of the (X)?", "What is the part of (X)?", "What is the part of the (X)?", "What was the part of (X)?", "What was the part of the (X)?", "What were the parts of (X)?", "What were the parts of the (X)?", "which (Y) are the parts of (X)?", "which (Y) are the parts of the (X)?", "which (Y) is the part of (X)?", "which (Y) is the part of the (X)?", "which (Y) was the part of (X)?", "which (Y) was the part of the (X)?", "which (Y) were the parts of (X)?", "which (Y) were the parts of the (X)?", "Who is (X) 's part?", "Who is the part of (X)?", "Who is the part of the (X)?", "Who was (X) 's part?", "Who was the part of (X)?", "Who was the part of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "559",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the part of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "560",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the part of which (Y)?", "(X) was the part of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "561",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many parts does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "562",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the part of (X)?", "the parts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "563",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parts.", "Give me all parts of (X).", "Give me the (X) part.", "Give me the (X) parts.", "List all parts of (X).", "List all the parts of (X).", "List all the politicalParties with part of (X).", "show me all parts of (X).", "What are the parts of (X)?", "What are the parts of the (X)?", "What is the part of (X)?", "What is the part of the (X)?", "What was the part of (X)?", "What was the part of the (X)?", "What were the parts of (X)?", "What were the parts of the (X)?", "which (Y) are the parts of (X)?", "which (Y) are the parts of the (X)?", "which (Y) is the part of (X)?", "which (Y) is the part of the (X)?", "which (Y) was the part of (X)?", "which (Y) was the part of the (X)?", "which (Y) were the parts of (X)?", "which (Y) were the parts of the (X)?", "Who is (X) 's part?", "Who is the part of (X)?", "Who is the part of the (X)?", "Who was (X) 's part?", "Who was the part of (X)?", "Who was the part of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "564",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the part of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "565",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the part of which (Y)?", "(X) was the part of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "566",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many parts does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "567",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the part of (X)?", "the parts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "568",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) sons.", "Give me all sons of (X).", "Give me the (X) son.", "Give me the (X) sons.", "List all sons of (X).", "List all the persons with son of (X).", "List all the sons of (X).", "show me all sons of (X).", "which (Y) are the sons of (X)?", "which (Y) are the sons of the (X)?", "which (Y) is the son of (X)?", "which (Y) is the son of the (X)?", "which (Y) was the son of (X)?", "which (Y) was the son of the (X)?", "which (Y) were the sons of (X)?", "which (Y) were the sons of the (X)?", "Who are the sons of (X)?", "Who are the sons of the (X)?", "Who is (X) 's son?", "Who is the son of (X)?", "Who is the son of the (X)?", "Who was (X) 's son?", "Who was the son of (X)?", "Who was the son of the (X)?", "Who were the sons of (X)?", "Who were the sons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "569",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the son of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "570",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the son of which (Y)?", "(X) was the son of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "571",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many sons does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "572",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of (X)?", "the sons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "573",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) sons.", "Give me all sons of (X).", "Give me the (X) son.", "Give me the (X) sons.", "List all sons of (X).", "List all the persons with son of (X).", "List all the sons of (X).", "show me all sons of (X).", "which (Y) are the sons of (X)?", "which (Y) are the sons of the (X)?", "which (Y) is the son of (X)?", "which (Y) is the son of the (X)?", "which (Y) was the son of (X)?", "which (Y) was the son of the (X)?", "which (Y) were the sons of (X)?", "which (Y) were the sons of the (X)?", "Who are the sons of (X)?", "Who are the sons of the (X)?", "Who is (X) 's son?", "Who is the son of (X)?", "Who is the son of the (X)?", "Who was (X) 's son?", "Who was the son of (X)?", "Who was the son of the (X)?", "Who were the sons of (X)?", "Who were the sons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "574",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the son of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "575",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the son of which (Y)?", "(X) was the son of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "576",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many sons does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "577",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of (X)?", "the sons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "578",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) sons.", "Give me all sons of (X).", "Give me the (X) son.", "Give me the (X) sons.", "List all sons of (X).", "List all the persons with son of (X).", "List all the sons of (X).", "show me all sons of (X).", "which (Y) are the sons of (X)?", "which (Y) are the sons of the (X)?", "which (Y) is the son of (X)?", "which (Y) is the son of the (X)?", "which (Y) was the son of (X)?", "which (Y) was the son of the (X)?", "which (Y) were the sons of (X)?", "which (Y) were the sons of the (X)?", "Who are the sons of (X)?", "Who are the sons of the (X)?", "Who is (X) 's son?", "Who is the son of (X)?", "Who is the son of the (X)?", "Who was (X) 's son?", "Who was the son of (X)?", "Who was the son of the (X)?", "Who were the sons of (X)?", "Who were the sons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "579",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the son of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "580",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the son of which (Y)?", "(X) was the son of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "581",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many sons does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "582",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of (X)?", "the sons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "583",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) sons.", "Give me all sons of (X).", "Give me the (X) son.", "Give me the (X) sons.", "List all sons of (X).", "List all the persons with son of (X).", "List all the sons of (X).", "show me all sons of (X).", "which (Y) are the sons of (X)?", "which (Y) are the sons of the (X)?", "which (Y) is the son of (X)?", "which (Y) is the son of the (X)?", "which (Y) was the son of (X)?", "which (Y) was the son of the (X)?", "which (Y) were the sons of (X)?", "which (Y) were the sons of the (X)?", "Who are the sons of (X)?", "Who are the sons of the (X)?", "Who is (X) 's son?", "Who is the son of (X)?", "Who is the son of the (X)?", "Who was (X) 's son?", "Who was the son of (X)?", "Who was the son of the (X)?", "Who were the sons of (X)?", "Who were the sons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "584",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the son of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "585",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the son of which (Y)?", "(X) was the son of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "586",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many sons does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "587",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of (X)?", "the sons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "588",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) death.", "What is the death of (X)?", "What is the death of the (X)?", "What was the death of (X)?", "What was the death of the (X)?", "which (Y) is the death of (X)?", "which (Y) is the death of the (X)?", "which (Y) was the death of (X)?", "which (Y) was the death of the (X)?", "Who is (X) 's death?", "Who is the death of (X)?", "Who is the death of the (X)?", "Who was (X) 's death?", "Who was the death of (X)?", "Who was the death of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "589",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the death of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "590",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the death of which (Y)?", "(X) was the death of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "591",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "592",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) death.", "What is the death of (X)?", "What is the death of the (X)?", "What was the death of (X)?", "What was the death of the (X)?", "which (Y) is the death of (X)?", "which (Y) is the death of the (X)?", "which (Y) was the death of (X)?", "which (Y) was the death of the (X)?", "Who is (X) 's death?", "Who is the death of (X)?", "Who is the death of the (X)?", "Who was (X) 's death?", "Who was the death of (X)?", "Who was the death of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "593",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the death of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "594",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the death of which (Y)?", "(X) was the death of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "595",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "596",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parties.", "Give me all parties of (X).", "Give me the (X) parties.", "Give me the (X) party.", "List all parties of (X).", "List all the parties of (X).", "show me all parties of (X).", "What are the parties of (X)?", "What are the parties of the (X)?", "What is the party of (X)?", "What is the party of the (X)?", "What was the party of (X)?", "What was the party of the (X)?", "What were the parties of (X)?", "What were the parties of the (X)?", "which (Y) are the parties of (X)?", "which (Y) are the parties of the (X)?", "which (Y) is the party of (X)?", "which (Y) is the party of the (X)?", "which (Y) was the party of (X)?", "which (Y) was the party of the (X)?", "which (Y) were the parties of (X)?", "which (Y) were the parties of the (X)?", "Who is (X) 's party?", "Who is the party of (X)?", "Who is the party of the (X)?", "Who was (X) 's party?", "Who was the party of (X)?", "Who was the party of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "597",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the party of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "598",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the party of which (Y)?", "(X) was the party of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "599",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many parties does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "600",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of (X)?", "the party of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "601",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parties.", "Give me all parties of (X).", "Give me the (X) parties.", "Give me the (X) party.", "List all parties of (X).", "List all the parties of (X).", "show me all parties of (X).", "What are the parties of (X)?", "What are the parties of the (X)?", "What is the party of (X)?", "What is the party of the (X)?", "What was the party of (X)?", "What was the party of the (X)?", "What were the parties of (X)?", "What were the parties of the (X)?", "which (Y) are the parties of (X)?", "which (Y) are the parties of the (X)?", "which (Y) is the party of (X)?", "which (Y) is the party of the (X)?", "which (Y) was the party of (X)?", "which (Y) was the party of the (X)?", "which (Y) were the parties of (X)?", "which (Y) were the parties of the (X)?", "Who is (X) 's party?", "Who is the party of (X)?", "Who is the party of the (X)?", "Who was (X) 's party?", "Who was the party of (X)?", "Who was the party of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "602",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the party of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "603",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the party of which (Y)?", "(X) was the party of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "604",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many parties does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "605",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of (X)?", "the party of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "606",
    "lexicalEntryUri" : "http://localhost:8080#postcode-of_378",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) post code.", "What (Y) is (X) 's post code?", "What (Y) is the post code of (X)?", "What (Y) is the post code of the (X)?", "What (Y) was (X) 's post code?", "What (Y) was the post code of (X)?", "What (Y) was the post code of the (X)?", "What is the post code of (X)?", "What is the post code of the (X)?", "What was the post code of (X)?", "What was the post code of the (X)?", "which (Y) is the post code of (X)?", "which (Y) is the post code of the (X)?", "which (Y) was the post code of (X)?", "which (Y) was the post code of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/postalCode> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "607",
    "lexicalEntryUri" : "http://localhost:8080#postcode-of_378",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the post code of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/postalCode> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "608",
    "lexicalEntryUri" : "http://localhost:8080#postcode-of_378",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the post code of which (Y)?", "(X) was the post code of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/postalCode> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "609",
    "lexicalEntryUri" : "http://localhost:8080#postcode-of_378",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the post code of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/postalCode> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "610",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) books.", "Give me all books in (X).", "Give me the (X) book.", "Give me the (X) books.", "List all books in (X).", "List all the books in (X).", "List all the works with book in (X).", "show me all books in (X).", "What (Y) is (X) 's book?", "What (Y) is the book in (X)?", "What (Y) is the book in the (X)?", "What (Y) was (X) 's book?", "What (Y) was the book in (X)?", "What (Y) was the book in the (X)?", "What are the books in (X)?", "What are the books in the (X)?", "What is the book in (X)?", "What is the book in the (X)?", "What was the book in (X)?", "What was the book in the (X)?", "What were the books in (X)?", "What were the books in the (X)?", "which (Y) are the books in (X)?", "which (Y) are the books in the (X)?", "which (Y) is the book in (X)?", "which (Y) is the book in the (X)?", "which (Y) was the book in (X)?", "which (Y) was the book in the (X)?", "which (Y) were the books in (X)?", "which (Y) were the books in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "611",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work", "TelevisionEpisode" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the book in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "612",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionEpisode" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the book in which (Y)?", "(X) was the book in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "613",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many books does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "614",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in (X)?", "the books in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "615",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) books.", "Give me all books in (X).", "Give me the (X) book.", "Give me the (X) books.", "List all books in (X).", "List all the books in (X).", "List all the works with book in (X).", "show me all books in (X).", "What (Y) is (X) 's book?", "What (Y) is the book in (X)?", "What (Y) is the book in the (X)?", "What (Y) was (X) 's book?", "What (Y) was the book in (X)?", "What (Y) was the book in the (X)?", "What are the books in (X)?", "What are the books in the (X)?", "What is the book in (X)?", "What is the book in the (X)?", "What was the book in (X)?", "What was the book in the (X)?", "What were the books in (X)?", "What were the books in the (X)?", "which (Y) are the books in (X)?", "which (Y) are the books in the (X)?", "which (Y) is the book in (X)?", "which (Y) is the book in the (X)?", "which (Y) was the book in (X)?", "which (Y) was the book in the (X)?", "which (Y) were the books in (X)?", "which (Y) were the books in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "616",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work", "TelevisionEpisode" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the book in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "617",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionEpisode" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the book in which (Y)?", "(X) was the book in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "618",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many books does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "619",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in (X)?", "the books in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "620",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) main businesses.", "Give me all main businesses of (X).", "Give me the (X) main businesses.", "Give me the (X) main_business_of.", "List all main businesses of (X).", "List all the bands with main_business_of of (X).", "List all the main businesses of (X).", "show me all main businesses of (X).", "What are the main businesses of (X)?", "What are the main businesses of the (X)?", "What is the main_business_of of (X)?", "What is the main_business_of of the (X)?", "What was the main_business_of of (X)?", "What was the main_business_of of the (X)?", "What were the main businesses of (X)?", "What were the main businesses of the (X)?", "which (Y) are the main businesses of (X)?", "which (Y) are the main businesses of the (X)?", "which (Y) is the main_business_of of (X)?", "which (Y) is the main_business_of of the (X)?", "which (Y) was the main_business_of of (X)?", "which (Y) was the main_business_of of the (X)?", "which (Y) were the main businesses of (X)?", "which (Y) were the main businesses of the (X)?", "Who is (X) 's main_business_of?", "Who is the main_business_of of (X)?", "Who is the main_business_of of the (X)?", "Who was (X) 's main_business_of?", "Who was the main_business_of of (X)?", "Who was the main_business_of of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "621",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the main_business_of of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "622",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the main_business_of of which (Y)?", "(X) was the main_business_of of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "623",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many main businesses does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "624",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the main businesses of (X)?", "the main_business_of of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "625",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) main businesses.", "Give me all main businesses of (X).", "Give me the (X) main businesses.", "Give me the (X) main_business_of.", "List all main businesses of (X).", "List all the bands with main_business_of of (X).", "List all the main businesses of (X).", "show me all main businesses of (X).", "What are the main businesses of (X)?", "What are the main businesses of the (X)?", "What is the main_business_of of (X)?", "What is the main_business_of of the (X)?", "What was the main_business_of of (X)?", "What was the main_business_of of the (X)?", "What were the main businesses of (X)?", "What were the main businesses of the (X)?", "which (Y) are the main businesses of (X)?", "which (Y) are the main businesses of the (X)?", "which (Y) is the main_business_of of (X)?", "which (Y) is the main_business_of of the (X)?", "which (Y) was the main_business_of of (X)?", "which (Y) was the main_business_of of the (X)?", "which (Y) were the main businesses of (X)?", "which (Y) were the main businesses of the (X)?", "Who is (X) 's main_business_of?", "Who is the main_business_of of (X)?", "Who is the main_business_of of the (X)?", "Who was (X) 's main_business_of?", "Who was the main_business_of of (X)?", "Who was the main_business_of of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "626",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the main_business_of of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "627",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the main_business_of of which (Y)?", "(X) was the main_business_of of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "628",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many main businesses does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "629",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the main businesses of (X)?", "the main_business_of of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "630",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) headquarters.", "Give me all headquarters of (X).", "Give me the (X) headquarter.", "Give me the (X) headquarters.", "List all headquarters of (X).", "List all the headquarters of (X).", "show me all headquarters of (X).", "What are the headquarters of (X)?", "What are the headquarters of the (X)?", "What is the headquarter of (X)?", "What is the headquarter of the (X)?", "What was the headquarter of (X)?", "What was the headquarter of the (X)?", "What were the headquarters of (X)?", "What were the headquarters of the (X)?", "which (Y) are the headquarters of (X)?", "which (Y) are the headquarters of the (X)?", "which (Y) is the headquarter of (X)?", "which (Y) is the headquarter of the (X)?", "which (Y) was the headquarter of (X)?", "which (Y) was the headquarter of the (X)?", "which (Y) were the headquarters of (X)?", "which (Y) were the headquarters of the (X)?", "Who is (X) 's headquarter?", "Who is the headquarter of (X)?", "Who is the headquarter of the (X)?", "Who was (X) 's headquarter?", "Who was the headquarter of (X)?", "Who was the headquarter of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "631",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the headquarter of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "632",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the headquarter of which (Y)?", "(X) was the headquarter of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "633",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many headquarters does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "634",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of (X)?", "the headquarters of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "635",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) headquarters.", "Give me all headquarters of (X).", "Give me the (X) headquarter.", "Give me the (X) headquarters.", "List all headquarters of (X).", "List all the headquarters of (X).", "show me all headquarters of (X).", "What are the headquarters of (X)?", "What are the headquarters of the (X)?", "What is the headquarter of (X)?", "What is the headquarter of the (X)?", "What was the headquarter of (X)?", "What was the headquarter of the (X)?", "What were the headquarters of (X)?", "What were the headquarters of the (X)?", "which (Y) are the headquarters of (X)?", "which (Y) are the headquarters of the (X)?", "which (Y) is the headquarter of (X)?", "which (Y) is the headquarter of the (X)?", "which (Y) was the headquarter of (X)?", "which (Y) was the headquarter of the (X)?", "which (Y) were the headquarters of (X)?", "which (Y) were the headquarters of the (X)?", "Who is (X) 's headquarter?", "Who is the headquarter of (X)?", "Who is the headquarter of the (X)?", "Who was (X) 's headquarter?", "Who was the headquarter of (X)?", "Who was the headquarter of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "636",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the headquarter of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "637",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the headquarter of which (Y)?", "(X) was the headquarter of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "638",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many headquarters does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "639",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of (X)?", "the headquarters of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "640",
    "lexicalEntryUri" : "http://localhost:8080#deathdate-of_283",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) death date.", "What is the death date of (X)?", "What is the death date of the (X)?", "What was the death date of (X)?", "What was the death date of the (X)?", "which (Y) is the death date of (X)?", "which (Y) is the death date of the (X)?", "which (Y) was the death date of (X)?", "which (Y) was the death date of the (X)?", "Who is (X) 's death date?", "Who is the death date of (X)?", "Who is the death date of the (X)?", "Who was (X) 's death date?", "Who was the death date of (X)?", "Who was the death date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "641",
    "lexicalEntryUri" : "http://localhost:8080#deathdate-of_283",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the death date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "642",
    "lexicalEntryUri" : "http://localhost:8080#deathdate-of_283",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the death date of which (Y)?", "(X) was the death date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "643",
    "lexicalEntryUri" : "http://localhost:8080#deathdate-of_283",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death date of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "644",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) father.", "List all the persons with father of (X).", "What (Y) is (X) 's father?", "What (Y) is the father of (X)?", "What (Y) is the father of the (X)?", "What (Y) was (X) 's father?", "What (Y) was the father of (X)?", "What (Y) was the father of the (X)?", "which (Y) is the father of (X)?", "which (Y) is the father of the (X)?", "which (Y) was the father of (X)?", "which (Y) was the father of the (X)?", "Who is the father of (X)?", "Who is the father of the (X)?", "Who was the father of (X)?", "Who was the father of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "645",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Royalty" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the father of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "646",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the father of which (Y)?", "(X) was the father of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "647",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "648",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) father.", "List all the persons with father of (X).", "What (Y) is (X) 's father?", "What (Y) is the father of (X)?", "What (Y) is the father of the (X)?", "What (Y) was (X) 's father?", "What (Y) was the father of (X)?", "What (Y) was the father of the (X)?", "which (Y) is the father of (X)?", "which (Y) is the father of the (X)?", "which (Y) was the father of (X)?", "which (Y) was the father of the (X)?", "Who is the father of (X)?", "Who is the father of the (X)?", "Who was the father of (X)?", "Who was the father of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "649",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Royalty" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the father of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "650",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the father of which (Y)?", "(X) was the father of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "651",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "652",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) father.", "List all the persons with father of (X).", "What (Y) is (X) 's father?", "What (Y) is the father of (X)?", "What (Y) is the father of the (X)?", "What (Y) was (X) 's father?", "What (Y) was the father of (X)?", "What (Y) was the father of the (X)?", "which (Y) is the father of (X)?", "which (Y) is the father of the (X)?", "which (Y) was the father of (X)?", "which (Y) was the father of the (X)?", "Who is the father of (X)?", "Who is the father of the (X)?", "Who was the father of (X)?", "Who was the father of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "653",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Royalty" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the father of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "654",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the father of which (Y)?", "(X) was the father of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "655",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "656",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of_344",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) resting places.", "Give me all resting places of (X).", "Give me the (X) resting place.", "Give me the (X) resting places.", "List all resting places of (X).", "List all the countries with resting place of (X).", "List all the resting places of (X).", "show me all resting places of (X).", "What are the resting places of (X)?", "What are the resting places of the (X)?", "What is the resting place of (X)?", "What is the resting place of the (X)?", "What was the resting place of (X)?", "What was the resting place of the (X)?", "What were the resting places of (X)?", "What were the resting places of the (X)?", "which (Y) are the resting places of (X)?", "which (Y) are the resting places of the (X)?", "which (Y) is the resting place of (X)?", "which (Y) is the resting place of the (X)?", "which (Y) was the resting place of (X)?", "which (Y) was the resting place of the (X)?", "which (Y) were the resting places of (X)?", "which (Y) were the resting places of the (X)?", "Who is (X) 's resting place?", "Who is the resting place of (X)?", "Who is the resting place of the (X)?", "Who was (X) 's resting place?", "Who was the resting place of (X)?", "Who was the resting place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "657",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of_344",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the resting place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "658",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of_344",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the resting place of which (Y)?", "(X) was the resting place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "659",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of_344",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many resting places does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "660",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of_344",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of (X)?", "the resting places of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "661",
    "lexicalEntryUri" : "http://localhost:8080#numberofstudents-of_285",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "School" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) number Of Students.", "Give me all number Of Students of (X).", "Give me the (X) number Of Student.", "Give me the (X) number Of Students.", "List all number Of Students of (X).", "List all the number Of Students of (X).", "show me all number Of Students of (X).", "What (Y) is (X) 's number Of Student?", "What (Y) is the number Of Student of (X)?", "What (Y) is the number Of Student of the (X)?", "What (Y) was (X) 's number Of Student?", "What (Y) was the number Of Student of (X)?", "What (Y) was the number Of Student of the (X)?", "What are the number Of Students of (X)?", "What are the number Of Students of the (X)?", "What is the number Of Student of (X)?", "What is the number Of Student of the (X)?", "What was the number Of Student of (X)?", "What was the number Of Student of the (X)?", "What were the number Of Students of (X)?", "What were the number Of Students of the (X)?", "which (Y) are the number Of Students of (X)?", "which (Y) are the number Of Students of the (X)?", "which (Y) is the number Of Student of (X)?", "which (Y) is the number Of Student of the (X)?", "which (Y) was the number Of Student of (X)?", "which (Y) was the number Of Student of the (X)?", "which (Y) were the number Of Students of (X)?", "which (Y) were the number Of Students of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "662",
    "lexicalEntryUri" : "http://localhost:8080#numberofstudents-of_285",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "School" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the number Of Student of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "663",
    "lexicalEntryUri" : "http://localhost:8080#numberofstudents-of_285",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "School" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the number Of Student of which (Y)?", "(X) was the number Of Student of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "664",
    "lexicalEntryUri" : "http://localhost:8080#numberofstudents-of_285",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "School" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many number Of Students does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "665",
    "lexicalEntryUri" : "http://localhost:8080#numberofstudents-of_285",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "School" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Student of (X)?", "the number Of Students of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "666",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of_244",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) daughters.", "Give me all daughters of (X).", "Give me the (X) daughter.", "Give me the (X) daughters.", "List all daughters of (X).", "List all the daughters of (X).", "List all the persons with daughter of (X).", "show me all daughters of (X).", "which (Y) are the daughters of (X)?", "which (Y) are the daughters of the (X)?", "which (Y) is the daughter of (X)?", "which (Y) is the daughter of the (X)?", "which (Y) was the daughter of (X)?", "which (Y) was the daughter of the (X)?", "which (Y) were the daughters of (X)?", "which (Y) were the daughters of the (X)?", "Who are the daughters of (X)?", "Who are the daughters of the (X)?", "Who is (X) 's daughter?", "Who is the daughter of (X)?", "Who is the daughter of the (X)?", "Who was (X) 's daughter?", "Who was the daughter of (X)?", "Who was the daughter of the (X)?", "Who were the daughters of (X)?", "Who were the daughters of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "667",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of_244",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the daughter of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "668",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of_244",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the daughter of which (Y)?", "(X) was the daughter of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "669",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of_244",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many daughters does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "670",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of_244",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the daughter of (X)?", "the daughters of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "671",
    "lexicalEntryUri" : "http://localhost:8080#numberofseasons-of_296",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) number Of Seasons.", "Give me all number Of Seasons of (X).", "Give me the (X) number Of Season.", "Give me the (X) number Of Seasons.", "List all number Of Seasons of (X).", "List all the number Of Seasons of (X).", "show me all number Of Seasons of (X).", "What (Y) is (X) 's number Of Season?", "What (Y) is the number Of Season of (X)?", "What (Y) is the number Of Season of the (X)?", "What (Y) was (X) 's number Of Season?", "What (Y) was the number Of Season of (X)?", "What (Y) was the number Of Season of the (X)?", "What are the number Of Seasons of (X)?", "What are the number Of Seasons of the (X)?", "What is the number Of Season of (X)?", "What is the number Of Season of the (X)?", "What was the number Of Season of (X)?", "What was the number Of Season of the (X)?", "What were the number Of Seasons of (X)?", "What were the number Of Seasons of the (X)?", "which (Y) are the number Of Seasons of (X)?", "which (Y) are the number Of Seasons of the (X)?", "which (Y) is the number Of Season of (X)?", "which (Y) is the number Of Season of the (X)?", "which (Y) was the number Of Season of (X)?", "which (Y) was the number Of Season of the (X)?", "which (Y) were the number Of Seasons of (X)?", "which (Y) were the number Of Seasons of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "672",
    "lexicalEntryUri" : "http://localhost:8080#numberofseasons-of_296",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the number Of Season of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "673",
    "lexicalEntryUri" : "http://localhost:8080#numberofseasons-of_296",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the number Of Season of which (Y)?", "(X) was the number Of Season of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "674",
    "lexicalEntryUri" : "http://localhost:8080#numberofseasons-of_296",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many number Of Seasons does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "675",
    "lexicalEntryUri" : "http://localhost:8080#numberofseasons-of_296",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Season of (X)?", "the number Of Seasons of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "676",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) borough.", "Give me all borough of (X).", "Give me the (X) borough.", "List all borough of (X).", "List all the borough of (X).", "show me all borough of (X).", "What (Y) is (X) 's borough?", "What (Y) is the borough of (X)?", "What (Y) is the borough of the (X)?", "What (Y) was (X) 's borough?", "What (Y) was the borough of (X)?", "What (Y) was the borough of the (X)?", "What are the borough of (X)?", "What are the borough of the (X)?", "What is the borough of (X)?", "What is the borough of the (X)?", "What was the borough of (X)?", "What was the borough of the (X)?", "What were the borough of (X)?", "What were the borough of the (X)?", "which (Y) are the borough of (X)?", "which (Y) are the borough of the (X)?", "which (Y) is the borough of (X)?", "which (Y) is the borough of the (X)?", "which (Y) was the borough of (X)?", "which (Y) was the borough of the (X)?", "which (Y) were the borough of (X)?", "which (Y) were the borough of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "677",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Town" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the borough of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "678",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Town" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the borough of which (Y)?", "(X) was the borough of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "679",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many borough does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "680",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "681",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) borough.", "Give me all borough of (X).", "Give me the (X) borough.", "List all borough of (X).", "List all the borough of (X).", "show me all borough of (X).", "What (Y) is (X) 's borough?", "What (Y) is the borough of (X)?", "What (Y) is the borough of the (X)?", "What (Y) was (X) 's borough?", "What (Y) was the borough of (X)?", "What (Y) was the borough of the (X)?", "What are the borough of (X)?", "What are the borough of the (X)?", "What is the borough of (X)?", "What is the borough of the (X)?", "What was the borough of (X)?", "What was the borough of the (X)?", "What were the borough of (X)?", "What were the borough of the (X)?", "which (Y) are the borough of (X)?", "which (Y) are the borough of the (X)?", "which (Y) is the borough of (X)?", "which (Y) is the borough of the (X)?", "which (Y) was the borough of (X)?", "which (Y) was the borough of the (X)?", "which (Y) were the borough of (X)?", "which (Y) were the borough of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "682",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Town" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the borough of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "683",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Town" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the borough of which (Y)?", "(X) was the borough of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "684",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many borough does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "685",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "686",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) borough.", "Give me all borough of (X).", "Give me the (X) borough.", "List all borough of (X).", "List all the borough of (X).", "show me all borough of (X).", "What (Y) is (X) 's borough?", "What (Y) is the borough of (X)?", "What (Y) is the borough of the (X)?", "What (Y) was (X) 's borough?", "What (Y) was the borough of (X)?", "What (Y) was the borough of the (X)?", "What are the borough of (X)?", "What are the borough of the (X)?", "What is the borough of (X)?", "What is the borough of the (X)?", "What was the borough of (X)?", "What was the borough of the (X)?", "What were the borough of (X)?", "What were the borough of the (X)?", "which (Y) are the borough of (X)?", "which (Y) are the borough of the (X)?", "which (Y) is the borough of (X)?", "which (Y) is the borough of the (X)?", "which (Y) was the borough of (X)?", "which (Y) was the borough of the (X)?", "which (Y) were the borough of (X)?", "which (Y) were the borough of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "687",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Town" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the borough of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "688",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Town" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the borough of which (Y)?", "(X) was the borough of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "689",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many borough does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "690",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "691",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) missions.", "Give me all missions of (X).", "Give me the (X) mission.", "Give me the (X) missions.", "List all missions of (X).", "List all the missions of (X).", "List all the television shows with mission of (X).", "show me all missions of (X).", "What (Y) is (X) 's mission?", "What (Y) is the mission of (X)?", "What (Y) is the mission of the (X)?", "What (Y) was (X) 's mission?", "What (Y) was the mission of (X)?", "What (Y) was the mission of the (X)?", "What are the missions of (X)?", "What are the missions of the (X)?", "What is the mission of (X)?", "What is the mission of the (X)?", "What was the mission of (X)?", "What was the mission of the (X)?", "What were the missions of (X)?", "What were the missions of the (X)?", "which (Y) are the missions of (X)?", "which (Y) are the missions of the (X)?", "which (Y) is the mission of (X)?", "which (Y) is the mission of the (X)?", "which (Y) was the mission of (X)?", "which (Y) was the mission of the (X)?", "which (Y) were the missions of (X)?", "which (Y) were the missions of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "692",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow", "Event" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the mission of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "693",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the mission of which (Y)?", "(X) was the mission of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "694",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many missions does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "695",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of (X)?", "the missions of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "696",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) missions.", "Give me all missions of (X).", "Give me the (X) mission.", "Give me the (X) missions.", "List all missions of (X).", "List all the missions of (X).", "List all the television shows with mission of (X).", "show me all missions of (X).", "What (Y) is (X) 's mission?", "What (Y) is the mission of (X)?", "What (Y) is the mission of the (X)?", "What (Y) was (X) 's mission?", "What (Y) was the mission of (X)?", "What (Y) was the mission of the (X)?", "What are the missions of (X)?", "What are the missions of the (X)?", "What is the mission of (X)?", "What is the mission of the (X)?", "What was the mission of (X)?", "What was the mission of the (X)?", "What were the missions of (X)?", "What were the missions of the (X)?", "which (Y) are the missions of (X)?", "which (Y) are the missions of the (X)?", "which (Y) is the mission of (X)?", "which (Y) is the mission of the (X)?", "which (Y) was the mission of (X)?", "which (Y) was the mission of the (X)?", "which (Y) were the missions of (X)?", "which (Y) were the missions of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "697",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow", "Event" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the mission of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "698",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the mission of which (Y)?", "(X) was the mission of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "699",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many missions does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "700",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of (X)?", "the missions of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "701",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) missions.", "Give me all missions of (X).", "Give me the (X) mission.", "Give me the (X) missions.", "List all missions of (X).", "List all the missions of (X).", "List all the television shows with mission of (X).", "show me all missions of (X).", "What (Y) is (X) 's mission?", "What (Y) is the mission of (X)?", "What (Y) is the mission of the (X)?", "What (Y) was (X) 's mission?", "What (Y) was the mission of (X)?", "What (Y) was the mission of the (X)?", "What are the missions of (X)?", "What are the missions of the (X)?", "What is the mission of (X)?", "What is the mission of the (X)?", "What was the mission of (X)?", "What was the mission of the (X)?", "What were the missions of (X)?", "What were the missions of the (X)?", "which (Y) are the missions of (X)?", "which (Y) are the missions of the (X)?", "which (Y) is the mission of (X)?", "which (Y) is the mission of the (X)?", "which (Y) was the mission of (X)?", "which (Y) was the mission of the (X)?", "which (Y) were the missions of (X)?", "which (Y) were the missions of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "702",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow", "Event" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the mission of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "703",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the mission of which (Y)?", "(X) was the mission of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "704",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many missions does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "705",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of (X)?", "the missions of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "706",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) missions.", "Give me all missions of (X).", "Give me the (X) mission.", "Give me the (X) missions.", "List all missions of (X).", "List all the missions of (X).", "List all the television shows with mission of (X).", "show me all missions of (X).", "What (Y) is (X) 's mission?", "What (Y) is the mission of (X)?", "What (Y) is the mission of the (X)?", "What (Y) was (X) 's mission?", "What (Y) was the mission of (X)?", "What (Y) was the mission of the (X)?", "What are the missions of (X)?", "What are the missions of the (X)?", "What is the mission of (X)?", "What is the mission of the (X)?", "What was the mission of (X)?", "What was the mission of the (X)?", "What were the missions of (X)?", "What were the missions of the (X)?", "which (Y) are the missions of (X)?", "which (Y) are the missions of the (X)?", "which (Y) is the mission of (X)?", "which (Y) is the mission of the (X)?", "which (Y) was the mission of (X)?", "which (Y) was the mission of the (X)?", "which (Y) were the missions of (X)?", "which (Y) were the missions of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "707",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow", "Event" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the mission of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "708",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the mission of which (Y)?", "(X) was the mission of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "709",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many missions does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "710",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of (X)?", "the missions of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "711",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1_346",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) mayors.", "Give me all mayors of (X).", "Give me the (X) mayor.", "Give me the (X) mayors.", "List all mayors of (X).", "List all the mayors of (X).", "List all the persons with mayor of (X).", "show me all mayors of (X).", "What (Y) is (X) 's mayor?", "What (Y) is the mayor of (X)?", "What (Y) is the mayor of the (X)?", "What (Y) was (X) 's mayor?", "What (Y) was the mayor of (X)?", "What (Y) was the mayor of the (X)?", "which (Y) are the mayors of (X)?", "which (Y) are the mayors of the (X)?", "which (Y) is the mayor of (X)?", "which (Y) is the mayor of the (X)?", "which (Y) was the mayor of (X)?", "which (Y) was the mayor of the (X)?", "which (Y) were the mayors of (X)?", "which (Y) were the mayors of the (X)?", "Who are the mayors of (X)?", "Who are the mayors of the (X)?", "Who is the mayor of (X)?", "Who is the mayor of the (X)?", "Who was the mayor of (X)?", "Who was the mayor of the (X)?", "Who were the mayors of (X)?", "Who were the mayors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mayor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "712",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1_346",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "City" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the mayor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/mayor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "713",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1_346",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the mayor of which (Y)?", "(X) was the mayor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mayor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "714",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1_346",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many mayors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/mayor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "715",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1_346",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of (X)?", "the mayors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mayor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "716",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) breweries.", "Give me all breweries of (X).", "Give me the (X) breweries.", "Give me the (X) brewery.", "List all breweries of (X).", "List all the breweries of (X).", "List all the places with brewery of (X).", "show me all breweries of (X).", "What (Y) is (X) 's brewery?", "What (Y) is the brewery of (X)?", "What (Y) is the brewery of the (X)?", "What (Y) was (X) 's brewery?", "What (Y) was the brewery of (X)?", "What (Y) was the brewery of the (X)?", "What are the breweries of (X)?", "What are the breweries of the (X)?", "What is the brewery of (X)?", "What is the brewery of the (X)?", "What was the brewery of (X)?", "What was the brewery of the (X)?", "What were the breweries of (X)?", "What were the breweries of the (X)?", "which (Y) are the breweries of (X)?", "which (Y) are the breweries of the (X)?", "which (Y) is the brewery of (X)?", "which (Y) is the brewery of the (X)?", "which (Y) was the brewery of (X)?", "which (Y) was the brewery of the (X)?", "which (Y) were the breweries of (X)?", "which (Y) were the breweries of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "717",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the brewery of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "718",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the brewery of which (Y)?", "(X) was the brewery of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "719",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many breweries does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "720",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the breweries of (X)?", "the brewery of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "721",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) breweries.", "Give me all breweries of (X).", "Give me the (X) breweries.", "Give me the (X) brewery.", "List all breweries of (X).", "List all the breweries of (X).", "List all the places with brewery of (X).", "show me all breweries of (X).", "What (Y) is (X) 's brewery?", "What (Y) is the brewery of (X)?", "What (Y) is the brewery of the (X)?", "What (Y) was (X) 's brewery?", "What (Y) was the brewery of (X)?", "What (Y) was the brewery of the (X)?", "What are the breweries of (X)?", "What are the breweries of the (X)?", "What is the brewery of (X)?", "What is the brewery of the (X)?", "What was the brewery of (X)?", "What was the brewery of the (X)?", "What were the breweries of (X)?", "What were the breweries of the (X)?", "which (Y) are the breweries of (X)?", "which (Y) are the breweries of the (X)?", "which (Y) is the brewery of (X)?", "which (Y) is the brewery of the (X)?", "which (Y) was the brewery of (X)?", "which (Y) was the brewery of the (X)?", "which (Y) were the breweries of (X)?", "which (Y) were the breweries of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "722",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the brewery of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "723",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the brewery of which (Y)?", "(X) was the brewery of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "724",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many breweries does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "725",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the breweries of (X)?", "the brewery of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "726",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) writers.", "Give me all writers of (X).", "Give me the (X) writer.", "Give me the (X) writers.", "List all the actors with writer of (X).", "List all the writers of (X).", "List all writers of (X).", "show me all writers of (X).", "What (Y) is (X) 's writer?", "What (Y) is the writer of (X)?", "What (Y) is the writer of the (X)?", "What (Y) was (X) 's writer?", "What (Y) was the writer of (X)?", "What (Y) was the writer of the (X)?", "which (Y) are the writers of (X)?", "which (Y) are the writers of the (X)?", "which (Y) is the writer of (X)?", "which (Y) is the writer of the (X)?", "which (Y) was the writer of (X)?", "which (Y) was the writer of the (X)?", "which (Y) were the writers of (X)?", "which (Y) were the writers of the (X)?", "Who are the writers of (X)?", "Who are the writers of the (X)?", "Who is the writer of (X)?", "Who is the writer of the (X)?", "Who was the writer of (X)?", "Who was the writer of the (X)?", "Who were the writers of (X)?", "Who were the writers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "727",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor", "MusicalWork" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the writer of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "728",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Actor" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the writer of which (Y)?", "(X) was the writer of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "729",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many writers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "730",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the writer of (X)?", "the writers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "731",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) writers.", "Give me all writers of (X).", "Give me the (X) writer.", "Give me the (X) writers.", "List all the actors with writer of (X).", "List all the writers of (X).", "List all writers of (X).", "show me all writers of (X).", "What (Y) is (X) 's writer?", "What (Y) is the writer of (X)?", "What (Y) is the writer of the (X)?", "What (Y) was (X) 's writer?", "What (Y) was the writer of (X)?", "What (Y) was the writer of the (X)?", "which (Y) are the writers of (X)?", "which (Y) are the writers of the (X)?", "which (Y) is the writer of (X)?", "which (Y) is the writer of the (X)?", "which (Y) was the writer of (X)?", "which (Y) was the writer of the (X)?", "which (Y) were the writers of (X)?", "which (Y) were the writers of the (X)?", "Who are the writers of (X)?", "Who are the writers of the (X)?", "Who is the writer of (X)?", "Who is the writer of the (X)?", "Who was the writer of (X)?", "Who was the writer of the (X)?", "Who were the writers of (X)?", "Who were the writers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "732",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor", "MusicalWork" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the writer of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "733",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Actor" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the writer of which (Y)?", "(X) was the writer of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "734",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many writers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "735",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the writer of (X)?", "the writers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "736",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) states.", "Give me all states in (X).", "Give me the (X) state.", "Give me the (X) states.", "List all states in (X).", "List all the states in (X).", "show me all states in (X).", "What (Y) is (X) 's state?", "What (Y) is the state in (X)?", "What (Y) is the state in the (X)?", "What (Y) was (X) 's state?", "What (Y) was the state in (X)?", "What (Y) was the state in the (X)?", "What are the states in (X)?", "What are the states in the (X)?", "What is the state in (X)?", "What is the state in the (X)?", "What was the state in (X)?", "What was the state in the (X)?", "What were the states in (X)?", "What were the states in the (X)?", "which (Y) are the states in (X)?", "which (Y) are the states in the (X)?", "which (Y) is the state in (X)?", "which (Y) is the state in the (X)?", "which (Y) was the state in (X)?", "which (Y) was the state in the (X)?", "which (Y) were the states in (X)?", "which (Y) were the states in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "737",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the state in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "738",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the state in which (Y)?", "(X) was the state in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "739",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many states does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "740",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the state in (X)?", "the states in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "741",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) states.", "Give me all states in (X).", "Give me the (X) state.", "Give me the (X) states.", "List all states in (X).", "List all the states in (X).", "show me all states in (X).", "What (Y) is (X) 's state?", "What (Y) is the state in (X)?", "What (Y) is the state in the (X)?", "What (Y) was (X) 's state?", "What (Y) was the state in (X)?", "What (Y) was the state in the (X)?", "What are the states in (X)?", "What are the states in the (X)?", "What is the state in (X)?", "What is the state in the (X)?", "What was the state in (X)?", "What was the state in the (X)?", "What were the states in (X)?", "What were the states in the (X)?", "which (Y) are the states in (X)?", "which (Y) are the states in the (X)?", "which (Y) is the state in (X)?", "which (Y) is the state in the (X)?", "which (Y) was the state in (X)?", "which (Y) was the state in the (X)?", "which (Y) were the states in (X)?", "which (Y) were the states in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "742",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the state in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "743",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the state in which (Y)?", "(X) was the state in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "744",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many states does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "745",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the state in (X)?", "the states in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "746",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) names.", "Give me all names of (X).", "Give me the (X) name.", "Give me the (X) names.", "List all names of (X).", "List all the names of (X).", "show me all names of (X).", "What are the names of (X)?", "What are the names of the (X)?", "What is the name of (X)?", "What is the name of the (X)?", "What was the name of (X)?", "What was the name of the (X)?", "What were the names of (X)?", "What were the names of the (X)?", "which (Y) are the names of (X)?", "which (Y) are the names of the (X)?", "which (Y) is the name of (X)?", "which (Y) is the name of the (X)?", "which (Y) was the name of (X)?", "which (Y) was the name of the (X)?", "which (Y) were the names of (X)?", "which (Y) were the names of the (X)?", "Who is (X) 's name?", "Who is the name of (X)?", "Who is the name of the (X)?", "Who was (X) 's name?", "Who was the name of (X)?", "Who was the name of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "747",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the name of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "748",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the name of which (Y)?", "(X) was the name of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "749",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many names does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "750",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the name of (X)?", "the names of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "751",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) names.", "Give me all names of (X).", "Give me the (X) name.", "Give me the (X) names.", "List all names of (X).", "List all the names of (X).", "show me all names of (X).", "What are the names of (X)?", "What are the names of the (X)?", "What is the name of (X)?", "What is the name of the (X)?", "What was the name of (X)?", "What was the name of the (X)?", "What were the names of (X)?", "What were the names of the (X)?", "which (Y) are the names of (X)?", "which (Y) are the names of the (X)?", "which (Y) is the name of (X)?", "which (Y) is the name of the (X)?", "which (Y) was the name of (X)?", "which (Y) was the name of the (X)?", "which (Y) were the names of (X)?", "which (Y) were the names of the (X)?", "Who is (X) 's name?", "Who is the name of (X)?", "Who is the name of the (X)?", "Who was (X) 's name?", "Who was the name of (X)?", "Who was the name of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "752",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the name of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "753",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the name of which (Y)?", "(X) was the name of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "754",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many names does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "755",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the name of (X)?", "the names of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "756",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) capital.", "List all the cities with capital of (X).", "What (Y) is (X) 's capital?", "What (Y) is the capital of (X)?", "What (Y) is the capital of the (X)?", "What (Y) was (X) 's capital?", "What (Y) was the capital of (X)?", "What (Y) was the capital of the (X)?", "What is the capital of (X)?", "What is the capital of the (X)?", "What was the capital of (X)?", "What was the capital of the (X)?", "which (Y) is the capital of (X)?", "which (Y) is the capital of the (X)?", "which (Y) was the capital of (X)?", "which (Y) was the capital of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "757",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the capital of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "758",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the capital of which (Y)?", "(X) was the capital of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "759",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "760",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) capital.", "List all the cities with capital of (X).", "What (Y) is (X) 's capital?", "What (Y) is the capital of (X)?", "What (Y) is the capital of the (X)?", "What (Y) was (X) 's capital?", "What (Y) was the capital of (X)?", "What (Y) was the capital of the (X)?", "What is the capital of (X)?", "What is the capital of the (X)?", "What was the capital of (X)?", "What was the capital of the (X)?", "which (Y) is the capital of (X)?", "which (Y) is the capital of the (X)?", "which (Y) was the capital of (X)?", "which (Y) was the capital of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "761",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the capital of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "762",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the capital of which (Y)?", "(X) was the capital of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "763",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "764",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) capital.", "List all the cities with capital of (X).", "What (Y) is (X) 's capital?", "What (Y) is the capital of (X)?", "What (Y) is the capital of the (X)?", "What (Y) was (X) 's capital?", "What (Y) was the capital of (X)?", "What (Y) was the capital of the (X)?", "What is the capital of (X)?", "What is the capital of the (X)?", "What was the capital of (X)?", "What was the capital of the (X)?", "which (Y) is the capital of (X)?", "which (Y) is the capital of the (X)?", "which (Y) was the capital of (X)?", "which (Y) was the capital of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "765",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the capital of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "766",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the capital of which (Y)?", "(X) was the capital of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "767",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "768",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest country.", "List all the countries with largest country of (X).", "What (Y) is (X) 's largest country?", "What (Y) is the largest country of (X)?", "What (Y) is the largest country of the (X)?", "What (Y) was (X) 's largest country?", "What (Y) was the largest country of (X)?", "What (Y) was the largest country of the (X)?", "What is the largest country of (X)?", "What is the largest country of the (X)?", "What was the largest country of (X)?", "What was the largest country of the (X)?", "which (Y) is the largest country of (X)?", "which (Y) is the largest country of the (X)?", "which (Y) was the largest country of (X)?", "which (Y) was the largest country of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "769",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the largest country of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "770",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the largest country of which (Y)?", "(X) was the largest country of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "771",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "772",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest country.", "List all the countries with largest country of (X).", "What (Y) is (X) 's largest country?", "What (Y) is the largest country of (X)?", "What (Y) is the largest country of the (X)?", "What (Y) was (X) 's largest country?", "What (Y) was the largest country of (X)?", "What (Y) was the largest country of the (X)?", "What is the largest country of (X)?", "What is the largest country of the (X)?", "What was the largest country of (X)?", "What was the largest country of the (X)?", "which (Y) is the largest country of (X)?", "which (Y) is the largest country of the (X)?", "which (Y) was the largest country of (X)?", "which (Y) was the largest country of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "773",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the largest country of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "774",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the largest country of which (Y)?", "(X) was the largest country of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "775",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "776",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest country.", "List all the countries with largest country of (X).", "What (Y) is (X) 's largest country?", "What (Y) is the largest country of (X)?", "What (Y) is the largest country of the (X)?", "What (Y) was (X) 's largest country?", "What (Y) was the largest country of (X)?", "What (Y) was the largest country of the (X)?", "What is the largest country of (X)?", "What is the largest country of the (X)?", "What was the largest country of (X)?", "What was the largest country of the (X)?", "which (Y) is the largest country of (X)?", "which (Y) is the largest country of the (X)?", "which (Y) was the largest country of (X)?", "which (Y) was the largest country of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "777",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the largest country of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "778",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the largest country of which (Y)?", "(X) was the largest country of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "779",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "780",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of_316",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) home stadiums.", "Give me all home stadiums of (X).", "Give me the (X) home stadium.", "Give me the (X) home stadiums.", "List all home stadiums of (X).", "List all the home stadiums of (X).", "List all the stadiums with home stadium of (X).", "show me all home stadiums of (X).", "What (Y) is (X) 's home stadium?", "What (Y) is the home stadium of (X)?", "What (Y) is the home stadium of the (X)?", "What (Y) was (X) 's home stadium?", "What (Y) was the home stadium of (X)?", "What (Y) was the home stadium of the (X)?", "What are the home stadiums of (X)?", "What are the home stadiums of the (X)?", "What is the home stadium of (X)?", "What is the home stadium of the (X)?", "What was the home stadium of (X)?", "What was the home stadium of the (X)?", "What were the home stadiums of (X)?", "What were the home stadiums of the (X)?", "which (Y) are the home stadiums of (X)?", "which (Y) are the home stadiums of the (X)?", "which (Y) is the home stadium of (X)?", "which (Y) is the home stadium of the (X)?", "which (Y) was the home stadium of (X)?", "which (Y) was the home stadium of the (X)?", "which (Y) were the home stadiums of (X)?", "which (Y) were the home stadiums of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ground> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "781",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of_316",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium", "SportsClub" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the home stadium of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/ground> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "782",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of_316",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the home stadium of which (Y)?", "(X) was the home stadium of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ground> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "783",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of_316",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many home stadiums does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ground> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "784",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of_316",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the home stadium of (X)?", "the home stadiums of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ground> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "785",
    "lexicalEntryUri" : "http://localhost:8080#releasedate-of_231",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) release date.", "What (Y) is (X) 's release date?", "What (Y) is the release date of (X)?", "What (Y) is the release date of the (X)?", "What (Y) was (X) 's release date?", "What (Y) was the release date of (X)?", "What (Y) was the release date of the (X)?", "What is the release date of (X)?", "What is the release date of the (X)?", "What was the release date of (X)?", "What was the release date of the (X)?", "which (Y) is the release date of (X)?", "which (Y) is the release date of the (X)?", "which (Y) was the release date of (X)?", "which (Y) was the release date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "786",
    "lexicalEntryUri" : "http://localhost:8080#releasedate-of_231",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Software" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the release date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "787",
    "lexicalEntryUri" : "http://localhost:8080#releasedate-of_231",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the release date of which (Y)?", "(X) was the release date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "788",
    "lexicalEntryUri" : "http://localhost:8080#releasedate-of_231",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the release date of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "789",
    "lexicalEntryUri" : "http://localhost:8080#firstairdate-of_240",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) first Air Dates.", "Give me all first Air Dates of (X).", "Give me the (X) first Air Date.", "Give me the (X) first Air Dates.", "List all first Air Dates of (X).", "List all the first Air Dates of (X).", "show me all first Air Dates of (X).", "What (Y) is (X) 's first Air Date?", "What (Y) is the first Air Date of (X)?", "What (Y) is the first Air Date of the (X)?", "What (Y) was (X) 's first Air Date?", "What (Y) was the first Air Date of (X)?", "What (Y) was the first Air Date of the (X)?", "What are the first Air Dates of (X)?", "What are the first Air Dates of the (X)?", "What is the first Air Date of (X)?", "What is the first Air Date of the (X)?", "What was the first Air Date of (X)?", "What was the first Air Date of the (X)?", "What were the first Air Dates of (X)?", "What were the first Air Dates of the (X)?", "which (Y) are the first Air Dates of (X)?", "which (Y) are the first Air Dates of the (X)?", "which (Y) is the first Air Date of (X)?", "which (Y) is the first Air Date of the (X)?", "which (Y) was the first Air Date of (X)?", "which (Y) was the first Air Date of the (X)?", "which (Y) were the first Air Dates of (X)?", "which (Y) were the first Air Dates of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAirDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "790",
    "lexicalEntryUri" : "http://localhost:8080#firstairdate-of_240",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the first Air Date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/firstAirDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "791",
    "lexicalEntryUri" : "http://localhost:8080#firstairdate-of_240",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the first Air Date of which (Y)?", "(X) was the first Air Date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAirDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "792",
    "lexicalEntryUri" : "http://localhost:8080#firstairdate-of_240",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many first Air Dates does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/firstAirDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "793",
    "lexicalEntryUri" : "http://localhost:8080#firstairdate-of_240",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Air Date of (X)?", "the first Air Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAirDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "794",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) location.", "List all the places with location of (X).", "What (Y) is (X) 's location?", "What (Y) is the location of (X)?", "What (Y) is the location of the (X)?", "What (Y) was (X) 's location?", "What (Y) was the location of (X)?", "What (Y) was the location of the (X)?", "What is the location of (X)?", "What is the location of the (X)?", "What was the location of (X)?", "What was the location of the (X)?", "which (Y) is the location of (X)?", "which (Y) is the location of the (X)?", "which (Y) was the location of (X)?", "which (Y) was the location of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "795",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the location of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "796",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the location of which (Y)?", "(X) was the location of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "797",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "798",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) location.", "List all the places with location of (X).", "What (Y) is (X) 's location?", "What (Y) is the location of (X)?", "What (Y) is the location of the (X)?", "What (Y) was (X) 's location?", "What (Y) was the location of (X)?", "What (Y) was the location of the (X)?", "What is the location of (X)?", "What is the location of the (X)?", "What was the location of (X)?", "What was the location of the (X)?", "which (Y) is the location of (X)?", "which (Y) is the location of the (X)?", "which (Y) was the location of (X)?", "which (Y) was the location of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "799",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the location of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "800",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the location of which (Y)?", "(X) was the location of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "801",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "802",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) location.", "List all the places with location of (X).", "What (Y) is (X) 's location?", "What (Y) is the location of (X)?", "What (Y) is the location of the (X)?", "What (Y) was (X) 's location?", "What (Y) was the location of (X)?", "What (Y) was the location of the (X)?", "What is the location of (X)?", "What is the location of the (X)?", "What was the location of (X)?", "What was the location of the (X)?", "which (Y) is the location of (X)?", "which (Y) is the location of the (X)?", "which (Y) was the location of (X)?", "which (Y) was the location of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "803",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the location of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "804",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the location of which (Y)?", "(X) was the location of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "805",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "806",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2_349",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) mayors.", "Give me all mayors of (X).", "Give me the (X) mayor.", "Give me the (X) mayors.", "List all mayors of (X).", "List all the mayors of (X).", "List all the persons with mayor of (X).", "show me all mayors of (X).", "What (Y) is (X) 's mayor?", "What (Y) is the mayor of (X)?", "What (Y) is the mayor of the (X)?", "What (Y) was (X) 's mayor?", "What (Y) was the mayor of (X)?", "What (Y) was the mayor of the (X)?", "which (Y) are the mayors of (X)?", "which (Y) are the mayors of the (X)?", "which (Y) is the mayor of (X)?", "which (Y) is the mayor of the (X)?", "which (Y) was the mayor of (X)?", "which (Y) was the mayor of the (X)?", "which (Y) were the mayors of (X)?", "which (Y) were the mayors of the (X)?", "Who are the mayors of (X)?", "Who are the mayors of the (X)?", "Who is the mayor of (X)?", "Who is the mayor of the (X)?", "Who was the mayor of (X)?", "Who was the mayor of the (X)?", "Who were the mayors of (X)?", "Who were the mayors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "807",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2_349",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "City" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the mayor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "808",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2_349",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the mayor of which (Y)?", "(X) was the mayor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "809",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2_349",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many mayors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "810",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2_349",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of (X)?", "the mayors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "811",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) employees.", "Give me all employees of (X).", "Give me the (X) employee.", "Give me the (X) employees.", "List all employees of (X).", "List all the employees of (X).", "show me all employees of (X).", "What are the employees of (X)?", "What are the employees of the (X)?", "What is the employee of (X)?", "What is the employee of the (X)?", "What was the employee of (X)?", "What was the employee of the (X)?", "What were the employees of (X)?", "What were the employees of the (X)?", "which (Y) are the employees of (X)?", "which (Y) are the employees of the (X)?", "which (Y) is the employee of (X)?", "which (Y) is the employee of the (X)?", "which (Y) was the employee of (X)?", "which (Y) was the employee of the (X)?", "which (Y) were the employees of (X)?", "which (Y) were the employees of the (X)?", "Who is (X) 's employee?", "Who is the employee of (X)?", "Who is the employee of the (X)?", "Who was (X) 's employee?", "Who was the employee of (X)?", "Who was the employee of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "812",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the employee of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "813",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the employee of which (Y)?", "(X) was the employee of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "814",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many employees does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "815",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of (X)?", "the employees of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "816",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) employees.", "Give me all employees of (X).", "Give me the (X) employee.", "Give me the (X) employees.", "List all employees of (X).", "List all the employees of (X).", "show me all employees of (X).", "What are the employees of (X)?", "What are the employees of the (X)?", "What is the employee of (X)?", "What is the employee of the (X)?", "What was the employee of (X)?", "What was the employee of the (X)?", "What were the employees of (X)?", "What were the employees of the (X)?", "which (Y) are the employees of (X)?", "which (Y) are the employees of the (X)?", "which (Y) is the employee of (X)?", "which (Y) is the employee of the (X)?", "which (Y) was the employee of (X)?", "which (Y) was the employee of the (X)?", "which (Y) were the employees of (X)?", "which (Y) were the employees of the (X)?", "Who is (X) 's employee?", "Who is the employee of (X)?", "Who is the employee of the (X)?", "Who was (X) 's employee?", "Who was the employee of (X)?", "Who was the employee of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "817",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the employee of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "818",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the employee of which (Y)?", "(X) was the employee of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "819",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many employees does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "820",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of (X)?", "the employees of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "821",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) employees.", "Give me all employees of (X).", "Give me the (X) employee.", "Give me the (X) employees.", "List all employees of (X).", "List all the employees of (X).", "show me all employees of (X).", "What are the employees of (X)?", "What are the employees of the (X)?", "What is the employee of (X)?", "What is the employee of the (X)?", "What was the employee of (X)?", "What was the employee of the (X)?", "What were the employees of (X)?", "What were the employees of the (X)?", "which (Y) are the employees of (X)?", "which (Y) are the employees of the (X)?", "which (Y) is the employee of (X)?", "which (Y) is the employee of the (X)?", "which (Y) was the employee of (X)?", "which (Y) was the employee of the (X)?", "which (Y) were the employees of (X)?", "which (Y) were the employees of the (X)?", "Who is (X) 's employee?", "Who is the employee of (X)?", "Who is the employee of the (X)?", "Who was (X) 's employee?", "Who was the employee of (X)?", "Who was the employee of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "822",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the employee of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "823",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the employee of which (Y)?", "(X) was the employee of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "824",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many employees does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "825",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of (X)?", "the employees of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "826",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) employees.", "Give me all employees of (X).", "Give me the (X) employee.", "Give me the (X) employees.", "List all employees of (X).", "List all the employees of (X).", "show me all employees of (X).", "What are the employees of (X)?", "What are the employees of the (X)?", "What is the employee of (X)?", "What is the employee of the (X)?", "What was the employee of (X)?", "What was the employee of the (X)?", "What were the employees of (X)?", "What were the employees of the (X)?", "which (Y) are the employees of (X)?", "which (Y) are the employees of the (X)?", "which (Y) is the employee of (X)?", "which (Y) is the employee of the (X)?", "which (Y) was the employee of (X)?", "which (Y) was the employee of the (X)?", "which (Y) were the employees of (X)?", "which (Y) were the employees of the (X)?", "Who is (X) 's employee?", "Who is the employee of (X)?", "Who is the employee of the (X)?", "Who was (X) 's employee?", "Who was the employee of (X)?", "Who was the employee of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "827",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the employee of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "828",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the employee of which (Y)?", "(X) was the employee of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "829",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many employees does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "830",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of (X)?", "the employees of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "831",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_263",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) developers.", "Give me all developers of (X).", "Give me the (X) developer.", "Give me the (X) developers.", "List all developers of (X).", "List all the agents with developer of (X).", "List all the developers of (X).", "show me all developers of (X).", "What (Y) is (X) 's developer?", "What (Y) is the developer of (X)?", "What (Y) is the developer of the (X)?", "What (Y) was (X) 's developer?", "What (Y) was the developer of (X)?", "What (Y) was the developer of the (X)?", "which (Y) are the developers of (X)?", "which (Y) are the developers of the (X)?", "which (Y) is the developer of (X)?", "which (Y) is the developer of the (X)?", "which (Y) was the developer of (X)?", "which (Y) was the developer of the (X)?", "which (Y) were the developers of (X)?", "which (Y) were the developers of the (X)?", "Who are the developers of (X)?", "Who are the developers of the (X)?", "Who is the developer of (X)?", "Who is the developer of the (X)?", "Who was the developer of (X)?", "Who was the developer of the (X)?", "Who were the developers of (X)?", "Who were the developers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "832",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_263",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the developer of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "833",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_263",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the developer of which (Y)?", "(X) was the developer of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "834",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_263",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many developers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "835",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_263",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the developer of (X)?", "the developers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "836",
    "lexicalEntryUri" : "http://localhost:8080#b-sides_of_271",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bSide> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "837",
    "lexicalEntryUri" : "http://localhost:8080#b-sides_of_271",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bSide> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "838",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) runtime.", "List all the populated places with runtime of (X).", "What (Y) is (X) 's runtime?", "What (Y) is the runtime of (X)?", "What (Y) is the runtime of the (X)?", "What (Y) was (X) 's runtime?", "What (Y) was the runtime of (X)?", "What (Y) was the runtime of the (X)?", "What is the runtime of (X)?", "What is the runtime of the (X)?", "What was the runtime of (X)?", "What was the runtime of the (X)?", "which (Y) is the runtime of (X)?", "which (Y) is the runtime of the (X)?", "which (Y) was the runtime of (X)?", "which (Y) was the runtime of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "839",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace", "Software" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the runtime of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "840",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the runtime of which (Y)?", "(X) was the runtime of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "841",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the runtime of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "842",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) runtime.", "List all the populated places with runtime of (X).", "What (Y) is (X) 's runtime?", "What (Y) is the runtime of (X)?", "What (Y) is the runtime of the (X)?", "What (Y) was (X) 's runtime?", "What (Y) was the runtime of (X)?", "What (Y) was the runtime of the (X)?", "What is the runtime of (X)?", "What is the runtime of the (X)?", "What was the runtime of (X)?", "What was the runtime of the (X)?", "which (Y) is the runtime of (X)?", "which (Y) is the runtime of the (X)?", "which (Y) was the runtime of (X)?", "which (Y) was the runtime of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "843",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace", "Software" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the runtime of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "844",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the runtime of which (Y)?", "(X) was the runtime of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "845",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the runtime of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "846",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) vice president.", "Give me all vice president of (X).", "Give me the (X) vice president.", "List all the politicians with vice president of (X).", "List all the vice president of (X).", "List all vice president of (X).", "show me all vice president of (X).", "which (Y) are the vice president of (X)?", "which (Y) are the vice president of the (X)?", "which (Y) is the vice president of (X)?", "which (Y) is the vice president of the (X)?", "which (Y) was the vice president of (X)?", "which (Y) was the vice president of the (X)?", "which (Y) were the vice president of (X)?", "which (Y) were the vice president of the (X)?", "Who are the vice president of (X)?", "Who are the vice president of the (X)?", "Who is (X) 's vice president?", "Who is the vice president of (X)?", "Who is the vice president of the (X)?", "Who was (X) 's vice president?", "Who was the vice president of (X)?", "Who was the vice president of the (X)?", "Who were the vice president of (X)?", "Who were the vice president of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "847",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the vice president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "848",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the vice president of which (Y)?", "(X) was the vice president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "849",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many vice president does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "850",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "851",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) vice president.", "Give me all vice president of (X).", "Give me the (X) vice president.", "List all the politicians with vice president of (X).", "List all the vice president of (X).", "List all vice president of (X).", "show me all vice president of (X).", "which (Y) are the vice president of (X)?", "which (Y) are the vice president of the (X)?", "which (Y) is the vice president of (X)?", "which (Y) is the vice president of the (X)?", "which (Y) was the vice president of (X)?", "which (Y) was the vice president of the (X)?", "which (Y) were the vice president of (X)?", "which (Y) were the vice president of the (X)?", "Who are the vice president of (X)?", "Who are the vice president of the (X)?", "Who is (X) 's vice president?", "Who is the vice president of (X)?", "Who is the vice president of the (X)?", "Who was (X) 's vice president?", "Who was the vice president of (X)?", "Who was the vice president of the (X)?", "Who were the vice president of (X)?", "Who were the vice president of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "852",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the vice president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "853",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the vice president of which (Y)?", "(X) was the vice president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "854",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many vice president does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "855",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "856",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) vice president.", "Give me all vice president of (X).", "Give me the (X) vice president.", "List all the politicians with vice president of (X).", "List all the vice president of (X).", "List all vice president of (X).", "show me all vice president of (X).", "which (Y) are the vice president of (X)?", "which (Y) are the vice president of the (X)?", "which (Y) is the vice president of (X)?", "which (Y) is the vice president of the (X)?", "which (Y) was the vice president of (X)?", "which (Y) was the vice president of the (X)?", "which (Y) were the vice president of (X)?", "which (Y) were the vice president of the (X)?", "Who are the vice president of (X)?", "Who are the vice president of the (X)?", "Who is (X) 's vice president?", "Who is the vice president of (X)?", "Who is the vice president of the (X)?", "Who was (X) 's vice president?", "Who was the vice president of (X)?", "Who was the vice president of the (X)?", "Who were the vice president of (X)?", "Who were the vice president of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "857",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the vice president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "858",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the vice president of which (Y)?", "(X) was the vice president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "859",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many vice president does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "860",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "861",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) editors.", "Give me all editors of (X).", "Give me the (X) editor.", "Give me the (X) editors.", "List all editors of (X).", "List all the editors of (X).", "List all the persons with editor of (X).", "show me all editors of (X).", "What (Y) is (X) 's editor?", "What (Y) is the editor of (X)?", "What (Y) is the editor of the (X)?", "What (Y) was (X) 's editor?", "What (Y) was the editor of (X)?", "What (Y) was the editor of the (X)?", "which (Y) are the editors of (X)?", "which (Y) are the editors of the (X)?", "which (Y) is the editor of (X)?", "which (Y) is the editor of the (X)?", "which (Y) was the editor of (X)?", "which (Y) was the editor of the (X)?", "which (Y) were the editors of (X)?", "which (Y) were the editors of the (X)?", "Who are the editors of (X)?", "Who are the editors of the (X)?", "Who is the editor of (X)?", "Who is the editor of the (X)?", "Who was the editor of (X)?", "Who was the editor of the (X)?", "Who were the editors of (X)?", "Who were the editors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "862",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the editor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "863",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the editor of which (Y)?", "(X) was the editor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "864",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many editors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "865",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of (X)?", "the editors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "866",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) editors.", "Give me all editors of (X).", "Give me the (X) editor.", "Give me the (X) editors.", "List all editors of (X).", "List all the editors of (X).", "List all the persons with editor of (X).", "show me all editors of (X).", "What (Y) is (X) 's editor?", "What (Y) is the editor of (X)?", "What (Y) is the editor of the (X)?", "What (Y) was (X) 's editor?", "What (Y) was the editor of (X)?", "What (Y) was the editor of the (X)?", "which (Y) are the editors of (X)?", "which (Y) are the editors of the (X)?", "which (Y) is the editor of (X)?", "which (Y) is the editor of the (X)?", "which (Y) was the editor of (X)?", "which (Y) was the editor of the (X)?", "which (Y) were the editors of (X)?", "which (Y) were the editors of the (X)?", "Who are the editors of (X)?", "Who are the editors of the (X)?", "Who is the editor of (X)?", "Who is the editor of the (X)?", "Who was the editor of (X)?", "Who was the editor of the (X)?", "Who were the editors of (X)?", "Who were the editors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "867",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the editor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "868",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the editor of which (Y)?", "(X) was the editor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "869",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many editors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "870",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of (X)?", "the editors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "871",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) editors.", "Give me all editors of (X).", "Give me the (X) editor.", "Give me the (X) editors.", "List all editors of (X).", "List all the editors of (X).", "List all the persons with editor of (X).", "show me all editors of (X).", "What (Y) is (X) 's editor?", "What (Y) is the editor of (X)?", "What (Y) is the editor of the (X)?", "What (Y) was (X) 's editor?", "What (Y) was the editor of (X)?", "What (Y) was the editor of the (X)?", "which (Y) are the editors of (X)?", "which (Y) are the editors of the (X)?", "which (Y) is the editor of (X)?", "which (Y) is the editor of the (X)?", "which (Y) was the editor of (X)?", "which (Y) was the editor of the (X)?", "which (Y) were the editors of (X)?", "which (Y) were the editors of the (X)?", "Who are the editors of (X)?", "Who are the editors of the (X)?", "Who is the editor of (X)?", "Who is the editor of the (X)?", "Who was the editor of (X)?", "Who was the editor of the (X)?", "Who were the editors of (X)?", "Who were the editors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "872",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the editor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "873",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the editor of which (Y)?", "(X) was the editor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "874",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many editors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "875",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of (X)?", "the editors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "876",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) hosts.", "Give me all hosts of (X).", "Give me the (X) host.", "Give me the (X) hosts.", "List all hosts of (X).", "List all the hosts of (X).", "List all the persons with host of (X).", "show me all hosts of (X).", "What (Y) is (X) 's host?", "What (Y) is the host of (X)?", "What (Y) is the host of the (X)?", "What (Y) was (X) 's host?", "What (Y) was the host of (X)?", "What (Y) was the host of the (X)?", "which (Y) are the hosts of (X)?", "which (Y) are the hosts of the (X)?", "which (Y) is the host of (X)?", "which (Y) is the host of the (X)?", "which (Y) was the host of (X)?", "which (Y) was the host of the (X)?", "which (Y) were the hosts of (X)?", "which (Y) were the hosts of the (X)?", "Who are the hosts of (X)?", "Who are the hosts of the (X)?", "Who is the host of (X)?", "Who is the host of the (X)?", "Who was the host of (X)?", "Who was the host of the (X)?", "Who were the hosts of (X)?", "Who were the hosts of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "877",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the host of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "878",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the host of which (Y)?", "(X) was the host of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "879",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many hosts does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "880",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of (X)?", "the hosts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "881",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) hosts.", "Give me all hosts of (X).", "Give me the (X) host.", "Give me the (X) hosts.", "List all hosts of (X).", "List all the hosts of (X).", "List all the persons with host of (X).", "show me all hosts of (X).", "What (Y) is (X) 's host?", "What (Y) is the host of (X)?", "What (Y) is the host of the (X)?", "What (Y) was (X) 's host?", "What (Y) was the host of (X)?", "What (Y) was the host of the (X)?", "which (Y) are the hosts of (X)?", "which (Y) are the hosts of the (X)?", "which (Y) is the host of (X)?", "which (Y) is the host of the (X)?", "which (Y) was the host of (X)?", "which (Y) was the host of the (X)?", "which (Y) were the hosts of (X)?", "which (Y) were the hosts of the (X)?", "Who are the hosts of (X)?", "Who are the hosts of the (X)?", "Who is the host of (X)?", "Who is the host of the (X)?", "Who was the host of (X)?", "Who was the host of the (X)?", "Who were the hosts of (X)?", "Who were the hosts of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "882",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the host of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "883",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the host of which (Y)?", "(X) was the host of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "884",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many hosts does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "885",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of (X)?", "the hosts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "886",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) hosts.", "Give me all hosts of (X).", "Give me the (X) host.", "Give me the (X) hosts.", "List all hosts of (X).", "List all the hosts of (X).", "List all the persons with host of (X).", "show me all hosts of (X).", "What (Y) is (X) 's host?", "What (Y) is the host of (X)?", "What (Y) is the host of the (X)?", "What (Y) was (X) 's host?", "What (Y) was the host of (X)?", "What (Y) was the host of the (X)?", "which (Y) are the hosts of (X)?", "which (Y) are the hosts of the (X)?", "which (Y) is the host of (X)?", "which (Y) is the host of the (X)?", "which (Y) was the host of (X)?", "which (Y) was the host of the (X)?", "which (Y) were the hosts of (X)?", "which (Y) were the hosts of the (X)?", "Who are the hosts of (X)?", "Who are the hosts of the (X)?", "Who is the host of (X)?", "Who is the host of the (X)?", "Who was the host of (X)?", "Who was the host of the (X)?", "Who were the hosts of (X)?", "Who were the hosts of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "887",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the host of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "888",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the host of which (Y)?", "(X) was the host of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "889",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many hosts does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "890",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of (X)?", "the hosts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "891",
    "lexicalEntryUri" : "http://localhost:8080#minimumtemperature-of_250",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Planet" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) minimum Temperatures.", "Give me all minimum Temperatures of (X).", "Give me the (X) minimum Temperature.", "Give me the (X) minimum Temperatures.", "List all minimum Temperatures of (X).", "List all the minimum Temperatures of (X).", "show me all minimum Temperatures of (X).", "What (Y) is (X) 's minimum Temperature?", "What (Y) is the minimum Temperature of (X)?", "What (Y) is the minimum Temperature of the (X)?", "What (Y) was (X) 's minimum Temperature?", "What (Y) was the minimum Temperature of (X)?", "What (Y) was the minimum Temperature of the (X)?", "What are the minimum Temperatures of (X)?", "What are the minimum Temperatures of the (X)?", "What is the minimum Temperature of (X)?", "What is the minimum Temperature of the (X)?", "What was the minimum Temperature of (X)?", "What was the minimum Temperature of the (X)?", "What were the minimum Temperatures of (X)?", "What were the minimum Temperatures of the (X)?", "which (Y) are the minimum Temperatures of (X)?", "which (Y) are the minimum Temperatures of the (X)?", "which (Y) is the minimum Temperature of (X)?", "which (Y) is the minimum Temperature of the (X)?", "which (Y) was the minimum Temperature of (X)?", "which (Y) was the minimum Temperature of the (X)?", "which (Y) were the minimum Temperatures of (X)?", "which (Y) were the minimum Temperatures of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "892",
    "lexicalEntryUri" : "http://localhost:8080#minimumtemperature-of_250",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Planet" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the minimum Temperature of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "893",
    "lexicalEntryUri" : "http://localhost:8080#minimumtemperature-of_250",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the minimum Temperature of which (Y)?", "(X) was the minimum Temperature of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "894",
    "lexicalEntryUri" : "http://localhost:8080#minimumtemperature-of_250",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Planet" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many minimum Temperatures does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "895",
    "lexicalEntryUri" : "http://localhost:8080#minimumtemperature-of_250",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Planet" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the minimum Temperature of (X)?", "the minimum Temperatures of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "896",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) musics.", "Give me all musics by (X).", "Give me the (X) music.", "Give me the (X) musics.", "List all musics by (X).", "List all the musics by (X).", "List all the persons with music by (X).", "show me all musics by (X).", "What (Y) is (X) 's music?", "What (Y) is the music by (X)?", "What (Y) is the music by the (X)?", "What (Y) was (X) 's music?", "What (Y) was the music by (X)?", "What (Y) was the music by the (X)?", "which (Y) are the musics by (X)?", "which (Y) are the musics by the (X)?", "which (Y) is the music by (X)?", "which (Y) is the music by the (X)?", "which (Y) was the music by (X)?", "which (Y) was the music by the (X)?", "which (Y) were the musics by (X)?", "which (Y) were the musics by the (X)?", "Who are the musics by (X)?", "Who are the musics by the (X)?", "Who is the music by (X)?", "Who is the music by the (X)?", "Who was the music by (X)?", "Who was the music by the (X)?", "Who were the musics by (X)?", "Who were the musics by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "897",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the music by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "898",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the music by which (Y)?", "(X) was the music by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "899",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many musics does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "900",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by (X)?", "the musics by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "901",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) musics.", "Give me all musics by (X).", "Give me the (X) music.", "Give me the (X) musics.", "List all musics by (X).", "List all the musics by (X).", "List all the persons with music by (X).", "show me all musics by (X).", "What (Y) is (X) 's music?", "What (Y) is the music by (X)?", "What (Y) is the music by the (X)?", "What (Y) was (X) 's music?", "What (Y) was the music by (X)?", "What (Y) was the music by the (X)?", "which (Y) are the musics by (X)?", "which (Y) are the musics by the (X)?", "which (Y) is the music by (X)?", "which (Y) is the music by the (X)?", "which (Y) was the music by (X)?", "which (Y) was the music by the (X)?", "which (Y) were the musics by (X)?", "which (Y) were the musics by the (X)?", "Who are the musics by (X)?", "Who are the musics by the (X)?", "Who is the music by (X)?", "Who is the music by the (X)?", "Who was the music by (X)?", "Who was the music by the (X)?", "Who were the musics by (X)?", "Who were the musics by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "902",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the music by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "903",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the music by which (Y)?", "(X) was the music by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "904",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many musics does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "905",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by (X)?", "the musics by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "906",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of_273",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Grape" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) wine regions.", "Give me all wine regions of (X).", "Give me the (X) wine region.", "Give me the (X) wine regions.", "List all the places with wine region of (X).", "List all the wine regions of (X).", "List all wine regions of (X).", "show me all wine regions of (X).", "What (Y) is (X) 's wine region?", "What (Y) is the wine region of (X)?", "What (Y) is the wine region of the (X)?", "What (Y) was (X) 's wine region?", "What (Y) was the wine region of (X)?", "What (Y) was the wine region of the (X)?", "What are the wine regions of (X)?", "What are the wine regions of the (X)?", "What is the wine region of (X)?", "What is the wine region of the (X)?", "What was the wine region of (X)?", "What was the wine region of the (X)?", "What were the wine regions of (X)?", "What were the wine regions of the (X)?", "which (Y) are the wine regions of (X)?", "which (Y) are the wine regions of the (X)?", "which (Y) is the wine region of (X)?", "which (Y) is the wine region of the (X)?", "which (Y) was the wine region of (X)?", "which (Y) was the wine region of the (X)?", "which (Y) were the wine regions of (X)?", "which (Y) were the wine regions of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineRegion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "907",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of_273",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Grape" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the wine region of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/wineRegion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "908",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of_273",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the wine region of which (Y)?", "(X) was the wine region of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineRegion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "909",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of_273",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Grape" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many wine regions does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/wineRegion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "910",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of_273",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Grape" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine region of (X)?", "the wine regions of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineRegion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "911",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) episodes.", "Give me all episodes in (X).", "Give me the (X) episode.", "Give me the (X) episodes.", "List all episodes in (X).", "List all the episodes in (X).", "List all the works with episode in (X).", "show me all episodes in (X).", "What (Y) is (X) 's episode?", "What (Y) is the episode in (X)?", "What (Y) is the episode in the (X)?", "What (Y) was (X) 's episode?", "What (Y) was the episode in (X)?", "What (Y) was the episode in the (X)?", "What are the episodes in (X)?", "What are the episodes in the (X)?", "What is the episode in (X)?", "What is the episode in the (X)?", "What was the episode in (X)?", "What was the episode in the (X)?", "What were the episodes in (X)?", "What were the episodes in the (X)?", "which (Y) are the episodes in (X)?", "which (Y) are the episodes in the (X)?", "which (Y) is the episode in (X)?", "which (Y) is the episode in the (X)?", "which (Y) was the episode in (X)?", "which (Y) was the episode in the (X)?", "which (Y) were the episodes in (X)?", "which (Y) were the episodes in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "912",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work", "TelevisionEpisode" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the episode in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "913",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionEpisode" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the episode in which (Y)?", "(X) was the episode in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "914",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many episodes does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "915",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the episode in (X)?", "the episodes in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "916",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) episodes.", "Give me all episodes in (X).", "Give me the (X) episode.", "Give me the (X) episodes.", "List all episodes in (X).", "List all the episodes in (X).", "List all the works with episode in (X).", "show me all episodes in (X).", "What (Y) is (X) 's episode?", "What (Y) is the episode in (X)?", "What (Y) is the episode in the (X)?", "What (Y) was (X) 's episode?", "What (Y) was the episode in (X)?", "What (Y) was the episode in the (X)?", "What are the episodes in (X)?", "What are the episodes in the (X)?", "What is the episode in (X)?", "What is the episode in the (X)?", "What was the episode in (X)?", "What was the episode in the (X)?", "What were the episodes in (X)?", "What were the episodes in the (X)?", "which (Y) are the episodes in (X)?", "which (Y) are the episodes in the (X)?", "which (Y) is the episode in (X)?", "which (Y) is the episode in the (X)?", "which (Y) was the episode in (X)?", "which (Y) was the episode in the (X)?", "which (Y) were the episodes in (X)?", "which (Y) were the episodes in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "917",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work", "TelevisionEpisode" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the episode in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "918",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionEpisode" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the episode in which (Y)?", "(X) was the episode in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "919",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many episodes does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "920",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the episode in (X)?", "the episodes in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "921",
    "lexicalEntryUri" : "http://localhost:8080#creator-of_256",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) creators.", "Give me all creators of (X).", "Give me the (X) creator.", "Give me the (X) creators.", "List all creators of (X).", "List all the creators of (X).", "List all the persons with creator of (X).", "show me all creators of (X).", "which (Y) are the creators of (X)?", "which (Y) are the creators of the (X)?", "which (Y) is the creator of (X)?", "which (Y) is the creator of the (X)?", "which (Y) was the creator of (X)?", "which (Y) was the creator of the (X)?", "which (Y) were the creators of (X)?", "which (Y) were the creators of the (X)?", "Who are the creators of (X)?", "Who are the creators of the (X)?", "Who is (X) 's creator?", "Who is the creator of (X)?", "Who is the creator of the (X)?", "Who was (X) 's creator?", "Who was the creator of (X)?", "Who was the creator of the (X)?", "Who were the creators of (X)?", "Who were the creators of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "922",
    "lexicalEntryUri" : "http://localhost:8080#creator-of_256",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "FictionalCharacter" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the creator of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "923",
    "lexicalEntryUri" : "http://localhost:8080#creator-of_256",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the creator of which (Y)?", "(X) was the creator of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "924",
    "lexicalEntryUri" : "http://localhost:8080#creator-of_256",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many creators does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "925",
    "lexicalEntryUri" : "http://localhost:8080#creator-of_256",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of (X)?", "the creators of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "926",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) population densty rank.", "List all the populated places with population densty rank of (X).", "What (Y) is (X) 's population densty rank?", "What (Y) is the population densty rank of (X)?", "What (Y) is the population densty rank of the (X)?", "What (Y) was (X) 's population densty rank?", "What (Y) was the population densty rank of (X)?", "What (Y) was the population densty rank of the (X)?", "What is the population densty rank of (X)?", "What is the population densty rank of the (X)?", "What was the population densty rank of (X)?", "What was the population densty rank of the (X)?", "which (Y) is the population densty rank of (X)?", "which (Y) is the population densty rank of the (X)?", "which (Y) was the population densty rank of (X)?", "which (Y) was the population densty rank of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "927",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the population densty rank of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "928",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the population densty rank of which (Y)?", "(X) was the population densty rank of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "929",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population densty rank of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "930",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) population densty rank.", "List all the populated places with population densty rank of (X).", "What (Y) is (X) 's population densty rank?", "What (Y) is the population densty rank of (X)?", "What (Y) is the population densty rank of the (X)?", "What (Y) was (X) 's population densty rank?", "What (Y) was the population densty rank of (X)?", "What (Y) was the population densty rank of the (X)?", "What is the population densty rank of (X)?", "What is the population densty rank of the (X)?", "What was the population densty rank of (X)?", "What was the population densty rank of the (X)?", "which (Y) is the population densty rank of (X)?", "which (Y) is the population densty rank of the (X)?", "which (Y) was the population densty rank of (X)?", "which (Y) was the population densty rank of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "931",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the population densty rank of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "932",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the population densty rank of which (Y)?", "(X) was the population densty rank of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "933",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population densty rank of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "934",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) industries.", "Give me all industries of (X).", "Give me the (X) industries.", "Give me the (X) industry.", "List all industries of (X).", "List all the foods with industry of (X).", "List all the industries of (X).", "show me all industries of (X).", "What are the industries of (X)?", "What are the industries of the (X)?", "What is the industry of (X)?", "What is the industry of the (X)?", "What was the industry of (X)?", "What was the industry of the (X)?", "What were the industries of (X)?", "What were the industries of the (X)?", "which (Y) are the industries of (X)?", "which (Y) are the industries of the (X)?", "which (Y) is the industry of (X)?", "which (Y) is the industry of the (X)?", "which (Y) was the industry of (X)?", "which (Y) was the industry of the (X)?", "which (Y) were the industries of (X)?", "which (Y) were the industries of the (X)?", "Who is (X) 's industry?", "Who is the industry of (X)?", "Who is the industry of the (X)?", "Who was (X) 's industry?", "Who was the industry of (X)?", "Who was the industry of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "935",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the industry of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "936",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the industry of which (Y)?", "(X) was the industry of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "937",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many industries does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "938",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the industries of (X)?", "the industry of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "939",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) industries.", "Give me all industries of (X).", "Give me the (X) industries.", "Give me the (X) industry.", "List all industries of (X).", "List all the foods with industry of (X).", "List all the industries of (X).", "show me all industries of (X).", "What are the industries of (X)?", "What are the industries of the (X)?", "What is the industry of (X)?", "What is the industry of the (X)?", "What was the industry of (X)?", "What was the industry of the (X)?", "What were the industries of (X)?", "What were the industries of the (X)?", "which (Y) are the industries of (X)?", "which (Y) are the industries of the (X)?", "which (Y) is the industry of (X)?", "which (Y) is the industry of the (X)?", "which (Y) was the industry of (X)?", "which (Y) was the industry of the (X)?", "which (Y) were the industries of (X)?", "which (Y) were the industries of the (X)?", "Who is (X) 's industry?", "Who is the industry of (X)?", "Who is the industry of the (X)?", "Who was (X) 's industry?", "Who was the industry of (X)?", "Who was the industry of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "940",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the industry of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "941",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the industry of which (Y)?", "(X) was the industry of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "942",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many industries does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "943",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the industries of (X)?", "the industry of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "944",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) doctoral supervisors.", "Give me all doctoral supervisors of (X).", "Give me the (X) doctoral supervisor.", "Give me the (X) doctoral supervisors.", "List all doctoral supervisors of (X).", "List all the doctoral supervisors of (X).", "List all the persons with doctoral supervisor of (X).", "show me all doctoral supervisors of (X).", "which (Y) are the doctoral supervisors of (X)?", "which (Y) are the doctoral supervisors of the (X)?", "which (Y) is the doctoral supervisor of (X)?", "which (Y) is the doctoral supervisor of the (X)?", "which (Y) was the doctoral supervisor of (X)?", "which (Y) was the doctoral supervisor of the (X)?", "which (Y) were the doctoral supervisors of (X)?", "which (Y) were the doctoral supervisors of the (X)?", "Who are the doctoral supervisors of (X)?", "Who are the doctoral supervisors of the (X)?", "Who is (X) 's doctoral supervisor?", "Who is the doctoral supervisor of (X)?", "Who is the doctoral supervisor of the (X)?", "Who was (X) 's doctoral supervisor?", "Who was the doctoral supervisor of (X)?", "Who was the doctoral supervisor of the (X)?", "Who were the doctoral supervisors of (X)?", "Who were the doctoral supervisors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "945",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Scientist" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the doctoral supervisor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "946",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the doctoral supervisor of which (Y)?", "(X) was the doctoral supervisor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "947",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many doctoral supervisors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "948",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of (X)?", "the doctoral supervisors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "949",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) doctoral supervisors.", "Give me all doctoral supervisors of (X).", "Give me the (X) doctoral supervisor.", "Give me the (X) doctoral supervisors.", "List all doctoral supervisors of (X).", "List all the doctoral supervisors of (X).", "List all the persons with doctoral supervisor of (X).", "show me all doctoral supervisors of (X).", "which (Y) are the doctoral supervisors of (X)?", "which (Y) are the doctoral supervisors of the (X)?", "which (Y) is the doctoral supervisor of (X)?", "which (Y) is the doctoral supervisor of the (X)?", "which (Y) was the doctoral supervisor of (X)?", "which (Y) was the doctoral supervisor of the (X)?", "which (Y) were the doctoral supervisors of (X)?", "which (Y) were the doctoral supervisors of the (X)?", "Who are the doctoral supervisors of (X)?", "Who are the doctoral supervisors of the (X)?", "Who is (X) 's doctoral supervisor?", "Who is the doctoral supervisor of (X)?", "Who is the doctoral supervisor of the (X)?", "Who was (X) 's doctoral supervisor?", "Who was the doctoral supervisor of (X)?", "Who was the doctoral supervisor of the (X)?", "Who were the doctoral supervisors of (X)?", "Who were the doctoral supervisors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "950",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Scientist" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the doctoral supervisor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "951",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the doctoral supervisor of which (Y)?", "(X) was the doctoral supervisor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "952",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many doctoral supervisors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "953",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of (X)?", "the doctoral supervisors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "954",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) doctoral supervisors.", "Give me all doctoral supervisors of (X).", "Give me the (X) doctoral supervisor.", "Give me the (X) doctoral supervisors.", "List all doctoral supervisors of (X).", "List all the doctoral supervisors of (X).", "List all the persons with doctoral supervisor of (X).", "show me all doctoral supervisors of (X).", "which (Y) are the doctoral supervisors of (X)?", "which (Y) are the doctoral supervisors of the (X)?", "which (Y) is the doctoral supervisor of (X)?", "which (Y) is the doctoral supervisor of the (X)?", "which (Y) was the doctoral supervisor of (X)?", "which (Y) was the doctoral supervisor of the (X)?", "which (Y) were the doctoral supervisors of (X)?", "which (Y) were the doctoral supervisors of the (X)?", "Who are the doctoral supervisors of (X)?", "Who are the doctoral supervisors of the (X)?", "Who is (X) 's doctoral supervisor?", "Who is the doctoral supervisor of (X)?", "Who is the doctoral supervisor of the (X)?", "Who was (X) 's doctoral supervisor?", "Who was the doctoral supervisor of (X)?", "Who was the doctoral supervisor of the (X)?", "Who were the doctoral supervisors of (X)?", "Who were the doctoral supervisors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "955",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Scientist" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the doctoral supervisor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "956",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the doctoral supervisor of which (Y)?", "(X) was the doctoral supervisor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "957",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many doctoral supervisors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "958",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of (X)?", "the doctoral supervisors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "959",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) time zone.", "List all the countries with time zone in (X).", "What (Y) is (X) 's time zone?", "What (Y) is the time zone in (X)?", "What (Y) is the time zone in the (X)?", "What (Y) was (X) 's time zone?", "What (Y) was the time zone in (X)?", "What (Y) was the time zone in the (X)?", "What is the time zone in (X)?", "What is the time zone in the (X)?", "What was the time zone in (X)?", "What was the time zone in the (X)?", "which (Y) is the time zone in (X)?", "which (Y) is the time zone in the (X)?", "which (Y) was the time zone in (X)?", "which (Y) was the time zone in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "960",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the time zone in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "961",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the time zone in which (Y)?", "(X) was the time zone in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "962",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "963",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) time zone.", "List all the countries with time zone in (X).", "What (Y) is (X) 's time zone?", "What (Y) is the time zone in (X)?", "What (Y) is the time zone in the (X)?", "What (Y) was (X) 's time zone?", "What (Y) was the time zone in (X)?", "What (Y) was the time zone in the (X)?", "What is the time zone in (X)?", "What is the time zone in the (X)?", "What was the time zone in (X)?", "What was the time zone in the (X)?", "which (Y) is the time zone in (X)?", "which (Y) is the time zone in the (X)?", "which (Y) was the time zone in (X)?", "which (Y) was the time zone in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "964",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the time zone in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "965",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the time zone in which (Y)?", "(X) was the time zone in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "966",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "967",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of_294",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) nationality.", "List all the countries with nationality of (X).", "What is the nationality of (X)?", "What is the nationality of the (X)?", "What was the nationality of (X)?", "What was the nationality of the (X)?", "which (Y) is the nationality of (X)?", "which (Y) is the nationality of the (X)?", "which (Y) was the nationality of (X)?", "which (Y) was the nationality of the (X)?", "Who is (X) 's nationality?", "Who is the nationality of (X)?", "Who is the nationality of the (X)?", "Who was (X) 's nationality?", "Who was the nationality of (X)?", "Who was the nationality of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "968",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of_294",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the nationality of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "969",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of_294",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the nationality of which (Y)?", "(X) was the nationality of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "970",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of_294",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "971",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) official colors.", "Give me all official colors of (X).", "Give me the (X) official color.", "Give me the (X) official colors.", "List all official colors of (X).", "List all the official colors of (X).", "show me all official colors of (X).", "What are the official colors of (X)?", "What are the official colors of the (X)?", "What is the official color of (X)?", "What is the official color of the (X)?", "What was the official color of (X)?", "What was the official color of the (X)?", "What were the official colors of (X)?", "What were the official colors of the (X)?", "which (Y) are the official colors of (X)?", "which (Y) are the official colors of the (X)?", "which (Y) is the official color of (X)?", "which (Y) is the official color of the (X)?", "which (Y) was the official color of (X)?", "which (Y) was the official color of the (X)?", "which (Y) were the official colors of (X)?", "which (Y) were the official colors of the (X)?", "Who is (X) 's official color?", "Who is the official color of (X)?", "Who is the official color of the (X)?", "Who was (X) 's official color?", "Who was the official color of (X)?", "Who was the official color of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "972",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the official color of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "973",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the official color of which (Y)?", "(X) was the official color of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "974",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many official colors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "975",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official color of (X)?", "the official colors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "976",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) official colors.", "Give me all official colors of (X).", "Give me the (X) official color.", "Give me the (X) official colors.", "List all official colors of (X).", "List all the official colors of (X).", "show me all official colors of (X).", "What are the official colors of (X)?", "What are the official colors of the (X)?", "What is the official color of (X)?", "What is the official color of the (X)?", "What was the official color of (X)?", "What was the official color of the (X)?", "What were the official colors of (X)?", "What were the official colors of the (X)?", "which (Y) are the official colors of (X)?", "which (Y) are the official colors of the (X)?", "which (Y) is the official color of (X)?", "which (Y) is the official color of the (X)?", "which (Y) was the official color of (X)?", "which (Y) was the official color of the (X)?", "which (Y) were the official colors of (X)?", "which (Y) were the official colors of the (X)?", "Who is (X) 's official color?", "Who is the official color of (X)?", "Who is the official color of the (X)?", "Who was (X) 's official color?", "Who was the official color of (X)?", "Who was the official color of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "977",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the official color of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "978",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the official color of which (Y)?", "(X) was the official color of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "979",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many official colors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "980",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official color of (X)?", "the official colors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "981",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) children.", "Give me all children of (X).", "Give me the (X) child.", "Give me the (X) children.", "List all children of (X).", "List all the children of (X).", "List all the persons with child of (X).", "show me all children of (X).", "which (Y) are the children of (X)?", "which (Y) are the children of the (X)?", "which (Y) is the child of (X)?", "which (Y) is the child of the (X)?", "which (Y) was the child of (X)?", "which (Y) was the child of the (X)?", "which (Y) were the children of (X)?", "which (Y) were the children of the (X)?", "Who are the children of (X)?", "Who are the children of the (X)?", "Who is (X) 's child?", "Who is the child of (X)?", "Who is the child of the (X)?", "Who was (X) 's child?", "Who was the child of (X)?", "Who was the child of the (X)?", "Who were the children of (X)?", "Who were the children of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "982",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the child of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "983",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the child of which (Y)?", "(X) was the child of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "984",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many children does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "985",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of (X)?", "the children of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "986",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) children.", "Give me all children of (X).", "Give me the (X) child.", "Give me the (X) children.", "List all children of (X).", "List all the children of (X).", "List all the persons with child of (X).", "show me all children of (X).", "which (Y) are the children of (X)?", "which (Y) are the children of the (X)?", "which (Y) is the child of (X)?", "which (Y) is the child of the (X)?", "which (Y) was the child of (X)?", "which (Y) was the child of the (X)?", "which (Y) were the children of (X)?", "which (Y) were the children of the (X)?", "Who are the children of (X)?", "Who are the children of the (X)?", "Who is (X) 's child?", "Who is the child of (X)?", "Who is the child of the (X)?", "Who was (X) 's child?", "Who was the child of (X)?", "Who was the child of the (X)?", "Who were the children of (X)?", "Who were the children of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "987",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the child of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "988",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the child of which (Y)?", "(X) was the child of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "989",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many children does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "990",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of (X)?", "the children of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "991",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) children.", "Give me all children of (X).", "Give me the (X) child.", "Give me the (X) children.", "List all children of (X).", "List all the children of (X).", "List all the persons with child of (X).", "show me all children of (X).", "which (Y) are the children of (X)?", "which (Y) are the children of the (X)?", "which (Y) is the child of (X)?", "which (Y) is the child of the (X)?", "which (Y) was the child of (X)?", "which (Y) was the child of the (X)?", "which (Y) were the children of (X)?", "which (Y) were the children of the (X)?", "Who are the children of (X)?", "Who are the children of the (X)?", "Who is (X) 's child?", "Who is the child of (X)?", "Who is the child of the (X)?", "Who was (X) 's child?", "Who was the child of (X)?", "Who was the child of the (X)?", "Who were the children of (X)?", "Who were the children of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "992",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the child of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "993",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the child of which (Y)?", "(X) was the child of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "994",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many children does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "995",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of (X)?", "the children of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "996",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) owners.", "Give me all owners of (X).", "Give me the (X) owner.", "Give me the (X) owners.", "List all owners of (X).", "List all the owners of (X).", "List all the persons with owner of (X).", "show me all owners of (X).", "which (Y) are the owners of (X)?", "which (Y) are the owners of the (X)?", "which (Y) is the owner of (X)?", "which (Y) is the owner of the (X)?", "which (Y) was the owner of (X)?", "which (Y) was the owner of the (X)?", "which (Y) were the owners of (X)?", "which (Y) were the owners of the (X)?", "Who are the owners of (X)?", "Who are the owners of the (X)?", "Who is (X) 's owner?", "Who is the owner of (X)?", "Who is the owner of the (X)?", "Who was (X) 's owner?", "Who was the owner of (X)?", "Who was the owner of the (X)?", "Who were the owners of (X)?", "Who were the owners of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "997",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the owner of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "998",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the owner of which (Y)?", "(X) was the owner of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "999",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many owners does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1000",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the owner of (X)?", "the owners of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1001",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) owners.", "Give me all owners of (X).", "Give me the (X) owner.", "Give me the (X) owners.", "List all owners of (X).", "List all the owners of (X).", "List all the persons with owner of (X).", "show me all owners of (X).", "which (Y) are the owners of (X)?", "which (Y) are the owners of the (X)?", "which (Y) is the owner of (X)?", "which (Y) is the owner of the (X)?", "which (Y) was the owner of (X)?", "which (Y) was the owner of the (X)?", "which (Y) were the owners of (X)?", "which (Y) were the owners of the (X)?", "Who are the owners of (X)?", "Who are the owners of the (X)?", "Who is (X) 's owner?", "Who is the owner of (X)?", "Who is the owner of the (X)?", "Who was (X) 's owner?", "Who was the owner of (X)?", "Who was the owner of the (X)?", "Who were the owners of (X)?", "Who were the owners of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1002",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the owner of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1003",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the owner of which (Y)?", "(X) was the owner of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1004",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many owners does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1005",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the owner of (X)?", "the owners of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1006",
    "lexicalEntryUri" : "http://localhost:8080#dissolutiondate_of_350",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) dissolution date.", "What (Y) is (X) 's dissolution date?", "What (Y) is the dissolution date of (X)?", "What (Y) is the dissolution date of the (X)?", "What (Y) was (X) 's dissolution date?", "What (Y) was the dissolution date of (X)?", "What (Y) was the dissolution date of the (X)?", "What is the dissolution date of (X)?", "What is the dissolution date of the (X)?", "What was the dissolution date of (X)?", "What was the dissolution date of the (X)?", "which (Y) is the dissolution date of (X)?", "which (Y) is the dissolution date of the (X)?", "which (Y) was the dissolution date of (X)?", "which (Y) was the dissolution date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1007",
    "lexicalEntryUri" : "http://localhost:8080#dissolutiondate_of_350",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "AdministrativeRegion" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the dissolution date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1008",
    "lexicalEntryUri" : "http://localhost:8080#dissolutiondate_of_350",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the dissolution date of which (Y)?", "(X) was the dissolution date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1009",
    "lexicalEntryUri" : "http://localhost:8080#dissolutiondate_of_350",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the dissolution date of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1010",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest city.", "List all the cities with largest city of (X).", "What (Y) is (X) 's largest city?", "What (Y) is the largest city of (X)?", "What (Y) is the largest city of the (X)?", "What (Y) was (X) 's largest city?", "What (Y) was the largest city of (X)?", "What (Y) was the largest city of the (X)?", "What is the largest city of (X)?", "What is the largest city of the (X)?", "What was the largest city of (X)?", "What was the largest city of the (X)?", "which (Y) is the largest city of (X)?", "which (Y) is the largest city of the (X)?", "which (Y) was the largest city of (X)?", "which (Y) was the largest city of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1011",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the largest city of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1012",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the largest city of which (Y)?", "(X) was the largest city of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1013",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1014",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest city.", "List all the cities with largest city of (X).", "What (Y) is (X) 's largest city?", "What (Y) is the largest city of (X)?", "What (Y) is the largest city of the (X)?", "What (Y) was (X) 's largest city?", "What (Y) was the largest city of (X)?", "What (Y) was the largest city of the (X)?", "What is the largest city of (X)?", "What is the largest city of the (X)?", "What was the largest city of (X)?", "What was the largest city of the (X)?", "which (Y) is the largest city of (X)?", "which (Y) is the largest city of the (X)?", "which (Y) was the largest city of (X)?", "which (Y) was the largest city of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1015",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the largest city of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1016",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the largest city of which (Y)?", "(X) was the largest city of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1017",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1018",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest city.", "List all the cities with largest city of (X).", "What (Y) is (X) 's largest city?", "What (Y) is the largest city of (X)?", "What (Y) is the largest city of the (X)?", "What (Y) was (X) 's largest city?", "What (Y) was the largest city of (X)?", "What (Y) was the largest city of the (X)?", "What is the largest city of (X)?", "What is the largest city of the (X)?", "What was the largest city of (X)?", "What was the largest city of the (X)?", "which (Y) is the largest city of (X)?", "which (Y) is the largest city of the (X)?", "which (Y) was the largest city of (X)?", "which (Y) was the largest city of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1019",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the largest city of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1020",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the largest city of which (Y)?", "(X) was the largest city of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1021",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1022",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) books.", "Give me all books by (X).", "Give me the (X) book.", "Give me the (X) books.", "List all books by (X).", "List all the books by (X).", "List all the writers with book by (X).", "show me all books by (X).", "What (Y) is (X) 's book?", "What (Y) is the book by (X)?", "What (Y) is the book by the (X)?", "What (Y) was (X) 's book?", "What (Y) was the book by (X)?", "What (Y) was the book by the (X)?", "which (Y) are the books by (X)?", "which (Y) are the books by the (X)?", "which (Y) is the book by (X)?", "which (Y) is the book by the (X)?", "which (Y) was the book by (X)?", "which (Y) was the book by the (X)?", "which (Y) were the books by (X)?", "which (Y) were the books by the (X)?", "Who are the books by (X)?", "Who are the books by the (X)?", "Who is the book by (X)?", "Who is the book by the (X)?", "Who was the book by (X)?", "Who was the book by the (X)?", "Who were the books by (X)?", "Who were the books by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1023",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer", "Book" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the book by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1024",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Writer" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the book by which (Y)?", "(X) was the book by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1025",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many books does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1026",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by (X)?", "the books by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1027",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) books.", "Give me all books by (X).", "Give me the (X) book.", "Give me the (X) books.", "List all books by (X).", "List all the books by (X).", "List all the writers with book by (X).", "show me all books by (X).", "What (Y) is (X) 's book?", "What (Y) is the book by (X)?", "What (Y) is the book by the (X)?", "What (Y) was (X) 's book?", "What (Y) was the book by (X)?", "What (Y) was the book by the (X)?", "which (Y) are the books by (X)?", "which (Y) are the books by the (X)?", "which (Y) is the book by (X)?", "which (Y) is the book by the (X)?", "which (Y) was the book by (X)?", "which (Y) was the book by the (X)?", "which (Y) were the books by (X)?", "which (Y) were the books by the (X)?", "Who are the books by (X)?", "Who are the books by the (X)?", "Who is the book by (X)?", "Who is the book by the (X)?", "Who was the book by (X)?", "Who was the book by the (X)?", "Who were the books by (X)?", "Who were the books by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1028",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer", "Book" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the book by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1029",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Writer" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the book by which (Y)?", "(X) was the book by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1030",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many books does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1031",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by (X)?", "the books by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1032",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) books.", "Give me all books by (X).", "Give me the (X) book.", "Give me the (X) books.", "List all books by (X).", "List all the books by (X).", "List all the writers with book by (X).", "show me all books by (X).", "What (Y) is (X) 's book?", "What (Y) is the book by (X)?", "What (Y) is the book by the (X)?", "What (Y) was (X) 's book?", "What (Y) was the book by (X)?", "What (Y) was the book by the (X)?", "which (Y) are the books by (X)?", "which (Y) are the books by the (X)?", "which (Y) is the book by (X)?", "which (Y) is the book by the (X)?", "which (Y) was the book by (X)?", "which (Y) was the book by the (X)?", "which (Y) were the books by (X)?", "which (Y) were the books by the (X)?", "Who are the books by (X)?", "Who are the books by the (X)?", "Who is the book by (X)?", "Who is the book by the (X)?", "Who was the book by (X)?", "Who was the book by the (X)?", "Who were the books by (X)?", "Who were the books by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1033",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer", "Book" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the book by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1034",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Writer" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the book by which (Y)?", "(X) was the book by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1035",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many books does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1036",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by (X)?", "the books by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1037",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) number of pages.", "What (Y) is (X) 's number of pages?", "What (Y) is the number of pages of (X)?", "What (Y) is the number of pages of the (X)?", "What (Y) was (X) 's number of pages?", "What (Y) was the number of pages of (X)?", "What (Y) was the number of pages of the (X)?", "What is the number of pages of (X)?", "What is the number of pages of the (X)?", "What was the number of pages of (X)?", "What was the number of pages of the (X)?", "which (Y) is the number of pages of (X)?", "which (Y) is the number of pages of the (X)?", "which (Y) was the number of pages of (X)?", "which (Y) was the number of pages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1038",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "WrittenWork" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the number of pages of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1039",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the number of pages of which (Y)?", "(X) was the number of pages of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1040",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1041",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) number of pages.", "What (Y) is (X) 's number of pages?", "What (Y) is the number of pages of (X)?", "What (Y) is the number of pages of the (X)?", "What (Y) was (X) 's number of pages?", "What (Y) was the number of pages of (X)?", "What (Y) was the number of pages of the (X)?", "What is the number of pages of (X)?", "What is the number of pages of the (X)?", "What was the number of pages of (X)?", "What was the number of pages of the (X)?", "which (Y) is the number of pages of (X)?", "which (Y) is the number of pages of the (X)?", "which (Y) was the number of pages of (X)?", "which (Y) was the number of pages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1042",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "WrittenWork" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the number of pages of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1043",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the number of pages of which (Y)?", "(X) was the number of pages of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1044",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1045",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) number of pages.", "What (Y) is (X) 's number of pages?", "What (Y) is the number of pages of (X)?", "What (Y) is the number of pages of the (X)?", "What (Y) was (X) 's number of pages?", "What (Y) was the number of pages of (X)?", "What (Y) was the number of pages of the (X)?", "What is the number of pages of (X)?", "What is the number of pages of the (X)?", "What was the number of pages of (X)?", "What was the number of pages of the (X)?", "which (Y) is the number of pages of (X)?", "which (Y) is the number of pages of the (X)?", "which (Y) was the number of pages of (X)?", "which (Y) was the number of pages of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1046",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "WrittenWork" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the number of pages of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1047",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the number of pages of which (Y)?", "(X) was the number of pages of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1048",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1049",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) instruments.", "Give me all instruments in (X).", "Give me the (X) instrument.", "Give me the (X) instruments.", "List all instruments in (X).", "List all the instruments in (X).", "List all the musical artists with instrument in (X).", "show me all instruments in (X).", "which (Y) are the instruments in (X)?", "which (Y) are the instruments in the (X)?", "which (Y) is the instrument in (X)?", "which (Y) is the instrument in the (X)?", "which (Y) was the instrument in (X)?", "which (Y) was the instrument in the (X)?", "which (Y) were the instruments in (X)?", "which (Y) were the instruments in the (X)?", "Who are the instruments in (X)?", "Who are the instruments in the (X)?", "Who is (X) 's instrument?", "Who is the instrument in (X)?", "Who is the instrument in the (X)?", "Who was (X) 's instrument?", "Who was the instrument in (X)?", "Who was the instrument in the (X)?", "Who were the instruments in (X)?", "Who were the instruments in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1050",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the instrument in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1051",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the instrument in which (Y)?", "(X) was the instrument in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1052",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many instruments does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1053",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the instrument in (X)?", "the instruments in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1054",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) instruments.", "Give me all instruments in (X).", "Give me the (X) instrument.", "Give me the (X) instruments.", "List all instruments in (X).", "List all the instruments in (X).", "List all the musical artists with instrument in (X).", "show me all instruments in (X).", "which (Y) are the instruments in (X)?", "which (Y) are the instruments in the (X)?", "which (Y) is the instrument in (X)?", "which (Y) is the instrument in the (X)?", "which (Y) was the instrument in (X)?", "which (Y) was the instrument in the (X)?", "which (Y) were the instruments in (X)?", "which (Y) were the instruments in the (X)?", "Who are the instruments in (X)?", "Who are the instruments in the (X)?", "Who is (X) 's instrument?", "Who is the instrument in (X)?", "Who is the instrument in the (X)?", "Who was (X) 's instrument?", "Who was the instrument in (X)?", "Who was the instrument in the (X)?", "Who were the instruments in (X)?", "Who were the instruments in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1055",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the instrument in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1056",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the instrument in which (Y)?", "(X) was the instrument in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1057",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many instruments does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1058",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the instrument in (X)?", "the instruments in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1059",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "IceHockeyLeague" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) coaches.", "Give me all coaches of (X).", "Give me the (X) coach.", "Give me the (X) coaches.", "List all coaches of (X).", "List all the coaches of (X).", "List all the persons with coach of (X).", "show me all coaches of (X).", "What (Y) is (X) 's coach?", "What (Y) is the coach of (X)?", "What (Y) is the coach of the (X)?", "What (Y) was (X) 's coach?", "What (Y) was the coach of (X)?", "What (Y) was the coach of the (X)?", "which (Y) are the coaches of (X)?", "which (Y) are the coaches of the (X)?", "which (Y) is the coach of (X)?", "which (Y) is the coach of the (X)?", "which (Y) was the coach of (X)?", "which (Y) was the coach of the (X)?", "which (Y) were the coaches of (X)?", "which (Y) were the coaches of the (X)?", "Who are the coaches of (X)?", "Who are the coaches of the (X)?", "Who is the coach of (X)?", "Who is the coach of the (X)?", "Who was the coach of (X)?", "Who was the coach of the (X)?", "Who were the coaches of (X)?", "Who were the coaches of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1060",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "IceHockeyLeague" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the coach of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1061",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the coach of which (Y)?", "(X) was the coach of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1062",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "IceHockeyLeague" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many coaches does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1063",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "IceHockeyLeague" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of (X)?", "the coaches of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1064",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) coaches.", "Give me all coaches of (X).", "Give me the (X) coach.", "Give me the (X) coaches.", "List all coaches of (X).", "List all the coaches of (X).", "List all the persons with coach of (X).", "show me all coaches of (X).", "What (Y) is (X) 's coach?", "What (Y) is the coach of (X)?", "What (Y) is the coach of the (X)?", "What (Y) was (X) 's coach?", "What (Y) was the coach of (X)?", "What (Y) was the coach of the (X)?", "which (Y) are the coaches of (X)?", "which (Y) are the coaches of the (X)?", "which (Y) is the coach of (X)?", "which (Y) is the coach of the (X)?", "which (Y) was the coach of (X)?", "which (Y) was the coach of the (X)?", "which (Y) were the coaches of (X)?", "which (Y) were the coaches of the (X)?", "Who are the coaches of (X)?", "Who are the coaches of the (X)?", "Who is the coach of (X)?", "Who is the coach of the (X)?", "Who was the coach of (X)?", "Who was the coach of the (X)?", "Who were the coaches of (X)?", "Who were the coaches of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1065",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "HockeyTeam" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the coach of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1066",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the coach of which (Y)?", "(X) was the coach of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1067",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many coaches does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1068",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of (X)?", "the coaches of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1069",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) coaches.", "Give me all coaches of (X).", "Give me the (X) coach.", "Give me the (X) coaches.", "List all coaches of (X).", "List all the coaches of (X).", "List all the persons with coach of (X).", "show me all coaches of (X).", "What (Y) is (X) 's coach?", "What (Y) is the coach of (X)?", "What (Y) is the coach of the (X)?", "What (Y) was (X) 's coach?", "What (Y) was the coach of (X)?", "What (Y) was the coach of the (X)?", "which (Y) are the coaches of (X)?", "which (Y) are the coaches of the (X)?", "which (Y) is the coach of (X)?", "which (Y) is the coach of the (X)?", "which (Y) was the coach of (X)?", "which (Y) was the coach of the (X)?", "which (Y) were the coaches of (X)?", "which (Y) were the coaches of the (X)?", "Who are the coaches of (X)?", "Who are the coaches of the (X)?", "Who is the coach of (X)?", "Who is the coach of the (X)?", "Who was the coach of (X)?", "Who was the coach of the (X)?", "Who were the coaches of (X)?", "Who were the coaches of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1070",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "HockeyTeam" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the coach of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1071",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the coach of which (Y)?", "(X) was the coach of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1072",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many coaches does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1073",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of (X)?", "the coaches of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1074",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) coaches.", "Give me all coaches of (X).", "Give me the (X) coach.", "Give me the (X) coaches.", "List all coaches of (X).", "List all the coaches of (X).", "List all the persons with coach of (X).", "show me all coaches of (X).", "What (Y) is (X) 's coach?", "What (Y) is the coach of (X)?", "What (Y) is the coach of the (X)?", "What (Y) was (X) 's coach?", "What (Y) was the coach of (X)?", "What (Y) was the coach of the (X)?", "which (Y) are the coaches of (X)?", "which (Y) are the coaches of the (X)?", "which (Y) is the coach of (X)?", "which (Y) is the coach of the (X)?", "which (Y) was the coach of (X)?", "which (Y) was the coach of the (X)?", "which (Y) were the coaches of (X)?", "which (Y) were the coaches of the (X)?", "Who are the coaches of (X)?", "Who are the coaches of the (X)?", "Who is the coach of (X)?", "Who is the coach of the (X)?", "Who was the coach of (X)?", "Who was the coach of the (X)?", "Who were the coaches of (X)?", "Who were the coaches of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1075",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "HockeyTeam" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the coach of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1076",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the coach of which (Y)?", "(X) was the coach of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1077",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many coaches does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1078",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of (X)?", "the coaches of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1079",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) artistic movements.", "Give me all artistic movements of (X).", "Give me the (X) artistic movement.", "Give me the (X) artistic movements.", "List all artistic movements of (X).", "List all the artistic movements of (X).", "show me all artistic movements of (X).", "What are the artistic movements of (X)?", "What are the artistic movements of the (X)?", "What is the artistic movement of (X)?", "What is the artistic movement of the (X)?", "What was the artistic movement of (X)?", "What was the artistic movement of the (X)?", "What were the artistic movements of (X)?", "What were the artistic movements of the (X)?", "which (Y) are the artistic movements of (X)?", "which (Y) are the artistic movements of the (X)?", "which (Y) is the artistic movement of (X)?", "which (Y) is the artistic movement of the (X)?", "which (Y) was the artistic movement of (X)?", "which (Y) was the artistic movement of the (X)?", "which (Y) were the artistic movements of (X)?", "which (Y) were the artistic movements of the (X)?", "Who is (X) 's artistic movement?", "Who is the artistic movement of (X)?", "Who is the artistic movement of the (X)?", "Who was (X) 's artistic movement?", "Who was the artistic movement of (X)?", "Who was the artistic movement of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1080",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Artist" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the artistic movement of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1081",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the artistic movement of which (Y)?", "(X) was the artistic movement of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1082",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many artistic movements does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1083",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of (X)?", "the artistic movements of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1084",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) artistic movements.", "Give me all artistic movements of (X).", "Give me the (X) artistic movement.", "Give me the (X) artistic movements.", "List all artistic movements of (X).", "List all the artistic movements of (X).", "show me all artistic movements of (X).", "What are the artistic movements of (X)?", "What are the artistic movements of the (X)?", "What is the artistic movement of (X)?", "What is the artistic movement of the (X)?", "What was the artistic movement of (X)?", "What was the artistic movement of the (X)?", "What were the artistic movements of (X)?", "What were the artistic movements of the (X)?", "which (Y) are the artistic movements of (X)?", "which (Y) are the artistic movements of the (X)?", "which (Y) is the artistic movement of (X)?", "which (Y) is the artistic movement of the (X)?", "which (Y) was the artistic movement of (X)?", "which (Y) was the artistic movement of the (X)?", "which (Y) were the artistic movements of (X)?", "which (Y) were the artistic movements of the (X)?", "Who is (X) 's artistic movement?", "Who is the artistic movement of (X)?", "Who is the artistic movement of the (X)?", "Who was (X) 's artistic movement?", "Who was the artistic movement of (X)?", "Who was the artistic movement of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1085",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Artist" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the artistic movement of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1086",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the artistic movement of which (Y)?", "(X) was the artistic movement of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1087",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many artistic movements does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1088",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of (X)?", "the artistic movements of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1089",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) federal ministers.", "Give me all federal ministers of (X).", "Give me the (X) federal minister.", "Give me the (X) federal ministers.", "List all federal ministers of (X).", "List all the federal ministers of (X).", "List all the persons with federal minister of (X).", "show me all federal ministers of (X).", "which (Y) are the federal ministers of (X)?", "which (Y) are the federal ministers of the (X)?", "which (Y) is the federal minister of (X)?", "which (Y) is the federal minister of the (X)?", "which (Y) was the federal minister of (X)?", "which (Y) was the federal minister of the (X)?", "which (Y) were the federal ministers of (X)?", "which (Y) were the federal ministers of the (X)?", "Who are the federal ministers of (X)?", "Who are the federal ministers of the (X)?", "Who is (X) 's federal minister?", "Who is the federal minister of (X)?", "Who is the federal minister of the (X)?", "Who was (X) 's federal minister?", "Who was the federal minister of (X)?", "Who was the federal minister of the (X)?", "Who were the federal ministers of (X)?", "Who were the federal ministers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1090",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the federal minister of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1091",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the federal minister of which (Y)?", "(X) was the federal minister of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1092",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many federal ministers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1093",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the federal minister of (X)?", "the federal ministers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1094",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) federal ministers.", "Give me all federal ministers of (X).", "Give me the (X) federal minister.", "Give me the (X) federal ministers.", "List all federal ministers of (X).", "List all the federal ministers of (X).", "List all the persons with federal minister of (X).", "show me all federal ministers of (X).", "which (Y) are the federal ministers of (X)?", "which (Y) are the federal ministers of the (X)?", "which (Y) is the federal minister of (X)?", "which (Y) is the federal minister of the (X)?", "which (Y) was the federal minister of (X)?", "which (Y) was the federal minister of the (X)?", "which (Y) were the federal ministers of (X)?", "which (Y) were the federal ministers of the (X)?", "Who are the federal ministers of (X)?", "Who are the federal ministers of the (X)?", "Who is (X) 's federal minister?", "Who is the federal minister of (X)?", "Who is the federal minister of the (X)?", "Who was (X) 's federal minister?", "Who was the federal minister of (X)?", "Who was the federal minister of the (X)?", "Who were the federal ministers of (X)?", "Who were the federal ministers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1095",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the federal minister of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1096",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the federal minister of which (Y)?", "(X) was the federal minister of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1097",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many federal ministers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1098",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the federal minister of (X)?", "the federal ministers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1099",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of_359",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) influencers.", "Give me all influencers of (X).", "Give me the (X) influencer.", "Give me the (X) influencers.", "List all influencers of (X).", "List all the influencers of (X).", "List all the persons with influencer of (X).", "show me all influencers of (X).", "which (Y) are the influencers of (X)?", "which (Y) are the influencers of the (X)?", "which (Y) is the influencer of (X)?", "which (Y) is the influencer of the (X)?", "which (Y) was the influencer of (X)?", "which (Y) was the influencer of the (X)?", "which (Y) were the influencers of (X)?", "which (Y) were the influencers of the (X)?", "Who are the influencers of (X)?", "Who are the influencers of the (X)?", "Who is (X) 's influencer?", "Who is the influencer of (X)?", "Who is the influencer of the (X)?", "Who was (X) 's influencer?", "Who was the influencer of (X)?", "Who was the influencer of the (X)?", "Who were the influencers of (X)?", "Who were the influencers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1100",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of_359",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the influencer of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1101",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of_359",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the influencer of which (Y)?", "(X) was the influencer of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1102",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of_359",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many influencers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1103",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of_359",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the influencer of (X)?", "the influencers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1104",
    "lexicalEntryUri" : "http://localhost:8080#team_of_354",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) teams.", "Give me all teams of (X).", "Give me the (X) team.", "Give me the (X) teams.", "List all teams of (X).", "List all the Ice Hockey Leagues with team of (X).", "List all the teams of (X).", "show me all teams of (X).", "What (Y) is (X) 's team?", "What (Y) is the team of (X)?", "What (Y) is the team of the (X)?", "What (Y) was (X) 's team?", "What (Y) was the team of (X)?", "What (Y) was the team of the (X)?", "What are the teams of (X)?", "What are the teams of the (X)?", "What is the team of (X)?", "What is the team of the (X)?", "What was the team of (X)?", "What was the team of the (X)?", "What were the teams of (X)?", "What were the teams of the (X)?", "which (Y) are the teams of (X)?", "which (Y) are the teams of the (X)?", "which (Y) is the team of (X)?", "which (Y) is the team of the (X)?", "which (Y) was the team of (X)?", "which (Y) was the team of the (X)?", "which (Y) were the teams of (X)?", "which (Y) were the teams of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1105",
    "lexicalEntryUri" : "http://localhost:8080#team_of_354",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague", "HockeyTeam" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the team of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1106",
    "lexicalEntryUri" : "http://localhost:8080#team_of_354",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "IceHockeyLeague" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the team of which (Y)?", "(X) was the team of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1107",
    "lexicalEntryUri" : "http://localhost:8080#team_of_354",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many teams does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1108",
    "lexicalEntryUri" : "http://localhost:8080#team_of_354",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the team of (X)?", "the teams of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1109",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) successor.", "List all the persons with successor of (X).", "which (Y) is the successor of (X)?", "which (Y) is the successor of the (X)?", "which (Y) was the successor of (X)?", "which (Y) was the successor of the (X)?", "Who is (X) 's successor?", "Who is the successor of (X)?", "Who is the successor of the (X)?", "Who was (X) 's successor?", "Who was the successor of (X)?", "Who was the successor of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1110",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the successor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1111",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the successor of which (Y)?", "(X) was the successor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1112",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1113",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) successor.", "List all the persons with successor of (X).", "which (Y) is the successor of (X)?", "which (Y) is the successor of the (X)?", "which (Y) was the successor of (X)?", "which (Y) was the successor of the (X)?", "Who is (X) 's successor?", "Who is the successor of (X)?", "Who is the successor of the (X)?", "Who was (X) 's successor?", "Who was the successor of (X)?", "Who was the successor of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1114",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the successor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1115",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the successor of which (Y)?", "(X) was the successor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1116",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1117",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) successor.", "List all the persons with successor of (X).", "which (Y) is the successor of (X)?", "which (Y) is the successor of the (X)?", "which (Y) was the successor of (X)?", "which (Y) was the successor of the (X)?", "Who is (X) 's successor?", "Who is the successor of (X)?", "Who is the successor of the (X)?", "Who was (X) 's successor?", "Who was the successor of (X)?", "Who was the successor of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1118",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Politician" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the successor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1119",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the successor of which (Y)?", "(X) was the successor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1120",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1121",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) form of government.", "Give me all form of government of (X).", "Give me the (X) form of government.", "List all form of government of (X).", "List all the form of government of (X).", "List all the organizations with form of government of (X).", "show me all form of government of (X).", "What (Y) is (X) 's form of government?", "What (Y) is the form of government of (X)?", "What (Y) is the form of government of the (X)?", "What (Y) was (X) 's form of government?", "What (Y) was the form of government of (X)?", "What (Y) was the form of government of the (X)?", "which (Y) are the form of government of (X)?", "which (Y) are the form of government of the (X)?", "which (Y) is the form of government of (X)?", "which (Y) is the form of government of the (X)?", "which (Y) was the form of government of (X)?", "which (Y) was the form of government of the (X)?", "which (Y) were the form of government of (X)?", "which (Y) were the form of government of the (X)?", "Who are the form of government of (X)?", "Who are the form of government of the (X)?", "Who is the form of government of (X)?", "Who is the form of government of the (X)?", "Who was the form of government of (X)?", "Who was the form of government of the (X)?", "Who were the form of government of (X)?", "Who were the form of government of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1122",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the form of government of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1123",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the form of government of which (Y)?", "(X) was the form of government of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1124",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many form of government does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1125",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1126",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) form of government.", "Give me all form of government of (X).", "Give me the (X) form of government.", "List all form of government of (X).", "List all the form of government of (X).", "List all the organizations with form of government of (X).", "show me all form of government of (X).", "What (Y) is (X) 's form of government?", "What (Y) is the form of government of (X)?", "What (Y) is the form of government of the (X)?", "What (Y) was (X) 's form of government?", "What (Y) was the form of government of (X)?", "What (Y) was the form of government of the (X)?", "which (Y) are the form of government of (X)?", "which (Y) are the form of government of the (X)?", "which (Y) is the form of government of (X)?", "which (Y) is the form of government of the (X)?", "which (Y) was the form of government of (X)?", "which (Y) was the form of government of the (X)?", "which (Y) were the form of government of (X)?", "which (Y) were the form of government of the (X)?", "Who are the form of government of (X)?", "Who are the form of government of the (X)?", "Who is the form of government of (X)?", "Who is the form of government of the (X)?", "Who was the form of government of (X)?", "Who was the form of government of the (X)?", "Who were the form of government of (X)?", "Who were the form of government of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1127",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the form of government of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1128",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the form of government of which (Y)?", "(X) was the form of government of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1129",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many form of government does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1130",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1131",
    "lexicalEntryUri" : "http://localhost:8080#number_of_363",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) number of locations.", "What is the number of locations of (X)?", "What is the number of locations of the (X)?", "What was the number of locations of (X)?", "What was the number of locations of the (X)?", "which (Y) is the number of locations of (X)?", "which (Y) is the number of locations of the (X)?", "which (Y) was the number of locations of (X)?", "which (Y) was the number of locations of the (X)?", "Who is (X) 's number of locations?", "Who is the number of locations of (X)?", "Who is the number of locations of the (X)?", "Who was (X) 's number of locations?", "Who was the number of locations of (X)?", "Who was the number of locations of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1132",
    "lexicalEntryUri" : "http://localhost:8080#number_of_363",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the number of locations of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1133",
    "lexicalEntryUri" : "http://localhost:8080#number_of_363",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the number of locations of which (Y)?", "(X) was the number of locations of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1134",
    "lexicalEntryUri" : "http://localhost:8080#number_of_363",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of locations of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1135",
    "lexicalEntryUri" : "http://localhost:8080#areacode_of_235",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) area code.", "What (Y) is (X) 's area code?", "What (Y) is the area code of (X)?", "What (Y) is the area code of the (X)?", "What (Y) was (X) 's area code?", "What (Y) was the area code of (X)?", "What (Y) was the area code of the (X)?", "What is the area code of (X)?", "What is the area code of the (X)?", "What was the area code of (X)?", "What was the area code of the (X)?", "which (Y) is the area code of (X)?", "which (Y) is the area code of the (X)?", "which (Y) was the area code of (X)?", "which (Y) was the area code of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaCode> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1136",
    "lexicalEntryUri" : "http://localhost:8080#areacode_of_235",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "City" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the area code of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/areaCode> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1137",
    "lexicalEntryUri" : "http://localhost:8080#areacode_of_235",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the area code of which (Y)?", "(X) was the area code of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaCode> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1138",
    "lexicalEntryUri" : "http://localhost:8080#areacode_of_235",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the area code of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaCode> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1139",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) birthdays.", "Give me all birthdays of (X).", "Give me the (X) birthday.", "Give me the (X) birthdays.", "List all birthdays of (X).", "List all the birthdays of (X).", "show me all birthdays of (X).", "What are the birthdays of (X)?", "What are the birthdays of the (X)?", "What is the birthday of (X)?", "What is the birthday of the (X)?", "What was the birthday of (X)?", "What was the birthday of the (X)?", "What were the birthdays of (X)?", "What were the birthdays of the (X)?", "which (Y) are the birthdays of (X)?", "which (Y) are the birthdays of the (X)?", "which (Y) is the birthday of (X)?", "which (Y) is the birthday of the (X)?", "which (Y) was the birthday of (X)?", "which (Y) was the birthday of the (X)?", "which (Y) were the birthdays of (X)?", "which (Y) were the birthdays of the (X)?", "Who is (X) 's birthday?", "Who is the birthday of (X)?", "Who is the birthday of the (X)?", "Who was (X) 's birthday?", "Who was the birthday of (X)?", "Who was the birthday of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1140",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birthday of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1141",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birthday of which (Y)?", "(X) was the birthday of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1142",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many birthdays does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1143",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birthday of (X)?", "the birthdays of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1144",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) birthdays.", "Give me all birthdays of (X).", "Give me the (X) birthday.", "Give me the (X) birthdays.", "List all birthdays of (X).", "List all the birthdays of (X).", "show me all birthdays of (X).", "What are the birthdays of (X)?", "What are the birthdays of the (X)?", "What is the birthday of (X)?", "What is the birthday of the (X)?", "What was the birthday of (X)?", "What was the birthday of the (X)?", "What were the birthdays of (X)?", "What were the birthdays of the (X)?", "which (Y) are the birthdays of (X)?", "which (Y) are the birthdays of the (X)?", "which (Y) is the birthday of (X)?", "which (Y) is the birthday of the (X)?", "which (Y) was the birthday of (X)?", "which (Y) was the birthday of the (X)?", "which (Y) were the birthdays of (X)?", "which (Y) were the birthdays of the (X)?", "Who is (X) 's birthday?", "Who is the birthday of (X)?", "Who is the birthday of the (X)?", "Who was (X) 's birthday?", "Who was the birthday of (X)?", "Who was the birthday of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1145",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birthday of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1146",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birthday of which (Y)?", "(X) was the birthday of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1147",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many birthdays does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1148",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birthday of (X)?", "the birthdays of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1149",
    "lexicalEntryUri" : "http://localhost:8080#religion-of_364",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) religion.", "What is the religion of (X)?", "What is the religion of the (X)?", "What was the religion of (X)?", "What was the religion of the (X)?", "which (Y) is the religion of (X)?", "which (Y) is the religion of the (X)?", "which (Y) was the religion of (X)?", "which (Y) was the religion of the (X)?", "Who is (X) 's religion?", "Who is the religion of (X)?", "Who is the religion of the (X)?", "Who was (X) 's religion?", "Who was the religion of (X)?", "Who was the religion of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1150",
    "lexicalEntryUri" : "http://localhost:8080#religion-of_364",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the religion of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/religion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1151",
    "lexicalEntryUri" : "http://localhost:8080#religion-of_364",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the religion of which (Y)?", "(X) was the religion of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1152",
    "lexicalEntryUri" : "http://localhost:8080#religion-of_364",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the religion of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1153",
    "lexicalEntryUri" : "http://localhost:8080#firstseason_of_372",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) first season.", "What (Y) is (X) 's first season?", "What (Y) is the first season of (X)?", "What (Y) is the first season of the (X)?", "What (Y) was (X) 's first season?", "What (Y) was the first season of (X)?", "What (Y) was the first season of the (X)?", "What is the first season of (X)?", "What is the first season of the (X)?", "What was the first season of (X)?", "What was the first season of the (X)?", "which (Y) is the first season of (X)?", "which (Y) is the first season of the (X)?", "which (Y) was the first season of (X)?", "which (Y) was the first season of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seasonNumber> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1154",
    "lexicalEntryUri" : "http://localhost:8080#firstseason_of_372",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "TelevisionShow" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the first season of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/seasonNumber> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1155",
    "lexicalEntryUri" : "http://localhost:8080#firstseason_of_372",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the first season of which (Y)?", "(X) was the first season of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seasonNumber> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1156",
    "lexicalEntryUri" : "http://localhost:8080#firstseason_of_372",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first season of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seasonNumber> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1157",
    "lexicalEntryUri" : "http://localhost:8080#cost-of_253",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) costs.", "Give me all costs of (X).", "Give me the (X) cost.", "Give me the (X) costs.", "List all costs of (X).", "List all the costs of (X).", "show me all costs of (X).", "What (Y) is (X) 's cost?", "What (Y) is the cost of (X)?", "What (Y) is the cost of the (X)?", "What (Y) was (X) 's cost?", "What (Y) was the cost of (X)?", "What (Y) was the cost of the (X)?", "What are the costs of (X)?", "What are the costs of the (X)?", "What is the cost of (X)?", "What is the cost of the (X)?", "What was the cost of (X)?", "What was the cost of the (X)?", "What were the costs of (X)?", "What were the costs of the (X)?", "which (Y) are the costs of (X)?", "which (Y) are the costs of the (X)?", "which (Y) is the cost of (X)?", "which (Y) is the cost of the (X)?", "which (Y) was the cost of (X)?", "which (Y) was the cost of the (X)?", "which (Y) were the costs of (X)?", "which (Y) were the costs of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1158",
    "lexicalEntryUri" : "http://localhost:8080#cost-of_253",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Film" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the cost of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1159",
    "lexicalEntryUri" : "http://localhost:8080#cost-of_253",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the cost of which (Y)?", "(X) was the cost of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1160",
    "lexicalEntryUri" : "http://localhost:8080#cost-of_253",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many costs does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1161",
    "lexicalEntryUri" : "http://localhost:8080#cost-of_253",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cost of (X)?", "the costs of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1162",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2_340",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founders.", "Give me all founders of (X).", "Give me the (X) founder.", "Give me the (X) founders.", "List all founders of (X).", "List all the founders of (X).", "List all the popes with founder of (X).", "show me all founders of (X).", "which (Y) are the founders of (X)?", "which (Y) are the founders of the (X)?", "which (Y) is the founder of (X)?", "which (Y) is the founder of the (X)?", "which (Y) was the founder of (X)?", "which (Y) was the founder of the (X)?", "which (Y) were the founders of (X)?", "which (Y) were the founders of the (X)?", "Who are the founders of (X)?", "Who are the founders of the (X)?", "Who is (X) 's founder?", "Who is the founder of (X)?", "Who is the founder of the (X)?", "Who was (X) 's founder?", "Who was the founder of (X)?", "Who was the founder of the (X)?", "Who were the founders of (X)?", "Who were the founders of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1163",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2_340",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founder of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1164",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2_340",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founder of which (Y)?", "(X) was the founder of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1165",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2_340",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founders does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1166",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2_340",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of (X)?", "the founders of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1167",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) population.", "What (Y) is (X) 's population?", "What (Y) is the population of (X)?", "What (Y) is the population of the (X)?", "What (Y) was (X) 's population?", "What (Y) was the population of (X)?", "What (Y) was the population of the (X)?", "What is the population of (X)?", "What is the population of the (X)?", "What was the population of (X)?", "What was the population of the (X)?", "which (Y) is the population of (X)?", "which (Y) is the population of the (X)?", "which (Y) was the population of (X)?", "which (Y) was the population of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1168",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "PopulatedPlace" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the population of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1169",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the population of which (Y)?", "(X) was the population of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1170",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1171",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) population.", "What (Y) is (X) 's population?", "What (Y) is the population of (X)?", "What (Y) is the population of the (X)?", "What (Y) was (X) 's population?", "What (Y) was the population of (X)?", "What (Y) was the population of the (X)?", "What is the population of (X)?", "What is the population of the (X)?", "What was the population of (X)?", "What was the population of the (X)?", "which (Y) is the population of (X)?", "which (Y) is the population of the (X)?", "which (Y) was the population of (X)?", "which (Y) was the population of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1172",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "PopulatedPlace" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the population of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1173",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the population of which (Y)?", "(X) was the population of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1174",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1175",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) population.", "What (Y) is (X) 's population?", "What (Y) is the population of (X)?", "What (Y) is the population of the (X)?", "What (Y) was (X) 's population?", "What (Y) was the population of (X)?", "What (Y) was the population of the (X)?", "What is the population of (X)?", "What is the population of the (X)?", "What was the population of (X)?", "What was the population of the (X)?", "which (Y) is the population of (X)?", "which (Y) is the population of the (X)?", "which (Y) was the population of (X)?", "which (Y) was the population of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1176",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "PopulatedPlace" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the population of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1177",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the population of which (Y)?", "(X) was the population of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1178",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1179",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) alma maters.", "Give me all alma maters of (X).", "Give me the (X) alma mater.", "Give me the (X) alma maters.", "List all alma maters of (X).", "List all the alma maters of (X).", "show me all alma maters of (X).", "What (Y) is (X) 's alma mater?", "What (Y) is the alma mater of (X)?", "What (Y) is the alma mater of the (X)?", "What (Y) was (X) 's alma mater?", "What (Y) was the alma mater of (X)?", "What (Y) was the alma mater of the (X)?", "What are the alma maters of (X)?", "What are the alma maters of the (X)?", "What is the alma mater of (X)?", "What is the alma mater of the (X)?", "What was the alma mater of (X)?", "What was the alma mater of the (X)?", "What were the alma maters of (X)?", "What were the alma maters of the (X)?", "which (Y) are the alma maters of (X)?", "which (Y) are the alma maters of the (X)?", "which (Y) is the alma mater of (X)?", "which (Y) is the alma mater of the (X)?", "which (Y) was the alma mater of (X)?", "which (Y) was the alma mater of the (X)?", "which (Y) were the alma maters of (X)?", "which (Y) were the alma maters of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1180",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the alma mater of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1181",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the alma mater of which (Y)?", "(X) was the alma mater of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1182",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many alma maters does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1183",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alma mater of (X)?", "the alma maters of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1184",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) alma maters.", "Give me all alma maters of (X).", "Give me the (X) alma mater.", "Give me the (X) alma maters.", "List all alma maters of (X).", "List all the alma maters of (X).", "show me all alma maters of (X).", "What (Y) is (X) 's alma mater?", "What (Y) is the alma mater of (X)?", "What (Y) is the alma mater of the (X)?", "What (Y) was (X) 's alma mater?", "What (Y) was the alma mater of (X)?", "What (Y) was the alma mater of the (X)?", "What are the alma maters of (X)?", "What are the alma maters of the (X)?", "What is the alma mater of (X)?", "What is the alma mater of the (X)?", "What was the alma mater of (X)?", "What was the alma mater of the (X)?", "What were the alma maters of (X)?", "What were the alma maters of the (X)?", "which (Y) are the alma maters of (X)?", "which (Y) are the alma maters of the (X)?", "which (Y) is the alma mater of (X)?", "which (Y) is the alma mater of the (X)?", "which (Y) was the alma mater of (X)?", "which (Y) was the alma mater of the (X)?", "which (Y) were the alma maters of (X)?", "which (Y) were the alma maters of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1185",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the alma mater of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1186",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the alma mater of which (Y)?", "(X) was the alma mater of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1187",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many alma maters does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1188",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alma mater of (X)?", "the alma maters of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1189",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) managers.", "Give me all managers of (X).", "Give me the (X) manager.", "Give me the (X) managers.", "List all managers of (X).", "List all the managers of (X).", "show me all managers of (X).", "which (Y) are the managers of (X)?", "which (Y) are the managers of the (X)?", "which (Y) is the manager of (X)?", "which (Y) is the manager of the (X)?", "which (Y) was the manager of (X)?", "which (Y) was the manager of the (X)?", "which (Y) were the managers of (X)?", "which (Y) were the managers of the (X)?", "Who are the managers of (X)?", "Who are the managers of the (X)?", "Who is (X) 's manager?", "Who is the manager of (X)?", "Who is the manager of the (X)?", "Who was (X) 's manager?", "Who was the manager of (X)?", "Who was the manager of the (X)?", "Who were the managers of (X)?", "Who were the managers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1190",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerManager", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the manager of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1191",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "SoccerManager" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the manager of which (Y)?", "(X) was the manager of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1192",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many managers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1193",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the manager of (X)?", "the managers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1194",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) managers.", "Give me all managers of (X).", "Give me the (X) manager.", "Give me the (X) managers.", "List all managers of (X).", "List all the managers of (X).", "show me all managers of (X).", "which (Y) are the managers of (X)?", "which (Y) are the managers of the (X)?", "which (Y) is the manager of (X)?", "which (Y) is the manager of the (X)?", "which (Y) was the manager of (X)?", "which (Y) was the manager of the (X)?", "which (Y) were the managers of (X)?", "which (Y) were the managers of the (X)?", "Who are the managers of (X)?", "Who are the managers of the (X)?", "Who is (X) 's manager?", "Who is the manager of (X)?", "Who is the manager of the (X)?", "Who was (X) 's manager?", "Who was the manager of (X)?", "Who was the manager of the (X)?", "Who were the managers of (X)?", "Who were the managers of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1195",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerManager", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the manager of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1196",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "SoccerManager" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the manager of which (Y)?", "(X) was the manager of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1197",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many managers does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1198",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the manager of (X)?", "the managers of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1199",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) residences.", "Give me all residences of (X).", "Give me the (X) residence.", "Give me the (X) residences.", "List all residences of (X).", "List all the persons with residence of (X).", "List all the residences of (X).", "show me all residences of (X).", "What (Y) is (X) 's residence?", "What (Y) is the residence of (X)?", "What (Y) is the residence of the (X)?", "What (Y) was (X) 's residence?", "What (Y) was the residence of (X)?", "What (Y) was the residence of the (X)?", "which (Y) are the residences of (X)?", "which (Y) are the residences of the (X)?", "which (Y) is the residence of (X)?", "which (Y) is the residence of the (X)?", "which (Y) was the residence of (X)?", "which (Y) was the residence of the (X)?", "which (Y) were the residences of (X)?", "which (Y) were the residences of the (X)?", "Who are the residences of (X)?", "Who are the residences of the (X)?", "Who is the residence of (X)?", "Who is the residence of the (X)?", "Who was the residence of (X)?", "Who was the residence of the (X)?", "Who were the residences of (X)?", "Who were the residences of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1200",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the residence of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1201",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the residence of which (Y)?", "(X) was the residence of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1202",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many residences does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1203",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of (X)?", "the residences of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1204",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) residences.", "Give me all residences of (X).", "Give me the (X) residence.", "Give me the (X) residences.", "List all residences of (X).", "List all the countries with residence of (X).", "List all the residences of (X).", "show me all residences of (X).", "What are the residences of (X)?", "What are the residences of the (X)?", "What is the residence of (X)?", "What is the residence of the (X)?", "What was the residence of (X)?", "What was the residence of the (X)?", "What were the residences of (X)?", "What were the residences of the (X)?", "which (Y) are the residences of (X)?", "which (Y) are the residences of the (X)?", "which (Y) is the residence of (X)?", "which (Y) is the residence of the (X)?", "which (Y) was the residence of (X)?", "which (Y) was the residence of the (X)?", "which (Y) were the residences of (X)?", "which (Y) were the residences of the (X)?", "Who is (X) 's residence?", "Who is the residence of (X)?", "Who is the residence of the (X)?", "Who was (X) 's residence?", "Who was the residence of (X)?", "Who was the residence of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1205",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the residence of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1206",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the residence of which (Y)?", "(X) was the residence of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1207",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many residences does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1208",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of (X)?", "the residences of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1209",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) residences.", "Give me all residences of (X).", "Give me the (X) residence.", "Give me the (X) residences.", "List all residences of (X).", "List all the countries with residence of (X).", "List all the residences of (X).", "show me all residences of (X).", "What are the residences of (X)?", "What are the residences of the (X)?", "What is the residence of (X)?", "What is the residence of the (X)?", "What was the residence of (X)?", "What was the residence of the (X)?", "What were the residences of (X)?", "What were the residences of the (X)?", "which (Y) are the residences of (X)?", "which (Y) are the residences of the (X)?", "which (Y) is the residence of (X)?", "which (Y) is the residence of the (X)?", "which (Y) was the residence of (X)?", "which (Y) was the residence of the (X)?", "which (Y) were the residences of (X)?", "which (Y) were the residences of the (X)?", "Who is (X) 's residence?", "Who is the residence of (X)?", "Who is the residence of the (X)?", "Who was (X) 's residence?", "Who was the residence of (X)?", "Who was the residence of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1210",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the residence of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1211",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the residence of which (Y)?", "(X) was the residence of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1212",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many residences does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1213",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of (X)?", "the residences of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1214",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) ingredients.", "Give me all ingredients of (X).", "Give me the (X) ingredient.", "Give me the (X) ingredients.", "List all ingredients of (X).", "List all the ingredients of (X).", "show me all ingredients of (X).", "What (Y) is (X) 's ingredient?", "What (Y) is the ingredient of (X)?", "What (Y) is the ingredient of the (X)?", "What (Y) was (X) 's ingredient?", "What (Y) was the ingredient of (X)?", "What (Y) was the ingredient of the (X)?", "What are the ingredients of (X)?", "What are the ingredients of the (X)?", "What is the ingredient of (X)?", "What is the ingredient of the (X)?", "What was the ingredient of (X)?", "What was the ingredient of the (X)?", "What were the ingredients of (X)?", "What were the ingredients of the (X)?", "which (Y) are the ingredients of (X)?", "which (Y) are the ingredients of the (X)?", "which (Y) is the ingredient of (X)?", "which (Y) is the ingredient of the (X)?", "which (Y) was the ingredient of (X)?", "which (Y) was the ingredient of the (X)?", "which (Y) were the ingredients of (X)?", "which (Y) were the ingredients of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1215",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Food" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the ingredient of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1216",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the ingredient of which (Y)?", "(X) was the ingredient of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1217",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many ingredients does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1218",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of (X)?", "the ingredients of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1219",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) ingredients.", "Give me all ingredients of (X).", "Give me the (X) ingredient.", "Give me the (X) ingredients.", "List all ingredients of (X).", "List all the ingredients of (X).", "show me all ingredients of (X).", "What (Y) is (X) 's ingredient?", "What (Y) is the ingredient of (X)?", "What (Y) is the ingredient of the (X)?", "What (Y) was (X) 's ingredient?", "What (Y) was the ingredient of (X)?", "What (Y) was the ingredient of the (X)?", "What are the ingredients of (X)?", "What are the ingredients of the (X)?", "What is the ingredient of (X)?", "What is the ingredient of the (X)?", "What was the ingredient of (X)?", "What was the ingredient of the (X)?", "What were the ingredients of (X)?", "What were the ingredients of the (X)?", "which (Y) are the ingredients of (X)?", "which (Y) are the ingredients of the (X)?", "which (Y) is the ingredient of (X)?", "which (Y) is the ingredient of the (X)?", "which (Y) was the ingredient of (X)?", "which (Y) was the ingredient of the (X)?", "which (Y) were the ingredients of (X)?", "which (Y) were the ingredients of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1220",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Food" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the ingredient of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1221",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the ingredient of which (Y)?", "(X) was the ingredient of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1222",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many ingredients does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1223",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of (X)?", "the ingredients of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1224",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) ingredients.", "Give me all ingredients of (X).", "Give me the (X) ingredient.", "Give me the (X) ingredients.", "List all ingredients of (X).", "List all the ingredients of (X).", "show me all ingredients of (X).", "What (Y) is (X) 's ingredient?", "What (Y) is the ingredient of (X)?", "What (Y) is the ingredient of the (X)?", "What (Y) was (X) 's ingredient?", "What (Y) was the ingredient of (X)?", "What (Y) was the ingredient of the (X)?", "What are the ingredients of (X)?", "What are the ingredients of the (X)?", "What is the ingredient of (X)?", "What is the ingredient of the (X)?", "What was the ingredient of (X)?", "What was the ingredient of the (X)?", "What were the ingredients of (X)?", "What were the ingredients of the (X)?", "which (Y) are the ingredients of (X)?", "which (Y) are the ingredients of the (X)?", "which (Y) is the ingredient of (X)?", "which (Y) is the ingredient of the (X)?", "which (Y) was the ingredient of (X)?", "which (Y) was the ingredient of the (X)?", "which (Y) were the ingredients of (X)?", "which (Y) were the ingredients of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1225",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Food" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the ingredient of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1226",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the ingredient of which (Y)?", "(X) was the ingredient of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1227",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many ingredients does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1228",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of (X)?", "the ingredients of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1229",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) ingredients.", "Give me all ingredients of (X).", "Give me the (X) ingredient.", "Give me the (X) ingredients.", "List all ingredients of (X).", "List all the ingredients of (X).", "show me all ingredients of (X).", "What (Y) is (X) 's ingredient?", "What (Y) is the ingredient of (X)?", "What (Y) is the ingredient of the (X)?", "What (Y) was (X) 's ingredient?", "What (Y) was the ingredient of (X)?", "What (Y) was the ingredient of the (X)?", "What are the ingredients of (X)?", "What are the ingredients of the (X)?", "What is the ingredient of (X)?", "What is the ingredient of the (X)?", "What was the ingredient of (X)?", "What was the ingredient of the (X)?", "What were the ingredients of (X)?", "What were the ingredients of the (X)?", "which (Y) are the ingredients of (X)?", "which (Y) are the ingredients of the (X)?", "which (Y) is the ingredient of (X)?", "which (Y) is the ingredient of the (X)?", "which (Y) was the ingredient of (X)?", "which (Y) was the ingredient of the (X)?", "which (Y) were the ingredients of (X)?", "which (Y) were the ingredients of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1230",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Food" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the ingredient of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1231",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the ingredient of which (Y)?", "(X) was the ingredient of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1232",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many ingredients does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1233",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of (X)?", "the ingredients of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1234",
    "lexicalEntryUri" : "http://localhost:8080#formofgovernment-of_314",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) form of government.", "List all the countries with form of government of (X).", "What (Y) is (X) 's form of government?", "What (Y) is the form of government of (X)?", "What (Y) is the form of government of the (X)?", "What (Y) was (X) 's form of government?", "What (Y) was the form of government of (X)?", "What (Y) was the form of government of the (X)?", "What is the form of government of (X)?", "What is the form of government of the (X)?", "What was the form of government of (X)?", "What was the form of government of the (X)?", "which (Y) is the form of government of (X)?", "which (Y) is the form of government of the (X)?", "which (Y) was the form of government of (X)?", "which (Y) was the form of government of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1235",
    "lexicalEntryUri" : "http://localhost:8080#formofgovernment-of_314",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the form of government of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1236",
    "lexicalEntryUri" : "http://localhost:8080#formofgovernment-of_314",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the form of government of which (Y)?", "(X) was the form of government of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1237",
    "lexicalEntryUri" : "http://localhost:8080#formofgovernment-of_314",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1238",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) games.", "Give me all games by (X).", "Give me the (X) game.", "Give me the (X) games.", "List all games by (X).", "List all the company with game by (X).", "List all the games by (X).", "show me all games by (X).", "What (Y) is (X) 's game?", "What (Y) is the game by (X)?", "What (Y) is the game by the (X)?", "What (Y) was (X) 's game?", "What (Y) was the game by (X)?", "What (Y) was the game by the (X)?", "which (Y) are the games by (X)?", "which (Y) are the games by the (X)?", "which (Y) is the game by (X)?", "which (Y) is the game by the (X)?", "which (Y) was the game by (X)?", "which (Y) was the game by the (X)?", "which (Y) were the games by (X)?", "which (Y) were the games by the (X)?", "Who are the games by (X)?", "Who are the games by the (X)?", "Who is the game by (X)?", "Who is the game by the (X)?", "Who was the game by (X)?", "Who was the game by the (X)?", "Who were the games by (X)?", "Who were the games by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1239",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "VideoGame" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the game by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1240",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the game by which (Y)?", "(X) was the game by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1241",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many games does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1242",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by (X)?", "the games by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1243",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) games.", "Give me all games by (X).", "Give me the (X) game.", "Give me the (X) games.", "List all games by (X).", "List all the company with game by (X).", "List all the games by (X).", "show me all games by (X).", "What (Y) is (X) 's game?", "What (Y) is the game by (X)?", "What (Y) is the game by the (X)?", "What (Y) was (X) 's game?", "What (Y) was the game by (X)?", "What (Y) was the game by the (X)?", "which (Y) are the games by (X)?", "which (Y) are the games by the (X)?", "which (Y) is the game by (X)?", "which (Y) is the game by the (X)?", "which (Y) was the game by (X)?", "which (Y) was the game by the (X)?", "which (Y) were the games by (X)?", "which (Y) were the games by the (X)?", "Who are the games by (X)?", "Who are the games by the (X)?", "Who is the game by (X)?", "Who is the game by the (X)?", "Who was the game by (X)?", "Who was the game by the (X)?", "Who were the games by (X)?", "Who were the games by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1244",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "VideoGame" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the game by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1245",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the game by which (Y)?", "(X) was the game by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1246",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many games does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1247",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by (X)?", "the games by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1248",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) games.", "Give me all games by (X).", "Give me the (X) game.", "Give me the (X) games.", "List all games by (X).", "List all the company with game by (X).", "List all the games by (X).", "show me all games by (X).", "What (Y) is (X) 's game?", "What (Y) is the game by (X)?", "What (Y) is the game by the (X)?", "What (Y) was (X) 's game?", "What (Y) was the game by (X)?", "What (Y) was the game by the (X)?", "which (Y) are the games by (X)?", "which (Y) are the games by the (X)?", "which (Y) is the game by (X)?", "which (Y) is the game by the (X)?", "which (Y) was the game by (X)?", "which (Y) was the game by the (X)?", "which (Y) were the games by (X)?", "which (Y) were the games by the (X)?", "Who are the games by (X)?", "Who are the games by the (X)?", "Who is the game by (X)?", "Who is the game by the (X)?", "Who was the game by (X)?", "Who was the game by the (X)?", "Who were the games by (X)?", "Who were the games by the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1249",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company", "VideoGame" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the game by (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1250",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the game by which (Y)?", "(X) was the game by which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1251",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many games does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1252",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by (X)?", "the games by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1253",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founding dates.", "Give me all founding dates of (X).", "Give me the (X) founding date.", "Give me the (X) founding dates.", "List all founding dates of (X).", "List all the founding dates of (X).", "show me all founding dates of (X).", "What are the founding dates of (X)?", "What are the founding dates of the (X)?", "What is the founding date of (X)?", "What is the founding date of the (X)?", "What was the founding date of (X)?", "What was the founding date of the (X)?", "What were the founding dates of (X)?", "What were the founding dates of the (X)?", "which (Y) are the founding dates of (X)?", "which (Y) are the founding dates of the (X)?", "which (Y) is the founding date of (X)?", "which (Y) is the founding date of the (X)?", "which (Y) was the founding date of (X)?", "which (Y) was the founding date of the (X)?", "which (Y) were the founding dates of (X)?", "which (Y) were the founding dates of the (X)?", "Who is (X) 's founding date?", "Who is the founding date of (X)?", "Who is the founding date of the (X)?", "Who was (X) 's founding date?", "Who was the founding date of (X)?", "Who was the founding date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1254",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founding date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1255",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founding date of which (Y)?", "(X) was the founding date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1256",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founding dates does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1257",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding date of (X)?", "the founding dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1258",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) founding dates.", "Give me all founding dates of (X).", "Give me the (X) founding date.", "Give me the (X) founding dates.", "List all founding dates of (X).", "List all the founding dates of (X).", "show me all founding dates of (X).", "What are the founding dates of (X)?", "What are the founding dates of the (X)?", "What is the founding date of (X)?", "What is the founding date of the (X)?", "What was the founding date of (X)?", "What was the founding date of the (X)?", "What were the founding dates of (X)?", "What were the founding dates of the (X)?", "which (Y) are the founding dates of (X)?", "which (Y) are the founding dates of the (X)?", "which (Y) is the founding date of (X)?", "which (Y) is the founding date of the (X)?", "which (Y) was the founding date of (X)?", "which (Y) was the founding date of the (X)?", "which (Y) were the founding dates of (X)?", "which (Y) were the founding dates of the (X)?", "Who is (X) 's founding date?", "Who is the founding date of (X)?", "Who is the founding date of the (X)?", "Who was (X) 's founding date?", "Who was the founding date of (X)?", "Who was the founding date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1259",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the founding date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1260",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the founding date of which (Y)?", "(X) was the founding date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1261",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many founding dates does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1262",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding date of (X)?", "the founding dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1263",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of_353",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) wine productions.", "Give me all wine productions of (X).", "Give me the (X) wine production.", "Give me the (X) wine productions.", "List all the locations with wine production of (X).", "List all the wine productions of (X).", "List all wine productions of (X).", "show me all wine productions of (X).", "What are the wine productions of (X)?", "What are the wine productions of the (X)?", "What is the wine production of (X)?", "What is the wine production of the (X)?", "What was the wine production of (X)?", "What was the wine production of the (X)?", "What were the wine productions of (X)?", "What were the wine productions of the (X)?", "which (Y) are the wine productions of (X)?", "which (Y) are the wine productions of the (X)?", "which (Y) is the wine production of (X)?", "which (Y) is the wine production of the (X)?", "which (Y) was the wine production of (X)?", "which (Y) was the wine production of the (X)?", "which (Y) were the wine productions of (X)?", "which (Y) were the wine productions of the (X)?", "Who is (X) 's wine production?", "Who is the wine production of (X)?", "Who is the wine production of the (X)?", "Who was (X) 's wine production?", "Who was the wine production of (X)?", "Who was the wine production of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1264",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of_353",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the wine production of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1265",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of_353",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the wine production of which (Y)?", "(X) was the wine production of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1266",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of_353",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many wine productions does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1267",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of_353",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine production of (X)?", "the wine productions of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1268",
    "lexicalEntryUri" : "http://localhost:8080#governor-of_229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) governors.", "Give me all governors of (X).", "Give me the (X) governor.", "Give me the (X) governors.", "List all governors of (X).", "List all the governors of (X).", "List all the persons with governor of (X).", "show me all governors of (X).", "which (Y) are the governors of (X)?", "which (Y) are the governors of the (X)?", "which (Y) is the governor of (X)?", "which (Y) is the governor of the (X)?", "which (Y) was the governor of (X)?", "which (Y) was the governor of the (X)?", "which (Y) were the governors of (X)?", "which (Y) were the governors of the (X)?", "Who are the governors of (X)?", "Who are the governors of the (X)?", "Who is (X) 's governor?", "Who is the governor of (X)?", "Who is the governor of the (X)?", "Who was (X) 's governor?", "Who was the governor of (X)?", "Who was the governor of the (X)?", "Who were the governors of (X)?", "Who were the governors of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1269",
    "lexicalEntryUri" : "http://localhost:8080#governor-of_229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the governor of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1270",
    "lexicalEntryUri" : "http://localhost:8080#governor-of_229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the governor of which (Y)?", "(X) was the governor of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1271",
    "lexicalEntryUri" : "http://localhost:8080#governor-of_229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many governors does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1272",
    "lexicalEntryUri" : "http://localhost:8080#governor-of_229",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of (X)?", "the governors of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1273",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (Y) is (X) 's president?", "What (Y) is the president of (X)?", "What (Y) is the president of the (X)?", "What (Y) was (X) 's president?", "What (Y) was the president of (X)?", "What (Y) was the president of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1274",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1275",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1276",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1277",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1278",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) presidents.", "Give me all presidents of (X).", "Give me the (X) president.", "Give me the (X) presidents.", "List all presidents of (X).", "List all the persons with president of (X).", "List all the presidents of (X).", "show me all presidents of (X).", "What (Y) is (X) 's president?", "What (Y) is the president of (X)?", "What (Y) is the president of the (X)?", "What (Y) was (X) 's president?", "What (Y) was the president of (X)?", "What (Y) was the president of the (X)?", "which (Y) are the presidents of (X)?", "which (Y) are the presidents of the (X)?", "which (Y) is the president of (X)?", "which (Y) is the president of the (X)?", "which (Y) was the president of (X)?", "which (Y) was the president of the (X)?", "which (Y) were the presidents of (X)?", "which (Y) were the presidents of the (X)?", "Who are the presidents of (X)?", "Who are the presidents of the (X)?", "Who is the president of (X)?", "Who is the president of the (X)?", "Who was the president of (X)?", "Who was the president of the (X)?", "Who were the presidents of (X)?", "Who were the presidents of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1279",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the president of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1280",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the president of which (Y)?", "(X) was the president of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1281",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many presidents does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1282",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of (X)?", "the presidents of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1283",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) net incomes.", "Give me all net incomes of (X).", "Give me the (X) net income.", "Give me the (X) net incomes.", "List all net incomes of (X).", "List all the net incomes of (X).", "show me all net incomes of (X).", "What are the net incomes of (X)?", "What are the net incomes of the (X)?", "What is the net income of (X)?", "What is the net income of the (X)?", "What was the net income of (X)?", "What was the net income of the (X)?", "What were the net incomes of (X)?", "What were the net incomes of the (X)?", "which (Y) are the net incomes of (X)?", "which (Y) are the net incomes of the (X)?", "which (Y) is the net income of (X)?", "which (Y) is the net income of the (X)?", "which (Y) was the net income of (X)?", "which (Y) was the net income of the (X)?", "which (Y) were the net incomes of (X)?", "which (Y) were the net incomes of the (X)?", "Who is (X) 's net income?", "Who is the net income of (X)?", "Who is the net income of the (X)?", "Who was (X) 's net income?", "Who was the net income of (X)?", "Who was the net income of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1284",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the net income of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1285",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the net income of which (Y)?", "(X) was the net income of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1286",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many net incomes does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1287",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of (X)?", "the net incomes of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1288",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) net incomes.", "Give me all net incomes of (X).", "Give me the (X) net income.", "Give me the (X) net incomes.", "List all net incomes of (X).", "List all the net incomes of (X).", "show me all net incomes of (X).", "What are the net incomes of (X)?", "What are the net incomes of the (X)?", "What is the net income of (X)?", "What is the net income of the (X)?", "What was the net income of (X)?", "What was the net income of the (X)?", "What were the net incomes of (X)?", "What were the net incomes of the (X)?", "which (Y) are the net incomes of (X)?", "which (Y) are the net incomes of the (X)?", "which (Y) is the net income of (X)?", "which (Y) is the net income of the (X)?", "which (Y) was the net income of (X)?", "which (Y) was the net income of the (X)?", "which (Y) were the net incomes of (X)?", "which (Y) were the net incomes of the (X)?", "Who is (X) 's net income?", "Who is the net income of (X)?", "Who is the net income of the (X)?", "Who was (X) 's net income?", "Who was the net income of (X)?", "Who was the net income of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1289",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the net income of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1290",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the net income of which (Y)?", "(X) was the net income of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1291",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many net incomes does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1292",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of (X)?", "the net incomes of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1293",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) net incomes.", "Give me all net incomes of (X).", "Give me the (X) net income.", "Give me the (X) net incomes.", "List all net incomes of (X).", "List all the net incomes of (X).", "show me all net incomes of (X).", "What are the net incomes of (X)?", "What are the net incomes of the (X)?", "What is the net income of (X)?", "What is the net income of the (X)?", "What was the net income of (X)?", "What was the net income of the (X)?", "What were the net incomes of (X)?", "What were the net incomes of the (X)?", "which (Y) are the net incomes of (X)?", "which (Y) are the net incomes of the (X)?", "which (Y) is the net income of (X)?", "which (Y) is the net income of the (X)?", "which (Y) was the net income of (X)?", "which (Y) was the net income of the (X)?", "which (Y) were the net incomes of (X)?", "which (Y) were the net incomes of the (X)?", "Who is (X) 's net income?", "Who is the net income of (X)?", "Who is the net income of the (X)?", "Who was (X) 's net income?", "Who was the net income of (X)?", "Who was the net income of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1294",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the net income of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1295",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the net income of which (Y)?", "(X) was the net income of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1296",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many net incomes does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1297",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of (X)?", "the net incomes of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1298",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) net incomes.", "Give me all net incomes of (X).", "Give me the (X) net income.", "Give me the (X) net incomes.", "List all net incomes of (X).", "List all the net incomes of (X).", "show me all net incomes of (X).", "What are the net incomes of (X)?", "What are the net incomes of the (X)?", "What is the net income of (X)?", "What is the net income of the (X)?", "What was the net income of (X)?", "What was the net income of the (X)?", "What were the net incomes of (X)?", "What were the net incomes of the (X)?", "which (Y) are the net incomes of (X)?", "which (Y) are the net incomes of the (X)?", "which (Y) is the net income of (X)?", "which (Y) is the net income of the (X)?", "which (Y) was the net income of (X)?", "which (Y) was the net income of the (X)?", "which (Y) were the net incomes of (X)?", "which (Y) were the net incomes of the (X)?", "Who is (X) 's net income?", "Who is the net income of (X)?", "Who is the net income of the (X)?", "Who was (X) 's net income?", "Who was the net income of (X)?", "Who was the net income of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1299",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the net income of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1300",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the net income of which (Y)?", "(X) was the net income of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1301",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many net incomes does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1302",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of (X)?", "the net incomes of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1303",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) birth place.", "List all the countries with birth place of (X).", "What is the birth place of (X)?", "What is the birth place of the (X)?", "What was the birth place of (X)?", "What was the birth place of the (X)?", "which (Y) is the birth place of (X)?", "which (Y) is the birth place of the (X)?", "which (Y) was the birth place of (X)?", "which (Y) was the birth place of the (X)?", "Who is (X) 's birth place?", "Who is the birth place of (X)?", "Who is the birth place of the (X)?", "Who was (X) 's birth place?", "Who was the birth place of (X)?", "Who was the birth place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1304",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1305",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth place of which (Y)?", "(X) was the birth place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1306",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1307",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) birth place.", "List all the countries with birth place of (X).", "What is the birth place of (X)?", "What is the birth place of the (X)?", "What was the birth place of (X)?", "What was the birth place of the (X)?", "which (Y) is the birth place of (X)?", "which (Y) is the birth place of the (X)?", "which (Y) was the birth place of (X)?", "which (Y) was the birth place of the (X)?", "Who is (X) 's birth place?", "Who is the birth place of (X)?", "Who is the birth place of the (X)?", "Who was (X) 's birth place?", "Who was the birth place of (X)?", "Who was the birth place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1308",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1309",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth place of which (Y)?", "(X) was the birth place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1310",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1311",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) birth place.", "List all the countries with birth place of (X).", "What is the birth place of (X)?", "What is the birth place of the (X)?", "What was the birth place of (X)?", "What was the birth place of the (X)?", "which (Y) is the birth place of (X)?", "which (Y) is the birth place of the (X)?", "which (Y) was the birth place of (X)?", "which (Y) was the birth place of the (X)?", "Who is (X) 's birth place?", "Who is the birth place of (X)?", "Who is the birth place of the (X)?", "Who was (X) 's birth place?", "Who was the birth place of (X)?", "Who was the birth place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1312",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1313",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth place of which (Y)?", "(X) was the birth place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1314",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1315",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) birth place.", "List all the countries with birth place of (X).", "What is the birth place of (X)?", "What is the birth place of the (X)?", "What was the birth place of (X)?", "What was the birth place of the (X)?", "which (Y) is the birth place of (X)?", "which (Y) is the birth place of the (X)?", "which (Y) was the birth place of (X)?", "which (Y) was the birth place of the (X)?", "Who is (X) 's birth place?", "Who is the birth place of (X)?", "Who is the birth place of the (X)?", "Who was (X) 's birth place?", "Who was the birth place of (X)?", "Who was the birth place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1316",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1317",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth place of which (Y)?", "(X) was the birth place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1318",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1319",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) birth place.", "List all the countries with birth place of (X).", "What is the birth place of (X)?", "What is the birth place of the (X)?", "What was the birth place of (X)?", "What was the birth place of the (X)?", "which (Y) is the birth place of (X)?", "which (Y) is the birth place of the (X)?", "which (Y) was the birth place of (X)?", "which (Y) was the birth place of the (X)?", "Who is (X) 's birth place?", "Who is the birth place of (X)?", "Who is the birth place of the (X)?", "Who was (X) 's birth place?", "Who was the birth place of (X)?", "Who was the birth place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1320",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth place of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1321",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth place of which (Y)?", "(X) was the birth place of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1322",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1323",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) organizations.", "Give me all organizations of (X).", "Give me the (X) organization.", "Give me the (X) organizations.", "List all organizations of (X).", "List all the foods with organization of (X).", "List all the organizations of (X).", "show me all organizations of (X).", "What are the organizations of (X)?", "What are the organizations of the (X)?", "What is the organization of (X)?", "What is the organization of the (X)?", "What was the organization of (X)?", "What was the organization of the (X)?", "What were the organizations of (X)?", "What were the organizations of the (X)?", "which (Y) are the organizations of (X)?", "which (Y) are the organizations of the (X)?", "which (Y) is the organization of (X)?", "which (Y) is the organization of the (X)?", "which (Y) was the organization of (X)?", "which (Y) was the organization of the (X)?", "which (Y) were the organizations of (X)?", "which (Y) were the organizations of the (X)?", "Who is (X) 's organization?", "Who is the organization of (X)?", "Who is the organization of the (X)?", "Who was (X) 's organization?", "Who was the organization of (X)?", "Who was the organization of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1324",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the organization of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1325",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the organization of which (Y)?", "(X) was the organization of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1326",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many organizations does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1327",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the organization of (X)?", "the organizations of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1328",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) organizations.", "Give me all organizations of (X).", "Give me the (X) organization.", "Give me the (X) organizations.", "List all organizations of (X).", "List all the foods with organization of (X).", "List all the organizations of (X).", "show me all organizations of (X).", "What are the organizations of (X)?", "What are the organizations of the (X)?", "What is the organization of (X)?", "What is the organization of the (X)?", "What was the organization of (X)?", "What was the organization of the (X)?", "What were the organizations of (X)?", "What were the organizations of the (X)?", "which (Y) are the organizations of (X)?", "which (Y) are the organizations of the (X)?", "which (Y) is the organization of (X)?", "which (Y) is the organization of the (X)?", "which (Y) was the organization of (X)?", "which (Y) was the organization of the (X)?", "which (Y) were the organizations of (X)?", "which (Y) were the organizations of the (X)?", "Who is (X) 's organization?", "Who is the organization of (X)?", "Who is the organization of the (X)?", "Who was (X) 's organization?", "Who was the organization of (X)?", "Who was the organization of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1329",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the organization of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1330",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the organization of which (Y)?", "(X) was the organization of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1331",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many organizations does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1332",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the organization of (X)?", "the organizations of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1333",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of_361",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) diameters.", "Give me all diameters of (X).", "Give me the (X) diameter.", "Give me the (X) diameters.", "List all diameters of (X).", "List all the diameters of (X).", "show me all diameters of (X).", "What (Y) is (X) 's diameter?", "What (Y) is the diameter of (X)?", "What (Y) is the diameter of the (X)?", "What (Y) was (X) 's diameter?", "What (Y) was the diameter of (X)?", "What (Y) was the diameter of the (X)?", "What are the diameters of (X)?", "What are the diameters of the (X)?", "What is the diameter of (X)?", "What is the diameter of the (X)?", "What was the diameter of (X)?", "What was the diameter of the (X)?", "What were the diameters of (X)?", "What were the diameters of the (X)?", "which (Y) are the diameters of (X)?", "which (Y) are the diameters of the (X)?", "which (Y) is the diameter of (X)?", "which (Y) is the diameter of the (X)?", "which (Y) was the diameter of (X)?", "which (Y) was the diameter of the (X)?", "which (Y) were the diameters of (X)?", "which (Y) were the diameters of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/diameter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1334",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of_361",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number", "Thing" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the diameter of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/diameter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1335",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of_361",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the diameter of which (Y)?", "(X) was the diameter of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/diameter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1336",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of_361",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many diameters does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/diameter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1337",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of_361",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the diameter of (X)?", "the diameters of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/diameter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1338",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) headquarter.", "List all the cities with headquarter of (X).", "What (Y) is (X) 's headquarter?", "What (Y) is the headquarter of (X)?", "What (Y) is the headquarter of the (X)?", "What (Y) was (X) 's headquarter?", "What (Y) was the headquarter of (X)?", "What (Y) was the headquarter of the (X)?", "What is the headquarter of (X)?", "What is the headquarter of the (X)?", "What was the headquarter of (X)?", "What was the headquarter of the (X)?", "which (Y) is the headquarter of (X)?", "which (Y) is the headquarter of the (X)?", "which (Y) was the headquarter of (X)?", "which (Y) was the headquarter of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1339",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Building" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the headquarter of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1340",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the headquarter of which (Y)?", "(X) was the headquarter of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1341",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1342",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) headquarter.", "List all the populated places with headquarter of (X).", "What is the headquarter of (X)?", "What is the headquarter of the (X)?", "What was the headquarter of (X)?", "What was the headquarter of the (X)?", "which (Y) is the headquarter of (X)?", "which (Y) is the headquarter of the (X)?", "which (Y) was the headquarter of (X)?", "which (Y) was the headquarter of the (X)?", "Who is (X) 's headquarter?", "Who is the headquarter of (X)?", "Who is the headquarter of the (X)?", "Who was (X) 's headquarter?", "Who was the headquarter of (X)?", "Who was the headquarter of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/headquarter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1343",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace", "Organisation" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the headquarter of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/headquarter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1344",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the headquarter of which (Y)?", "(X) was the headquarter of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/headquarter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1345",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/headquarter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1346",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) headquarter.", "List all the places with headquarter of (X).", "What (Y) is (X) 's headquarter?", "What (Y) is the headquarter of (X)?", "What (Y) is the headquarter of the (X)?", "What (Y) was (X) 's headquarter?", "What (Y) was the headquarter of (X)?", "What (Y) was the headquarter of the (X)?", "What is the headquarter of (X)?", "What is the headquarter of the (X)?", "What was the headquarter of (X)?", "What was the headquarter of the (X)?", "which (Y) is the headquarter of (X)?", "which (Y) is the headquarter of the (X)?", "which (Y) was the headquarter of (X)?", "which (Y) was the headquarter of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1347",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the headquarter of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1348",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the headquarter of which (Y)?", "(X) was the headquarter of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1349",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1350",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) headquarter.", "List all the places with headquarter of (X).", "What (Y) is (X) 's headquarter?", "What (Y) is the headquarter of (X)?", "What (Y) is the headquarter of the (X)?", "What (Y) was (X) 's headquarter?", "What (Y) was the headquarter of (X)?", "What (Y) was the headquarter of the (X)?", "What is the headquarter of (X)?", "What is the headquarter of the (X)?", "What was the headquarter of (X)?", "What was the headquarter of the (X)?", "which (Y) is the headquarter of (X)?", "which (Y) is the headquarter of the (X)?", "which (Y) was the headquarter of (X)?", "which (Y) was the headquarter of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1351",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the headquarter of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1352",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the headquarter of which (Y)?", "(X) was the headquarter of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1353",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1354",
    "lexicalEntryUri" : "http://localhost:8080#closingdate-of_348",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) closing Dates.", "Give me all closing Dates of (X).", "Give me the (X) closing Date.", "Give me the (X) closing Dates.", "List all closing Dates of (X).", "List all the closing Dates of (X).", "show me all closing Dates of (X).", "What are the closing Dates of (X)?", "What are the closing Dates of the (X)?", "What is the closing Date of (X)?", "What is the closing Date of the (X)?", "What was the closing Date of (X)?", "What was the closing Date of the (X)?", "What were the closing Dates of (X)?", "What were the closing Dates of the (X)?", "which (Y) are the closing Dates of (X)?", "which (Y) are the closing Dates of the (X)?", "which (Y) is the closing Date of (X)?", "which (Y) is the closing Date of the (X)?", "which (Y) was the closing Date of (X)?", "which (Y) was the closing Date of the (X)?", "which (Y) were the closing Dates of (X)?", "which (Y) were the closing Dates of the (X)?", "Who is (X) 's closing Date?", "Who is the closing Date of (X)?", "Who is the closing Date of the (X)?", "Who was (X) 's closing Date?", "Who was the closing Date of (X)?", "Who was the closing Date of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/closingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1355",
    "lexicalEntryUri" : "http://localhost:8080#closingdate-of_348",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the closing Date of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/closingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1356",
    "lexicalEntryUri" : "http://localhost:8080#closingdate-of_348",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the closing Date of which (Y)?", "(X) was the closing Date of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/closingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1357",
    "lexicalEntryUri" : "http://localhost:8080#closingdate-of_348",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many closing Dates does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/closingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1358",
    "lexicalEntryUri" : "http://localhost:8080#closingdate-of_348",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the closing Date of (X)?", "the closing Dates of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/closingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1359",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) movies.", "Give me all movies with (X).", "Give me the (X) movie.", "Give me the (X) movies.", "List all movies with (X).", "List all the actors with movie with (X).", "List all the movies with (X).", "show me all movies with (X).", "which (Y) are the movies with (X)?", "which (Y) are the movies with the (X)?", "which (Y) is the movie with (X)?", "which (Y) is the movie with the (X)?", "which (Y) was the movie with (X)?", "which (Y) was the movie with the (X)?", "which (Y) were the movies with (X)?", "which (Y) were the movies with the (X)?", "Who are the movies with (X)?", "Who are the movies with the (X)?", "Who is (X) 's movie?", "Who is the movie with (X)?", "Who is the movie with the (X)?", "Who was (X) 's movie?", "Who was the movie with (X)?", "Who was the movie with the (X)?", "Who were the movies with (X)?", "Who were the movies with the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1360",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the movie with (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1361",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Actor" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the movie with which (Y)?", "(X) was the movie with which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1362",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many movies does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1363",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the movie with (X)?", "the movies with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1364",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) movies.", "Give me all movies with (X).", "Give me the (X) movie.", "Give me the (X) movies.", "List all movies with (X).", "List all the actors with movie with (X).", "List all the movies with (X).", "show me all movies with (X).", "which (Y) are the movies with (X)?", "which (Y) are the movies with the (X)?", "which (Y) is the movie with (X)?", "which (Y) is the movie with the (X)?", "which (Y) was the movie with (X)?", "which (Y) was the movie with the (X)?", "which (Y) were the movies with (X)?", "which (Y) were the movies with the (X)?", "Who are the movies with (X)?", "Who are the movies with the (X)?", "Who is (X) 's movie?", "Who is the movie with (X)?", "Who is the movie with the (X)?", "Who was (X) 's movie?", "Who was the movie with (X)?", "Who was the movie with the (X)?", "Who were the movies with (X)?", "Who were the movies with the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1365",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the movie with (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1366",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Actor" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the movie with which (Y)?", "(X) was the movie with which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1367",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many movies does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1368",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the movie with (X)?", "the movies with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1369",
    "lexicalEntryUri" : "http://localhost:8080#alterego-of_357",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ComicsCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) alter ego.", "List all the persons with alter ego of (X).", "What (Y) is (X) 's alter ego?", "What (Y) is the alter ego of (X)?", "What (Y) is the alter ego of the (X)?", "What (Y) was (X) 's alter ego?", "What (Y) was the alter ego of (X)?", "What (Y) was the alter ego of the (X)?", "which (Y) is the alter ego of (X)?", "which (Y) is the alter ego of the (X)?", "which (Y) was the alter ego of (X)?", "which (Y) was the alter ego of the (X)?", "Who is the alter ego of (X)?", "Who is the alter ego of the (X)?", "Who was the alter ego of (X)?", "Who was the alter ego of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/alterEgo> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1370",
    "lexicalEntryUri" : "http://localhost:8080#alterego-of_357",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "ComicsCharacter" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the alter ego of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/alterEgo> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1371",
    "lexicalEntryUri" : "http://localhost:8080#alterego-of_357",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ComicsCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the alter ego of which (Y)?", "(X) was the alter ego of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/alterEgo> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1372",
    "lexicalEntryUri" : "http://localhost:8080#alterego-of_357",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ComicsCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alter ego of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/alterEgo> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1373",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) creators.", "Give me all creators of (X).", "Give me the (X) creator.", "Give me the (X) creators.", "List all creators of (X).", "List all the creators of (X).", "List all the organizations with creator of (X).", "show me all creators of (X).", "which (Y) are the creators of (X)?", "which (Y) are the creators of the (X)?", "which (Y) is the creator of (X)?", "which (Y) is the creator of the (X)?", "which (Y) was the creator of (X)?", "which (Y) was the creator of the (X)?", "which (Y) were the creators of (X)?", "which (Y) were the creators of the (X)?", "Who are the creators of (X)?", "Who are the creators of the (X)?", "Who is (X) 's creator?", "Who is the creator of (X)?", "Who is the creator of the (X)?", "Who was (X) 's creator?", "Who was the creator of (X)?", "Who was the creator of the (X)?", "Who were the creators of (X)?", "Who were the creators of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1374",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the creator of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1375",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the creator of which (Y)?", "(X) was the creator of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1376",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many creators does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1377",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of (X)?", "the creators of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1378",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) creators.", "Give me all creators of (X).", "Give me the (X) creator.", "Give me the (X) creators.", "List all creators of (X).", "List all the creators of (X).", "List all the organizations with creator of (X).", "show me all creators of (X).", "which (Y) are the creators of (X)?", "which (Y) are the creators of the (X)?", "which (Y) is the creator of (X)?", "which (Y) is the creator of the (X)?", "which (Y) was the creator of (X)?", "which (Y) was the creator of the (X)?", "which (Y) were the creators of (X)?", "which (Y) were the creators of the (X)?", "Who are the creators of (X)?", "Who are the creators of the (X)?", "Who is (X) 's creator?", "Who is the creator of (X)?", "Who is the creator of the (X)?", "Who was (X) 's creator?", "Who was the creator of (X)?", "Who was the creator of the (X)?", "Who were the creators of (X)?", "Who were the creators of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1379",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation", "Company" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the creator of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1380",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the creator of which (Y)?", "(X) was the creator of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1381",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many creators does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1382",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of (X)?", "the creators of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1383",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) architects.", "Give me all architects of (X).", "Give me the (X) architect.", "Give me the (X) architects.", "List all architects of (X).", "List all the architects of (X).", "List all the persons with architect of (X).", "show me all architects of (X).", "What (Y) is (X) 's architect?", "What (Y) is the architect of (X)?", "What (Y) is the architect of the (X)?", "What (Y) was (X) 's architect?", "What (Y) was the architect of (X)?", "What (Y) was the architect of the (X)?", "which (Y) are the architects of (X)?", "which (Y) are the architects of the (X)?", "which (Y) is the architect of (X)?", "which (Y) is the architect of the (X)?", "which (Y) was the architect of (X)?", "which (Y) was the architect of the (X)?", "which (Y) were the architects of (X)?", "which (Y) were the architects of the (X)?", "Who are the architects of (X)?", "Who are the architects of the (X)?", "Who is the architect of (X)?", "Who is the architect of the (X)?", "Who was the architect of (X)?", "Who was the architect of the (X)?", "Who were the architects of (X)?", "Who were the architects of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1384",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "ArchitecturalStructure" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the architect of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1385",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the architect of which (Y)?", "(X) was the architect of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1386",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many architects does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1387",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the architect of (X)?", "the architects of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1388",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) architects.", "Give me all architects of (X).", "Give me the (X) architect.", "Give me the (X) architects.", "List all architects of (X).", "List all the architects of (X).", "List all the persons with architect of (X).", "show me all architects of (X).", "What (Y) is (X) 's architect?", "What (Y) is the architect of (X)?", "What (Y) is the architect of the (X)?", "What (Y) was (X) 's architect?", "What (Y) was the architect of (X)?", "What (Y) was the architect of the (X)?", "which (Y) are the architects of (X)?", "which (Y) are the architects of the (X)?", "which (Y) is the architect of (X)?", "which (Y) is the architect of the (X)?", "which (Y) was the architect of (X)?", "which (Y) was the architect of the (X)?", "which (Y) were the architects of (X)?", "which (Y) were the architects of the (X)?", "Who are the architects of (X)?", "Who are the architects of the (X)?", "Who is the architect of (X)?", "Who is the architect of the (X)?", "Who was the architect of (X)?", "Who was the architect of the (X)?", "Who were the architects of (X)?", "Who were the architects of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1389",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "ArchitecturalStructure" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the architect of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1390",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the architect of which (Y)?", "(X) was the architect of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1391",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many architects does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1392",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the architect of (X)?", "the architects of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1393",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_in_370",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) largest city.", "List all the cities with largest city in (X).", "What (Y) is (X) 's largest city?", "What (Y) is the largest city in (X)?", "What (Y) is the largest city in the (X)?", "What (Y) was (X) 's largest city?", "What (Y) was the largest city in (X)?", "What (Y) was the largest city in the (X)?", "What is the largest city in (X)?", "What is the largest city in the (X)?", "What was the largest city in (X)?", "What was the largest city in the (X)?", "which (Y) is the largest city in (X)?", "which (Y) is the largest city in the (X)?", "which (Y) was the largest city in (X)?", "which (Y) was the largest city in the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1394",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_in_370",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Country" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the largest city in (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1395",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_in_370",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the largest city in which (Y)?", "(X) was the largest city in which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1396",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_in_370",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1397",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) birth names.", "Give me all birth names of (X).", "Give me the (X) birth name.", "Give me the (X) birth names.", "List all birth names of (X).", "List all the birth names of (X).", "show me all birth names of (X).", "What are the birth names of (X)?", "What are the birth names of the (X)?", "What is the birth name of (X)?", "What is the birth name of the (X)?", "What was the birth name of (X)?", "What was the birth name of the (X)?", "What were the birth names of (X)?", "What were the birth names of the (X)?", "which (Y) are the birth names of (X)?", "which (Y) are the birth names of the (X)?", "which (Y) is the birth name of (X)?", "which (Y) is the birth name of the (X)?", "which (Y) was the birth name of (X)?", "which (Y) was the birth name of the (X)?", "which (Y) were the birth names of (X)?", "which (Y) were the birth names of the (X)?", "Who is (X) 's birth name?", "Who is the birth name of (X)?", "Who is the birth name of the (X)?", "Who was (X) 's birth name?", "Who was the birth name of (X)?", "Who was the birth name of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1398",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth name of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1399",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth name of which (Y)?", "(X) was the birth name of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1400",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many birth names does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1401",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth name of (X)?", "the birth names of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1402",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) birth names.", "Give me all birth names of (X).", "Give me the (X) birth name.", "Give me the (X) birth names.", "List all birth names of (X).", "List all the birth names of (X).", "show me all birth names of (X).", "What are the birth names of (X)?", "What are the birth names of the (X)?", "What is the birth name of (X)?", "What is the birth name of the (X)?", "What was the birth name of (X)?", "What was the birth name of the (X)?", "What were the birth names of (X)?", "What were the birth names of the (X)?", "which (Y) are the birth names of (X)?", "which (Y) are the birth names of the (X)?", "which (Y) is the birth name of (X)?", "which (Y) is the birth name of the (X)?", "which (Y) was the birth name of (X)?", "which (Y) was the birth name of the (X)?", "which (Y) were the birth names of (X)?", "which (Y) were the birth names of the (X)?", "Who is (X) 's birth name?", "Who is the birth name of (X)?", "Who is the birth name of the (X)?", "Who was (X) 's birth name?", "Who was the birth name of (X)?", "Who was the birth name of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1403",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth name of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1404",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth name of which (Y)?", "(X) was the birth name of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1405",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many birth names does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1406",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth name of (X)?", "the birth names of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1407",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) birth names.", "Give me all birth names of (X).", "Give me the (X) birth name.", "Give me the (X) birth names.", "List all birth names of (X).", "List all the birth names of (X).", "show me all birth names of (X).", "What are the birth names of (X)?", "What are the birth names of the (X)?", "What is the birth name of (X)?", "What is the birth name of the (X)?", "What was the birth name of (X)?", "What was the birth name of the (X)?", "What were the birth names of (X)?", "What were the birth names of the (X)?", "which (Y) are the birth names of (X)?", "which (Y) are the birth names of the (X)?", "which (Y) is the birth name of (X)?", "which (Y) is the birth name of the (X)?", "which (Y) was the birth name of (X)?", "which (Y) was the birth name of the (X)?", "which (Y) were the birth names of (X)?", "which (Y) were the birth names of the (X)?", "Who is (X) 's birth name?", "Who is the birth name of (X)?", "Who is the birth name of the (X)?", "Who was (X) 's birth name?", "Who was the birth name of (X)?", "Who was the birth name of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1408",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth name of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1409",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth name of which (Y)?", "(X) was the birth name of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1410",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many birth names does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1411",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth name of (X)?", "the birth names of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1412",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) birth names.", "Give me all birth names of (X).", "Give me the (X) birth name.", "Give me the (X) birth names.", "List all birth names of (X).", "List all the birth names of (X).", "show me all birth names of (X).", "What are the birth names of (X)?", "What are the birth names of the (X)?", "What is the birth name of (X)?", "What is the birth name of the (X)?", "What was the birth name of (X)?", "What was the birth name of the (X)?", "What were the birth names of (X)?", "What were the birth names of the (X)?", "which (Y) are the birth names of (X)?", "which (Y) are the birth names of the (X)?", "which (Y) is the birth name of (X)?", "which (Y) is the birth name of the (X)?", "which (Y) was the birth name of (X)?", "which (Y) was the birth name of the (X)?", "which (Y) were the birth names of (X)?", "which (Y) were the birth names of the (X)?", "Who is (X) 's birth name?", "Who is the birth name of (X)?", "Who is the birth name of the (X)?", "Who was (X) 's birth name?", "Who was the birth name of (X)?", "Who was the birth name of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1413",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing", "Person" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the birth name of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1414",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the birth name of which (Y)?", "(X) was the birth name of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1415",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many birth names does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1416",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth name of (X)?", "the birth names of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1417",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) kings.", "Give me all kings of (X).", "Give me the (X) king.", "Give me the (X) kings.", "List all kings of (X).", "List all the kings of (X).", "List all the persons with king of (X).", "show me all kings of (X).", "What (Y) is (X) 's king?", "What (Y) is the king of (X)?", "What (Y) is the king of the (X)?", "What (Y) was (X) 's king?", "What (Y) was the king of (X)?", "What (Y) was the king of the (X)?", "which (Y) are the kings of (X)?", "which (Y) are the kings of the (X)?", "which (Y) is the king of (X)?", "which (Y) is the king of the (X)?", "which (Y) was the king of (X)?", "which (Y) was the king of the (X)?", "which (Y) were the kings of (X)?", "which (Y) were the kings of the (X)?", "Who are the kings of (X)?", "Who are the kings of the (X)?", "Who is the king of (X)?", "Who is the king of the (X)?", "Who was the king of (X)?", "Who was the king of the (X)?", "Who were the kings of (X)?", "Who were the kings of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1418",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Legislature" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the king of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1419",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the king of which (Y)?", "(X) was the king of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1420",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many kings does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1421",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of (X)?", "the kings of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1422",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) kings.", "Give me all kings of (X).", "Give me the (X) king.", "Give me the (X) kings.", "List all kings of (X).", "List all the cities with king of (X).", "List all the kings of (X).", "show me all kings of (X).", "What are the kings of (X)?", "What are the kings of the (X)?", "What is the king of (X)?", "What is the king of the (X)?", "What was the king of (X)?", "What was the king of the (X)?", "What were the kings of (X)?", "What were the kings of the (X)?", "which (Y) are the kings of (X)?", "which (Y) are the kings of the (X)?", "which (Y) is the king of (X)?", "which (Y) is the king of the (X)?", "which (Y) was the king of (X)?", "which (Y) was the king of the (X)?", "which (Y) were the kings of (X)?", "which (Y) were the kings of the (X)?", "Who is (X) 's king?", "Who is the king of (X)?", "Who is the king of the (X)?", "Who was (X) 's king?", "Who was the king of (X)?", "Who was the king of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1423",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the king of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1424",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the king of which (Y)?", "(X) was the king of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1425",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many kings does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1426",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of (X)?", "the kings of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1427",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) kings.", "Give me all kings of (X).", "Give me the (X) king.", "Give me the (X) kings.", "List all kings of (X).", "List all the kings of (X).", "List all the persons with king of (X).", "show me all kings of (X).", "What (Y) is (X) 's king?", "What (Y) is the king of (X)?", "What (Y) is the king of the (X)?", "What (Y) was (X) 's king?", "What (Y) was the king of (X)?", "What (Y) was the king of the (X)?", "which (Y) are the kings of (X)?", "which (Y) are the kings of the (X)?", "which (Y) is the king of (X)?", "which (Y) is the king of the (X)?", "which (Y) was the king of (X)?", "which (Y) was the king of the (X)?", "which (Y) were the kings of (X)?", "which (Y) were the kings of the (X)?", "Who are the kings of (X)?", "Who are the kings of the (X)?", "Who is the king of (X)?", "Who is the king of the (X)?", "Who was the king of (X)?", "Who was the king of the (X)?", "Who were the kings of (X)?", "Who were the kings of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1428",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the king of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1429",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the king of which (Y)?", "(X) was the king of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1430",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many kings does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1431",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of (X)?", "the kings of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1432",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) kings.", "Give me all kings of (X).", "Give me the (X) king.", "Give me the (X) kings.", "List all kings of (X).", "List all the cities with king of (X).", "List all the kings of (X).", "show me all kings of (X).", "What are the kings of (X)?", "What are the kings of the (X)?", "What is the king of (X)?", "What is the king of the (X)?", "What was the king of (X)?", "What was the king of the (X)?", "What were the kings of (X)?", "What were the kings of the (X)?", "which (Y) are the kings of (X)?", "which (Y) are the kings of the (X)?", "which (Y) is the king of (X)?", "which (Y) is the king of the (X)?", "which (Y) was the king of (X)?", "which (Y) was the king of the (X)?", "which (Y) were the kings of (X)?", "which (Y) were the kings of the (X)?", "Who is (X) 's king?", "Who is the king of (X)?", "Who is the king of the (X)?", "Who was (X) 's king?", "Who was the king of (X)?", "Who was the king of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1433",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City", "Agent" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the king of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1434",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the king of which (Y)?", "(X) was the king of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1435",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many kings does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1436",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of (X)?", "the kings of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1437",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) kings.", "Give me all kings of (X).", "Give me the (X) king.", "Give me the (X) kings.", "List all kings of (X).", "List all the kings of (X).", "List all the persons with king of (X).", "show me all kings of (X).", "What (Y) is (X) 's king?", "What (Y) is the king of (X)?", "What (Y) is the king of the (X)?", "What (Y) was (X) 's king?", "What (Y) was the king of (X)?", "What (Y) was the king of the (X)?", "which (Y) are the kings of (X)?", "which (Y) are the kings of the (X)?", "which (Y) is the king of (X)?", "which (Y) is the king of the (X)?", "which (Y) was the king of (X)?", "which (Y) was the king of the (X)?", "which (Y) were the kings of (X)?", "which (Y) were the kings of the (X)?", "Who are the kings of (X)?", "Who are the kings of the (X)?", "Who is the king of (X)?", "Who is the king of the (X)?", "Who was the king of (X)?", "Who was the king of the (X)?", "Who were the kings of (X)?", "Who were the kings of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1438",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person", "Work" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the king of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1439",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the king of which (Y)?", "(X) was the king of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1440",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many kings does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1441",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of (X)?", "the kings of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1442",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) first person to climb.", "List all the agents with first person to climb of (X).", "What (Y) is (X) 's first person to climb?", "What (Y) is the first person to climb of (X)?", "What (Y) is the first person to climb of the (X)?", "What (Y) was (X) 's first person to climb?", "What (Y) was the first person to climb of (X)?", "What (Y) was the first person to climb of the (X)?", "which (Y) is the first person to climb of (X)?", "which (Y) is the first person to climb of the (X)?", "which (Y) was the first person to climb of (X)?", "which (Y) was the first person to climb of the (X)?", "Who is the first person to climb of (X)?", "Who is the first person to climb of the (X)?", "Who was the first person to climb of (X)?", "Who was the first person to climb of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1443",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the first person to climb of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1444",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the first person to climb of which (Y)?", "(X) was the first person to climb of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1445",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first person to climb of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1446",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) first person to climb.", "List all the agents with first person to climb of (X).", "What (Y) is (X) 's first person to climb?", "What (Y) is the first person to climb of (X)?", "What (Y) is the first person to climb of the (X)?", "What (Y) was (X) 's first person to climb?", "What (Y) was the first person to climb of (X)?", "What (Y) was the first person to climb of the (X)?", "which (Y) is the first person to climb of (X)?", "which (Y) is the first person to climb of the (X)?", "which (Y) was the first person to climb of (X)?", "which (Y) was the first person to climb of the (X)?", "Who is the first person to climb of (X)?", "Who is the first person to climb of the (X)?", "Who was the first person to climb of (X)?", "Who was the first person to climb of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1447",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent", "Place" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the first person to climb of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1448",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the first person to climb of which (Y)?", "(X) was the first person to climb of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1449",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first person to climb of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1450",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) roots.", "Give me all roots of (X).", "Give me the (X) root.", "Give me the (X) roots.", "List all roots of (X).", "List all the languages with root of (X).", "List all the roots of (X).", "show me all roots of (X).", "What (Y) is (X) 's root?", "What (Y) is the root of (X)?", "What (Y) is the root of the (X)?", "What (Y) was (X) 's root?", "What (Y) was the root of (X)?", "What (Y) was the root of the (X)?", "What are the roots of (X)?", "What are the roots of the (X)?", "What is the root of (X)?", "What is the root of the (X)?", "What was the root of (X)?", "What was the root of the (X)?", "What were the roots of (X)?", "What were the roots of the (X)?", "which (Y) are the roots of (X)?", "which (Y) are the roots of the (X)?", "which (Y) is the root of (X)?", "which (Y) is the root of the (X)?", "which (Y) was the root of (X)?", "which (Y) was the root of the (X)?", "which (Y) were the roots of (X)?", "which (Y) were the roots of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1451",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language", "Language" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the root of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1452",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the root of which (Y)?", "(X) was the root of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1453",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many roots does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1454",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the root of (X)?", "the roots of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1455",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) roots.", "Give me all roots of (X).", "Give me the (X) root.", "Give me the (X) roots.", "List all roots of (X).", "List all the languages with root of (X).", "List all the roots of (X).", "show me all roots of (X).", "What (Y) is (X) 's root?", "What (Y) is the root of (X)?", "What (Y) is the root of the (X)?", "What (Y) was (X) 's root?", "What (Y) was the root of (X)?", "What (Y) was the root of the (X)?", "What are the roots of (X)?", "What are the roots of the (X)?", "What is the root of (X)?", "What is the root of the (X)?", "What was the root of (X)?", "What was the root of the (X)?", "What were the roots of (X)?", "What were the roots of the (X)?", "which (Y) are the roots of (X)?", "which (Y) are the roots of the (X)?", "which (Y) is the root of (X)?", "which (Y) is the root of the (X)?", "which (Y) was the root of (X)?", "which (Y) was the root of the (X)?", "which (Y) were the roots of (X)?", "which (Y) were the roots of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1456",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language", "Language" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the root of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1457",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the root of which (Y)?", "(X) was the root of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1458",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many roots does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1459",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the root of (X)?", "the roots of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1460",
    "lexicalEntryUri" : "http://localhost:8080#loyalty_246",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Color" ],
    "returnType" : [ "Loyalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) loyalties.", "Give me all loyalties  (X).", "Give me the (X) loyalties.", "Give me the (X) loyalty.", "List all loyalties  (X).", "List all the colors with loyalty  (X).", "List all the loyalties  (X).", "show me all loyalties  (X).", "What (Y) is (X) 's loyalty?", "What (Y) is the loyalty  (X)?", "What (Y) is the loyalty  the (X)?", "What (Y) was (X) 's loyalty?", "What (Y) was the loyalty  (X)?", "What (Y) was the loyalty  the (X)?", "What are the loyalties  (X)?", "What are the loyalties  the (X)?", "What is the loyalty  (X)?", "What is the loyalty  the (X)?", "What was the loyalty  (X)?", "What was the loyalty  the (X)?", "What were the loyalties  (X)?", "What were the loyalties  the (X)?", "which (Y) are the loyalties  (X)?", "which (Y) are the loyalties  the (X)?", "which (Y) is the loyalty  (X)?", "which (Y) is the loyalty  the (X)?", "which (Y) was the loyalty  (X)?", "which (Y) was the loyalty  the (X)?", "which (Y) were the loyalties  (X)?", "which (Y) were the loyalties  the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1461",
    "lexicalEntryUri" : "http://localhost:8080#loyalty_246",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Color", "Loyalty" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the loyalty  (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1462",
    "lexicalEntryUri" : "http://localhost:8080#loyalty_246",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the loyalty  which (Y)?", "(X) was the loyalty  which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1463",
    "lexicalEntryUri" : "http://localhost:8080#loyalty_246",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Color" ],
    "returnType" : [ "Loyalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many loyalties does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1464",
    "lexicalEntryUri" : "http://localhost:8080#loyalty_246",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Color" ],
    "returnType" : [ "Loyalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the loyalties  (X)?", "the loyalty  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1465",
    "lexicalEntryUri" : "http://localhost:8080#album-of_317",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) albums.", "Give me all albums of (X).", "Give me the (X) album.", "Give me the (X) albums.", "List all albums of (X).", "List all the albums of (X).", "List all the albums with album of (X).", "show me all albums of (X).", "What (Y) is (X) 's album?", "What (Y) is the album of (X)?", "What (Y) is the album of the (X)?", "What (Y) was (X) 's album?", "What (Y) was the album of (X)?", "What (Y) was the album of the (X)?", "What are the albums of (X)?", "What are the albums of the (X)?", "What is the album of (X)?", "What is the album of the (X)?", "What was the album of (X)?", "What was the album of the (X)?", "What were the albums of (X)?", "What were the albums of the (X)?", "which (Y) are the albums of (X)?", "which (Y) are the albums of the (X)?", "which (Y) is the album of (X)?", "which (Y) is the album of the (X)?", "which (Y) was the album of (X)?", "which (Y) was the album of the (X)?", "which (Y) were the albums of (X)?", "which (Y) were the albums of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/album> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1466",
    "lexicalEntryUri" : "http://localhost:8080#album-of_317",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album", "Song" ],
    "returnType" : [ "BooleanFlag" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "booleanQuestion",
    "sentences" : [ "is (X) the album of (X)?." ],
    "sparqlQuery" : "ASK WHERE {?Answer <http://dbpedia.org/ontology/album> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1467",
    "lexicalEntryUri" : "http://localhost:8080#album-of_317",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "(X) is the album of which (Y)?", "(X) was the album of which (Y)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/album> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1468",
    "lexicalEntryUri" : "http://localhost:8080#album-of_317",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "How many albums does (X) have??" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/album> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1469",
    "lexicalEntryUri" : "http://localhost:8080#album-of_317",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the album of (X)?", "the albums of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/album> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1470",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1_145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) support (X)?", "Give me all (X) that supported (X)?", "Give me all (X) that supported the (X)", "List all (X) support (X)?", "Who supported (X)?", "Who supported the (X)?", "Who supports (X)?", "Who supports the (X)?", "Who was the (X) that supported (X)?", "which (Y) support (X)?", "which (Y) supported (X)?", "which (Y) supports (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ideology> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1471",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1_145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) supported by (X)?", "List all (X) supported by (X)?", "What (Y) was supported by (X)?", "What (Y) were supported by (X)?", "What kind of (X) did (X) support?", "show me all (X) that (X) supported", "show me the (X) that (X) supported", "which (Y) did (X) support?", "which (Y) does (X) support?", "which (Y) support the (X)?", "which (Y) supports the (X)?", "which (Y) was supported by (X)?", "which (Y) were supported by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1472",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1_145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are supported by (X)?", "How many (Y) did (X) support?", "How often did (X) support?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1473",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1_139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) lead (X)?", "Give me all (X) that led (X)?", "Give me all (X) that led the (X)", "List all (X) lead (X)?", "Who leads (X)?", "Who leads the (X)?", "Who led (X)?", "Who led the (X)?", "Who was the (X) that led (X)?", "which (Y) lead (X)?", "which (Y) leads (X)?", "which (Y) led (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/leaderName> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1474",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1_139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) led by (X)?", "List all (X) led by (X)?", "What (Y) was led by (X)?", "What (Y) were led by (X)?", "What kind of (X) did (X) lead?", "show me all (X) that (X) led", "show me the (X) that (X) led", "which (Y) did (X) lead?", "which (Y) does (X) lead?", "which (Y) lead the (X)?", "which (Y) leads the (X)?", "which (Y) was led by (X)?", "which (Y) were led by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1475",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1_139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are led by (X)?", "How many (Y) did (X) lead?", "How often did (X) lead?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1476",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2_182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) speak (X)?", "Give me all (X) that spoke (X)?", "Give me all (X) that spoke the (X)", "List all (X) speak (X)?", "What (Y) speaks (X)?", "What (Y) speaks the (X)?", "What (Y) spoke (X)?", "What (Y) spoke the (X)?", "What (Y) was the (X) that spoke (X)?", "which (Y) speak (X)?", "which (Y) speaks (X)?", "which (Y) spoke (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1477",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2_182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) spoken by (X)?", "List all (X) spoken by (X)?", "What (Y) was spoken by (X)?", "What (Y) were spoken by (X)?", "What kind of (X) did (X) speak?", "show me all (X) that (X) spoke", "show me the (X) that (X) spoke", "which (Y) did (X) speak?", "which (Y) does (X) speak?", "which (Y) speak the (X)?", "which (Y) speaks the (X)?", "which (Y) was spoken by (X)?", "which (Y) were spoken by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1478",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2_182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are spoken by (X)?", "How many (Y) did (X) speak?", "How often did (X) speak?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1479",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) create (X)?", "Give me all (X) that created (X)?", "Give me all (X) that created the (X)", "List all (X) create (X)?", "Who created (X)?", "Who created the (X)?", "Who creates (X)?", "Who creates the (X)?", "Who was the (X) that created (X)?", "which (Y) create (X)?", "which (Y) created (X)?", "which (Y) creates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1480",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) created by (X)?", "List all (X) created by (X)?", "What (Y) was created by (X)?", "What (Y) were created by (X)?", "What kind of (X) did (X) create?", "show me all (X) that (X) created", "show me the (X) that (X) created", "which (Y) create the (X)?", "which (Y) creates the (X)?", "which (Y) did (X) create?", "which (Y) does (X) create?", "which (Y) was created by (X)?", "which (Y) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1481",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are created by (X)?", "How many (Y) did (X) create?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1482",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) call (X)?", "Give me all (X) that called (X)?", "Give me all (X) that called the (X)", "List all (X) call (X)?", "What (Y) called (X)?", "What (Y) called the (X)?", "What (Y) calls (X)?", "What (Y) calls the (X)?", "What (Y) was the (X) that called (X)?", "which (Y) call (X)?", "which (Y) called (X)?", "which (Y) calls (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1483",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) called by (X)?", "List all (X) called by (X)?", "Who kind of (X) did (X) call?", "Who was called by (X)?", "Who were called by (X)?", "show me all (X) that (X) called", "show me the (X) that (X) called", "which (Y) call the (X)?", "which (Y) calls the (X)?", "which (Y) did (X) call?", "which (Y) does (X) call?", "which (Y) was called by (X)?", "which (Y) were called by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1484",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are called by (X)?", "How many (Y) did (X) call?", "How often did (X) call?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1485",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1_213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) direct (X)?", "Give me all (X) that directed (X)?", "Give me all (X) that directed the (X)", "List all (X) direct (X)?", "Who directed (X)?", "Who directed the (X)?", "Who directs (X)?", "Who directs the (X)?", "Who was the (X) that directed (X)?", "which (Y) direct (X)?", "which (Y) directed (X)?", "which (Y) directs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1486",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1_213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) directed by (X)?", "List all (X) directed by (X)?", "What (Y) was directed by (X)?", "What (Y) were directed by (X)?", "What kind of (X) did (X) direct?", "show me all (X) that (X) directed", "show me the (X) that (X) directed", "which (Y) did (X) direct?", "which (Y) direct the (X)?", "which (Y) directs the (X)?", "which (Y) does (X) direct?", "which (Y) was directed by (X)?", "which (Y) were directed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1487",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1_213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are directed by (X)?", "How many (Y) did (X) direct?", "How often did (X) direct?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1488",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) play (X)?", "Give me all (X) that played (X)?", "Give me all (X) that played the (X)", "List all (X) play (X)?", "What (Y) played (X)?", "What (Y) played the (X)?", "What (Y) plays (X)?", "What (Y) plays the (X)?", "What (Y) was the (X) that played (X)?", "which (Y) play (X)?", "which (Y) played (X)?", "which (Y) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1489",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) played by (X)?", "List all (X) played by (X)?", "Who kind of (X) did (X) play?", "Who was played by (X)?", "Who were played by (X)?", "show me all (X) that (X) played", "show me the (X) that (X) played", "which (Y) did (X) play?", "which (Y) does (X) play?", "which (Y) play the (X)?", "which (Y) plays the (X)?", "which (Y) was played by (X)?", "which (Y) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1490",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played by (X)?", "How many (Y) did (X) play?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1491",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) play (X)?", "Give me all (X) that played (X)?", "Give me all (X) that played the (X)", "List all (X) play (X)?", "What (Y) played (X)?", "What (Y) played the (X)?", "What (Y) plays (X)?", "What (Y) plays the (X)?", "What (Y) was the (X) that played (X)?", "which (Y) play (X)?", "which (Y) played (X)?", "which (Y) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1492",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) played by (X)?", "List all (X) played by (X)?", "Who kind of (X) did (X) play?", "Who was played by (X)?", "Who were played by (X)?", "show me all (X) that (X) played", "show me the (X) that (X) played", "which (Y) did (X) play?", "which (Y) does (X) play?", "which (Y) play the (X)?", "which (Y) plays the (X)?", "which (Y) was played by (X)?", "which (Y) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1493",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played by (X)?", "How many (Y) did (X) play?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1494",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1_217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) join (X)?", "Give me all (X) that joined (X)?", "Give me all (X) that joined the (X)", "List all (X) join (X)?", "What (Y) joined (X)?", "What (Y) joined the (X)?", "What (Y) joins (X)?", "What (Y) joins the (X)?", "What (Y) was the (X) that joined (X)?", "which (Y) join (X)?", "which (Y) joined (X)?", "which (Y) joins (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1495",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1_217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) joined by (X)?", "List all (X) joined by (X)?", "What (Y) was joined by (X)?", "What (Y) were joined by (X)?", "What kind of (X) did (X) join?", "show me all (X) that (X) joined", "show me the (X) that (X) joined", "which (Y) did (X) join?", "which (Y) does (X) join?", "which (Y) join the (X)?", "which (Y) joins the (X)?", "which (Y) was joined by (X)?", "which (Y) were joined by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1496",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1_217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are joined by (X)?", "How many (Y) did (X) join?", "How often did (X) join?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1497",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt_173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all (X) adopted by (X)?", "List all (X) adopted by (X)?", "What (Y) was adopted by (X)?", "What (Y) were adopted by (X)?", "show me the (X) that (X) adopted", "which (Y) adopt (X)?", "which (Y) adopted (X)?", "which (Y) did (X) adopt?", "which (Y) was adopted by (X)?", "which (Y) were adopted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1498",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt_173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all (X) adopt (X)?", "What (Y) adopted (X)?", "What (Y) adopted the (X) (X)?", "What (Y) adopted the (X)?", "What (Y) adopts (X)?", "What (Y) adopts the (X) (X)?", "What (Y) adopts the (X)?", "What (Y) was the (X) that adopted (X)?", "which (Y) adopt (X)?", "which (Y) adopted (X)?", "which (Y) adopts (X)?", "which (Y) did (X) adopt?", "which (Y) does (X) adopt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1499",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt_173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are adopted by (X)?", "How many (Y) did (X) adopt?", "How often did (X) adopt?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1500",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1_218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) air (X)?", "Give me all (X) that aired (X)?", "Give me all (X) that aired the (X)", "List all (X) air (X)?", "What (Y) aired (X)?", "What (Y) aired the (X)?", "What (Y) airs (X)?", "What (Y) airs the (X)?", "What (Y) was the (X) that aired (X)?", "which (Y) air (X)?", "which (Y) aired (X)?", "which (Y) airs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/network> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1501",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1_218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) aired by (X)?", "List all (X) aired by (X)?", "What (Y) was aired by (X)?", "What (Y) were aired by (X)?", "What kind of (X) did (X) air?", "show me all (X) that (X) aired", "show me the (X) that (X) aired", "which (Y) air the (X)?", "which (Y) airs the (X)?", "which (Y) did (X) air?", "which (Y) does (X) air?", "which (Y) was aired by (X)?", "which (Y) were aired by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1502",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1_218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are aired by (X)?", "How many (Y) did (X) air?", "How often did (X) air?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1503",
    "lexicalEntryUri" : "http://localhost:8080#to_graduated_1_150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who graduated (X)?", "Who graduates (X)?", "Who was the (X) that graduated (X)?", "Whom is (X) graduate?", "Whom was (X) graduate?", "which (Y) graduated (X)?", "which (Y) graduates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/almaMater> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1504",
    "lexicalEntryUri" : "http://localhost:8080#to_graduated_1_150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) graduated by?", "Who was graduated by (X)?", "Who were graduated by (X)?", "Whom did (X) graduate?", "which (Y) was graduated by (X)?", "which (Y) were graduated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1505",
    "lexicalEntryUri" : "http://localhost:8080#to_graduated_1_150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are graduated by (X)?", "How many (Y) did (X) graduate?", "How often did (X) graduate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1506",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) manage (X)?", "Give me all (X) that managed (X)?", "Give me all (X) that managed the (X)", "List all (X) manage (X)?", "Who managed (X)?", "Who managed the (X)?", "Who manages (X)?", "Who manages the (X)?", "Who was the (X) that managed (X)?", "which (Y) manage (X)?", "which (Y) managed (X)?", "which (Y) manages (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1507",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) managed by (X)?", "List all (X) managed by (X)?", "What (Y) was managed by (X)?", "What (Y) were managed by (X)?", "What kind of (X) did (X) manage?", "show me all (X) that (X) managed", "show me the (X) that (X) managed", "which (Y) did (X) manage?", "which (Y) does (X) manage?", "which (Y) manage the (X)?", "which (Y) manages the (X)?", "which (Y) was managed by (X)?", "which (Y) were managed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1508",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are managed by (X)?", "How many (Y) did (X) manage?", "How often did (X) manage?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1509",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who played (X)?", "Who plays (X)?", "Who was the (X) that played (X)?", "Whom is (X) play?", "Whom was (X) play?", "which (Y) played (X)?", "which (Y) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1510",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) played by?", "Who was played by (X)?", "Who were played by (X)?", "Whom did (X) play?", "which (Y) was played by (X)?", "which (Y) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/instrument> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1511",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played by (X)?", "How many (Y) did (X) play?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/instrument> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1512",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire_1_188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who inspired (X)?", "Who inspires (X)?", "Who was the (X) that inspired (X)?", "Whom is (X) inspire?", "Whom was (X) inspire?", "which (Y) inspired (X)?", "which (Y) inspires (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1513",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire_1_188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) inspired by?", "Who was inspired by (X)?", "Who were inspired by (X)?", "Whom did (X) inspire?", "which (Y) was inspired by (X)?", "which (Y) were inspired by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1514",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire_1_188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are inspired by (X)?", "How many (Y) did (X) inspire?", "How often did (X) inspire?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1515",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) serve (X)?", "Give me all (X) that served (X)?", "Give me all (X) that served the (X)", "List all (X) serve (X)?", "What (Y) served (X)?", "What (Y) served the (X)?", "What (Y) serves (X)?", "What (Y) serves the (X)?", "What (Y) was the (X) that served (X)?", "which (Y) serve (X)?", "which (Y) served (X)?", "which (Y) serves (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1516",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) served by (X)?", "List all (X) served by (X)?", "What (Y) was served by (X)?", "What (Y) were served by (X)?", "What kind of (X) did (X) serve?", "show me all (X) that (X) served", "show me the (X) that (X) served", "which (Y) did (X) serve?", "which (Y) does (X) serve?", "which (Y) serve the (X)?", "which (Y) serves the (X)?", "which (Y) was served by (X)?", "which (Y) were served by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1517",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are served by (X)?", "How many (Y) did (X) serve?", "How often did (X) serve?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1518",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2_186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) compose (X)?", "Give me all (X) that composed (X)?", "Give me all (X) that composed the (X)", "List all (X) compose (X)?", "Who composed (X)?", "Who composed the (X)?", "Who composes (X)?", "Who composes the (X)?", "Who was the (X) that composed (X)?", "which (Y) compose (X)?", "which (Y) composed (X)?", "which (Y) composes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1519",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2_186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) composed by (X)?", "List all (X) composed by (X)?", "What (Y) was composed by (X)?", "What (Y) were composed by (X)?", "What kind of (X) did (X) compose?", "show me all (X) that (X) composed", "show me the (X) that (X) composed", "which (Y) compose the (X)?", "which (Y) composes the (X)?", "which (Y) did (X) compose?", "which (Y) does (X) compose?", "which (Y) was composed by (X)?", "which (Y) were composed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1520",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2_186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are composed by (X)?", "How many (Y) did (X) compose?", "How often did (X) compose?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1521",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1_194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who trained (X)?", "Who trains (X)?", "Who was the (X) that trained (X)?", "Whom is (X) train?", "Whom was (X) train?", "which (Y) trained (X)?", "which (Y) trains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/trainer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1522",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1_194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) trained by?", "Who was trained by (X)?", "Who were trained by (X)?", "Whom did (X) train?", "which (Y) was trained by (X)?", "which (Y) were trained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1523",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1_194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are trained by (X)?", "How many (Y) did (X) train?", "How often did (X) train?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1524",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) breed (X)?", "Give me all (X) that bred (X)?", "Give me all (X) that bred the (X)", "List all (X) breed (X)?", "Who bred (X)?", "Who bred the (X)?", "Who breeds (X)?", "Who breeds the (X)?", "Who was the (X) that bred (X)?", "which (Y) bred (X)?", "which (Y) breed (X)?", "which (Y) breeds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/breeder> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1525",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) bred by (X)?", "List all (X) bred by (X)?", "What (Y) was bred by (X)?", "What (Y) were bred by (X)?", "What kind of (X) did (X) breed?", "show me all (X) that (X) bred", "show me the (X) that (X) bred", "which (Y) breed the (X)?", "which (Y) breeds the (X)?", "which (Y) did (X) breed?", "which (Y) does (X) breed?", "which (Y) was bred by (X)?", "which (Y) were bred by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1526",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are bred by (X)?", "How many (Y) did (X) breed?", "How often did (X) breed?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1527",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who succeeded (X)?", "Who succeeds (X)?", "Who was the (X) that succeeded (X)?", "Whom is (X) succeed?", "Whom was (X) succeed?", "which (Y) succeeded (X)?", "which (Y) succeeds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1528",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) succeeded by?", "Who was succeeded by (X)?", "Who were succeeded by (X)?", "Whom did (X) succeed?", "which (Y) was succeeded by (X)?", "which (Y) were succeeded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1529",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are succeeded by (X)?", "How many (Y) did (X) succeed?", "How often did (X) succeed?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1530",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who succeeded (X)?", "Who succeeds (X)?", "Who was the (X) that succeeded (X)?", "Whom is (X) succeed?", "Whom was (X) succeed?", "which (Y) succeeded (X)?", "which (Y) succeeds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1531",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) succeeded by?", "Who was succeeded by (X)?", "Who were succeeded by (X)?", "Whom did (X) succeed?", "which (Y) was succeeded by (X)?", "which (Y) were succeeded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1532",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are succeeded by (X)?", "How many (Y) did (X) succeed?", "How often did (X) succeed?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1533",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1_196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) that wrote (X)?", "Give me all (X) that wrote the (X)", "Give me all (X) write (X)?", "List all (X) write (X)?", "Who was the (X) that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who wrote (X)?", "Who wrote the (X)?", "which (Y) write (X)?", "which (Y) writes (X)?", "which (Y) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1534",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1_196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) written by (X)?", "List all (X) written by (X)?", "What (Y) was written by (X)?", "What (Y) were written by (X)?", "What kind of (X) did (X) write?", "show me all (X) that (X) wrote", "show me the (X) that (X) wrote", "which (Y) did (X) write?", "which (Y) does (X) write?", "which (Y) was written by (X)?", "which (Y) were written by (X)?", "which (Y) write the (X)?", "which (Y) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1535",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1_196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are written by (X)?", "How many (Y) did (X) write?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1536",
    "lexicalEntryUri" : "http://localhost:8080#to_called_1_147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) call (X)?", "Give me all (X) that called (X)?", "Give me all (X) that called the (X)", "List all (X) call (X)?", "What (Y) called (X)?", "What (Y) called the (X)?", "What (Y) calls (X)?", "What (Y) calls the (X)?", "What (Y) was the (X) that called (X)?", "which (Y) call (X)?", "which (Y) called (X)?", "which (Y) calls (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/2000/01/rdf-schema#label> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1537",
    "lexicalEntryUri" : "http://localhost:8080#to_called_1_147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) called by (X)?", "List all (X) called by (X)?", "What (Y) was called by (X)?", "What (Y) were called by (X)?", "What kind of (X) did (X) call?", "show me all (X) that (X) called", "show me the (X) that (X) called", "which (Y) call the (X)?", "which (Y) calls the (X)?", "which (Y) did (X) call?", "which (Y) does (X) call?", "which (Y) was called by (X)?", "which (Y) were called by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://www.w3.org/2000/01/rdf-schema#label> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1538",
    "lexicalEntryUri" : "http://localhost:8080#to_called_1_147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are called by (X)?", "How many (Y) did (X) call?", "How often did (X) call?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://www.w3.org/2000/01/rdf-schema#label> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1539",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) play (X)?", "Give me all (X) that played (X)?", "Give me all (X) that played the (X)", "List all (X) play (X)?", "Who played (X)?", "Who played the (X)?", "Who plays (X)?", "Who plays the (X)?", "Who was the (X) that played (X)?", "which (Y) play (X)?", "which (Y) played (X)?", "which (Y) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1540",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) played by (X)?", "List all (X) played by (X)?", "What (Y) was played by (X)?", "What (Y) were played by (X)?", "What kind of (X) did (X) play?", "show me all (X) that (X) played", "show me the (X) that (X) played", "which (Y) did (X) play?", "which (Y) does (X) play?", "which (Y) play the (X)?", "which (Y) plays the (X)?", "which (Y) was played by (X)?", "which (Y) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1541",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played by (X)?", "How many (Y) did (X) play?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1542",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1_226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) perform (X)?", "Give me all (X) that performed (X)?", "Give me all (X) that performed the (X)", "List all (X) perform (X)?", "Who performed (X)?", "Who performed the (X)?", "Who performs (X)?", "Who performs the (X)?", "Who was the (X) that performed (X)?", "which (Y) perform (X)?", "which (Y) performed (X)?", "which (Y) performs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1543",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1_226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) performed by (X)?", "List all (X) performed by (X)?", "What (Y) was performed by (X)?", "What (Y) were performed by (X)?", "What kind of (X) did (X) perform?", "show me all (X) that (X) performed", "show me the (X) that (X) performed", "which (Y) did (X) perform?", "which (Y) does (X) perform?", "which (Y) perform the (X)?", "which (Y) performs the (X)?", "which (Y) was performed by (X)?", "which (Y) were performed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1544",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1_226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are performed by (X)?", "How many (Y) did (X) perform?", "How often did (X) perform?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1545",
    "lexicalEntryUri" : "http://localhost:8080#to_first_to_climb_153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) first to climb (X)?", "Give me all (X) that   (X)?", "Give me all (X) that   the (X)", "List all (X) first to climb (X)?", "What (Y)   (X)?", "What (Y)   the (X)?", "What (Y) was the (X) that   (X)?", "which (Y)   (X)?", "which (Y) first to climb (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1546",
    "lexicalEntryUri" : "http://localhost:8080#to_first_to_climb_153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X)   by (X)?", "List all (X)   by (X)?", "Who kind of (X) did (X) first to climb?", "Who was   by (X)?", "Who were   by (X)?", "show me all (X) that (X)", "show me the (X) that (X)", "which (Y)   the (X)?", "which (Y) did (X) first to climb?", "which (Y) does (X) first to climb?", "which (Y) first to climb the (X)?", "which (Y) was   by (X)?", "which (Y) were   by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1547",
    "lexicalEntryUri" : "http://localhost:8080#to_first_to_climb_153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are   by (X)?", "How many (Y) did (X) first to climb?", "How often did (X) first to climb?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1548",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1_177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) publish (X)?", "Give me all (X) that published (X)?", "Give me all (X) that published the (X)", "List all (X) publish (X)?", "What (Y) published (X)?", "What (Y) published the (X)?", "What (Y) publishes (X)?", "What (Y) publishes the (X)?", "What (Y) was the (X) that published (X)?", "which (Y) publish (X)?", "which (Y) published (X)?", "which (Y) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1549",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1_177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) published by (X)?", "List all (X) published by (X)?", "What (Y) was published by (X)?", "What (Y) were published by (X)?", "What kind of (X) did (X) publish?", "show me all (X) that (X) published", "show me the (X) that (X) published", "which (Y) did (X) publish?", "which (Y) does (X) publish?", "which (Y) publish the (X)?", "which (Y) publishes the (X)?", "which (Y) was published by (X)?", "which (Y) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1550",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1_177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are published by (X)?", "How many (Y) did (X) publish?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1551",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1_201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produce (X)?", "Give me all (X) that produced (X)?", "Give me all (X) that produced the (X)", "List all (X) produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produces (X)?", "Who produces the (X)?", "Who was the (X) that produced (X)?", "which (Y) produce (X)?", "which (Y) produced (X)?", "which (Y) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1552",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1_201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produced by (X)?", "List all (X) produced by (X)?", "What (Y) was produced by (X)?", "What (Y) were produced by (X)?", "What kind of (X) did (X) produce?", "show me all (X) that (X) produced", "show me the (X) that (X) produced", "which (Y) did (X) produce?", "which (Y) does (X) produce?", "which (Y) produce the (X)?", "which (Y) produces the (X)?", "which (Y) was produced by (X)?", "which (Y) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1553",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1_201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are produced by (X)?", "How many (Y) did (X) produce?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1554",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) design (X)?", "Give me all (X) that designed (X)?", "Give me all (X) that designed the (X)", "List all (X) design (X)?", "Who designed (X)?", "Who designed the (X)?", "Who designs (X)?", "Who designs the (X)?", "Who was the (X) that designed (X)?", "which (Y) design (X)?", "which (Y) designed (X)?", "which (Y) designs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1555",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) designed by (X)?", "List all (X) designed by (X)?", "What (Y) was designed by (X)?", "What (Y) were designed by (X)?", "What kind of (X) did (X) design?", "show me all (X) that (X) designed", "show me the (X) that (X) designed", "which (Y) design the (X)?", "which (Y) designs the (X)?", "which (Y) did (X) design?", "which (Y) does (X) design?", "which (Y) was designed by (X)?", "which (Y) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1556",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are designed by (X)?", "How many (Y) did (X) design?", "How often did (X) design?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1557",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2_223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who found (X)?", "Who founded (X)?", "Who was the (X) that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (Y) found (X)?", "which (Y) founded (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/founder> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1558",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2_223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (Y) was founded by (X)?", "which (Y) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1559",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2_223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are founded by (X)?", "How many (Y) did (X) found?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1560",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4_199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produce (X)?", "Give me all (X) that produced (X)?", "Give me all (X) that produced the (X)", "List all (X) produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produces (X)?", "Who produces the (X)?", "Who was the (X) that produced (X)?", "which (Y) produce (X)?", "which (Y) produced (X)?", "which (Y) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1561",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4_199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produced by (X)?", "List all (X) produced by (X)?", "What (Y) was produced by (X)?", "What (Y) were produced by (X)?", "What kind of (X) did (X) produce?", "show me all (X) that (X) produced", "show me the (X) that (X) produced", "which (Y) did (X) produce?", "which (Y) does (X) produce?", "which (Y) produce the (X)?", "which (Y) produces the (X)?", "which (Y) was produced by (X)?", "which (Y) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1562",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4_199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are produced by (X)?", "How many (Y) did (X) produce?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1563",
    "lexicalEntryUri" : "http://localhost:8080#to_attend_1_192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who attended (X)?", "Who attends (X)?", "Who was the (X) that attended (X)?", "Whom is (X) attend?", "Whom was (X) attend?", "which (Y) attended (X)?", "which (Y) attends (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1564",
    "lexicalEntryUri" : "http://localhost:8080#to_attend_1_192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) attended by?", "Who was attended by (X)?", "Who were attended by (X)?", "Whom did (X) attend?", "which (Y) was attended by (X)?", "which (Y) were attended by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/almaMater> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1565",
    "lexicalEntryUri" : "http://localhost:8080#to_attend_1_192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are attended by (X)?", "How many (Y) did (X) attend?", "How often did (X) attend?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/almaMater> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1566",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3_138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded (X)?", "Who precedes (X)?", "Who was the (X) that preceded (X)?", "Whom is (X) precede?", "Whom was (X) precede?", "which (Y) preceded (X)?", "which (Y) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/after> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1567",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3_138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) preceded by?", "Who was preceded by (X)?", "Who were preceded by (X)?", "Whom did (X) precede?", "which (Y) was preceded by (X)?", "which (Y) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1568",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3_138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are preceded by (X)?", "How many (Y) did (X) precede?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1569",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2_180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) publish (X)?", "Give me all (X) that published (X)?", "Give me all (X) that published the (X)", "List all (X) publish (X)?", "Who published (X)?", "Who published the (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who was the (X) that published (X)?", "which (Y) publish (X)?", "which (Y) published (X)?", "which (Y) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1570",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2_180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) published by (X)?", "List all (X) published by (X)?", "What (Y) was published by (X)?", "What (Y) were published by (X)?", "What kind of (X) did (X) publish?", "show me all (X) that (X) published", "show me the (X) that (X) published", "which (Y) did (X) publish?", "which (Y) does (X) publish?", "which (Y) publish the (X)?", "which (Y) publishes the (X)?", "which (Y) was published by (X)?", "which (Y) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1571",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2_180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are published by (X)?", "How many (Y) did (X) publish?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1572",
    "lexicalEntryUri" : "http://localhost:8080#to_join_2_207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) join (X)?", "Give me all (X) that joined (X)?", "Give me all (X) that joined the (X)", "List all (X) join (X)?", "What (Y) joined (X)?", "What (Y) joined the (X)?", "What (Y) joins (X)?", "What (Y) joins the (X)?", "What (Y) was the (X) that joined (X)?", "which (Y) join (X)?", "which (Y) joined (X)?", "which (Y) joins (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/accessioneudate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1573",
    "lexicalEntryUri" : "http://localhost:8080#to_join_2_207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "date" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) joined by (X)?", "List all (X) joined by (X)?", "What (Y) was joined by (X)?", "What (Y) were joined by (X)?", "What kind of (X) did (X) join?", "show me all (X) that (X) joined", "show me the (X) that (X) joined", "which (Y) did (X) join?", "which (Y) does (X) join?", "which (Y) join the (X)?", "which (Y) joins the (X)?", "which (Y) was joined by (X)?", "which (Y) were joined by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/accessioneudate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1574",
    "lexicalEntryUri" : "http://localhost:8080#to_join_2_207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "date" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are joined by (X)?", "How many (Y) did (X) join?", "How often did (X) join?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/accessioneudate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1575",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) cover (X)?", "Give me all (X) that covered (X)?", "Give me all (X) that covered the (X)", "List all (X) cover (X)?", "What (Y) covered (X)?", "What (Y) covered the (X)?", "What (Y) covers (X)?", "What (Y) covers the (X)?", "What (Y) was the (X) that covered (X)?", "which (Y) cover (X)?", "which (Y) covered (X)?", "which (Y) covers (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1576",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) covered by (X)?", "List all (X) covered by (X)?", "What (Y) was covered by (X)?", "What (Y) were covered by (X)?", "What kind of (X) did (X) cover?", "show me all (X) that (X) covered", "show me the (X) that (X) covered", "which (Y) cover the (X)?", "which (Y) covers the (X)?", "which (Y) did (X) cover?", "which (Y) does (X) cover?", "which (Y) was covered by (X)?", "which (Y) were covered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1577",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are covered by (X)?", "How many (Y) did (X) cover?", "How often did (X) cover?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1578",
    "lexicalEntryUri" : "http://localhost:8080#to_border_154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) border (X)?", "Give me all (X) that bordered (X)?", "Give me all (X) that bordered the (X)", "List all (X) border (X)?", "What (Y) bordered (X)?", "What (Y) bordered the (X)?", "What (Y) borders (X)?", "What (Y) borders the (X)?", "What (Y) was the (X) that bordered (X)?", "which (Y) border (X)?", "which (Y) bordered (X)?", "which (Y) borders (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/borderingstates> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1579",
    "lexicalEntryUri" : "http://localhost:8080#to_border_154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) bordered by (X)?", "List all (X) bordered by (X)?", "What (Y) was bordered by (X)?", "What (Y) were bordered by (X)?", "What kind of (X) did (X) border?", "show me all (X) that (X) bordered", "show me the (X) that (X) bordered", "which (Y) border the (X)?", "which (Y) borders the (X)?", "which (Y) did (X) border?", "which (Y) does (X) border?", "which (Y) was bordered by (X)?", "which (Y) were bordered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1580",
    "lexicalEntryUri" : "http://localhost:8080#to_border_154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are bordered by (X)?", "How many (Y) did (X) border?", "How often did (X) border?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1581",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3_181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) star (X)?", "Give me all (X) that starred (X)?", "Give me all (X) that starred the (X)", "List all (X) star (X)?", "Who starred (X)?", "Who starred the (X)?", "Who stars (X)?", "Who stars the (X)?", "Who was the (X) that starred (X)?", "which (Y) star (X)?", "which (Y) starred (X)?", "which (Y) stars (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1582",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3_181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) starred by (X)?", "List all (X) starred by (X)?", "What (Y) was starred by (X)?", "What (Y) were starred by (X)?", "What kind of (X) did (X) star?", "show me all (X) that (X) starred", "show me the (X) that (X) starred", "which (Y) did (X) star?", "which (Y) does (X) star?", "which (Y) star the (X)?", "which (Y) stars the (X)?", "which (Y) was starred by (X)?", "which (Y) were starred by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1583",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3_181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are starred by (X)?", "How many (Y) did (X) star?", "How often did (X) star?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1584",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2_135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) precede (X)?", "Give me all (X) that preceded (X)?", "Give me all (X) that preceded the (X)", "List all (X) precede (X)?", "What (Y) preceded (X)?", "What (Y) preceded the (X)?", "What (Y) precedes (X)?", "What (Y) precedes the (X)?", "What (Y) was the (X) that preceded (X)?", "which (Y) precede (X)?", "which (Y) preceded (X)?", "which (Y) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1585",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2_135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) preceded by (X)?", "List all (X) preceded by (X)?", "What (Y) was preceded by (X)?", "What (Y) were preceded by (X)?", "What kind of (X) did (X) precede?", "show me all (X) that (X) preceded", "show me the (X) that (X) preceded", "which (Y) did (X) precede?", "which (Y) does (X) precede?", "which (Y) precede the (X)?", "which (Y) precedes the (X)?", "which (Y) was preceded by (X)?", "which (Y) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1586",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2_135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are preceded by (X)?", "How many (Y) did (X) precede?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1587",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2_202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produce (X)?", "Give me all (X) that produced (X)?", "Give me all (X) that produced the (X)", "List all (X) produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produces (X)?", "Who produces the (X)?", "Who was the (X) that produced (X)?", "which (Y) produce (X)?", "which (Y) produced (X)?", "which (Y) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1588",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2_202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produced by (X)?", "List all (X) produced by (X)?", "What (Y) was produced by (X)?", "What (Y) were produced by (X)?", "What kind of (X) did (X) produce?", "show me all (X) that (X) produced", "show me the (X) that (X) produced", "which (Y) did (X) produce?", "which (Y) does (X) produce?", "which (Y) produce the (X)?", "which (Y) produces the (X)?", "which (Y) was produced by (X)?", "which (Y) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1589",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2_202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are produced by (X)?", "How many (Y) did (X) produce?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1590",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1_222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) program (X)?", "Give me all (X) that programmed (X)?", "Give me all (X) that programmed the (X)", "List all (X) program (X)?", "Who programmed (X)?", "Who programmed the (X)?", "Who programs (X)?", "Who programs the (X)?", "Who was the (X) that programmed (X)?", "which (Y) program (X)?", "which (Y) programmed (X)?", "which (Y) programs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/programmer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1591",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1_222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) programmed by (X)?", "List all (X) programmed by (X)?", "What (Y) was programmed by (X)?", "What (Y) were programmed by (X)?", "What kind of (X) did (X) program?", "show me all (X) that (X) programmed", "show me the (X) that (X) programmed", "which (Y) did (X) program?", "which (Y) does (X) program?", "which (Y) program the (X)?", "which (Y) programs the (X)?", "which (Y) was programmed by (X)?", "which (Y) were programmed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1592",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1_222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are programmed by (X)?", "How many (Y) did (X) program?", "How often did (X) program?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1593",
    "lexicalEntryUri" : "http://localhost:8080#to_influence_3_152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who Influenced (X)?", "Who Influences (X)?", "Who was the (X) that Influenced (X)?", "Whom is (X) Influence?", "Whom was (X) Influence?", "which (Y) Influenced (X)?", "which (Y) Influences (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1594",
    "lexicalEntryUri" : "http://localhost:8080#to_influence_3_152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) Influenced by?", "Who was Influenced by (X)?", "Who were Influenced by (X)?", "Whom did (X) Influence?", "which (Y) was Influenced by (X)?", "which (Y) were Influenced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influencedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1595",
    "lexicalEntryUri" : "http://localhost:8080#to_influence_3_152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are Influenced by (X)?", "How many (Y) did (X) Influence?", "How often did (X) Influence?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/influencedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1596",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1_142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) maintain (X)?", "Give me all (X) that maintained (X)?", "Give me all (X) that maintained the (X)", "List all (X) maintain (X)?", "Who maintained (X)?", "Who maintained the (X)?", "Who maintains (X)?", "Who maintains the (X)?", "Who was the (X) that maintained (X)?", "which (Y) maintain (X)?", "which (Y) maintained (X)?", "which (Y) maintains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1597",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1_142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) maintained by (X)?", "List all (X) maintained by (X)?", "What (Y) was maintained by (X)?", "What (Y) were maintained by (X)?", "What kind of (X) did (X) maintain?", "show me all (X) that (X) maintained", "show me the (X) that (X) maintained", "which (Y) did (X) maintain?", "which (Y) does (X) maintain?", "which (Y) maintain the (X)?", "which (Y) maintains the (X)?", "which (Y) was maintained by (X)?", "which (Y) were maintained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1598",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1_142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are maintained by (X)?", "How many (Y) did (X) maintain?", "How often did (X) maintain?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1599",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produce (X)?", "Give me all (X) that produced (X)?", "Give me all (X) that produced the (X)", "List all (X) produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produces (X)?", "Who produces the (X)?", "Who was the (X) that produced (X)?", "which (Y) produce (X)?", "which (Y) produced (X)?", "which (Y) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1600",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produced by (X)?", "List all (X) produced by (X)?", "What (Y) was produced by (X)?", "What (Y) were produced by (X)?", "What kind of (X) did (X) produce?", "show me all (X) that (X) produced", "show me the (X) that (X) produced", "which (Y) did (X) produce?", "which (Y) does (X) produce?", "which (Y) produce the (X)?", "which (Y) produces the (X)?", "which (Y) was produced by (X)?", "which (Y) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1601",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are produced by (X)?", "How many (Y) did (X) produce?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1602",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4_137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded (X)?", "Who precedes (X)?", "Who was the (X) that preceded (X)?", "Whom is (X) precede?", "Whom was (X) precede?", "which (Y) preceded (X)?", "which (Y) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/predecessor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1603",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4_137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) preceded by?", "Who was preceded by (X)?", "Who were preceded by (X)?", "Whom did (X) precede?", "which (Y) was preceded by (X)?", "which (Y) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1604",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4_137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are preceded by (X)?", "How many (Y) did (X) precede?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1605",
    "lexicalEntryUri" : "http://localhost:8080#to_marry_1_151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who married (X)?", "Who marries (X)?", "Who was the (X) that married (X)?", "Whom is (X) marry?", "Whom was (X) marry?", "which (Y) married (X)?", "which (Y) marries (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1606",
    "lexicalEntryUri" : "http://localhost:8080#to_marry_1_151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) married to?", "Who was married to (X)?", "Who were married to (X)?", "Whom did (X) marry?", "which (Y) was married to (X)?", "which (Y) were married to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1607",
    "lexicalEntryUri" : "http://localhost:8080#to_marry_1_151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are married to (X)?", "How many (Y) did (X) marry?", "How often did (X) marry?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1608",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5_190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produce (X)?", "Give me all (X) that produced (X)?", "Give me all (X) that produced the (X)", "List all (X) produce (X)?", "What (Y) produced (X)?", "What (Y) produced the (X)?", "What (Y) produces (X)?", "What (Y) produces the (X)?", "What (Y) was the (X) that produced (X)?", "which (Y) produce (X)?", "which (Y) produced (X)?", "which (Y) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1609",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5_190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) produced by (X)?", "List all (X) produced by (X)?", "Who kind of (X) did (X) produce?", "Who was produced by (X)?", "Who were produced by (X)?", "show me all (X) that (X) produced", "show me the (X) that (X) produced", "which (Y) did (X) produce?", "which (Y) does (X) produce?", "which (Y) produce the (X)?", "which (Y) produces the (X)?", "which (Y) was produced by (X)?", "which (Y) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1610",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5_190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are produced by (X)?", "How many (Y) did (X) produce?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1611",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1_148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) distribute (X)?", "Give me all (X) that distributed (X)?", "Give me all (X) that distributed the (X)", "List all (X) distribute (X)?", "Who distributed (X)?", "Who distributed the (X)?", "Who distributes (X)?", "Who distributes the (X)?", "Who was the (X) that distributed (X)?", "which (Y) distribute (X)?", "which (Y) distributed (X)?", "which (Y) distributes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1612",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1_148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) distributed by (X)?", "List all (X) distributed by (X)?", "What (Y) was distributed by (X)?", "What (Y) were distributed by (X)?", "What kind of (X) did (X) distribute?", "show me all (X) that (X) distributed", "show me the (X) that (X) distributed", "which (Y) did (X) distribute?", "which (Y) distribute the (X)?", "which (Y) distributes the (X)?", "which (Y) does (X) distribute?", "which (Y) was distributed by (X)?", "which (Y) were distributed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1613",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1_148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are distributed by (X)?", "How many (Y) did (X) distribute?", "How often did (X) distribute?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1614",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4_212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) that wrote (X)?", "Give me all (X) that wrote the (X)", "Give me all (X) write (X)?", "List all (X) write (X)?", "Who was the (X) that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who wrote (X)?", "Who wrote the (X)?", "which (Y) write (X)?", "which (Y) writes (X)?", "which (Y) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1615",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4_212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) written by (X)?", "List all (X) written by (X)?", "What (Y) was written by (X)?", "What (Y) were written by (X)?", "What kind of (X) did (X) write?", "show me all (X) that (X) wrote", "show me the (X) that (X) wrote", "which (Y) did (X) write?", "which (Y) does (X) write?", "which (Y) was written by (X)?", "which (Y) were written by (X)?", "which (Y) write the (X)?", "which (Y) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1616",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4_212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are written by (X)?", "How many (Y) did (X) write?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1617",
    "lexicalEntryUri" : "http://localhost:8080#to_express_141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) express (X)?", "Give me all (X) that expressed (X)?", "Give me all (X) that expressed the (X)", "List all (X) express (X)?", "What (Y) expressed (X)?", "What (Y) expressed the (X)?", "What (Y) expresses (X)?", "What (Y) expresses the (X)?", "What (Y) was the (X) that expressed (X)?", "which (Y) express (X)?", "which (Y) expressed (X)?", "which (Y) expresses (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1618",
    "lexicalEntryUri" : "http://localhost:8080#to_express_141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) expressed by (X)?", "List all (X) expressed by (X)?", "What (Y) was expressed by (X)?", "What (Y) were expressed by (X)?", "What kind of (X) did (X) express?", "show me all (X) that (X) expressed", "show me the (X) that (X) expressed", "which (Y) did (X) express?", "which (Y) does (X) express?", "which (Y) express the (X)?", "which (Y) expresses the (X)?", "which (Y) was expressed by (X)?", "which (Y) were expressed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1619",
    "lexicalEntryUri" : "http://localhost:8080#to_express_141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are expressed by (X)?", "How many (Y) did (X) express?", "How often did (X) express?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1620",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2_166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) create (X)?", "Give me all (X) that created (X)?", "Give me all (X) that created the (X)", "List all (X) create (X)?", "Who created (X)?", "Who created the (X)?", "Who creates (X)?", "Who creates the (X)?", "Who was the (X) that created (X)?", "which (Y) create (X)?", "which (Y) created (X)?", "which (Y) creates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1621",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2_166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) created by (X)?", "List all (X) created by (X)?", "What (Y) was created by (X)?", "What (Y) were created by (X)?", "What kind of (X) did (X) create?", "show me all (X) that (X) created", "show me the (X) that (X) created", "which (Y) create the (X)?", "which (Y) creates the (X)?", "which (Y) did (X) create?", "which (Y) does (X) create?", "which (Y) was created by (X)?", "which (Y) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1622",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2_166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are created by (X)?", "How many (Y) did (X) create?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1623",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) call (X)?", "Give me all (X) that called (X)?", "Give me all (X) that called the (X)", "List all (X) call (X)?", "What (Y) called (X)?", "What (Y) called the (X)?", "What (Y) calls (X)?", "What (Y) calls the (X)?", "What (Y) was the (X) that called (X)?", "which (Y) call (X)?", "which (Y) called (X)?", "which (Y) calls (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/shipNamesake> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1624",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) called by (X)?", "List all (X) called by (X)?", "Who kind of (X) did (X) call?", "Who was called by (X)?", "Who were called by (X)?", "show me all (X) that (X) called", "show me the (X) that (X) called", "which (Y) call the (X)?", "which (Y) calls the (X)?", "which (Y) did (X) call?", "which (Y) does (X) call?", "which (Y) was called by (X)?", "which (Y) were called by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/shipNamesake> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1625",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are called by (X)?", "How many (Y) did (X) call?", "How often did (X) call?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/shipNamesake> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1626",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1_204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) rent (X)?", "Give me all (X) that rented (X)?", "Give me all (X) that rented the (X)", "List all (X) rent (X)?", "Who rented (X)?", "Who rented the (X)?", "Who rents (X)?", "Who rents the (X)?", "Who was the (X) that rented (X)?", "which (Y) rent (X)?", "which (Y) rented (X)?", "which (Y) rents (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/tenant> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1627",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1_204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) rented by (X)?", "List all (X) rented by (X)?", "What (Y) was rented by (X)?", "What (Y) were rented by (X)?", "What kind of (X) did (X) rent?", "show me all (X) that (X) rented", "show me the (X) that (X) rented", "which (Y) did (X) rent?", "which (Y) does (X) rent?", "which (Y) rent the (X)?", "which (Y) rents the (X)?", "which (Y) was rented by (X)?", "which (Y) were rented by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1628",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1_204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are rented by (X)?", "How many (Y) did (X) rent?", "How often did (X) rent?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1629",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who played (X)?", "Who plays (X)?", "Who was the (X) that played (X)?", "Whom is (X) play?", "Whom was (X) play?", "which (Y) played (X)?", "which (Y) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1630",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) played by?", "Who was played by (X)?", "Who were played by (X)?", "Whom did (X) play?", "which (Y) was played by (X)?", "which (Y) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1631",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played by (X)?", "How many (Y) did (X) play?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1632",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3_221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) that wrote (X)?", "Give me all (X) that wrote the (X)", "Give me all (X) write (X)?", "List all (X) write (X)?", "Who was the (X) that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who wrote (X)?", "Who wrote the (X)?", "which (Y) write (X)?", "which (Y) writes (X)?", "which (Y) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1633",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3_221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) written by (X)?", "List all (X) written by (X)?", "What (Y) was written by (X)?", "What (Y) were written by (X)?", "What kind of (X) did (X) write?", "show me all (X) that (X) wrote", "show me the (X) that (X) wrote", "which (Y) did (X) write?", "which (Y) does (X) write?", "which (Y) was written by (X)?", "which (Y) were written by (X)?", "which (Y) write the (X)?", "which (Y) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1634",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3_221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are written by (X)?", "How many (Y) did (X) write?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1635",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6_216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) that wrote (X)?", "Give me all (X) that wrote the (X)", "Give me all (X) write (X)?", "List all (X) write (X)?", "Who was the (X) that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who wrote (X)?", "Who wrote the (X)?", "which (Y) write (X)?", "which (Y) writes (X)?", "which (Y) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1636",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6_216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) written by (X)?", "List all (X) written by (X)?", "What (Y) was written by (X)?", "What (Y) were written by (X)?", "What kind of (X) did (X) write?", "show me all (X) that (X) wrote", "show me the (X) that (X) wrote", "which (Y) did (X) write?", "which (Y) does (X) write?", "which (Y) was written by (X)?", "which (Y) were written by (X)?", "which (Y) write the (X)?", "which (Y) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1637",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6_216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are written by (X)?", "How many (Y) did (X) write?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1638",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) develop (X)?", "Give me all (X) that developed (X)?", "Give me all (X) that developed the (X)", "List all (X) develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who develops (X)?", "Who develops the (X)?", "Who was the (X) that developed (X)?", "which (Y) develop (X)?", "which (Y) developed (X)?", "which (Y) develops (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1639",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) developed by (X)?", "List all (X) developed by (X)?", "What (Y) was developed by (X)?", "What (Y) were developed by (X)?", "What kind of (X) did (X) develop?", "show me all (X) that (X) developed", "show me the (X) that (X) developed", "which (Y) develop the (X)?", "which (Y) develops the (X)?", "which (Y) did (X) develop?", "which (Y) does (X) develop?", "which (Y) was developed by (X)?", "which (Y) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1640",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are developed by (X)?", "How many (Y) did (X) develop?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1641",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit_149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) exhibit (X)?", "Give me all (X) that exhibited (X)?", "Give me all (X) that exhibited the (X)", "List all (X) exhibit (X)?", "What (Y) exhibited (X)?", "What (Y) exhibited the (X)?", "What (Y) exhibits (X)?", "What (Y) exhibits the (X)?", "What (Y) was the (X) that exhibited (X)?", "which (Y) exhibit (X)?", "which (Y) exhibited (X)?", "which (Y) exhibits (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/museum> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1642",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit_149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) exhibited by (X)?", "List all (X) exhibited by (X)?", "What (Y) was exhibited by (X)?", "What (Y) were exhibited by (X)?", "What kind of (X) did (X) exhibit?", "show me all (X) that (X) exhibited", "show me the (X) that (X) exhibited", "which (Y) did (X) exhibit?", "which (Y) does (X) exhibit?", "which (Y) exhibit the (X)?", "which (Y) exhibits the (X)?", "which (Y) was exhibited by (X)?", "which (Y) were exhibited by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1643",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit_149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are exhibited by (X)?", "How many (Y) did (X) exhibit?", "How often did (X) exhibit?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1644",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4_200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed (X)?", "Who follows (X)?", "Who was the (X) that followed (X)?", "Whom is (X) follow?", "Whom was (X) follow?", "which (Y) followed (X)?", "which (Y) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1645",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4_200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) followed by?", "Who was followed by (X)?", "Who were followed by (X)?", "Whom did (X) follow?", "which (Y) was followed by (X)?", "which (Y) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1646",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4_200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are followed by (X)?", "How many (Y) did (X) follow?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1647",
    "lexicalEntryUri" : "http://localhost:8080#to_erupt_1_178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) erupt (X)?", "Give me all (X) that erupted (X)?", "Give me all (X) that erupted the (X)", "List all (X) erupt (X)?", "What (Y) erupted (X)?", "What (Y) erupted the (X)?", "What (Y) erupts (X)?", "What (Y) erupts the (X)?", "What (Y) was the (X) that erupted (X)?", "which (Y) erupt (X)?", "which (Y) erupted (X)?", "which (Y) erupts (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/eruptionYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1648",
    "lexicalEntryUri" : "http://localhost:8080#to_erupt_1_178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) erupted by (X)?", "List all (X) erupted by (X)?", "What (Y) was erupted by (X)?", "What (Y) were erupted by (X)?", "What kind of (X) did (X) erupt?", "show me all (X) that (X) erupted", "show me the (X) that (X) erupted", "which (Y) did (X) erupt?", "which (Y) does (X) erupt?", "which (Y) erupt the (X)?", "which (Y) erupts the (X)?", "which (Y) was erupted by (X)?", "which (Y) were erupted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/eruptionYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1649",
    "lexicalEntryUri" : "http://localhost:8080#to_erupt_1_178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are erupted by (X)?", "How many (Y) did (X) erupt?", "How often did (X) erupt?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/eruptionYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1650",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1_208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) own (X)?", "Give me all (X) that owned (X)?", "Give me all (X) that owned the (X)", "List all (X) own (X)?", "Who owned (X)?", "Who owned the (X)?", "Who owns (X)?", "Who owns the (X)?", "Who was the (X) that owned (X)?", "which (Y) own (X)?", "which (Y) owned (X)?", "which (Y) owns (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1651",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1_208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) owned by (X)?", "List all (X) owned by (X)?", "What (Y) was owned by (X)?", "What (Y) were owned by (X)?", "What kind of (X) did (X) own?", "show me all (X) that (X) owned", "show me the (X) that (X) owned", "which (Y) did (X) own?", "which (Y) does (X) own?", "which (Y) own the (X)?", "which (Y) owns the (X)?", "which (Y) was owned by (X)?", "which (Y) were owned by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1652",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1_208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are owned by (X)?", "How many (Y) did (X) own?", "How often did (X) own?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1653",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2_219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) direct (X)?", "Give me all (X) that directed (X)?", "Give me all (X) that directed the (X)", "List all (X) direct (X)?", "Who directed (X)?", "Who directed the (X)?", "Who directs (X)?", "Who directs the (X)?", "Who was the (X) that directed (X)?", "which (Y) direct (X)?", "which (Y) directed (X)?", "which (Y) directs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1654",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2_219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) directed by (X)?", "List all (X) directed by (X)?", "What (Y) was directed by (X)?", "What (Y) were directed by (X)?", "What kind of (X) did (X) direct?", "show me all (X) that (X) directed", "show me the (X) that (X) directed", "which (Y) did (X) direct?", "which (Y) direct the (X)?", "which (Y) directs the (X)?", "which (Y) does (X) direct?", "which (Y) was directed by (X)?", "which (Y) were directed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1655",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2_219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are directed by (X)?", "How many (Y) did (X) direct?", "How often did (X) direct?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1656",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1_211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) design (X)?", "Give me all (X) that designed (X)?", "Give me all (X) that designed the (X)", "List all (X) design (X)?", "Who designed (X)?", "Who designed the (X)?", "Who designs (X)?", "Who designs the (X)?", "Who was the (X) that designed (X)?", "which (Y) design (X)?", "which (Y) designed (X)?", "which (Y) designs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1657",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1_211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) designed by (X)?", "List all (X) designed by (X)?", "What (Y) was designed by (X)?", "What (Y) were designed by (X)?", "What kind of (X) did (X) design?", "show me all (X) that (X) designed", "show me the (X) that (X) designed", "which (Y) design the (X)?", "which (Y) designs the (X)?", "which (Y) did (X) design?", "which (Y) does (X) design?", "which (Y) was designed by (X)?", "which (Y) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1658",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1_211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are designed by (X)?", "How many (Y) did (X) design?", "How often did (X) design?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1659",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2_165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) operate (X)?", "Give me all (X) that operated (X)?", "Give me all (X) that operated the (X)", "List all (X) operate (X)?", "Who operated (X)?", "Who operated the (X)?", "Who operates (X)?", "Who operates the (X)?", "Who was the (X) that operated (X)?", "which (Y) operate (X)?", "which (Y) operated (X)?", "which (Y) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1660",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2_165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) operated by (X)?", "List all (X) operated by (X)?", "What (Y) was operated by (X)?", "What (Y) were operated by (X)?", "What kind of (X) did (X) operate?", "show me all (X) that (X) operated", "show me the (X) that (X) operated", "which (Y) did (X) operate?", "which (Y) does (X) operate?", "which (Y) operate the (X)?", "which (Y) operates the (X)?", "which (Y) was operated by (X)?", "which (Y) were operated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1661",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2_165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are operated by (X)?", "How many (Y) did (X) operate?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1662",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1_198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) starring in (X)?", "Give me all (X) that starred in (X)?", "Give me all (X) that starred in the (X)", "List all (X) starring in (X)?", "Who starred in (X)?", "Who starred in the (X)?", "Who starring in (X)?", "Who starring in the (X)?", "Who was the (X) that starred in (X)?", "which (Y) starred in (X)?", "which (Y) starring in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1663",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1_198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) starred_in by (X)?", "List all (X) starred_in by (X)?", "What (Y) was starred_in by (X)?", "What (Y) were starred_in by (X)?", "What kind of (X) did (X) starring in?", "show me all (X) that (X) starred in", "show me the (X) that (X) starred in", "which (Y) did (X) starring in?", "which (Y) does (X) starring in?", "which (Y) starring in the (X)?", "which (Y) was starred_in by (X)?", "which (Y) were starred_in by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1664",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1_198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are starred_in by (X)?", "How many (Y) did (X) starring in?", "How often did (X) starring in?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1665",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5_215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) that wrote (X)?", "Give me all (X) that wrote the (X)", "Give me all (X) write (X)?", "List all (X) write (X)?", "Who was the (X) that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who wrote (X)?", "Who wrote the (X)?", "which (Y) write (X)?", "which (Y) writes (X)?", "which (Y) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/allLyrics> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1666",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5_215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) written by (X)?", "List all (X) written by (X)?", "What (Y) was written by (X)?", "What (Y) were written by (X)?", "What kind of (X) did (X) write?", "show me all (X) that (X) wrote", "show me the (X) that (X) wrote", "which (Y) did (X) write?", "which (Y) does (X) write?", "which (Y) was written by (X)?", "which (Y) were written by (X)?", "which (Y) write the (X)?", "which (Y) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1667",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5_215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are written by (X)?", "How many (Y) did (X) write?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1668",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3_191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed (X)?", "Who follows (X)?", "Who was the (X) that followed (X)?", "Whom is (X) follow?", "Whom was (X) follow?", "which (Y) followed (X)?", "which (Y) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/before> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1669",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3_191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) followed by?", "Who was followed by (X)?", "Who were followed by (X)?", "Whom did (X) follow?", "which (Y) was followed by (X)?", "which (Y) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1670",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3_191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are followed by (X)?", "How many (Y) did (X) follow?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1671",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1_170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) edit (X)?", "Give me all (X) that edited (X)?", "Give me all (X) that edited the (X)", "List all (X) edit (X)?", "Who edited (X)?", "Who edited the (X)?", "Who edits (X)?", "Who edits the (X)?", "Who was the (X) that edited (X)?", "which (Y) edit (X)?", "which (Y) edited (X)?", "which (Y) edits (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1672",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1_170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) edited by (X)?", "List all (X) edited by (X)?", "What (Y) was edited by (X)?", "What (Y) were edited by (X)?", "What kind of (X) did (X) edit?", "show me all (X) that (X) edited", "show me the (X) that (X) edited", "which (Y) did (X) edit?", "which (Y) does (X) edit?", "which (Y) edit the (X)?", "which (Y) edits the (X)?", "which (Y) was edited by (X)?", "which (Y) were edited by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1673",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1_170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are edited by (X)?", "How many (Y) did (X) edit?", "How often did (X) edit?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1674",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1_155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) present (X)?", "Give me all (X) that presented (X)?", "Give me all (X) that presented the (X)", "List all (X) present (X)?", "Who presented (X)?", "Who presented the (X)?", "Who presents (X)?", "Who presents the (X)?", "Who was the (X) that presented (X)?", "which (Y) present (X)?", "which (Y) presented (X)?", "which (Y) presents (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1675",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1_155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) presented by (X)?", "List all (X) presented by (X)?", "What (Y) was presented by (X)?", "What (Y) were presented by (X)?", "What kind of (X) did (X) present?", "show me all (X) that (X) presented", "show me the (X) that (X) presented", "which (Y) did (X) present?", "which (Y) does (X) present?", "which (Y) present the (X)?", "which (Y) presents the (X)?", "which (Y) was presented by (X)?", "which (Y) were presented by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1676",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1_155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are presented by (X)?", "How many (Y) did (X) present?", "How often did (X) present?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1677",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1_203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) follow (X)?", "Give me all (X) that followed (X)?", "Give me all (X) that followed the (X)", "List all (X) follow (X)?", "What (Y) followed (X)?", "What (Y) followed the (X)?", "What (Y) follows (X)?", "What (Y) follows the (X)?", "What (Y) was the (X) that followed (X)?", "which (Y) follow (X)?", "which (Y) followed (X)?", "which (Y) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nextTitle> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1678",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1_203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) followed by (X)?", "List all (X) followed by (X)?", "What (Y) was followed by (X)?", "What (Y) were followed by (X)?", "What kind of (X) did (X) follow?", "show me all (X) that (X) followed", "show me the (X) that (X) followed", "which (Y) did (X) follow?", "which (Y) does (X) follow?", "which (Y) follow the (X)?", "which (Y) follows the (X)?", "which (Y) was followed by (X)?", "which (Y) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1679",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1_203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are followed by (X)?", "How many (Y) did (X) follow?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1680",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2_159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) paint (X)?", "Give me all (X) that painted (X)?", "Give me all (X) that painted the (X)", "List all (X) paint (X)?", "Who painted (X)?", "Who painted the (X)?", "Who paints (X)?", "Who paints the (X)?", "Who was the (X) that painted (X)?", "which (Y) paint (X)?", "which (Y) painted (X)?", "which (Y) paints (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1681",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2_159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) painted by (X)?", "List all (X) painted by (X)?", "What (Y) was painted by (X)?", "What (Y) were painted by (X)?", "What kind of (X) did (X) paint?", "show me all (X) that (X) painted", "show me the (X) that (X) painted", "which (Y) did (X) paint?", "which (Y) does (X) paint?", "which (Y) paint the (X)?", "which (Y) paints the (X)?", "which (Y) was painted by (X)?", "which (Y) were painted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1682",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2_159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are painted by (X)?", "How many (Y) did (X) paint?", "How often did (X) paint?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1683",
    "lexicalEntryUri" : "http://localhost:8080#to_play_3_163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) play (X)?", "Give me all (X) that played (X)?", "Give me all (X) that played the (X)", "List all (X) play (X)?", "Who played (X)?", "Who played the (X)?", "Who plays (X)?", "Who plays the (X)?", "Who was the (X) that played (X)?", "which (Y) play (X)?", "which (Y) played (X)?", "which (Y) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1684",
    "lexicalEntryUri" : "http://localhost:8080#to_play_3_163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) played by (X)?", "List all (X) played by (X)?", "What (Y) was played by (X)?", "What (Y) were played by (X)?", "What kind of (X) did (X) play?", "show me all (X) that (X) played", "show me the (X) that (X) played", "which (Y) did (X) play?", "which (Y) does (X) play?", "which (Y) play the (X)?", "which (Y) plays the (X)?", "which (Y) was played by (X)?", "which (Y) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1685",
    "lexicalEntryUri" : "http://localhost:8080#to_play_3_163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played by (X)?", "How many (Y) did (X) play?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1686",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1_224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who found (X)?", "Who founded (X)?", "Who was the (X) that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (Y) found (X)?", "which (Y) founded (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1687",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1_224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (Y) was founded by (X)?", "which (Y) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1688",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1_224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are founded by (X)?", "How many (Y) did (X) found?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1689",
    "lexicalEntryUri" : "http://localhost:8080#to_pay_1_168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all (X) payed by (X)?", "List all (X) payed by (X)?", "What (Y) was payed by (X)?", "What (Y) were payed by (X)?", "show me the (X) that (X) payed", "which (Y) did (X) pay?", "which (Y) pay (X)?", "which (Y) payed (X)?", "which (Y) was payed by (X)?", "which (Y) were payed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1690",
    "lexicalEntryUri" : "http://localhost:8080#to_pay_1_168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all (X) pay (X)?", "What (Y) payed (X)?", "What (Y) payed the (X) (X)?", "What (Y) payed the (X)?", "What (Y) pays (X)?", "What (Y) pays the (X) (X)?", "What (Y) pays the (X)?", "What (Y) was the (X) that payed (X)?", "which (Y) did (X) pay?", "which (Y) does (X) pay?", "which (Y) pay (X)?", "which (Y) payed (X)?", "which (Y) pays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1691",
    "lexicalEntryUri" : "http://localhost:8080#to_pay_1_168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are payed by (X)?", "How many (Y) did (X) pay?", "How often did (X) pay?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1692",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) develop (X)?", "Give me all (X) that developed (X)?", "Give me all (X) that developed the (X)", "List all (X) develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who develops (X)?", "Who develops the (X)?", "Who was the (X) that developed (X)?", "which (Y) develop (X)?", "which (Y) developed (X)?", "which (Y) develops (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1693",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) developed by (X)?", "List all (X) developed by (X)?", "What (Y) was developed by (X)?", "What (Y) were developed by (X)?", "What kind of (X) did (X) develop?", "show me all (X) that (X) developed", "show me the (X) that (X) developed", "which (Y) develop the (X)?", "which (Y) develops the (X)?", "which (Y) did (X) develop?", "which (Y) does (X) develop?", "which (Y) was developed by (X)?", "which (Y) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1694",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are developed by (X)?", "How many (Y) did (X) develop?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1695",
    "lexicalEntryUri" : "http://localhost:8080#to_cross_205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) cross (X)?", "Give me all (X) that crossed (X)?", "Give me all (X) that crossed the (X)", "List all (X) cross (X)?", "What (Y) crossed (X)?", "What (Y) crossed the (X)?", "What (Y) crosses (X)?", "What (Y) crosses the (X)?", "What (Y) was the (X) that crossed (X)?", "which (Y) cross (X)?", "which (Y) crossed (X)?", "which (Y) crosses (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1696",
    "lexicalEntryUri" : "http://localhost:8080#to_cross_205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) crossed by (X)?", "List all (X) crossed by (X)?", "What (Y) was crossed by (X)?", "What (Y) were crossed by (X)?", "What kind of (X) did (X) cross?", "show me all (X) that (X) crossed", "show me the (X) that (X) crossed", "which (Y) cross the (X)?", "which (Y) crosses the (X)?", "which (Y) did (X) cross?", "which (Y) does (X) cross?", "which (Y) was crossed by (X)?", "which (Y) were crossed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1697",
    "lexicalEntryUri" : "http://localhost:8080#to_cross_205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are crossed by (X)?", "How many (Y) did (X) cross?", "How often did (X) cross?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1698",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1_167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) create (X)?", "Give me all (X) that created (X)?", "Give me all (X) that created the (X)", "List all (X) create (X)?", "Who created (X)?", "Who created the (X)?", "Who creates (X)?", "Who creates the (X)?", "Who was the (X) that created (X)?", "which (Y) create (X)?", "which (Y) created (X)?", "which (Y) creates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1699",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1_167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) created by (X)?", "List all (X) created by (X)?", "What (Y) was created by (X)?", "What (Y) were created by (X)?", "What kind of (X) did (X) create?", "show me all (X) that (X) created", "show me the (X) that (X) created", "which (Y) create the (X)?", "which (Y) creates the (X)?", "which (Y) did (X) create?", "which (Y) does (X) create?", "which (Y) was created by (X)?", "which (Y) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1700",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1_167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are created by (X)?", "How many (Y) did (X) create?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1701",
    "lexicalEntryUri" : "http://localhost:8080#to_possess_1_209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) poss (X)?", "Give me all (X) that possessed (X)?", "Give me all (X) that possessed the (X)", "List all (X) poss (X)?", "What (Y) possess (X)?", "What (Y) possess the (X)?", "What (Y) possessed (X)?", "What (Y) possessed the (X)?", "What (Y) was the (X) that possessed (X)?", "which (Y) poss (X)?", "which (Y) possess (X)?", "which (Y) possessed (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/mineral> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1702",
    "lexicalEntryUri" : "http://localhost:8080#to_possess_1_209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) possessed by (X)?", "List all (X) possessed by (X)?", "What (Y) was possessed by (X)?", "What (Y) were possessed by (X)?", "What kind of (X) did (X) poss?", "show me all (X) that (X) possessed", "show me the (X) that (X) possessed", "which (Y) did (X) poss?", "which (Y) does (X) poss?", "which (Y) poss the (X)?", "which (Y) possess the (X)?", "which (Y) was possessed by (X)?", "which (Y) were possessed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/mineral> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1703",
    "lexicalEntryUri" : "http://localhost:8080#to_possess_1_209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are possessed by (X)?", "How many (Y) did (X) poss?", "How often did (X) poss?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/mineral> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1704",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2_220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) that wrote (X)?", "Give me all (X) that wrote the (X)", "Give me all (X) write (X)?", "List all (X) write (X)?", "Who was the (X) that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who wrote (X)?", "Who wrote the (X)?", "which (Y) write (X)?", "which (Y) writes (X)?", "which (Y) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1705",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2_220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) written by (X)?", "List all (X) written by (X)?", "What (Y) was written by (X)?", "What (Y) were written by (X)?", "What kind of (X) did (X) write?", "show me all (X) that (X) wrote", "show me the (X) that (X) wrote", "which (Y) did (X) write?", "which (Y) does (X) write?", "which (Y) was written by (X)?", "which (Y) were written by (X)?", "which (Y) write the (X)?", "which (Y) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1706",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2_220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are written by (X)?", "How many (Y) did (X) write?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1707",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1_174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) control (X)?", "Give me all (X) that controlled (X)?", "Give me all (X) that controlled the (X)", "List all (X) control (X)?", "Who controlled (X)?", "Who controlled the (X)?", "Who controls (X)?", "Who controls the (X)?", "Who was the (X) that controlled (X)?", "which (Y) control (X)?", "which (Y) controlled (X)?", "which (Y) controls (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/controlledby> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1708",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1_174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) controlled by (X)?", "List all (X) controlled by (X)?", "What (Y) was controlled by (X)?", "What (Y) were controlled by (X)?", "What kind of (X) did (X) control?", "show me all (X) that (X) controlled", "show me the (X) that (X) controlled", "which (Y) control the (X)?", "which (Y) controls the (X)?", "which (Y) did (X) control?", "which (Y) does (X) control?", "which (Y) was controlled by (X)?", "which (Y) were controlled by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1709",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1_174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are controlled by (X)?", "How many (Y) did (X) control?", "How often did (X) control?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1710",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1_156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) leave (X)?", "Give me all (X) that left (X)?", "Give me all (X) that left the (X)", "List all (X) leave (X)?", "Who leaves (X)?", "Who leaves the (X)?", "Who left (X)?", "Who left the (X)?", "Who was the (X) that left (X)?", "which (Y) leave (X)?", "which (Y) leaves (X)?", "which (Y) left (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1711",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1_156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) left by (X)?", "List all (X) left by (X)?", "What (Y) was left by (X)?", "What (Y) were left by (X)?", "What kind of (X) did (X) leave?", "show me all (X) that (X) left", "show me the (X) that (X) left", "which (Y) did (X) leave?", "which (Y) does (X) leave?", "which (Y) leave the (X)?", "which (Y) leaves the (X)?", "which (Y) was left by (X)?", "which (Y) were left by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1712",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1_156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are left by (X)?", "How many (Y) did (X) leave?", "How often did (X) leave?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1713",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2_195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) follow (X)?", "Give me all (X) that followed (X)?", "Give me all (X) that followed the (X)", "List all (X) follow (X)?", "What (Y) followed (X)?", "What (Y) followed the (X)?", "What (Y) follows (X)?", "What (Y) follows the (X)?", "What (Y) was the (X) that followed (X)?", "which (Y) follow (X)?", "which (Y) followed (X)?", "which (Y) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1714",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2_195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) followed by (X)?", "List all (X) followed by (X)?", "What (Y) was followed by (X)?", "What (Y) were followed by (X)?", "What kind of (X) did (X) follow?", "show me all (X) that (X) followed", "show me the (X) that (X) followed", "which (Y) did (X) follow?", "which (Y) does (X) follow?", "which (Y) follow the (X)?", "which (Y) follows the (X)?", "which (Y) was followed by (X)?", "which (Y) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1715",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2_195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are followed by (X)?", "How many (Y) did (X) follow?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1716",
    "lexicalEntryUri" : "http://localhost:8080#to_kill_1_179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) kill (X)?", "Give me all (X) that killed (X)?", "Give me all (X) that killed the (X)", "List all (X) kill (X)?", "Who killed (X)?", "Who killed the (X)?", "Who kills (X)?", "Who kills the (X)?", "Who was the (X) that killed (X)?", "which (Y) kill (X)?", "which (Y) killed (X)?", "which (Y) kills (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/conviction> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1717",
    "lexicalEntryUri" : "http://localhost:8080#to_kill_1_179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) killed by (X)?", "List all (X) killed by (X)?", "What (Y) was killed by (X)?", "What (Y) were killed by (X)?", "What kind of (X) did (X) kill?", "show me all (X) that (X) killed", "show me the (X) that (X) killed", "which (Y) did (X) kill?", "which (Y) does (X) kill?", "which (Y) kill the (X)?", "which (Y) kills the (X)?", "which (Y) was killed by (X)?", "which (Y) were killed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/conviction> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1718",
    "lexicalEntryUri" : "http://localhost:8080#to_kill_1_179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are killed by (X)?", "How many (Y) did (X) kill?", "How often did (X) kill?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/conviction> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1719",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) play (X)?", "Give me all (X) that played (X)?", "Give me all (X) that played the (X)", "List all (X) play (X)?", "Who played (X)?", "Who played the (X)?", "Who plays (X)?", "Who plays the (X)?", "Who was the (X) that played (X)?", "which (Y) play (X)?", "which (Y) played (X)?", "which (Y) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1720",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) played by (X)?", "List all (X) played by (X)?", "What (Y) was played by (X)?", "What (Y) were played by (X)?", "What kind of (X) did (X) play?", "show me all (X) that (X) played", "show me the (X) that (X) played", "which (Y) did (X) play?", "which (Y) does (X) play?", "which (Y) play the (X)?", "which (Y) plays the (X)?", "which (Y) was played by (X)?", "which (Y) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1721",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played by (X)?", "How many (Y) did (X) play?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1722",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1_172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) illustrate (X)?", "Give me all (X) that illustrated (X)?", "Give me all (X) that illustrated the (X)", "List all (X) illustrate (X)?", "Who illustrated (X)?", "Who illustrated the (X)?", "Who illustrates (X)?", "Who illustrates the (X)?", "Who was the (X) that illustrated (X)?", "which (Y) illustrate (X)?", "which (Y) illustrated (X)?", "which (Y) illustrates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1723",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1_172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) illustrated by (X)?", "List all (X) illustrated by (X)?", "What (Y) was illustrated by (X)?", "What (Y) were illustrated by (X)?", "What kind of (X) did (X) illustrate?", "show me all (X) that (X) illustrated", "show me the (X) that (X) illustrated", "which (Y) did (X) illustrate?", "which (Y) does (X) illustrate?", "which (Y) illustrate the (X)?", "which (Y) illustrates the (X)?", "which (Y) was illustrated by (X)?", "which (Y) were illustrated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1724",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1_172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are illustrated by (X)?", "How many (Y) did (X) illustrate?", "How often did (X) illustrate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1725",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3_185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) publish (X)?", "Give me all (X) that published (X)?", "Give me all (X) that published the (X)", "List all (X) publish (X)?", "Who published (X)?", "Who published the (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who was the (X) that published (X)?", "which (Y) publish (X)?", "which (Y) published (X)?", "which (Y) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1726",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3_185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) published by (X)?", "List all (X) published by (X)?", "What (Y) was published by (X)?", "What (Y) were published by (X)?", "What kind of (X) did (X) publish?", "show me all (X) that (X) published", "show me the (X) that (X) published", "which (Y) did (X) publish?", "which (Y) does (X) publish?", "which (Y) publish the (X)?", "which (Y) publishes the (X)?", "which (Y) was published by (X)?", "which (Y) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1727",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3_185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are published by (X)?", "How many (Y) did (X) publish?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1728",
    "lexicalEntryUri" : "http://localhost:8080#to_cost_1_225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "How much did (X) cost?", "How much does (X) cost?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1729",
    "lexicalEntryUri" : "http://localhost:8080#to_cost_1_225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "which (Y) costed by (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1730",
    "lexicalEntryUri" : "http://localhost:8080#to_cost_1_225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are costed by (X)?", "How many (Y) did (X) cost?", "How often did (X) cost?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1731",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) that won (X)?", "Give me all (X) that won the (X)", "Give me all (X) win (X)?", "List all (X) win (X)?", "Who was the (X) that won (X)?", "Who wins (X)?", "Who wins the (X)?", "Who won (X)?", "Who won the (X)?", "which (Y) win (X)?", "which (Y) wins (X)?", "which (Y) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1732",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) won by (X)?", "List all (X) won by (X)?", "What (Y) was won by (X)?", "What (Y) were won by (X)?", "What kind of (X) did (X) win?", "show me all (X) that (X) won", "show me the (X) that (X) won", "which (Y) did (X) win?", "which (Y) does (X) win?", "which (Y) was won by (X)?", "which (Y) were won by (X)?", "which (Y) win the (X)?", "which (Y) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1733",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are won by (X)?", "How many (Y) did (X) win?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1734",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) that won (X)?", "Give me all (X) that won the (X)", "Give me all (X) win (X)?", "List all (X) win (X)?", "Who was the (X) that won (X)?", "Who wins (X)?", "Who wins the (X)?", "Who won (X)?", "Who won the (X)?", "which (Y) win (X)?", "which (Y) wins (X)?", "which (Y) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1735",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) won by (X)?", "List all (X) won by (X)?", "What (Y) was won by (X)?", "What (Y) were won by (X)?", "What kind of (X) did (X) win?", "show me all (X) that (X) won", "show me the (X) that (X) won", "which (Y) did (X) win?", "which (Y) does (X) win?", "which (Y) was won by (X)?", "which (Y) were won by (X)?", "which (Y) win the (X)?", "which (Y) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1736",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are won by (X)?", "How many (Y) did (X) win?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1737",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1_187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) drain (X)?", "Give me all (X) that drained (X)?", "Give me all (X) that drained the (X)", "List all (X) drain (X)?", "What (Y) drained (X)?", "What (Y) drained the (X)?", "What (Y) drains (X)?", "What (Y) drains the (X)?", "What (Y) was the (X) that drained (X)?", "which (Y) drain (X)?", "which (Y) drained (X)?", "which (Y) drains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/outflow> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1738",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1_187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) drained by (X)?", "List all (X) drained by (X)?", "What (Y) was drained by (X)?", "What (Y) were drained by (X)?", "What kind of (X) did (X) drain?", "show me all (X) that (X) drained", "show me the (X) that (X) drained", "which (Y) did (X) drain?", "which (Y) does (X) drain?", "which (Y) drain the (X)?", "which (Y) drains the (X)?", "which (Y) was drained by (X)?", "which (Y) were drained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1739",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1_187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are drained by (X)?", "How many (Y) did (X) drain?", "How often did (X) drain?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1740",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1_184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) discover (X)?", "Give me all (X) that discovered (X)?", "Give me all (X) that discovered the (X)", "List all (X) discover (X)?", "Who discovered (X)?", "Who discovered the (X)?", "Who discovers (X)?", "Who discovers the (X)?", "Who was the (X) that discovered (X)?", "which (Y) discover (X)?", "which (Y) discovered (X)?", "which (Y) discovers (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1741",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1_184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) discovered by (X)?", "List all (X) discovered by (X)?", "What (Y) was discovered by (X)?", "What (Y) were discovered by (X)?", "What kind of (X) did (X) discover?", "show me all (X) that (X) discovered", "show me the (X) that (X) discovered", "which (Y) did (X) discover?", "which (Y) discover the (X)?", "which (Y) discovers the (X)?", "which (Y) does (X) discover?", "which (Y) was discovered by (X)?", "which (Y) were discovered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1742",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1_184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are discovered by (X)?", "How many (Y) did (X) discover?", "How often did (X) discover?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1743",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) operate (X)?", "Give me all (X) that operated (X)?", "Give me all (X) that operated the (X)", "List all (X) operate (X)?", "What (Y) operated (X)?", "What (Y) operated the (X)?", "What (Y) operates (X)?", "What (Y) operates the (X)?", "What (Y) was the (X) that operated (X)?", "which (Y) operate (X)?", "which (Y) operated (X)?", "which (Y) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1744",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) operated by (X)?", "List all (X) operated by (X)?", "Who kind of (X) did (X) operate?", "Who was operated by (X)?", "Who were operated by (X)?", "show me all (X) that (X) operated", "show me the (X) that (X) operated", "which (Y) did (X) operate?", "which (Y) does (X) operate?", "which (Y) operate the (X)?", "which (Y) operates the (X)?", "which (Y) was operated by (X)?", "which (Y) were operated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1745",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are operated by (X)?", "How many (Y) did (X) operate?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1746",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) operate (X)?", "Give me all (X) that operated (X)?", "Give me all (X) that operated the (X)", "List all (X) operate (X)?", "Who operated (X)?", "Who operated the (X)?", "Who operates (X)?", "Who operates the (X)?", "Who was the (X) that operated (X)?", "which (Y) operate (X)?", "which (Y) operated (X)?", "which (Y) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1747",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) operated by (X)?", "List all (X) operated by (X)?", "What (Y) was operated by (X)?", "What (Y) were operated by (X)?", "What kind of (X) did (X) operate?", "show me all (X) that (X) operated", "show me the (X) that (X) operated", "which (Y) did (X) operate?", "which (Y) does (X) operate?", "which (Y) operate the (X)?", "which (Y) operates the (X)?", "which (Y) was operated by (X)?", "which (Y) were operated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1748",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are operated by (X)?", "How many (Y) did (X) operate?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1749",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1_162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) paint (X)?", "Give me all (X) that painted (X)?", "Give me all (X) that painted the (X)", "List all (X) paint (X)?", "Who painted (X)?", "Who painted the (X)?", "Who paints (X)?", "Who paints the (X)?", "Who was the (X) that painted (X)?", "which (Y) paint (X)?", "which (Y) painted (X)?", "which (Y) paints (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1750",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1_162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) painted by (X)?", "List all (X) painted by (X)?", "What (Y) was painted by (X)?", "What (Y) were painted by (X)?", "What kind of (X) did (X) paint?", "show me all (X) that (X) painted", "show me the (X) that (X) painted", "which (Y) did (X) paint?", "which (Y) does (X) paint?", "which (Y) paint the (X)?", "which (Y) paints the (X)?", "which (Y) was painted by (X)?", "which (Y) were painted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1751",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1_162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are painted by (X)?", "How many (Y) did (X) paint?", "How often did (X) paint?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1752",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1_136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) precede (X)?", "Give me all (X) that preceded (X)?", "Give me all (X) that preceded the (X)", "List all (X) precede (X)?", "What (Y) preceded (X)?", "What (Y) preceded the (X)?", "What (Y) precedes (X)?", "What (Y) precedes the (X)?", "What (Y) was the (X) that preceded (X)?", "which (Y) precede (X)?", "which (Y) preceded (X)?", "which (Y) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/prevTitle> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1753",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1_136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) preceded by (X)?", "List all (X) preceded by (X)?", "What (Y) was preceded by (X)?", "What (Y) were preceded by (X)?", "What kind of (X) did (X) precede?", "show me all (X) that (X) preceded", "show me the (X) that (X) preceded", "which (Y) did (X) precede?", "which (Y) does (X) precede?", "which (Y) precede the (X)?", "which (Y) precedes the (X)?", "which (Y) was preceded by (X)?", "which (Y) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1754",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1_136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are preceded by (X)?", "How many (Y) did (X) precede?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1755",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4_175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) publish (X)?", "Give me all (X) that published (X)?", "Give me all (X) that published the (X)", "List all (X) publish (X)?", "Who published (X)?", "Who published the (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who was the (X) that published (X)?", "which (Y) publish (X)?", "which (Y) published (X)?", "which (Y) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1756",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4_175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) published by (X)?", "List all (X) published by (X)?", "What (Y) was published by (X)?", "What (Y) were published by (X)?", "What kind of (X) did (X) publish?", "show me all (X) that (X) published", "show me the (X) that (X) published", "which (Y) did (X) publish?", "which (Y) does (X) publish?", "which (Y) publish the (X)?", "which (Y) publishes the (X)?", "which (Y) was published by (X)?", "which (Y) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1757",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4_175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are published by (X)?", "How many (Y) did (X) publish?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1758",
    "lexicalEntryUri" : "http://localhost:8080#german_390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss", "What (Y) are swiss" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#german_390_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1759",
    "lexicalEntryUri" : "http://localhost:8080#german_390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss (X).", "What (Y) are swiss (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1760",
    "lexicalEntryUri" : "http://localhost:8080#afghan_406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all afghan", "What (Y) are afghan" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_406_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1761",
    "lexicalEntryUri" : "http://localhost:8080#afghan_406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all afghan (X).", "What (Y) are afghan (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Afghanistan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1762",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bulgarian", "What (Y) are bulgarian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_415_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1763",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bulgarian (X).", "What (Y) are bulgarian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bulgaria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1764",
    "lexicalEntryUri" : "http://localhost:8080#bengali_400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bengali", "What (Y) are bengali" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bengali_400_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1765",
    "lexicalEntryUri" : "http://localhost:8080#bengali_400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bengali (X).", "What (Y) are bengali (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bangladesh> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1766",
    "lexicalEntryUri" : "http://localhost:8080#swiss_409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss", "What (Y) are swiss" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#swiss_409_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1767",
    "lexicalEntryUri" : "http://localhost:8080#swiss_409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss (X).", "What (Y) are swiss (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1768",
    "lexicalEntryUri" : "http://localhost:8080#botswana_396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all botswana", "What (Y) are botswana" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#botswana_396_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1769",
    "lexicalEntryUri" : "http://localhost:8080#botswana_396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all botswana (X).", "What (Y) are botswana (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Botswana> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1770",
    "lexicalEntryUri" : "http://localhost:8080#belizean_395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belizean", "What (Y) are belizean" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_395_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1771",
    "lexicalEntryUri" : "http://localhost:8080#belizean_395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belizean (X).", "What (Y) are belizean (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belize> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1772",
    "lexicalEntryUri" : "http://localhost:8080#algerian_399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all algerian", "What (Y) are algerian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_399_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1773",
    "lexicalEntryUri" : "http://localhost:8080#algerian_399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all algerian (X).", "What (Y) are algerian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Algeria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1774",
    "lexicalEntryUri" : "http://localhost:8080#albanian_410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all albanian", "What (Y) are albanian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#albanian_410_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1775",
    "lexicalEntryUri" : "http://localhost:8080#albanian_410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all albanian (X).", "What (Y) are albanian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Albania> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1776",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bolivian", "What (Y) are bolivian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_416_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1777",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bolivian (X).", "What (Y) are bolivian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bolivia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1778",
    "lexicalEntryUri" : "http://localhost:8080#barbadian_397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all barbadian", "What (Y) are barbadian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#barbadian_397_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1779",
    "lexicalEntryUri" : "http://localhost:8080#barbadian_397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all barbadian (X).", "What (Y) are barbadian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Barbados> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1780",
    "lexicalEntryUri" : "http://localhost:8080#methodist_402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all methodist", "What (Y) are methodist" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#methodist_402_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1781",
    "lexicalEntryUri" : "http://localhost:8080#methodist_402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all methodist (X).", "What (Y) are methodist (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1782",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bahamian", "What (Y) are bahamian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bahamian_411_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1783",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bahamian (X).", "What (Y) are bahamian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/The_Bahamas> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1784",
    "lexicalEntryUri" : "http://localhost:8080#australian_394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all australian", "What (Y) are australian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_394_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1785",
    "lexicalEntryUri" : "http://localhost:8080#australian_394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all australian (X).", "What (Y) are australian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1786",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all azerbaijani", "What (Y) are azerbaijani" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_401_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1787",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all azerbaijani (X).", "What (Y) are azerbaijani (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Azerbaijan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1788",
    "lexicalEntryUri" : "http://localhost:8080#danish_393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all danish", "What (Y) are danish" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#danish_393_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1789",
    "lexicalEntryUri" : "http://localhost:8080#danish_393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all danish (X).", "What (Y) are danish (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1790",
    "lexicalEntryUri" : "http://localhost:8080#colombian_389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all colombian", "What (Y) are colombian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_389_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1791",
    "lexicalEntryUri" : "http://localhost:8080#colombian_389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all colombian (X).", "What (Y) are colombian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1792",
    "lexicalEntryUri" : "http://localhost:8080#aruban_408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all aruban", "What (Y) are aruban" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_408_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1793",
    "lexicalEntryUri" : "http://localhost:8080#aruban_408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all aruban (X).", "What (Y) are aruban (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Aruba> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1794",
    "lexicalEntryUri" : "http://localhost:8080#czech_404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all czech", "What (Y) are czech" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_404_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1795",
    "lexicalEntryUri" : "http://localhost:8080#czech_404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all czech (X).", "What (Y) are czech (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1796",
    "lexicalEntryUri" : "http://localhost:8080#andorran_398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all andorran", "What (Y) are andorran" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_398_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1797",
    "lexicalEntryUri" : "http://localhost:8080#andorran_398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all andorran (X).", "What (Y) are andorran (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Andorra> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1798",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bermudian", "What (Y) are bermudian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_392_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1799",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bermudian (X).", "What (Y) are bermudian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bermuda> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1800",
    "lexicalEntryUri" : "http://localhost:8080#greek_405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all greek", "What (Y) are greek" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_405_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1801",
    "lexicalEntryUri" : "http://localhost:8080#greek_405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all greek (X).", "What (Y) are greek (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1802",
    "lexicalEntryUri" : "http://localhost:8080#benin_407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all benin", "What (Y) are benin" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#benin_407_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1803",
    "lexicalEntryUri" : "http://localhost:8080#benin_407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all benin (X).", "What (Y) are benin (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Benin> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1804",
    "lexicalEntryUri" : "http://localhost:8080#belgian_391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belgian", "What (Y) are belgian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belgian_391_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1805",
    "lexicalEntryUri" : "http://localhost:8080#belgian_391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belgian (X).", "What (Y) are belgian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belgium> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1806",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all brazilian", "What (Y) are brazilian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_412_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1807",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all brazilian (X).", "What (Y) are brazilian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1808",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belarusian", "What (Y) are belarusian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_414_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1809",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belarusian (X).", "What (Y) are belarusian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belarus> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1810",
    "lexicalEntryUri" : "http://localhost:8080#angolan_413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all angolan", "What (Y) are angolan" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_413_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1811",
    "lexicalEntryUri" : "http://localhost:8080#angolan_413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all angolan (X).", "What (Y) are angolan (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Angola> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1812",
    "lexicalEntryUri" : "http://localhost:8080#female_403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all female", "What (Y) are female" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#female_403_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1813",
    "lexicalEntryUri" : "http://localhost:8080#female_403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all female (X).", "What (Y) are female (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1814",
    "lexicalEntryUri" : "http://localhost:8080#german_390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss", "What (Y) are swiss" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#german_390_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1815",
    "lexicalEntryUri" : "http://localhost:8080#german_390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss (X).", "What (Y) are swiss (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1816",
    "lexicalEntryUri" : "http://localhost:8080#afghan_406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all afghan", "What (Y) are afghan" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_406_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1817",
    "lexicalEntryUri" : "http://localhost:8080#afghan_406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all afghan (X).", "What (Y) are afghan (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Afghanistan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1818",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bulgarian", "What (Y) are bulgarian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_415_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1819",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bulgarian (X).", "What (Y) are bulgarian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bulgaria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1820",
    "lexicalEntryUri" : "http://localhost:8080#bengali_400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bengali", "What (Y) are bengali" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bengali_400_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1821",
    "lexicalEntryUri" : "http://localhost:8080#bengali_400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bengali (X).", "What (Y) are bengali (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bangladesh> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1822",
    "lexicalEntryUri" : "http://localhost:8080#swiss_409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss", "What (Y) are swiss" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#swiss_409_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1823",
    "lexicalEntryUri" : "http://localhost:8080#swiss_409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss (X).", "What (Y) are swiss (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1824",
    "lexicalEntryUri" : "http://localhost:8080#botswana_396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all botswana", "What (Y) are botswana" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#botswana_396_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1825",
    "lexicalEntryUri" : "http://localhost:8080#botswana_396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all botswana (X).", "What (Y) are botswana (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Botswana> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1826",
    "lexicalEntryUri" : "http://localhost:8080#belizean_395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belizean", "What (Y) are belizean" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_395_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1827",
    "lexicalEntryUri" : "http://localhost:8080#belizean_395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belizean (X).", "What (Y) are belizean (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belize> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1828",
    "lexicalEntryUri" : "http://localhost:8080#algerian_399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all algerian", "What (Y) are algerian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_399_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1829",
    "lexicalEntryUri" : "http://localhost:8080#algerian_399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all algerian (X).", "What (Y) are algerian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Algeria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1830",
    "lexicalEntryUri" : "http://localhost:8080#albanian_410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all albanian", "What (Y) are albanian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#albanian_410_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1831",
    "lexicalEntryUri" : "http://localhost:8080#albanian_410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all albanian (X).", "What (Y) are albanian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Albania> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1832",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bolivian", "What (Y) are bolivian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_416_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1833",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bolivian (X).", "What (Y) are bolivian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bolivia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1834",
    "lexicalEntryUri" : "http://localhost:8080#barbadian_397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all barbadian", "What (Y) are barbadian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#barbadian_397_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1835",
    "lexicalEntryUri" : "http://localhost:8080#barbadian_397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all barbadian (X).", "What (Y) are barbadian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Barbados> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1836",
    "lexicalEntryUri" : "http://localhost:8080#methodist_402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all methodist", "What (Y) are methodist" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#methodist_402_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1837",
    "lexicalEntryUri" : "http://localhost:8080#methodist_402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all methodist (X).", "What (Y) are methodist (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1838",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bahamian", "What (Y) are bahamian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bahamian_411_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1839",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bahamian (X).", "What (Y) are bahamian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/The_Bahamas> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1840",
    "lexicalEntryUri" : "http://localhost:8080#australian_394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all australian", "What (Y) are australian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_394_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1841",
    "lexicalEntryUri" : "http://localhost:8080#australian_394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all australian (X).", "What (Y) are australian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1842",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all azerbaijani", "What (Y) are azerbaijani" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_401_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1843",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all azerbaijani (X).", "What (Y) are azerbaijani (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Azerbaijan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1844",
    "lexicalEntryUri" : "http://localhost:8080#danish_393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all danish", "What (Y) are danish" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#danish_393_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1845",
    "lexicalEntryUri" : "http://localhost:8080#danish_393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all danish (X).", "What (Y) are danish (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1846",
    "lexicalEntryUri" : "http://localhost:8080#colombian_389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all colombian", "What (Y) are colombian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_389_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1847",
    "lexicalEntryUri" : "http://localhost:8080#colombian_389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all colombian (X).", "What (Y) are colombian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1848",
    "lexicalEntryUri" : "http://localhost:8080#aruban_408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all aruban", "What (Y) are aruban" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_408_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1849",
    "lexicalEntryUri" : "http://localhost:8080#aruban_408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all aruban (X).", "What (Y) are aruban (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Aruba> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1850",
    "lexicalEntryUri" : "http://localhost:8080#czech_404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all czech", "What (Y) are czech" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_404_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1851",
    "lexicalEntryUri" : "http://localhost:8080#czech_404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all czech (X).", "What (Y) are czech (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1852",
    "lexicalEntryUri" : "http://localhost:8080#andorran_398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all andorran", "What (Y) are andorran" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_398_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1853",
    "lexicalEntryUri" : "http://localhost:8080#andorran_398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all andorran (X).", "What (Y) are andorran (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Andorra> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1854",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bermudian", "What (Y) are bermudian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_392_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1855",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bermudian (X).", "What (Y) are bermudian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bermuda> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1856",
    "lexicalEntryUri" : "http://localhost:8080#greek_405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all greek", "What (Y) are greek" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_405_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1857",
    "lexicalEntryUri" : "http://localhost:8080#greek_405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all greek (X).", "What (Y) are greek (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1858",
    "lexicalEntryUri" : "http://localhost:8080#benin_407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all benin", "What (Y) are benin" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#benin_407_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1859",
    "lexicalEntryUri" : "http://localhost:8080#benin_407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all benin (X).", "What (Y) are benin (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Benin> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1860",
    "lexicalEntryUri" : "http://localhost:8080#belgian_391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belgian", "What (Y) are belgian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belgian_391_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1861",
    "lexicalEntryUri" : "http://localhost:8080#belgian_391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belgian (X).", "What (Y) are belgian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belgium> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1862",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all brazilian", "What (Y) are brazilian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_412_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1863",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all brazilian (X).", "What (Y) are brazilian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1864",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belarusian", "What (Y) are belarusian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_414_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1865",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belarusian (X).", "What (Y) are belarusian (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belarus> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1866",
    "lexicalEntryUri" : "http://localhost:8080#angolan_413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all angolan", "What (Y) are angolan" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_413_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1867",
    "lexicalEntryUri" : "http://localhost:8080#angolan_413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all angolan (X).", "What (Y) are angolan (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Angola> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1868",
    "lexicalEntryUri" : "http://localhost:8080#female_403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all female", "What (Y) are female" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#female_403_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1869",
    "lexicalEntryUri" : "http://localhost:8080#female_403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all female (X).", "What (Y) are female (X)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1870",
    "lexicalEntryUri" : "http://localhost:8080#high_3_422",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What (Y) is the highest (X) in (X)?", "What (Y) is the highest (X) in the (X)?", "What (Y) is the highest the (X) in (X)?", "What (Y) is the highest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1871",
    "lexicalEntryUri" : "http://localhost:8080#high_3_422",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is (X)?", "How high is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1872",
    "lexicalEntryUri" : "http://localhost:8080#high_3_422",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are higher than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1873",
    "lexicalEntryUri" : "http://localhost:8080#short_434",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What (Y) is the shortest (X) in (X)?", "What (Y) is the shortest (X) in the (X)?", "What (Y) is the shortest the (X) in (X)?", "What (Y) is the shortest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?num WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1874",
    "lexicalEntryUri" : "http://localhost:8080#short_434",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How short is (X)?", "How short is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1875",
    "lexicalEntryUri" : "http://localhost:8080#short_434",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are shorter than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/length> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1876",
    "lexicalEntryUri" : "http://localhost:8080#large_1_429",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What (Y) is the largest (X) in the world?", "What (Y) is the largest (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1877",
    "lexicalEntryUri" : "http://localhost:8080#large_1_429",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How large is (X)?", "How large is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1878",
    "lexicalEntryUri" : "http://localhost:8080#large_1_429",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are larger than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1879",
    "lexicalEntryUri" : "http://localhost:8080#big_1_420",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What (Y) is the biggest (X) in (X)?", "What (Y) is the biggest (X) in the (X)?", "What (Y) is the biggest the (X) in (X)?", "What (Y) is the biggest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1880",
    "lexicalEntryUri" : "http://localhost:8080#big_1_420",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How big is (X)?", "How big is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1881",
    "lexicalEntryUri" : "http://localhost:8080#big_1_420",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are bigger than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seatingCapacity> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1882",
    "lexicalEntryUri" : "http://localhost:8080#young_2_431",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the youngest (X) in the world?", "Who is the youngest (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1883",
    "lexicalEntryUri" : "http://localhost:8080#young_2_431",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How young is (X)?", "How young is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1884",
    "lexicalEntryUri" : "http://localhost:8080#young_2_431",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are younger than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1885",
    "lexicalEntryUri" : "http://localhost:8080#tall_4_435",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "VolleyballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeTeamPlayer",
    "sentences" : [ "Who is the tallest (X) of (X)?", "Who is the tallest (X) of the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1886",
    "lexicalEntryUri" : "http://localhost:8080#tall_4_435",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VolleyballPlayer" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is (X)?", "How tall is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1887",
    "lexicalEntryUri" : "http://localhost:8080#tall_4_435",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VolleyballPlayer" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are taller than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1888",
    "lexicalEntryUri" : "http://localhost:8080#high_1_418",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What (Y) is the highest (X) in (X)?", "What (Y) is the highest (X) in the (X)?", "What (Y) is the highest the (X) in (X)?", "What (Y) is the highest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1889",
    "lexicalEntryUri" : "http://localhost:8080#high_1_418",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is (X)?", "How high is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1890",
    "lexicalEntryUri" : "http://localhost:8080#high_1_418",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are higher than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1891",
    "lexicalEntryUri" : "http://localhost:8080#high_2_421",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lighthouse" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What (Y) is the highest (X) in (X)?", "What (Y) is the highest (X) in the (X)?", "What (Y) is the highest the (X) in (X)?", "What (Y) is the highest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lighthouse> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1892",
    "lexicalEntryUri" : "http://localhost:8080#high_2_421",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is (X)?", "How high is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1893",
    "lexicalEntryUri" : "http://localhost:8080#high_2_421",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are higher than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1894",
    "lexicalEntryUri" : "http://localhost:8080#tall_2_436",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Model" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the tallest (X) in the world?", "Who is the tallest (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1895",
    "lexicalEntryUri" : "http://localhost:8080#tall_2_436",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is (X)?", "How tall is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1896",
    "lexicalEntryUri" : "http://localhost:8080#tall_2_436",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are taller than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1897",
    "lexicalEntryUri" : "http://localhost:8080#populated_1_433",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What (Y) is the most populated (X) in the world?", "What (Y) is the most populated (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1898",
    "lexicalEntryUri" : "http://localhost:8080#populated_1_433",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How populated is (X)?", "How populated is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1899",
    "lexicalEntryUri" : "http://localhost:8080#populated_1_433",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are more populated than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1900",
    "lexicalEntryUri" : "http://localhost:8080#high_4_424",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Building" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What (Y) is the highest (X) in (X)?", "What (Y) is the highest (X) in the (X)?", "What (Y) is the highest the (X) in (X)?", "What (Y) is the highest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1901",
    "lexicalEntryUri" : "http://localhost:8080#high_4_424",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is (X)?", "How high is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1902",
    "lexicalEntryUri" : "http://localhost:8080#high_4_424",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are higher than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1903",
    "lexicalEntryUri" : "http://localhost:8080#long_427",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What (Y) is the longest (X) in (X)?", "What (Y) is the longest (X) in the (X)?", "What (Y) is the longest the (X) in (X)?", "What (Y) is the longest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1904",
    "lexicalEntryUri" : "http://localhost:8080#long_427",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How long is (X)?", "How long is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1905",
    "lexicalEntryUri" : "http://localhost:8080#long_427",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are longer than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/length> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1906",
    "lexicalEntryUri" : "http://localhost:8080#old_423",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativePerson",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?VARIABLE <http://dbpedia.org/ontology/child> ?Answer . ?Answer <http://dbpedia.org/ontology/birthYear> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1907",
    "lexicalEntryUri" : "http://localhost:8080#old_423",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How old is (X)?", "How old is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1908",
    "lexicalEntryUri" : "http://localhost:8080#old_423",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are older than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1909",
    "lexicalEntryUri" : "http://localhost:8080#small_1_428",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What (Y) is the smallest (X) in the world?", "What (Y) is the smallest (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1910",
    "lexicalEntryUri" : "http://localhost:8080#small_1_428",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How small is (X)?", "How small is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1911",
    "lexicalEntryUri" : "http://localhost:8080#small_1_428",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are smaller than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1912",
    "lexicalEntryUri" : "http://localhost:8080#deep_417",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What (Y) is the deepest (X) in (X)?", "What (Y) is the deepest (X) in the (X)?", "What (Y) is the deepest the (X) in (X)?", "What (Y) is the deepest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lake> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/maximumDepth> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1913",
    "lexicalEntryUri" : "http://localhost:8080#deep_417",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How deep is (X)?", "How deep is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maximumDepth> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1914",
    "lexicalEntryUri" : "http://localhost:8080#deep_417",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are deeper than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/maximumDepth> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1915",
    "lexicalEntryUri" : "http://localhost:8080#high_6_426",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BasketballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "Who is the highest (X) in (X)?", "Who is the highest (X) in the (X)?", "Who is the highest the (X) in (X)?", "Who is the highest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1916",
    "lexicalEntryUri" : "http://localhost:8080#high_6_426",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is (X)?", "How high is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1917",
    "lexicalEntryUri" : "http://localhost:8080#high_6_426",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are higher than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1918",
    "lexicalEntryUri" : "http://localhost:8080#tall_1_419",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "BasketballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the tallest (X) in the world?", "Who is the tallest (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1919",
    "lexicalEntryUri" : "http://localhost:8080#tall_1_419",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is (X)?", "How tall is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1920",
    "lexicalEntryUri" : "http://localhost:8080#tall_1_419",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are taller than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1921",
    "lexicalEntryUri" : "http://localhost:8080#young_1_430",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "DartsPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the youngest (X) in the world?", "Who is the youngest (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/DartsPlayer> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1922",
    "lexicalEntryUri" : "http://localhost:8080#young_1_430",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "DartsPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How young is (X)?", "How young is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1923",
    "lexicalEntryUri" : "http://localhost:8080#young_1_430",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "DartsPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are younger than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1924",
    "lexicalEntryUri" : "http://localhost:8080#high_5_425",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What (Y) is the highest (X) in (X)?", "What (Y) is the highest (X) in the (X)?", "What (Y) is the highest the (X) in (X)?", "What (Y) is the highest the (X) in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1925",
    "lexicalEntryUri" : "http://localhost:8080#high_5_425",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is (X)?", "How high is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1926",
    "lexicalEntryUri" : "http://localhost:8080#high_5_425",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are higher than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1927",
    "lexicalEntryUri" : "http://localhost:8080#populated_2_432",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What (Y) is the least populated (X) in the world?", "What (Y) is the least populated (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1928",
    "lexicalEntryUri" : "http://localhost:8080#populated_2_432",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How populated is (X)?", "How populated is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1929",
    "lexicalEntryUri" : "http://localhost:8080#populated_2_432",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all (X) that are less populated than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1930",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were lived in (X)?", "Give me all (X) Who were lived in (X)?", "What (Y) was lived in (X)?", "which (Y) was lived in (X)?", "which (Y) were lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1931",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) live?", "Where is (X) lived?", "Where was (X) lived?", "in which (Y) did (X) live?", "which (Y) does (X) live in?", "which (Y) was (X) live in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1932",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1933",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1_133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) establish?", "When did the (X) establish?", "When was (X) established?", "When was the (X) established?", "When were (X) established?", "When were the (X) established?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstPublicationYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1934",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1_133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) established in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1935",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1_133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1936",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2_33",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that locate in (X)?", "What (Y) does (X) locate in?", "Where is (X) located?", "in which (Y)  (X) locate?", "in which (Y) are (X) located?", "in which (Y) does (X) locate?", "in which (Y) does locate (X)?", "in which (Y) is (X) located?", "which (Y) does (X) locate in?", "which (Y) does the (X) locate in?", "which (Y) locate in (X)?", "which (Y) located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1937",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2_33",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that locate in (X)?", "What (Y) did (X) locate in?", "What (Y) does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (Y) locate in (X)?", "which (Y) located in (X)?", "which (Y) locates in (X)?", "which (Y) was located in (X)?", "which (Y) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1938",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2_33",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are located in (X)?", "How many (Y) did (X) locate in?", "How many (Y) locate in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1939",
    "lexicalEntryUri" : "http://localhost:8080#designate_at_1_20",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that designate at (X)?", "What (Y) does (X) designate at?", "Where is (X) designated?", "at which (Y)  (X) designate?", "at which (Y) are (X) designated?", "at which (Y) does (X) designate?", "at which (Y) does designate (X)?", "at which (Y) is (X) designated?", "which (Y) designate at (X)?", "which (Y) designated at (X)?", "which (Y) does (X) designate at?", "which (Y) does the (X) designate at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/year> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1940",
    "lexicalEntryUri" : "http://localhost:8080#designate_at_1_20",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that designate at (X)?", "What (Y) did (X) designate at?", "What (Y) does (X) designate at?", "What designated at (X)?", "What designates at (X)?", "Where does (X) designate?", "which (Y) designate at (X)?", "which (Y) designated at (X)?", "which (Y) designates at (X)?", "which (Y) was designated at (X)?", "which (Y) were designated at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/year> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1941",
    "lexicalEntryUri" : "http://localhost:8080#designate_at_1_20",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are designated at (X)?", "How many (Y) designate at (X)?", "How many (Y) did (X) designate at?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/year> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1942",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1_37",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) destroy?", "When did the (X) destroy?", "When was (X) destroyed?", "When was the (X) destroyed?", "When were (X) destroyed?", "When were the (X) destroyed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1943",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1_37",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) destroyed on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1944",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1_37",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1945",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6_45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (Y) are (X) located?", "in which (Y) are the (X)?", "in which (Y) is (X) located?", "in which (Y) is the (X)?", "what (Y) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1946",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6_45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (Y) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1947",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6_45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1948",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1_66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) dissolve?", "When did the (X) dissolve?", "When was (X) dissolved?", "When was the (X) dissolved?", "When were (X) dissolved?", "When were the (X) dissolved?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1949",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1_66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) dissolved on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1950",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1_66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1951",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that flow into (X)?", "What (Y) does (X) flow into?", "Where is (X) flown?", "into which (Y)  (X) flow?", "into which (Y) are (X) flown?", "into which (Y) does (X) flow?", "into which (Y) does flow (X)?", "into which (Y) is (X) flown?", "which (Y) does (X) flow into?", "which (Y) does the (X) flow into?", "which (Y) flow into (X)?", "which (Y) flowed into (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1952",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that flow into (X)?", "What (Y) did (X) flow into?", "What (Y) does (X) flow into?", "What flowed into (X)?", "What flows into (X)?", "Where does (X) flow?", "which (Y) flow into (X)?", "which (Y) flowed into (X)?", "which (Y) flows into (X)?", "which (Y) was flown into (X)?", "which (Y) were flown into (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1953",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are flown into (X)?", "How many (Y) did (X) flow into?", "How many (Y) flow into (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1954",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_2_117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that speak in (X)?", "What (Y) does (X) speak in?", "Where is (X) spoken?", "in which (Y)  (X) speak?", "in which (Y) are (X) spoken?", "in which (Y) does (X) speak?", "in which (Y) does speak (X)?", "in which (Y) is (X) spoken?", "which (Y) does (X) speak in?", "which (Y) does the (X) speak in?", "which (Y) speak in (X)?", "which (Y) spoke in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1955",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_2_117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that speak in (X)?", "What (Y) did (X) speak in?", "What (Y) does (X) speak in?", "What speaks in (X)?", "What spoke in (X)?", "Where does (X) speak?", "which (Y) speak in (X)?", "which (Y) speaks in (X)?", "which (Y) spoke in (X)?", "which (Y) was spoken in (X)?", "which (Y) were spoken in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1956",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_2_117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are spoken in (X)?", "How many (Y) did (X) speak in?", "How many (Y) speak in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1957",
    "lexicalEntryUri" : "http://localhost:8080#admitted_as_83",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that admit as (X)?", "What (Y) does (X) admit as?", "Where is (X) admitted?", "as which (Y)  (X) admit?", "as which (Y) are (X) admitted?", "as which (Y) does (X) admit?", "as which (Y) does admit (X)?", "as which (Y) is (X) admitted?", "which (Y) admit as (X)?", "which (Y) admitted as (X)?", "which (Y) does (X) admit as?", "which (Y) does the (X) admit as?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/admittancedate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1958",
    "lexicalEntryUri" : "http://localhost:8080#admitted_as_83",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that admit as (X)?", "What (Y) did (X) admit as?", "What (Y) does (X) admit as?", "What admits as (X)?", "What admitted as (X)?", "Where does (X) admit?", "which (Y) admit as (X)?", "which (Y) admits as (X)?", "which (Y) admitted as (X)?", "which (Y) was admitted as (X)?", "which (Y) were admitted as (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/admittancedate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1959",
    "lexicalEntryUri" : "http://localhost:8080#admitted_as_83",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) admit as (X)?", "How many (Y) are admitted as (X)?", "How many (Y) did (X) admit as?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/admittancedate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1960",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1_92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that initially use for (X)?", "What (Y) does (X) initially use for?", "Where is (X) initially used?", "for which (Y)  (X) initially use?", "for which (Y) are (X) initially used?", "for which (Y) does (X) initially use?", "for which (Y) does initially use (X)?", "for which (Y) is (X) initially used?", "which (Y) does (X) initially use for?", "which (Y) does the (X) initially use for?", "which (Y) initially use for (X)?", "which (Y) initially used for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1961",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1_92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that initially use for (X)?", "What (Y) did (X) initially use for?", "What (Y) does (X) initially use for?", "What initially used for (X)?", "What initially uses for (X)?", "Where does (X) initially use?", "which (Y) initially use for (X)?", "which (Y) initially used for (X)?", "which (Y) initially uses for (X)?", "which (Y) was initially used for (X)?", "which (Y) were initially used for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1962",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1_92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are initially used for (X)?", "How many (Y) did (X) initially use for?", "How many (Y) initially use for (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1963",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) stop acting?", "When was (X) stopped acting?", "on which (Y) was (X) stopped acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1964",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was stopped acting on (X)?", "which (Y) was stopped acting on (X)?", "which (Y) were stopped acting on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1965",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1966",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2_96",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that associate with (X)?", "What (Y) does (X) associate with?", "Where is (X) associated?", "which (Y) associate with (X)?", "which (Y) associated with (X)?", "which (Y) does (X) associate with?", "which (Y) does the (X) associate with?", "with which (Y)  (X) associate?", "with which (Y) are (X) associated?", "with which (Y) does (X) associate?", "with which (Y) does associate (X)?", "with which (Y) is (X) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1967",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2_96",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that associate with (X)?", "Where does (X) associate?", "Who associated with (X)?", "Who did (X) associate with?", "Who does (X) associate with?", "which (Y) associate with (X)?", "which (Y) associated with (X)?", "which (Y) was associated with (X)?", "which (Y) were associated with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1968",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2_96",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are associated with (X)?", "How many (Y) associate with (X)?", "How many (Y) did (X) associate with?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1969",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2_94",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that begin at (X)?", "What (Y) does (X) begin at?", "Where is (X) began?", "at which (Y)  (X) begin?", "at which (Y) are (X) began?", "at which (Y) does (X) begin?", "at which (Y) does begin (X)?", "at which (Y) is (X) began?", "which (Y) began at (X)?", "which (Y) begin at (X)?", "which (Y) does (X) begin at?", "which (Y) does the (X) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/source2Location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1970",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2_94",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that begin at (X)?", "What (Y) did (X) begin at?", "What (Y) does (X) begin at?", "What began at (X)?", "What begins at (X)?", "Where does (X) begin?", "which (Y) began at (X)?", "which (Y) begin at (X)?", "which (Y) begins at (X)?", "which (Y) was began at (X)?", "which (Y) were began at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source2Location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1971",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2_94",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are began at (X)?", "How many (Y) begin at (X)?", "How many (Y) did (X) begin at?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/source2Location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1972",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1_90",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/keyPerson> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1973",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1_90",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1974",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1_90",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1975",
    "lexicalEntryUri" : "http://localhost:8080#end_his_active_career_1_49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) end his active career?", "When was (X) ended his active career?", "in which (Y) was (X) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1976",
    "lexicalEntryUri" : "http://localhost:8080#end_his_active_career_1_49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was   in (X)?", "which (Y) was   in (X)?", "which (Y) were   in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1977",
    "lexicalEntryUri" : "http://localhost:8080#end_his_active_career_1_49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1978",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2_103",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) commence?", "When did the (X) commence?", "When was (X) commenced?", "When was the (X) commenced?", "When were (X) commenced?", "When were the (X) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/date> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1979",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2_103",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) commenced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1980",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2_103",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1981",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) produce?", "When did the (X) produce?", "When was (X) produced?", "When was the (X) produced?", "When were (X) produced?", "When were the (X) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1982",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) produced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1983",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1984",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2_56",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) reopen?", "When did the (X) reopen?", "When was (X) reopened?", "When was the (X) reopened?", "When were (X) reopened?", "When were the (X) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1985",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2_56",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) reopened in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1986",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2_56",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1987",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_23",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that flow into (X)?", "What (Y) does (X) flow into?", "Where is (X) flown?", "into which (Y)  (X) flow?", "into which (Y) are (X) flown?", "into which (Y) does (X) flow?", "into which (Y) does flow (X)?", "into which (Y) is (X) flown?", "which (Y) does (X) flow into?", "which (Y) does the (X) flow into?", "which (Y) flow into (X)?", "which (Y) flowed into (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1988",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_23",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that flow into (X)?", "What (Y) did (X) flow into?", "What (Y) does (X) flow into?", "What flowed into (X)?", "What flows into (X)?", "Where does (X) flow?", "which (Y) flow into (X)?", "which (Y) flowed into (X)?", "which (Y) flows into (X)?", "which (Y) was flown into (X)?", "which (Y) were flown into (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1989",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_23",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are flown into (X)?", "How many (Y) did (X) flow into?", "How many (Y) flow into (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1990",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4_116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When did the (X) found?", "When was (X) founded?", "When was the (X) founded?", "When were (X) founded?", "When were the (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1991",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4_116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1992",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4_116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1993",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7_41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) does (X) belong to?", "Where is (X) belonged?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1994",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7_41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1995",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7_41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1996",
    "lexicalEntryUri" : "http://localhost:8080#record_for_2_24",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that record for (X)?", "What (Y) does (X) record for?", "Where is (X) recorded?", "for which (Y)  (X) record?", "for which (Y) are (X) recorded?", "for which (Y) does (X) record?", "for which (Y) does record (X)?", "for which (Y) is (X) recorded?", "which (Y) does (X) record for?", "which (Y) does the (X) record for?", "which (Y) record for (X)?", "which (Y) recored for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/recordLabel> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1997",
    "lexicalEntryUri" : "http://localhost:8080#record_for_2_24",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that record for (X)?", "What (Y) did (X) record for?", "What (Y) does (X) record for?", "What records for (X)?", "What recored for (X)?", "Where does (X) record?", "which (Y) record for (X)?", "which (Y) records for (X)?", "which (Y) recored for (X)?", "which (Y) was recorded for (X)?", "which (Y) were recorded for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordLabel> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1998",
    "lexicalEntryUri" : "http://localhost:8080#record_for_2_24",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are recorded for (X)?", "How many (Y) did (X) record for?", "How many (Y) record for (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordLabel> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1999",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1_99",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that associate with (X)?", "What (Y) does (X) associate with?", "Where is (X) associated?", "which (Y) associate with (X)?", "which (Y) associated with (X)?", "which (Y) does (X) associate with?", "which (Y) does the (X) associate with?", "with which (Y)  (X) associate?", "with which (Y) are (X) associated?", "with which (Y) does (X) associate?", "with which (Y) does associate (X)?", "with which (Y) is (X) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedBand> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2000",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1_99",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that associate with (X)?", "What (Y) did (X) associate with?", "What (Y) does (X) associate with?", "What associated with (X)?", "Where does (X) associate?", "which (Y) associate with (X)?", "which (Y) associated with (X)?", "which (Y) was associated with (X)?", "which (Y) were associated with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2001",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1_99",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are associated with (X)?", "How many (Y) associate with (X)?", "How many (Y) did (X) associate with?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2002",
    "lexicalEntryUri" : "http://localhost:8080#knownfor_1_69",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did (X) known for?", "Who does (X) known for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2003",
    "lexicalEntryUri" : "http://localhost:8080#knownfor_1_69",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (Y) is known for (X)?", "What (Y) was known for (X)?", "which (Y) are known for (X)?", "which (Y) is known for (X)?", "which (Y) was known for (X)?", "which (Y) were known for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2004",
    "lexicalEntryUri" : "http://localhost:8080#knownfor_1_69",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2005",
    "lexicalEntryUri" : "http://localhost:8080#start_at_3_108",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) start?", "When did the (X) start?", "When was (X) started?", "When was the (X) started?", "When were (X) started?", "When were the (X) started?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/date> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2006",
    "lexicalEntryUri" : "http://localhost:8080#start_at_3_108",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) started at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2007",
    "lexicalEntryUri" : "http://localhost:8080#start_at_3_108",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2008",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1_125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2009",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1_125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) published in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2010",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1_125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2011",
    "lexicalEntryUri" : "http://localhost:8080#assassinate_in_95",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were assassinated in (X)?", "Give me all (X) Who were assassinated in (X)?", "What (Y) was assassinated in (X)?", "which (Y) was assassinated in (X)?", "which (Y) were assassinated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2012",
    "lexicalEntryUri" : "http://localhost:8080#assassinate_in_95",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) assassinate?", "Where is (X) assassinated?", "Where was (X) assassinated?", "in which (Y) did (X) assassinate?", "which (Y) does (X) assassinate in?", "which (Y) was (X) assassinate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2013",
    "lexicalEntryUri" : "http://localhost:8080#assassinate_in_95",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2014",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2_89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were born in (X)?", "Give me all (X) Who were born in (X)?", "What (Y) was born in (X)?", "which (Y) was born in (X)?", "which (Y) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2015",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2_89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) born?", "Where is (X) born?", "Where was (X) born?", "in which (Y) did (X) born?", "which (Y) does (X) born in?", "which (Y) was (X) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2016",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2_89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2017",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1_80",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that currently use for (X)?", "What (Y) does (X) currently use for?", "Where is (X) currently used?", "for which (Y)  (X) currently use?", "for which (Y) are (X) currently used?", "for which (Y) does (X) currently use?", "for which (Y) does currently use (X)?", "for which (Y) is (X) currently used?", "which (Y) currently use for (X)?", "which (Y) currently used for (X)?", "which (Y) does (X) currently use for?", "which (Y) does the (X) currently use for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2018",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1_80",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that currently use for (X)?", "What (Y) did (X) currently use for?", "What (Y) does (X) currently use for?", "What currently used for (X)?", "What currently uses for (X)?", "Where does (X) currently use?", "which (Y) currently use for (X)?", "which (Y) currently used for (X)?", "which (Y) currently uses for (X)?", "which (Y) was currently used for (X)?", "which (Y) were currently used for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2019",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1_80",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are currently used for (X)?", "How many (Y) currently use for (X)?", "How many (Y) did (X) currently use for?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2020",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that live in (X)?", "What (Y) does (X) live in?", "Where is (X) lived?", "in which (Y)  (X) live?", "in which (Y) are (X) lived?", "in which (Y) does (X) live?", "in which (Y) does live (X)?", "in which (Y) is (X) lived?", "which (Y) does (X) live in?", "which (Y) does the (X) live in?", "which (Y) live in (X)?", "which (Y) lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2021",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that live in (X)?", "What (Y) did (X) live in?", "What (Y) does (X) live in?", "What lived in (X)?", "What lives in (X)?", "Where does (X) live?", "which (Y) live in (X)?", "which (Y) lived in (X)?", "which (Y) lives in (X)?", "which (Y) was lived in (X)?", "which (Y) were lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2022",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are lived in (X)?", "How many (Y) did (X) live in?", "How many (Y) live in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2023",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1_55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When was (X) founded?", "on which (Y) was (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2024",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1_55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded on (X)?", "which (Y) was founded on (X)?", "which (Y) were founded on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2025",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1_55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2026",
    "lexicalEntryUri" : "http://localhost:8080#born_on_3_59",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) born?", "When was (X) born?", "on which (Y) was (X) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2027",
    "lexicalEntryUri" : "http://localhost:8080#born_on_3_59",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born on (X)?", "which (Y) was born on (X)?", "which (Y) were born on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2028",
    "lexicalEntryUri" : "http://localhost:8080#born_on_3_59",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2029",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1_36",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were buried in (X)?", "Give me all (X) Who were buried in (X)?", "What (Y) was buried in (X)?", "which (Y) was buried in (X)?", "which (Y) were buried in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2030",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1_36",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) bury?", "Where is (X) buried?", "Where was (X) buried?", "in which (Y) did (X) bury?", "which (Y) does (X) bury in?", "which (Y) was (X) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2031",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1_36",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2032",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) discontinue?", "When did the (X) discontinue?", "When was (X) discontinued?", "When was the (X) discontinued?", "When were (X) discontinued?", "When were the (X) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2033",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) discontinued on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2034",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2035",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did (X) die from?", "Who does (X) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2036",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (Y) is died from (X)?", "What (Y) was died from (X)?", "which (Y) are died from (X)?", "which (Y) is died from (X)?", "which (Y) was died from (X)?", "which (Y) were died from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2037",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2038",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did (X) die from?", "Who does (X) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2039",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (Y) is died from (X)?", "What (Y) was died from (X)?", "which (Y) are died from (X)?", "which (Y) is died from (X)?", "which (Y) was died from (X)?", "which (Y) were died from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2040",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2041",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that start in (X)?", "What (Y) does (X) start in?", "Where is (X) started?", "in which (Y)  (X) start?", "in which (Y) are (X) started?", "in which (Y) does (X) start?", "in which (Y) does start (X)?", "in which (Y) is (X) started?", "which (Y) does (X) start in?", "which (Y) does the (X) start in?", "which (Y) start in (X)?", "which (Y) started in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/sourceCountry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2042",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that start in (X)?", "What (Y) did (X) start in?", "What (Y) does (X) start in?", "What started in (X)?", "What starts in (X)?", "Where does (X) start?", "which (Y) start in (X)?", "which (Y) started in (X)?", "which (Y) starts in (X)?", "which (Y) was started in (X)?", "which (Y) were started in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2043",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are started in (X)?", "How many (Y) did (X) start in?", "How many (Y) start in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2044",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that start in (X)?", "What (Y) does (X) start in?", "Where is (X) started?", "in which (Y)  (X) start?", "in which (Y) are (X) started?", "in which (Y) does (X) start?", "in which (Y) does start (X)?", "in which (Y) is (X) started?", "which (Y) does (X) start in?", "which (Y) does the (X) start in?", "which (Y) start in (X)?", "which (Y) started in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/mouthLocation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2045",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that start in (X)?", "What (Y) did (X) start in?", "What (Y) does (X) start in?", "What started in (X)?", "What starts in (X)?", "Where does (X) start?", "which (Y) start in (X)?", "which (Y) started in (X)?", "which (Y) starts in (X)?", "which (Y) was started in (X)?", "which (Y) were started in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2046",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are started in (X)?", "How many (Y) did (X) start in?", "How many (Y) start in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2047",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3_75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that compose for (X)?", "What (Y) does (X) compose for?", "Where is (X) composed?", "for which (Y)  (X) compose?", "for which (Y) are (X) composed?", "for which (Y) does (X) compose?", "for which (Y) does compose (X)?", "for which (Y) is (X) composed?", "which (Y) compose for (X)?", "which (Y) composed for (X)?", "which (Y) does (X) compose for?", "which (Y) does the (X) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/music> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2048",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3_75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that compose for (X)?", "Where does (X) compose?", "Who composed for (X)?", "Who composes for (X)?", "Who did (X) compose for?", "Who does (X) compose for?", "which (Y) compose for (X)?", "which (Y) composed for (X)?", "which (Y) composes for (X)?", "which (Y) was composed for (X)?", "which (Y) were composed for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/music> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2049",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3_75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are composed for (X)?", "How many (Y) compose for (X)?", "How many (Y) did (X) compose for?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/music> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2050",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2_127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2051",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2_127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) published in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2052",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2_127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2053",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18_72",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "Where is (X) belonged?", "Who does (X) belong to?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerTeam> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2054",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18_72",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2055",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18_72",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2056",
    "lexicalEntryUri" : "http://localhost:8080#launch_from_131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceStation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that launch from (X)?", "What (Y) does (X) launch from?", "Where is (X) launched?", "from which (Y)  (X) launch?", "from which (Y) are (X) launched?", "from which (Y) does (X) launch?", "from which (Y) does launch (X)?", "from which (Y) is (X) launched?", "which (Y) does (X) launch from?", "which (Y) does the (X) launch from?", "which (Y) launch from (X)?", "which (Y) launched from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/launchPad> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2057",
    "lexicalEntryUri" : "http://localhost:8080#launch_from_131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "SpaceStation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that launch from (X)?", "What (Y) did (X) launch from?", "What (Y) does (X) launch from?", "What launched from (X)?", "What launches from (X)?", "Where does (X) launch?", "which (Y) launch from (X)?", "which (Y) launched from (X)?", "which (Y) launches from (X)?", "which (Y) was launched from (X)?", "which (Y) were launched from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/launchPad> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2058",
    "lexicalEntryUri" : "http://localhost:8080#launch_from_131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "SpaceStation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are launched from (X)?", "How many (Y) did (X) launch from?", "How many (Y) launch from (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/launchPad> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2059",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1_67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryPerson" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that participate in (X)?", "What (Y) does (X) participate in?", "Where is (X) participated?", "in which (Y)  (X) participate?", "in which (Y) are (X) participated?", "in which (Y) does (X) participate?", "in which (Y) does participate (X)?", "in which (Y) is (X) participated?", "which (Y) does (X) participate in?", "which (Y) does the (X) participate in?", "which (Y) participate in (X)?", "which (Y) participated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/battle> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2060",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1_67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "MilitaryPerson" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that participate in (X)?", "Where does (X) participate?", "Who did (X) participate in?", "Who does (X) participate in?", "Who participated in (X)?", "Who participates in (X)?", "which (Y) participate in (X)?", "which (Y) participated in (X)?", "which (Y) participates in (X)?", "which (Y) was participated in (X)?", "which (Y) were participated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2061",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1_67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "MilitaryPerson" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are participated in (X)?", "How many (Y) did (X) participate in?", "How many (Y) participate in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2062",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) die?", "When was (X) died?", "on which (Y) was (X) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2063",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was died on (X)?", "which (Y) was died on (X)?", "which (Y) were died on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2064",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2065",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When was (X) founded?", "in which (Y) was (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2066",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in (X)?", "which (Y) was founded in (X)?", "which (Y) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2067",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2068",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that found in (X)?", "What (Y) does (X) found in?", "Where is (X) founded?", "in which (Y)  (X) found?", "in which (Y) are (X) founded?", "in which (Y) does (X) found?", "in which (Y) does found (X)?", "in which (Y) is (X) founded?", "which (Y) does (X) found in?", "which (Y) does the (X) found in?", "which (Y) found in (X)?", "which (Y) founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/govermentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2069",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that found in (X)?", "Where does (X) found?", "Who did (X) found in?", "Who does (X) found in?", "Who found in (X)?", "Who founded in (X)?", "which (Y) found in (X)?", "which (Y) founded in (X)?", "which (Y) was founded in (X)?", "which (Y) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/govermentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2070",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are founded in (X)?", "How many (Y) did (X) found in?", "How many (Y) found in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/govermentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2071",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2_65",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that compose for (X)?", "What (Y) does (X) compose for?", "Where is (X) composed?", "for which (Y)  (X) compose?", "for which (Y) are (X) composed?", "for which (Y) does (X) compose?", "for which (Y) does compose (X)?", "for which (Y) is (X) composed?", "which (Y) compose for (X)?", "which (Y) composed for (X)?", "which (Y) does (X) compose for?", "which (Y) does the (X) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2072",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2_65",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that compose for (X)?", "Where does (X) compose?", "Who composed for (X)?", "Who composes for (X)?", "Who did (X) compose for?", "Who does (X) compose for?", "which (Y) compose for (X)?", "which (Y) composed for (X)?", "which (Y) composes for (X)?", "which (Y) was composed for (X)?", "which (Y) were composed for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2073",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2_65",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are composed for (X)?", "How many (Y) compose for (X)?", "How many (Y) did (X) compose for?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2074",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) does (X) end in?", "Where is (X) ended?", "in which (Y)  (X) end?", "in which (Y) are (X) ended?", "in which (Y) does (X) end?", "in which (Y) does end (X)?", "in which (Y) is (X) ended?", "which (Y) does (X) end in?", "which (Y) does the (X) end in?", "which (Y) end in (X)?", "which (Y) ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2075",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) did (X) end in?", "What (Y) does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (Y) end in (X)?", "which (Y) ended in (X)?", "which (Y) ends in (X)?", "which (Y) was ended in (X)?", "which (Y) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2076",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are ended in (X)?", "How many (Y) did (X) end in?", "How many (Y) end in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2077",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) does (X) end in?", "Where is (X) ended?", "in which (Y)  (X) end?", "in which (Y) are (X) ended?", "in which (Y) does (X) end?", "in which (Y) does end (X)?", "in which (Y) is (X) ended?", "which (Y) does (X) end in?", "which (Y) does the (X) end in?", "which (Y) end in (X)?", "which (Y) ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2078",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) did (X) end in?", "What (Y) does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (Y) end in (X)?", "which (Y) ended in (X)?", "which (Y) ends in (X)?", "which (Y) was ended in (X)?", "which (Y) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2079",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are ended in (X)?", "How many (Y) did (X) end in?", "How many (Y) end in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2080",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1_16",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) inaugurate?", "When did the (X) inaugurate?", "When was (X) inaugurated?", "When was the (X) inaugurated?", "When were (X) inaugurated?", "When were the (X) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2081",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1_16",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) inaugurated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2082",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1_16",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2083",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2_87",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/keyPeople> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2084",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2_87",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/keyPeople> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2085",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2_87",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/keyPeople> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2086",
    "lexicalEntryUri" : "http://localhost:8080#written_in_31",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that write in (X)?", "What (Y) does (X) write in?", "Where is (X) written?", "in which (Y)  (X) write?", "in which (Y) are (X) written?", "in which (Y) does (X) write?", "in which (Y) does write (X)?", "in which (Y) is (X) written?", "which (Y) does (X) write in?", "which (Y) does the (X) write in?", "which (Y) write in (X)?", "which (Y) wrote in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2087",
    "lexicalEntryUri" : "http://localhost:8080#written_in_31",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that write in (X)?", "What (Y) did (X) write in?", "What (Y) does (X) write in?", "What writes in (X)?", "What wrote in (X)?", "Where does (X) write?", "which (Y) was written in (X)?", "which (Y) were written in (X)?", "which (Y) write in (X)?", "which (Y) writes in (X)?", "which (Y) wrote in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2088",
    "lexicalEntryUri" : "http://localhost:8080#written_in_31",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are written in (X)?", "How many (Y) did (X) write in?", "How many (Y) write in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2089",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that flow through (X)?", "What (Y) does (X) flow through?", "Where is (X) flown?", "through which (Y)  (X) flow?", "through which (Y) are (X) flown?", "through which (Y) does (X) flow?", "through which (Y) does flow (X)?", "through which (Y) is (X) flown?", "which (Y) does (X) flow through?", "which (Y) does the (X) flow through?", "which (Y) flow through (X)?", "which (Y) flowed through (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2090",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that flow through (X)?", "What (Y) did (X) flow through?", "What (Y) does (X) flow through?", "What flowed through (X)?", "What flows through (X)?", "Where does (X) flow?", "which (Y) flow through (X)?", "which (Y) flowed through (X)?", "which (Y) flows through (X)?", "which (Y) was flown through (X)?", "which (Y) were flown through (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2091",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are flown through (X)?", "How many (Y) did (X) flow through?", "How many (Y) flow through (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2092",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1_54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) start acting?", "When was (X) started acting?", "on which (Y) was (X) started acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2093",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1_54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was started acting on (X)?", "which (Y) was started acting on (X)?", "which (Y) were started acting on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2094",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1_54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2095",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that originate in (X)?", "What (Y) does (X) originate in?", "Where is (X) originated?", "in which (Y)  (X) originate?", "in which (Y) are (X) originated?", "in which (Y) does (X) originate?", "in which (Y) does originate (X)?", "in which (Y) is (X) originated?", "which (Y) does (X) originate in?", "which (Y) does the (X) originate in?", "which (Y) originate in (X)?", "which (Y) originated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2096",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that originate in (X)?", "What (Y) did (X) originate in?", "What (Y) does (X) originate in?", "What originated in (X)?", "What originates in (X)?", "Where does (X) originate?", "which (Y) originate in (X)?", "which (Y) originated in (X)?", "which (Y) originates in (X)?", "which (Y) was originated in (X)?", "which (Y) were originated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/origin> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2097",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are originated in (X)?", "How many (Y) did (X) originate in?", "How many (Y) originate in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/origin> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2098",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that originate in (X)?", "What (Y) does (X) originate in?", "Where is (X) originated?", "in which (Y)  (X) originate?", "in which (Y) are (X) originated?", "in which (Y) does (X) originate?", "in which (Y) does originate (X)?", "in which (Y) is (X) originated?", "which (Y) does (X) originate in?", "which (Y) does the (X) originate in?", "which (Y) originate in (X)?", "which (Y) originated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/sourceCountry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2099",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that originate in (X)?", "What (Y) did (X) originate in?", "What (Y) does (X) originate in?", "What originated in (X)?", "What originates in (X)?", "Where does (X) originate?", "which (Y) originate in (X)?", "which (Y) originated in (X)?", "which (Y) originates in (X)?", "which (Y) was originated in (X)?", "which (Y) were originated in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2100",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are originated in (X)?", "How many (Y) did (X) originate in?", "How many (Y) originate in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2101",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that play for (X)?", "Where is (X) played?", "Who does (X) play for?", "for which (Y)  (X) play?", "for which (Y) are (X) played?", "for which (Y) does (X) play?", "for which (Y) does play (X)?", "for which (Y) is (X) played?", "which (Y) does (X) play for?", "which (Y) does the (X) play for?", "which (Y) play for (X)?", "which (Y) played for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/team> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2102",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that play for (X)?", "What (Y) did (X) play for?", "What (Y) does (X) play for?", "What played for (X)?", "What plays for (X)?", "Where does (X) play?", "which (Y) play for (X)?", "which (Y) played for (X)?", "which (Y) plays for (X)?", "which (Y) was played for (X)?", "which (Y) were played for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2103",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played for (X)?", "How many (Y) did (X) play for?", "How many (Y) play for (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2104",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) does (X) belong to?", "Where is (X) belonged?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/album> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2105",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/album> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2106",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/album> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2107",
    "lexicalEntryUri" : "http://localhost:8080#shot_in_1_106",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) shot?", "When was (X) shot?", "in which (Y) was (X) shot?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2108",
    "lexicalEntryUri" : "http://localhost:8080#shot_in_1_106",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was shot in (X)?", "which (Y) was shot in (X)?", "which (Y) were shot in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2109",
    "lexicalEntryUri" : "http://localhost:8080#shot_in_1_106",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2110",
    "lexicalEntryUri" : "http://localhost:8080#found_in_7_124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that found in (X)?", "What (Y) does (X) found in?", "Where is (X) founded?", "in which (Y)  (X) found?", "in which (Y) are (X) founded?", "in which (Y) does (X) found?", "in which (Y) does found (X)?", "in which (Y) is (X) founded?", "which (Y) does (X) found in?", "which (Y) does the (X) found in?", "which (Y) found in (X)?", "which (Y) founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/govermentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2111",
    "lexicalEntryUri" : "http://localhost:8080#found_in_7_124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that found in (X)?", "Where does (X) found?", "Who did (X) found in?", "Who does (X) found in?", "Who found in (X)?", "Who founded in (X)?", "which (Y) found in (X)?", "which (Y) founded in (X)?", "which (Y) was founded in (X)?", "which (Y) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/govermentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2112",
    "lexicalEntryUri" : "http://localhost:8080#found_in_7_124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are founded in (X)?", "How many (Y) did (X) found in?", "How many (Y) found in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/govermentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2113",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3_28",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) does (X) belong to?", "Where is (X) belonged?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/genre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2114",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3_28",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/genre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2115",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3_28",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/genre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2116",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2_126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Disease" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that die from (X)?", "Where is (X) died?", "Who does (X) die from?", "from which (Y)  (X) die?", "from which (Y) are (X) died?", "from which (Y) does (X) die?", "from which (Y) does die (X)?", "from which (Y) is (X) died?", "which (Y) die from (X)?", "which (Y) died from (X)?", "which (Y) does (X) die from?", "which (Y) does the (X) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2117",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2_126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Disease" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that die from (X)?", "What (Y) did (X) die from?", "What (Y) does (X) die from?", "What died from (X)?", "What dies from (X)?", "Where does (X) die?", "which (Y) die from (X)?", "which (Y) died from (X)?", "which (Y) dies from (X)?", "which (Y) was died from (X)?", "which (Y) were died from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2118",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2_126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Disease" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are died from (X)?", "How many (Y) did (X) die from?", "How many (Y) die from (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2119",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2_62",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) rebuild?", "When did the (X) rebuild?", "When was (X) rebuilt?", "When was the (X) rebuilt?", "When were (X) rebuilt?", "When were the (X) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2120",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2_62",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) rebuilt in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2121",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2_62",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2122",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3_34",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (Y) are (X) located?", "in which (Y) are the (X)?", "in which (Y) is (X) located?", "in which (Y) is the (X)?", "what (Y) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2123",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3_34",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (Y) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2124",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3_34",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2125",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) end his active career?", "When was (X) ended his active career?", "on which (Y) was (X) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2126",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was ended his active career on (X)?", "which (Y) was ended his active career on (X)?", "which (Y) were ended his active career on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2127",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2128",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) end his active career?", "When was (X) ended his active career?", "on which (Y) was (X) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2129",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was ended his active career on (X)?", "which (Y) was ended his active career on (X)?", "which (Y) were ended his active career on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2130",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2131",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_1_114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that speak in (X)?", "What (Y) does (X) speak in?", "Where is (X) spoken?", "in which (Y)  (X) speak?", "in which (Y) are (X) spoken?", "in which (Y) does (X) speak?", "in which (Y) does speak (X)?", "in which (Y) is (X) spoken?", "which (Y) does (X) speak in?", "which (Y) does the (X) speak in?", "which (Y) speak in (X)?", "which (Y) spoke in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spokenIn> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2132",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_1_114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that speak in (X)?", "What (Y) did (X) speak in?", "What (Y) does (X) speak in?", "What speaks in (X)?", "What spoke in (X)?", "Where does (X) speak?", "which (Y) speak in (X)?", "which (Y) speaks in (X)?", "which (Y) spoke in (X)?", "which (Y) was spoken in (X)?", "which (Y) were spoken in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spokenIn> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2133",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_1_114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are spoken in (X)?", "How many (Y) did (X) speak in?", "How many (Y) speak in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/spokenIn> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2134",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2_111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) complete?", "When did the (X) complete?", "When was (X) completed?", "When was the (X) completed?", "When were (X) completed?", "When were the (X) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2135",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2_111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) completed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2136",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2_111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2137",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1_39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that border in (X)?", "What (Y) does (X) border in?", "Where is (X) bordered?", "in which (Y)  (X) border?", "in which (Y) are (X) bordered?", "in which (Y) does (X) border?", "in which (Y) does border (X)?", "in which (Y) is (X) bordered?", "which (Y) border in (X)?", "which (Y) bordered in (X)?", "which (Y) does (X) border in?", "which (Y) does the (X) border in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/borderingstates> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2138",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1_39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that border in (X)?", "What (Y) did (X) border in?", "What (Y) does (X) border in?", "What bordered in (X)?", "What borders in (X)?", "Where does (X) border?", "which (Y) border in (X)?", "which (Y) bordered in (X)?", "which (Y) borders in (X)?", "which (Y) was bordered in (X)?", "which (Y) were bordered in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2139",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1_39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are bordered in (X)?", "How many (Y) border in (X)?", "How many (Y) did (X) border in?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2140",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1_68",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that relate to (X)?", "What (Y) does (X) relate to?", "Where is (X) related?", "to which (Y)  (X) relate?", "to which (Y) are (X) related?", "to which (Y) does (X) relate?", "to which (Y) does relate (X)?", "to which (Y) is (X) related?", "which (Y) does (X) relate to?", "which (Y) does the (X) relate to?", "which (Y) relate to (X)?", "which (Y) related to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/related> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2141",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1_68",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that relate to (X)?", "What (Y) did (X) relate to?", "What (Y) does (X) relate to?", "What is related to (X)?", "What related to (X)?", "Where does (X) relate?", "which (Y) is related to (X)?", "which (Y) relate to (X)?", "which (Y) related to (X)?", "which (Y) was related to (X)?", "which (Y) were related to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/related> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2142",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1_68",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are related to (X)?", "How many (Y) did (X) relate to?", "How many (Y) relate to (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/related> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2143",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3_82",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) does (X) end in?", "Where is (X) ended?", "in which (Y)  (X) end?", "in which (Y) are (X) ended?", "in which (Y) does (X) end?", "in which (Y) does end (X)?", "in which (Y) is (X) ended?", "which (Y) does (X) end in?", "which (Y) does the (X) end in?", "which (Y) end in (X)?", "which (Y) ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2144",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3_82",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) did (X) end in?", "What (Y) does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (Y) end in (X)?", "which (Y) ended in (X)?", "which (Y) ends in (X)?", "which (Y) was ended in (X)?", "which (Y) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2145",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3_82",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are ended in (X)?", "How many (Y) did (X) end in?", "How many (Y) end in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2146",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2_110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were died in (X)?", "Give me all (X) Who were died in (X)?", "What (Y) was died in (X)?", "which (Y) was died in (X)?", "which (Y) were died in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2147",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2_110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) die?", "Where is (X) died?", "Where was (X) died?", "in which (Y) did (X) die?", "which (Y) does (X) die in?", "which (Y) was (X) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2148",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2_110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2149",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1_32",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) located?", "in which (Y) are (X) located?", "in which (Y) are the (X)?", "in which (Y) is (X) located?", "in which (Y) is the (X)?", "what (Y) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2150",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1_32",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) locate in?", "What locate in (X)?", "What located in (X)?", "which (Y) locate in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2151",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1_32",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2152",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) fight?", "When did the (X) fight?", "When was (X) fought?", "When was the (X) fought?", "When were (X) fought?", "When were the (X) fought?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2153",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) fought in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2154",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2155",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that fight in (X)?", "What (Y) does (X) fight in?", "Where is (X) fought?", "in which (Y)  (X) fight?", "in which (Y) are (X) fought?", "in which (Y) does (X) fight?", "in which (Y) does fight (X)?", "in which (Y) is (X) fought?", "which (Y) does (X) fight in?", "which (Y) does the (X) fight in?", "which (Y) fight in (X)?", "which (Y) fought in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/combatant> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2156",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that fight in (X)?", "What (Y) did (X) fight in?", "What (Y) does (X) fight in?", "What fights in (X)?", "What fought in (X)?", "Where does (X) fight?", "which (Y) fight in (X)?", "which (Y) fights in (X)?", "which (Y) fought in (X)?", "which (Y) was fought in (X)?", "which (Y) were fought in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/combatant> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2157",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are fought in (X)?", "How many (Y) did (X) fight in?", "How many (Y) fight in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/combatant> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2158",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) introduce?", "When did the (X) introduce?", "When was (X) introduced?", "When was the (X) introduced?", "When were (X) introduced?", "When were the (X) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2159",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) introduced in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2160",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2161",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3_104",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that star in (X)?", "What (Y) does (X) star in?", "Where is (X) starred?", "in which (Y)  (X) star?", "in which (Y) are (X) starred?", "in which (Y) does (X) star?", "in which (Y) does star (X)?", "in which (Y) is (X) starred?", "which (Y) does (X) star in?", "which (Y) does the (X) star in?", "which (Y) star in (X)?", "which (Y) starred in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2162",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3_104",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that star in (X)?", "Where does (X) star?", "Who did (X) star in?", "Who does (X) star in?", "Who starred in (X)?", "Who stars in (X)?", "which (Y) star in (X)?", "which (Y) starred in (X)?", "which (Y) stars in (X)?", "which (Y) was starred in (X)?", "which (Y) were starred in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2163",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3_104",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are starred in (X)?", "How many (Y) did (X) star in?", "How many (Y) star in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2164",
    "lexicalEntryUri" : "http://localhost:8080#come_from_115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were come from (X)?", "Give me all (X) Who were come from (X)?", "What (Y) was came from (X)?", "which (Y) was come from (X)?", "which (Y) were come from (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2165",
    "lexicalEntryUri" : "http://localhost:8080#come_from_115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) come?", "Where is (X) come?", "Where was (X) come?", "from which (Y) did (X) come?", "which (Y) does (X) come from?", "which (Y) was (X) come from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2166",
    "lexicalEntryUri" : "http://localhost:8080#come_from_115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2167",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1_57",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) release?", "When did the (X) release?", "When was (X) released?", "When was the (X) released?", "When were (X) released?", "When were the (X) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2168",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1_57",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) released at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2169",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1_57",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2170",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8_81",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "President" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) born?", "When was (X) born?", "in which (Y) was (X) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2171",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8_81",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "President" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in (X)?", "which (Y) was born in (X)?", "which (Y) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2172",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8_81",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "President" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2173",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3_97",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that associate with (X)?", "Where is (X) associated?", "Who does (X) associate with?", "which (Y) associate with (X)?", "which (Y) associated with (X)?", "which (Y) does (X) associate with?", "which (Y) does the (X) associate with?", "with which (Y)  (X) associate?", "with which (Y) are (X) associated?", "with which (Y) does (X) associate?", "with which (Y) does associate (X)?", "with which (Y) is (X) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2174",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3_97",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that associate with (X)?", "What (Y) did (X) associate with?", "What (Y) does (X) associate with?", "What associated with (X)?", "Where does (X) associate?", "which (Y) associate with (X)?", "which (Y) associated with (X)?", "which (Y) was associated with (X)?", "which (Y) were associated with (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2175",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3_97",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are associated with (X)?", "How many (Y) associate with (X)?", "How many (Y) did (X) associate with?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2176",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6_129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When was (X) founded?", "in which (Y) was (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/founded> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2177",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6_129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in (X)?", "which (Y) was founded in (X)?", "which (Y) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/founded> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2178",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6_129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/founded> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2179",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) split?", "When did the (X) split?", "When was (X) splited?", "When was the (X) splited?", "When were (X) splited?", "When were the (X) splited?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2180",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) splited up (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2181",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2182",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1_19",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) build?", "When did the (X) build?", "When was (X) built?", "When was the (X) built?", "When were (X) built?", "When were the (X) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2183",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1_19",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) built in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2184",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1_19",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2185",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) reopen?", "When did the (X) reopen?", "When was (X) reopened?", "When was the (X) reopened?", "When were (X) reopened?", "When were the (X) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2186",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) reopened on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2187",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2188",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6_43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "Where is (X) belonged?", "Who does (X) belong to?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/party> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2189",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6_43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2190",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6_43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2191",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_3_119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that speak in (X)?", "What (Y) does (X) speak in?", "Where is (X) spoken?", "in which (Y)  (X) speak?", "in which (Y) are (X) spoken?", "in which (Y) does (X) speak?", "in which (Y) does speak (X)?", "in which (Y) is (X) spoken?", "which (Y) does (X) speak in?", "which (Y) does the (X) speak in?", "which (Y) speak in (X)?", "which (Y) spoke in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2192",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_3_119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that speak in (X)?", "What (Y) did (X) speak in?", "What (Y) does (X) speak in?", "What speaks in (X)?", "What spoke in (X)?", "Where does (X) speak?", "which (Y) speak in (X)?", "which (Y) speaks in (X)?", "which (Y) spoke in (X)?", "which (Y) was spoken in (X)?", "which (Y) were spoken in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2193",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_3_119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are spoken in (X)?", "How many (Y) did (X) speak in?", "How many (Y) speak in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2194",
    "lexicalEntryUri" : "http://localhost:8080#record_for_1_22",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) record?", "When did the (X) record?", "When was (X) recored?", "When was the (X) recored?", "When were (X) recored?", "When were the (X) recored?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2195",
    "lexicalEntryUri" : "http://localhost:8080#record_for_1_22",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) recored for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2196",
    "lexicalEntryUri" : "http://localhost:8080#record_for_1_22",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2197",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1_100",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) commence?", "When did the (X) commence?", "When was (X) commenced?", "When was the (X) commenced?", "When were (X) commenced?", "When were the (X) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2198",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1_100",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) commenced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2199",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1_100",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2200",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5_44",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that locate in (X)?", "What (Y) does (X) locate in?", "Where is (X) located?", "in which (Y)  (X) locate?", "in which (Y) are (X) located?", "in which (Y) does (X) locate?", "in which (Y) does locate (X)?", "in which (Y) is (X) located?", "which (Y) does (X) locate in?", "which (Y) does the (X) locate in?", "which (Y) locate in (X)?", "which (Y) located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2201",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5_44",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that locate in (X)?", "What (Y) did (X) locate in?", "What (Y) does (X) locate in?", "What located in (X)?", "What locates in (X)?", "Where does (X) locate?", "which (Y) locate in (X)?", "which (Y) located in (X)?", "which (Y) locates in (X)?", "which (Y) was located in (X)?", "which (Y) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2202",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5_44",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are located in (X)?", "How many (Y) did (X) locate in?", "How many (Y) locate in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2203",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17_73",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) does (X) belong to?", "Where is (X) belonged?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2204",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17_73",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2205",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17_73",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2206",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7_47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "University" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were located in (X)?", "Give me all (X) Who were located in (X)?", "What (Y) was located in (X)?", "which (Y) was located in (X)?", "which (Y) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/state> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2207",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7_47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "University" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) locate?", "Where is (X) located?", "Where was (X) located?", "in which (Y) did (X) locate?", "which (Y) does (X) locate in?", "which (Y) was (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/state> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2208",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7_47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "University" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/state> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2209",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1_123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) form?", "When did the (X) form?", "When was (X) formed?", "When was the (X) formed?", "When were (X) formed?", "When were the (X) formed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2210",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1_123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) formed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2211",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1_123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2212",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1_109",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) complete?", "When did the (X) complete?", "When was (X) completed?", "When was the (X) completed?", "When were (X) completed?", "When were the (X) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2213",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1_109",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) completed in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2214",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1_109",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2215",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8_46",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MountainRange" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) does (X) belong to?", "Where is (X) belonged?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mountainRange> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2216",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8_46",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "MountainRange" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2217",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8_46",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "MountainRange" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2218",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that play in (X)?", "Where is (X) played?", "Who does (X) play in?", "in which (Y)  (X) play?", "in which (Y) are (X) played?", "in which (Y) does (X) play?", "in which (Y) does play (X)?", "in which (Y) is (X) played?", "which (Y) does (X) play in?", "which (Y) does the (X) play in?", "which (Y) play in (X)?", "which (Y) played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2219",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that play in (X)?", "What (Y) did (X) play in?", "What (Y) does (X) play in?", "What played in (X)?", "What plays in (X)?", "Where does (X) play?", "which (Y) play in (X)?", "which (Y) played in (X)?", "which (Y) plays in (X)?", "which (Y) was played in (X)?", "which (Y) were played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2220",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played in (X)?", "How many (Y) did (X) play in?", "How many (Y) play in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2221",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2222",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) published on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2223",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2224",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1_112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) die?", "When was (X) died?", "in which (Y) was (X) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2225",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1_112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was died in (X)?", "which (Y) was died in (X)?", "which (Y) were died in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2226",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1_112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2227",
    "lexicalEntryUri" : "http://localhost:8080#run_through_1_78",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) run?", "through which (Y) are (X) run?", "through which (Y) are the (X)?", "through which (Y) is (X) run?", "through which (Y) is the (X)?", "what (Y) is (X) through?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2228",
    "lexicalEntryUri" : "http://localhost:8080#run_through_1_78",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) runs through?", "What run through (X)?", "What runs through (X)?", "which (Y) runs through (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2229",
    "lexicalEntryUri" : "http://localhost:8080#run_through_1_78",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2230",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_2_132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that establish in (X)?", "Where is (X) established?", "Who does (X) establish in?", "in which (Y)  (X) establish?", "in which (Y) are (X) established?", "in which (Y) does (X) establish?", "in which (Y) does establish (X)?", "in which (Y) is (X) established?", "which (Y) does (X) establish in?", "which (Y) does the (X) establish in?", "which (Y) establish in (X)?", "which (Y) established in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/established> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2231",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_2_132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that establish in (X)?", "What (Y) did (X) establish in?", "What (Y) does (X) establish in?", "What established in (X)?", "What establishes in (X)?", "Where does (X) establish?", "which (Y) establish in (X)?", "which (Y) established in (X)?", "which (Y) establishes in (X)?", "which (Y) was established in (X)?", "which (Y) were established in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/established> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2232",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_2_132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are established in (X)?", "How many (Y) did (X) establish in?", "How many (Y) establish in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/established> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2233",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5_128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When did the (X) found?", "When was (X) founded?", "When was the (X) founded?", "When were (X) founded?", "When were the (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2234",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5_128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2235",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5_128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2236",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) publish?", "When did the (X) publish?", "When was (X) published?", "When was the (X) published?", "When were (X) published?", "When were the (X) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2237",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) published on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2238",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2239",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) build?", "When did the (X) build?", "When was (X) built?", "When was the (X) built?", "When were (X) built?", "When were the (X) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/beginningDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2240",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) built in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/beginningDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2241",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/beginningDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2242",
    "lexicalEntryUri" : "http://localhost:8080#extend_to_1_130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) extended?", "in which (Y) are (X) extended?", "in which (Y) are the (X)?", "in which (Y) is (X) extended?", "in which (Y) is the (X)?", "what (Y) is (X) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2243",
    "lexicalEntryUri" : "http://localhost:8080#extend_to_1_130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does (X) extend in?", "What extend in (X)?", "What extended in (X)?", "which (Y) extend in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2244",
    "lexicalEntryUri" : "http://localhost:8080#extend_to_1_130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2245",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2_120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were founded in (X)?", "Give me all (X) Who were founded in (X)?", "What (Y) was founded in (X)?", "which (Y) was founded in (X)?", "which (Y) were founded in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2246",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2_120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) found?", "Where is (X) founded?", "Where was (X) founded?", "in which (Y) did (X) found?", "which (Y) does (X) found in?", "which (Y) was (X) found in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2247",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2_120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2248",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that study at (X)?", "Where is (X) studied?", "Who does (X) study at?", "at which (Y)  (X) study?", "at which (Y) are (X) studied?", "at which (Y) does (X) study?", "at which (Y) does study (X)?", "at which (Y) is (X) studied?", "which (Y) does (X) study at?", "which (Y) does the (X) study at?", "which (Y) studied at (X)?", "which (Y) study at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2249",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that study at (X)?", "What (Y) did (X) study at?", "What (Y) does (X) study at?", "What studied at (X)?", "What studies at (X)?", "Where does (X) study?", "which (Y) studied at (X)?", "which (Y) studies at (X)?", "which (Y) study at (X)?", "which (Y) was studied at (X)?", "which (Y) were studied at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2250",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are studied at (X)?", "How many (Y) did (X) study at?", "How many (Y) study at (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2251",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that study at (X)?", "Where is (X) studied?", "Who does (X) study at?", "at which (Y)  (X) study?", "at which (Y) are (X) studied?", "at which (Y) does (X) study?", "at which (Y) does study (X)?", "at which (Y) is (X) studied?", "which (Y) does (X) study at?", "which (Y) does the (X) study at?", "which (Y) studied at (X)?", "which (Y) study at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2252",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that study at (X)?", "What (Y) did (X) study at?", "What (Y) does (X) study at?", "What studied at (X)?", "What studies at (X)?", "Where does (X) study?", "which (Y) studied at (X)?", "which (Y) studies at (X)?", "which (Y) study at (X)?", "which (Y) was studied at (X)?", "which (Y) were studied at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2253",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are studied at (X)?", "How many (Y) did (X) study at?", "How many (Y) study at (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2254",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2_38",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were buried in (X)?", "Give me all (X) Who were buried in (X)?", "What (Y) was buried in (X)?", "which (Y) was buried in (X)?", "which (Y) were buried in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/burialPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2255",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2_38",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) bury?", "Where is (X) buried?", "Where was (X) buried?", "in which (Y) did (X) bury?", "which (Y) does (X) bury in?", "which (Y) was (X) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/burialPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2256",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2_38",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/burialPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2257",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1_21",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) rebuild?", "When did the (X) rebuild?", "When was (X) rebuilt?", "When was the (X) rebuilt?", "When were (X) rebuilt?", "When were the (X) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2258",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1_21",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) rebuilt on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2259",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1_21",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2260",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1_70",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) open?", "When did the (X) open?", "When was (X) opened?", "When was the (X) opened?", "When were (X) opened?", "When were the (X) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2261",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1_70",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) opened on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2262",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1_70",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2263",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1_64",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2264",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1_64",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_ACTIVITY",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2265",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1_64",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2266",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1_29",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) introduce?", "When did the (X) introduce?", "When was (X) introduced?", "When was the (X) introduced?", "When were (X) introduced?", "When were the (X) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2267",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1_29",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) introduced on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2268",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1_29",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2269",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1_93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that begin at (X)?", "What (Y) does (X) begin at?", "Where is (X) began?", "at which (Y)  (X) begin?", "at which (Y) are (X) began?", "at which (Y) does (X) begin?", "at which (Y) does begin (X)?", "at which (Y) is (X) began?", "which (Y) began at (X)?", "which (Y) begin at (X)?", "which (Y) does (X) begin at?", "which (Y) does the (X) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/source1Location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2270",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1_93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that begin at (X)?", "What (Y) did (X) begin at?", "What (Y) does (X) begin at?", "What began at (X)?", "What begins at (X)?", "Where does (X) begin?", "which (Y) began at (X)?", "which (Y) begin at (X)?", "which (Y) begins at (X)?", "which (Y) was began at (X)?", "which (Y) were began at (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source1Location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2271",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1_93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are began at (X)?", "How many (Y) begin at (X)?", "How many (Y) did (X) begin at?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/source1Location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2272",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1_51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that play for (X)?", "Where is (X) played?", "Who does (X) play for?", "for which (Y)  (X) play?", "for which (Y) are (X) played?", "for which (Y) does (X) play?", "for which (Y) does play (X)?", "for which (Y) is (X) played?", "which (Y) does (X) play for?", "which (Y) does the (X) play for?", "which (Y) play for (X)?", "which (Y) played for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/debutTeam> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2273",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1_51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that play for (X)?", "What (Y) did (X) play for?", "What (Y) does (X) play for?", "What played for (X)?", "What plays for (X)?", "Where does (X) play?", "which (Y) play for (X)?", "which (Y) played for (X)?", "which (Y) plays for (X)?", "which (Y) was played for (X)?", "which (Y) were played for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2274",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1_51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played for (X)?", "How many (Y) did (X) play for?", "How many (Y) play for (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2275",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were located in (X)?", "Give me all (X) Who were located in (X)?", "What (Y) was located in (X)?", "which (Y) was located in (X)?", "which (Y) were located in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2276",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) locate?", "Where is (X) located?", "Where was (X) located?", "in which (Y) did (X) locate?", "which (Y) does (X) locate in?", "which (Y) was (X) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2277",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2278",
    "lexicalEntryUri" : "http://localhost:8080#draft_in_1_113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "AmericanFootballPlayer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) draft?", "When was (X) drafted?", "in which (Y) was (X) drafted?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/draftYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2279",
    "lexicalEntryUri" : "http://localhost:8080#draft_in_1_113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AmericanFootballPlayer" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "What (Y) was drafted in (X)?", "which (Y) was drafted in (X)?", "which (Y) were drafted in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2280",
    "lexicalEntryUri" : "http://localhost:8080#draft_in_1_113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AmericanFootballPlayer" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2281",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that stand for (X)?", "What (Y) does (X) stand for?", "Where is (X) stood?", "for which (Y)  (X) stand?", "for which (Y) are (X) stood?", "for which (Y) does (X) stand?", "for which (Y) does stand (X)?", "for which (Y) is (X) stood?", "which (Y) does (X) stand for?", "which (Y) does the (X) stand for?", "which (Y) stand for (X)?", "which (Y) stood for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2282",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that stand for (X)?", "What (Y) did (X) stand for?", "What (Y) does (X) stand for?", "What stands for (X)?", "What stood for (X)?", "Where does (X) stand?", "which (Y) stand for (X)?", "which (Y) stands for (X)?", "which (Y) stood for (X)?", "which (Y) was stood for (X)?", "which (Y) were stood for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2283",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are stood for (X)?", "How many (Y) did (X) stand for?", "How many (Y) stand for (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2284",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4_107",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that play in (X)?", "What (Y) does (X) play in?", "Where is (X) played?", "in which (Y)  (X) play?", "in which (Y) are (X) played?", "in which (Y) does (X) play?", "in which (Y) does play (X)?", "in which (Y) is (X) played?", "which (Y) does (X) play in?", "which (Y) does the (X) play in?", "which (Y) play in (X)?", "which (Y) played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2285",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4_107",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that play in (X)?", "Where does (X) play?", "Who did (X) play in?", "Who does (X) play in?", "Who played in (X)?", "Who plays in (X)?", "which (Y) play in (X)?", "which (Y) played in (X)?", "which (Y) plays in (X)?", "which (Y) was played in (X)?", "which (Y) were played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2286",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4_107",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played in (X)?", "How many (Y) did (X) play in?", "How many (Y) play in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2287",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that flow through (X)?", "What (Y) does (X) flow through?", "Where is (X) flown?", "through which (Y)  (X) flow?", "through which (Y) are (X) flown?", "through which (Y) does (X) flow?", "through which (Y) does flow (X)?", "through which (Y) is (X) flown?", "which (Y) does (X) flow through?", "which (Y) does the (X) flow through?", "which (Y) flow through (X)?", "which (Y) flowed through (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2288",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that flow through (X)?", "What (Y) did (X) flow through?", "What (Y) does (X) flow through?", "What flowed through (X)?", "What flows through (X)?", "Where does (X) flow?", "which (Y) flow through (X)?", "which (Y) flowed through (X)?", "which (Y) flows through (X)?", "which (Y) was flown through (X)?", "which (Y) were flown through (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2289",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are flown through (X)?", "How many (Y) did (X) flow through?", "How many (Y) flow through (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2290",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10_76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "Where is (X) belonged?", "Who does (X) belong to?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2291",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10_76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2292",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10_76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2293",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2_61",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) found?", "When did the (X) found?", "When was (X) founded?", "When was the (X) founded?", "When were (X) founded?", "When were the (X) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2294",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2_61",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) founded on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2295",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2_61",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2296",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1_25",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that record in (X)?", "What (Y) does (X) record in?", "Where is (X) recored?", "in which (Y)  (X) record?", "in which (Y) are (X) recored?", "in which (Y) does (X) record?", "in which (Y) does record (X)?", "in which (Y) is (X) recored?", "which (Y) does (X) record in?", "which (Y) does the (X) record in?", "which (Y) record in (X)?", "which (Y) recored in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/recordedIn> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2297",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1_25",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that record in (X)?", "What (Y) did (X) record in?", "What (Y) does (X) record in?", "What records in (X)?", "What recored in (X)?", "Where does (X) record?", "which (Y) record in (X)?", "which (Y) records in (X)?", "which (Y) recored in (X)?", "which (Y) was recored in (X)?", "which (Y) were recored in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2298",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1_25",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are recored in (X)?", "How many (Y) did (X) record in?", "How many (Y) record in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2299",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_85",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (Y) grew in (X)?", "What (Y) grow in (X)?", "which (Y) grew in (X)?", "which (Y) grow in (X)?", "which (Y) grows in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2300",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_85",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which (Y) are (X) grown?", "in which (Y) does (X) grow?", "in which (Y) is (X) grown?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2301",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_85",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2302",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) open?", "When did the (X) open?", "When was (X) opened?", "When was the (X) opened?", "When were (X) opened?", "When were the (X) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2303",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) opened in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2304",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/openingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2305",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) does (X) end in?", "Where is (X) ended?", "in which (Y)  (X) end?", "in which (Y) are (X) ended?", "in which (Y) does (X) end?", "in which (Y) does end (X)?", "in which (Y) is (X) ended?", "which (Y) does (X) end in?", "which (Y) does the (X) end in?", "which (Y) end in (X)?", "which (Y) ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2306",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) did (X) end in?", "What (Y) does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (Y) end in (X)?", "which (Y) ended in (X)?", "which (Y) ends in (X)?", "which (Y) was ended in (X)?", "which (Y) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2307",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are ended in (X)?", "How many (Y) did (X) end in?", "How many (Y) end in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2308",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) does (X) end in?", "Where is (X) ended?", "in which (Y)  (X) end?", "in which (Y) are (X) ended?", "in which (Y) does (X) end?", "in which (Y) does end (X)?", "in which (Y) is (X) ended?", "which (Y) does (X) end in?", "which (Y) does the (X) end in?", "which (Y) end in (X)?", "which (Y) ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2309",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that end in (X)?", "What (Y) did (X) end in?", "What (Y) does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (Y) end in (X)?", "which (Y) ended in (X)?", "which (Y) ends in (X)?", "which (Y) was ended in (X)?", "which (Y) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2310",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are ended in (X)?", "How many (Y) did (X) end in?", "How many (Y) end in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2311",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12_77",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) does (X) belong to?", "Where is (X) belonged?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2312",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12_77",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2313",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12_77",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2314",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2_42",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (Y) grew in (X)?", "What (Y) grow in (X)?", "which (Y) grew in (X)?", "which (Y) grow in (X)?", "which (Y) grows in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2315",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2_42",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which (Y) are (X) grown?", "in which (Y) does (X) grow?", "in which (Y) is (X) grown?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2316",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2_42",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2317",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7_86",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Swimmer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were born in (X)?", "Give me all (X) Who were born in (X)?", "What (Y) was born in (X)?", "which (Y) was born in (X)?", "which (Y) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2318",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7_86",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Swimmer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) born?", "Where is (X) born?", "Where was (X) born?", "in which (Y) did (X) born?", "which (Y) does (X) born in?", "which (Y) was (X) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2319",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7_86",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Swimmer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2320",
    "lexicalEntryUri" : "http://localhost:8080#study_in_63",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that study in (X)?", "Where is (X) studied?", "Who does (X) study in?", "in which (Y)  (X) study?", "in which (Y) are (X) studied?", "in which (Y) does (X) study?", "in which (Y) does study (X)?", "in which (Y) is (X) studied?", "which (Y) does (X) study in?", "which (Y) does the (X) study in?", "which (Y) studied in (X)?", "which (Y) study in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2321",
    "lexicalEntryUri" : "http://localhost:8080#study_in_63",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that study in (X)?", "What (Y) did (X) study in?", "What (Y) does (X) study in?", "What studied in (X)?", "What studies in (X)?", "Where does (X) study?", "which (Y) studied in (X)?", "which (Y) studies in (X)?", "which (Y) study in (X)?", "which (Y) was studied in (X)?", "which (Y) were studied in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2322",
    "lexicalEntryUri" : "http://localhost:8080#study_in_63",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are studied in (X)?", "How many (Y) did (X) study in?", "How many (Y) study in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2323",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2_102",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that play in (X)?", "Where is (X) played?", "Who does (X) play in?", "in which (Y)  (X) play?", "in which (Y) are (X) played?", "in which (Y) does (X) play?", "in which (Y) does play (X)?", "in which (Y) is (X) played?", "which (Y) does (X) play in?", "which (Y) does the (X) play in?", "which (Y) play in (X)?", "which (Y) played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/position> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2324",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2_102",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that play in (X)?", "What (Y) did (X) play in?", "What (Y) does (X) play in?", "What played in (X)?", "What plays in (X)?", "Where does (X) play?", "which (Y) play in (X)?", "which (Y) played in (X)?", "which (Y) plays in (X)?", "which (Y) was played in (X)?", "which (Y) were played in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/position> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2325",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2_102",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are played in (X)?", "How many (Y) did (X) play in?", "How many (Y) play in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/position> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2326",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1_88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) born?", "When was (X) born?", "in which (Y) was (X) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2327",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1_88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in (X)?", "which (Y) was born in (X)?", "which (Y) were born in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2328",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1_88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2329",
    "lexicalEntryUri" : "http://localhost:8080#call_1_121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did (X) call ?", "Who does (X) call ?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2330",
    "lexicalEntryUri" : "http://localhost:8080#call_1_121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (Y) is called  (X)?", "What (Y) was called  (X)?", "which (Y) are called  (X)?", "which (Y) is called  (X)?", "which (Y) was called  (X)?", "which (Y) were called  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2331",
    "lexicalEntryUri" : "http://localhost:8080#call_1_121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2332",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "How many (Y) does (X) live?", "How many live in (X)?", "How many lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2333",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2334",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2335",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15_71",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) does (X) belong to?", "Where is (X) belonged?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subdivision> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2336",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15_71",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2337",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15_71",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2338",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1_58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that name after (X)?", "What (Y) does (X) name after?", "Where is (X) named?", "after which (Y)  (X) name?", "after which (Y) are (X) named?", "after which (Y) does (X) name?", "after which (Y) does name (X)?", "after which (Y) is (X) named?", "which (Y) does (X) name after?", "which (Y) does the (X) name after?", "which (Y) name after (X)?", "which (Y) named after (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/namedAfter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2339",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1_58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that name after (X)?", "Where does (X) name?", "Who did (X) name after?", "Who does (X) name after?", "Who named after (X)?", "which (Y) name after (X)?", "which (Y) named after (X)?", "which (Y) was named after (X)?", "which (Y) were named after (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2340",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1_58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are named after (X)?", "How many (Y) did (X) name after?", "How many (Y) name after (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2341",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1_98",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) discontinue?", "When did the (X) discontinue?", "When was (X) discontinued?", "When was the (X) discontinued?", "When were (X) discontinued?", "When were the (X) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2342",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1_98",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What (Y) discontinued in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2343",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1_98",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2344",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1_50",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that start in (X)?", "What (Y) does (X) start in?", "Where is (X) started?", "in which (Y)  (X) start?", "in which (Y) are (X) started?", "in which (Y) does (X) start?", "in which (Y) does start (X)?", "in which (Y) is (X) started?", "which (Y) does (X) start in?", "which (Y) does the (X) start in?", "which (Y) start in (X)?", "which (Y) started in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeStart> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2345",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1_50",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that start in (X)?", "What (Y) did (X) start in?", "What (Y) does (X) start in?", "What started in (X)?", "What starts in (X)?", "Where does (X) start?", "which (Y) start in (X)?", "which (Y) started in (X)?", "which (Y) starts in (X)?", "which (Y) was started in (X)?", "which (Y) were started in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2346",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1_50",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are started in (X)?", "How many (Y) did (X) start in?", "How many (Y) start in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2347",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1_134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all (X) that were produced in (X)?", "Give me all (X) Who were produced in (X)?", "What (Y) was produced in (X)?", "which (Y) was produced in (X)?", "which (Y) were produced in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2348",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1_134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did (X) produce?", "Where is (X) produced?", "Where was (X) produced?", "in which (Y) did (X) produce?", "which (Y) does (X) produce in?", "which (Y) was (X) produce in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2349",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1_134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2350",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2_60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that release on (X)?", "What (Y) does (X) release on?", "Where is (X) released?", "on which (Y)  (X) release?", "on which (Y) are (X) released?", "on which (Y) does (X) release?", "on which (Y) does release (X)?", "on which (Y) is (X) released?", "which (Y) does (X) release on?", "which (Y) does the (X) release on?", "which (Y) release on (X)?", "which (Y) released on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/computingPlatform> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2351",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2_60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that release on (X)?", "What (Y) did (X) release on?", "What (Y) does (X) release on?", "What released on (X)?", "What releases on (X)?", "Where does (X) release?", "which (Y) release on (X)?", "which (Y) released on (X)?", "which (Y) releases on (X)?", "which (Y) was released on (X)?", "which (Y) were released on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2352",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2_60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are released on (X)?", "How many (Y) did (X) release on?", "How many (Y) release on (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2353",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4_40",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) does (X) belong to?", "Where is (X) belonged?", "to which (Y)  (X) belong?", "to which (Y) are (X) belonged?", "to which (Y) does (X) belong?", "to which (Y) does belong (X)?", "to which (Y) is (X) belonged?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) does (X) belong to?", "which (Y) does the (X) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2354",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4_40",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all (X) that belong to (X)?", "What (Y) did (X) belong to?", "What (Y) does (X) belong to?", "What belonged to (X)?", "What belongs to (X)?", "Where does (X) belong?", "which (Y) belong to (X)?", "which (Y) belonged to (X)?", "which (Y) belongs to (X)?", "which (Y) was belonged to (X)?", "which (Y) were belonged to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2355",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4_40",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (Y) are belonged to (X)?", "How many (Y) belong to (X)?", "How many (Y) did (X) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2356",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_19_74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) belonged?", "to which (Y) are (X) belonged?", "to which (Y) are the (X)?", "to which (Y) is (X) belonged?", "to which (Y) is the (X)?", "what (Y) is (X) to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "2357",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_19_74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What belong to (X)?", "What belonged to (X)?", "What does (X) belong to?", "which (Y) belong to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2358",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_19_74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2359",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : null
  } ]
}