{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#highest_place_of_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) highest place.", "List all the places with highest place of (X).", "What (X) is (X) 's highest place?", "What (X) is the highest place of (X)?", "What (X) is the highest place of the (X)?", "What (X) was (X) 's highest place?", "What (X) was the highest place of (X)?", "What (X) was the highest place of the (X)?", "What is the highest place of (X)?", "What is the highest place of the (X)?", "What was the highest place of (X)?", "What was the highest place of the (X)?", "which (X) is the highest place of (X)?", "which (X) is the highest place of the (X)?", "which (X) was the highest place of (X)?", "which (X) was the highest place of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/highest> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#highest_place_of_7",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the highest place of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/highest> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all (X) develop (X)?", "Give me all (X) that developed (X)?", "Give me all (X) that developed the (X)?", "List all (X) develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who develops (X)?", "Who develops the (X) (X)?", "Who develops the (X)?", "Who was the (X) that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all (X) developed by (X)?", "List all (X) developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of (X) did (X) develop?", "show me all (X) that (X) developed", "show me the (X) that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) develop (X)?", "Give me all (X) that developed (X)?", "Give me all (X) that developed the (X)", "List all (X) develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who developed the video game (X)?", "Who developed the video games (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the video game (X)?", "Who develops the video games (X)?", "Who was the (X) that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) developed by (X)?", "List all (X) developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of (X) did (X) develop?", "show me all (X) that (X) developed", "show me the (X) that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_3_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all (X) develop (X)?", "Give me all (X) that developed (X)?", "Give me all (X) that developed the (X)?", "List all (X) develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who develops (X)?", "Who develops the (X) (X)?", "Who develops the (X)?", "Who was the (X) that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_3_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all (X) developed by (X)?", "List all (X) developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of (X) did (X) develop?", "show me all (X) that (X) developed", "show me the (X) that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_3_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#high_2_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lighthouse" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What (X) is the highest Lighthouse in (X)?", "What (X) is the highest Lighthouse in the (X)?", "What (X) is the highest the Lighthouse in (X)?", "What (X) is the highest the Lighthouse in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lighthouse> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#high_2_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is (X)?", "How high is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#high_2_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all Lighthouses that are higher than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#high_1_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What (X) is the highest mountain in (X)?", "What (X) is the highest mountain in the (X)?", "What (X) is the highest the mountain in (X)?", "What (X) is the highest the mountain in the (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#high_1_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is (X)?", "How high is the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#high_1_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all mountains that are higher than (X)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What (X) does (X) end in?", "Where is (X) ended?", "in which (X)  (X) end?", "in which (X) are (X) ended?", "in which (X) does (X) end?", "in which (X) does end (X)?", "in which (X) is (X) ended?", "which (X) does (X) end in?", "which (X) does the (X) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) end in?", "What ended in (X)?", "What ends in (X)?", "Where does (X) end?", "which (X) end in (X)?", "which (X) ended in (X)?", "which (X) ends in (X)?", "which (X) was ended in (X)?", "which (X) were ended in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) end in?", "How many (X) end in (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) end his active career?", "When was (X) ended his active career?", "on which (X) was (X) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "What (X) was ended his active career on (X)?", "which (X) was ended his active career on (X)?", "which (X) were ended his active career on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "returnVariable" : null,
    "combination" : false
  } ]
}