{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#height_of_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the (X) height.", "What (X) is (X) 's height?", "What (X) is the height of (X)?", "What (X) is the height of the (X)?", "What (X) was (X) 's height?", "What (X) was the height of (X)?", "What (X) was the height of the (X)?", "which (X) is the height of (X)?", "which (X) is the height of the (X)?", "which (X) was the height of (X)?", "which (X) was the height of the (X)?", "Who is the height of (X)?", "Who is the height of the (X)?", "Who was the height of (X)?", "Who was the height of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#height_of_6",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the height of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#part-of_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all (X) parts.", "Give me all parts of (X).", "Give me the (X) part.", "Give me the (X) parts.", "List all parts of (X).", "List all the parts of (X).", "List all the politicalParties with part of (X).", "show me all parts of (X).", "What (X) are the parts of the (X)?", "What (X) is (X) 's part?", "What (X) is the part of (X)?", "What (X) is the part of the (X)?", "What (X) was (X) 's part?", "What (X) was the part of (X)?", "What (X) was the part of the (X)?", "What (X) were the parts of the (X)?", "which (X) are the parts of (X)?", "which (X) are the parts of the (X)?", "which (X) is the part of (X)?", "which (X) is the part of the (X)?", "which (X) was the part of (X)?", "which (X) was the part of the (X)?", "which (X) were the parts of (X)?", "which (X) were the parts of the (X)?", "Who are the parts of (X)?", "Who are the parts of the (X)?", "Who is the part of (X)?", "Who is the part of the (X)?", "Who was the part of (X)?", "Who was the part of the (X)?", "Who were the parts of (X)?", "Who were the parts of the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/alliance> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#part-of_5",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the part of (X)?", "the parts of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/alliance> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all (X) develop (X)?", "Give me all (X) that developed (X)?", "Give me all (X) that developed the (X)?", "List all (X) develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who develops (X)?", "Who develops the (X) (X)?", "Who develops the (X)?", "Who was the (X) that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all (X) developed by (X)?", "List all (X) developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of (X) did (X) develop?", "show me all (X) that (X) developed", "show me the (X) that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) develop (X)?", "Give me all (X) that developed (X)?", "Give me all (X) that developed the (X)", "List all (X) develop (X)?", "Who developed (X)?", "Who developed the (X) (X)?", "Who developed the (X)?", "Who develops (X)?", "Who develops the (X) (X)?", "Who develops the (X)?", "Who was the (X) that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all (X) developed by (X)?", "List all (X) developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of (X) did (X) develop?", "show me all (X) that (X) developed", "show me the (X) that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did (X) end his active career?", "When was (X) ended his active career?", "on which (X) was (X) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "What (X) was ended his active career on (X)?", "which (X) was ended his active career on (X)?", "which (X) were ended his active career on (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is (X) played?", "Who does (X) play for?", "for which (X)  (X) play?", "for which (X) are (X) played?", "for which (X) does (X) play?", "for which (X) does play (X)?", "for which (X) is (X) played?", "which (X) does (X) play for?", "which (X) does the (X) play for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/team> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does (X) play for?", "What played for (X)?", "What plays for (X)?", "Where does (X) play?", "which (X) play for (X)?", "which (X) played for (X)?", "which (X) plays for (X)?", "which (X) was played for (X)?", "which (X) were played for (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) did (X) play for?", "How many (X) play for (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "returnVariable" : null,
    "combination" : false
  } ]
}