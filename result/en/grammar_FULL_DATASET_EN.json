{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "HockeyTeam",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all teams of ($x | IceHockeyLeague_NP).", "List all the teams of ($x | IceHockeyLeague_NP).", "show me all teams of ($x | IceHockeyLeague_NP).", "What are the teams of ($x | IceHockeyLeague_NP)?", "What is the team of ($x | IceHockeyLeague_NP)?", "What was the team of ($x | IceHockeyLeague_NP)?", "What were the teams of ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/league> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "HockeyTeam",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many team does ($x | IceHockeyLeague_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/league> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "HockeyTeam",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the team of ($x | IceHockeyLeague_NP)?", "the teams of ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/league> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death place of ($x | Politician_NP)?", "What was the death place of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many death place does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death place of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MeanOfTransportation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all delivery Dates of ($x | MeanOfTransportation_NP).", "List all the delivery Dates of ($x | MeanOfTransportation_NP).", "show me all delivery Dates of ($x | MeanOfTransportation_NP).", "What are the delivery Dates of ($x | MeanOfTransportation_NP)?", "What is the delivery Date of ($x | MeanOfTransportation_NP)?", "What was the delivery Date of ($x | MeanOfTransportation_NP)?", "What were the delivery Dates of ($x | MeanOfTransportation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MeanOfTransportation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many delivery Date does ($x | MeanOfTransportation_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "MeanOfTransportation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the delivery Date of ($x | MeanOfTransportation_NP)?", "the delivery Dates of ($x | MeanOfTransportation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city of ($x | Country_NP)?", "What was the largest city of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many largest city does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of ($x | Person_NP)?", "What was the birth year of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many birth year does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth year of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the elevation of ($x | Mountain_NP)?", "What was the elevation of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many elevation does ($x | Mountain_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Mountain",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the elevation of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of ($x | Person_NP)?", "What was the birth place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many birth place does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the first season of ($x | TelevisionShow_NP)?", "What was the first season of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many first season does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first season of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all number Of Seasons of ($x | TelevisionShow_NP).", "List all the number Of Seasons of ($x | TelevisionShow_NP).", "show me all number Of Seasons of ($x | TelevisionShow_NP).", "What are the number Of Seasons of ($x | TelevisionShow_NP)?", "What is the number Of Season of ($x | TelevisionShow_NP)?", "What was the number Of Season of ($x | TelevisionShow_NP)?", "What were the number Of Seasons of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many number Of Season does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Season of ($x | TelevisionShow_NP)?", "the number Of Seasons of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of ($x | Country_NP)?", "What was the capital of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many capital does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the founding year of ($x | Company_NP)?", "What was the founding year of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many founding year does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding year of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of ($x | Person_NP)?", "What was the death date of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many death date does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death date of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all costs of ($x | Film_NP).", "List all the costs of ($x | Film_NP).", "show me all costs of ($x | Film_NP).", "What are the costs of ($x | Film_NP)?", "What is the cost of ($x | Film_NP)?", "What was the cost of ($x | Film_NP)?", "What were the costs of ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many cost does ($x | Film_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cost of ($x | Film_NP)?", "the costs of ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of ($x | Place_NP)?", "What was the location of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many location does ($x | Place_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all editors of ($x | Work_NP).", "List all the editors of ($x | Work_NP).", "show me all editors of ($x | Work_NP).", "Who are the editors of ($x | Work_NP)?", "Who is the editor of ($x | Work_NP)?", "Who was the editor of ($x | Work_NP)?", "Who were the editors of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many editor does ($x | Work_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of ($x | Work_NP)?", "the editors of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of ($x | Person_NP).", "List all the parents of ($x | Person_NP).", "show me all parents of ($x | Person_NP).", "Who are the parents of ($x | Person_NP)?", "Who is the parent of ($x | Person_NP)?", "Who was the parent of ($x | Person_NP)?", "Who were the parents of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many parent does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parent of ($x | Person_NP)?", "the parents of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the completion date of ($x | Ship_NP)?", "What was the completion date of ($x | Ship_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many completion date does ($x | Ship_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the completion date of ($x | Ship_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Loyalty",
    "returnType" : "Color",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all loyalties  ($x | Loyalty_NP).", "List all the loyalties  ($x | Loyalty_NP).", "show me all loyalties  ($x | Loyalty_NP).", "What are the loyalties  ($x | Loyalty_NP)?", "What is the loyalty  ($x | Loyalty_NP)?", "What was the loyalty  ($x | Loyalty_NP)?", "What were the loyalties  ($x | Loyalty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Loyalty",
    "returnType" : "Color",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many loyalty does ($x | Loyalty_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Loyalty",
    "returnType" : "Color",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the loyalties  ($x | Loyalty_NP)?", "the loyalty  ($x | Loyalty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Writer",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all books by ($x | Writer_NP).", "List all the books by ($x | Writer_NP).", "show me all books by ($x | Writer_NP).", "What are the books by ($x | Writer_NP)?", "What is the book by ($x | Writer_NP)?", "What was the book by ($x | Writer_NP)?", "What were the books by ($x | Writer_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Writer",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many book does ($x | Writer_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Writer",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by ($x | Writer_NP)?", "the books by ($x | Writer_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all kings of ($x | Legislature_NP).", "List all the kings of ($x | Legislature_NP).", "show me all kings of ($x | Legislature_NP).", "Who are the kings of ($x | Legislature_NP)?", "Who is the king of ($x | Legislature_NP)?", "Who was the king of ($x | Legislature_NP)?", "Who were the kings of ($x | Legislature_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many king does ($x | Legislature_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ($x | Legislature_NP)?", "the kings of ($x | Legislature_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all coaches of ($x | IceHockeyLeague_NP).", "List all the coaches of ($x | IceHockeyLeague_NP).", "show me all coaches of ($x | IceHockeyLeague_NP).", "Who are the coaches of ($x | IceHockeyLeague_NP)?", "Who is the coach of ($x | IceHockeyLeague_NP)?", "Who was the coach of ($x | IceHockeyLeague_NP)?", "Who were the coaches of ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many coach does ($x | IceHockeyLeague_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ($x | IceHockeyLeague_NP)?", "the coaches of ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all coaches of ($x | HockeyTeam_NP).", "List all the coaches of ($x | HockeyTeam_NP).", "show me all coaches of ($x | HockeyTeam_NP).", "Who are the coaches of ($x | HockeyTeam_NP)?", "Who is the coach of ($x | HockeyTeam_NP)?", "Who was the coach of ($x | HockeyTeam_NP)?", "Who were the coaches of ($x | HockeyTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many coach does ($x | HockeyTeam_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ($x | HockeyTeam_NP)?", "the coaches of ($x | HockeyTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Album",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all albums of ($x | Song_NP).", "List all the albums of ($x | Song_NP).", "show me all albums of ($x | Song_NP).", "What are the albums of ($x | Song_NP)?", "What is the album of ($x | Song_NP)?", "What was the album of ($x | Song_NP)?", "What were the albums of ($x | Song_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Album",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many album does ($x | Song_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Song",
    "returnType" : "Album",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the album of ($x | Song_NP)?", "the albums of ($x | Song_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Who is the alter ego of ($x | ComicsCharacter_NP)?", "Who was the alter ego of ($x | ComicsCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many alter ego does ($x | ComicsCharacter_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alter ego of ($x | ComicsCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "MusicalArtist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all members of ($x | Band_NP).", "List all the members of ($x | Band_NP).", "show me all members of ($x | Band_NP).", "Who are the members of ($x | Band_NP)?", "Who is the member of ($x | Band_NP)?", "Who was the member of ($x | Band_NP)?", "Who were the members of ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "MusicalArtist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many member does ($x | Band_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Band",
    "returnType" : "MusicalArtist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ($x | Band_NP)?", "the members of ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of ($x | Mountain_NP)?", "What was the location of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many location does ($x | Mountain_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all games by ($x | Company_NP).", "List all the games by ($x | Company_NP).", "show me all games by ($x | Company_NP).", "What are the games by ($x | Company_NP)?", "What is the game by ($x | Company_NP)?", "What was the game by ($x | Company_NP)?", "What were the games by ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many game does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by ($x | Company_NP)?", "the games by ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of ($x | Thing_NP).", "List all the borough of ($x | Thing_NP).", "show me all borough of ($x | Thing_NP).", "What are the borough of ($x | Thing_NP)?", "What is the borough of ($x | Thing_NP)?", "What was the borough of ($x | Thing_NP)?", "What were the borough of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many borough does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all authors of ($x | Work_NP).", "List all the authors of ($x | Work_NP).", "show me all authors of ($x | Work_NP).", "Who are the authors of ($x | Work_NP)?", "Who is the author of ($x | Work_NP)?", "Who was the author of ($x | Work_NP)?", "Who were the authors of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many author does ($x | Work_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of ($x | Work_NP)?", "the authors of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Ascent Persons of ($x | Mountain_NP).", "List all the first Ascent Persons of ($x | Mountain_NP).", "show me all first Ascent Persons of ($x | Mountain_NP).", "What are the first Ascent Persons of ($x | Mountain_NP)?", "What is the first Ascent Person of ($x | Mountain_NP)?", "What was the first Ascent Person of ($x | Mountain_NP)?", "What were the first Ascent Persons of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "89",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many first Ascent Person does ($x | Mountain_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Ascent Person of ($x | Mountain_NP)?", "the first Ascent Persons of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all isbns of ($x | Book_NP).", "List all the isbns of ($x | Book_NP).", "show me all isbns of ($x | Book_NP).", "What are the isbns of ($x | Book_NP)?", "What is the isbn of ($x | Book_NP)?", "What was the isbn of ($x | Book_NP)?", "What were the isbns of ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many isbn does ($x | Book_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Book",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the isbn of ($x | Book_NP)?", "the isbns of ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all books in ($x | TelevisionShow_NP).", "List all the books in ($x | TelevisionShow_NP).", "show me all books in ($x | TelevisionShow_NP).", "What are the books in ($x | TelevisionShow_NP)?", "What is the book in ($x | TelevisionShow_NP)?", "What was the book in ($x | TelevisionShow_NP)?", "What were the books in ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many book does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in ($x | TelevisionShow_NP)?", "the books in ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all last Election Dates of ($x | Organisation_NP).", "List all the last Election Dates of ($x | Organisation_NP).", "show me all last Election Dates of ($x | Organisation_NP).", "What are the last Election Dates of ($x | Organisation_NP)?", "What is the last Election Date of ($x | Organisation_NP)?", "What was the last Election Date of ($x | Organisation_NP)?", "What were the last Election Dates of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many last Election Date does ($x | Organisation_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the last Election Date of ($x | Organisation_NP)?", "the last Election Dates of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of ($x | Settlement_NP).", "List all the mayors of ($x | Settlement_NP).", "show me all mayors of ($x | Settlement_NP).", "Who are the mayors of ($x | Settlement_NP)?", "Who is the mayor of ($x | Settlement_NP)?", "Who was the mayor of ($x | Settlement_NP)?", "Who were the mayors of ($x | Settlement_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many mayor does ($x | Settlement_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ($x | Settlement_NP)?", "the mayors of ($x | Settlement_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all musics by ($x | Musical_NP).", "List all the musics by ($x | Musical_NP).", "show me all musics by ($x | Musical_NP).", "Who are the musics by ($x | Musical_NP)?", "Who is the music by ($x | Musical_NP)?", "Who was the music by ($x | Musical_NP)?", "Who were the musics by ($x | Musical_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "104",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many music does ($x | Musical_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by ($x | Musical_NP)?", "the musics by ($x | Musical_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all foundation series of ($x | TelevisionShow_NP).", "List all the foundation series of ($x | TelevisionShow_NP).", "show me all foundation series of ($x | TelevisionShow_NP).", "Who are the foundation series of ($x | TelevisionShow_NP)?", "Who is the foundation series of ($x | TelevisionShow_NP)?", "Who was the foundation series of ($x | TelevisionShow_NP)?", "Who were the foundation series of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many foundation series does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation series of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of ($x | Person_NP).", "List all the presidents of ($x | Person_NP).", "show me all presidents of ($x | Person_NP).", "What are the presidents of ($x | Person_NP)?", "What is the president of ($x | Person_NP)?", "What was the president of ($x | Person_NP)?", "What were the presidents of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many president does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ($x | Person_NP)?", "the presidents of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/office> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all opening Dates of ($x | ArchitecturalStructure_NP).", "List all the opening Dates of ($x | ArchitecturalStructure_NP).", "show me all opening Dates of ($x | ArchitecturalStructure_NP).", "What are the opening Dates of ($x | ArchitecturalStructure_NP)?", "What is the opening Date of ($x | ArchitecturalStructure_NP)?", "What was the opening Date of ($x | ArchitecturalStructure_NP)?", "What were the opening Dates of ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many opening Date does ($x | ArchitecturalStructure_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the opening Date of ($x | ArchitecturalStructure_NP)?", "the opening Dates of ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parties of ($x | Politician_NP).", "List all the parties of ($x | Politician_NP).", "show me all parties of ($x | Politician_NP).", "What are the parties of ($x | Politician_NP)?", "What is the party of ($x | Politician_NP)?", "What was the party of ($x | Politician_NP)?", "What were the parties of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "116",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many party does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ($x | Politician_NP)?", "the party of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parties of ($x | Politician_NP).", "List all the parties of ($x | Politician_NP).", "show me all parties of ($x | Politician_NP).", "What are the parties of ($x | Politician_NP)?", "What is the party of ($x | Politician_NP)?", "What was the party of ($x | Politician_NP)?", "What were the parties of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many party does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ($x | Politician_NP)?", "the party of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the post code of ($x | Place_NP)?", "What was the post code of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many post code does ($x | Place_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the post code of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the release date of ($x | Software_NP)?", "What was the release date of ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many release date does ($x | Software_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the release date of ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all artistic movements of ($x | Artist_NP).", "List all the artistic movements of ($x | Artist_NP).", "show me all artistic movements of ($x | Artist_NP).", "What are the artistic movements of ($x | Artist_NP)?", "What is the artistic movement of ($x | Artist_NP)?", "What was the artistic movement of ($x | Artist_NP)?", "What were the artistic movements of ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "128",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many artistic movement does ($x | Artist_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ($x | Artist_NP)?", "the artistic movements of ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all artistic movements of ($x | Artist_NP).", "List all the artistic movements of ($x | Artist_NP).", "show me all artistic movements of ($x | Artist_NP).", "What are the artistic movements of ($x | Artist_NP)?", "What is the artistic movement of ($x | Artist_NP)?", "What was the artistic movement of ($x | Artist_NP)?", "What were the artistic movements of ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many artistic movement does ($x | Artist_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ($x | Artist_NP)?", "the artistic movements of ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "133",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "School",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all number Of Students of ($x | School_NP).", "List all the number Of Students of ($x | School_NP).", "show me all number Of Students of ($x | School_NP).", "What are the number Of Students of ($x | School_NP)?", "What is the number Of Student of ($x | School_NP)?", "What was the number Of Student of ($x | School_NP)?", "What were the number Of Students of ($x | School_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "School",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many number Of Student does ($x | School_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "School",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Student of ($x | School_NP)?", "the number Of Students of ($x | School_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all creators of ($x | FictionalCharacter_NP).", "List all the creators of ($x | FictionalCharacter_NP).", "show me all creators of ($x | FictionalCharacter_NP).", "Who are the creators of ($x | FictionalCharacter_NP)?", "Who is the creator of ($x | FictionalCharacter_NP)?", "Who was the creator of ($x | FictionalCharacter_NP)?", "Who were the creators of ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many creator does ($x | FictionalCharacter_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "138",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of ($x | FictionalCharacter_NP)?", "the creators of ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of ($x | Country_NP).", "List all the official languages of ($x | Country_NP).", "show me all official languages of ($x | Country_NP).", "What are the official languages of ($x | Country_NP)?", "What is the official language of ($x | Country_NP)?", "What was the official language of ($x | Country_NP)?", "What were the official languages of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many official language does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ($x | Country_NP)?", "the official languages of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of ($x | Person_NP).", "List all the influencers of ($x | Person_NP).", "show me all influencers of ($x | Person_NP).", "Who are the influencers of ($x | Person_NP)?", "Who is the influencer of ($x | Person_NP)?", "Who was the influencer of ($x | Person_NP)?", "Who were the influencers of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "143",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many influencer does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the influencer of ($x | Person_NP)?", "the influencers of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Pope",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Organisation_NP).", "List all the founders of ($x | Organisation_NP).", "show me all founders of ($x | Organisation_NP).", "Who are the founders of ($x | Organisation_NP)?", "Who is the founder of ($x | Organisation_NP)?", "Who was the founder of ($x | Organisation_NP)?", "Who were the founders of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Pope",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many founder does ($x | Organisation_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "Pope",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Organisation_NP)?", "the founders of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "148",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all record labels of ($x | Genre_NP).", "List all the record labels of ($x | Genre_NP).", "show me all record labels of ($x | Genre_NP).", "What are the record labels of ($x | Genre_NP)?", "What is the record label of ($x | Genre_NP)?", "What was the record label of ($x | Genre_NP)?", "What were the record labels of ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many record label does ($x | Genre_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Genre",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the record label of ($x | Genre_NP)?", "the record labels of ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all leaders of ($x | Legislature_NP).", "List all the leaders of ($x | Legislature_NP).", "show me all leaders of ($x | Legislature_NP).", "Who are the leaders of ($x | Legislature_NP)?", "Who is the leader of ($x | Legislature_NP)?", "Who was the leader of ($x | Legislature_NP)?", "Who were the leaders of ($x | Legislature_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many leader does ($x | Legislature_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "153",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Legislature",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the leader of ($x | Legislature_NP)?", "the leaders of ($x | Legislature_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all programming languages of ($x | Work_NP).", "List all the programming languages of ($x | Work_NP).", "show me all programming languages of ($x | Work_NP).", "What are the programming languages of ($x | Work_NP)?", "What is the programming language of ($x | Work_NP)?", "What was the programming language of ($x | Work_NP)?", "What were the programming languages of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many programming language does ($x | Work_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the programming language of ($x | Work_NP)?", "the programming languages of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of ($x | Thing_NP)?", "What was the autobiography of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "158",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many autobiography does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of ($x | Person_NP).", "List all the wives of ($x | Person_NP).", "show me all wives of ($x | Person_NP).", "Who are the wives of ($x | Person_NP)?", "Who is the wife of ($x | Person_NP)?", "Who was the wife of ($x | Person_NP)?", "Who were the wives of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many wife does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of ($x | Person_NP)?", "the wives of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "163",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the population of ($x | PopulatedPlace_NP)?", "What was the population of ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many population does ($x | PopulatedPlace_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of ($x | Person_NP)?", "What was the resting place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "167",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many resting place does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of ($x | Person_NP).", "List all the employers of ($x | Person_NP).", "show me all employers of ($x | Person_NP).", "What are the employers of ($x | Person_NP)?", "What is the employer of ($x | Person_NP)?", "What was the employer of ($x | Person_NP)?", "What were the employers of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many employer does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employer of ($x | Person_NP)?", "the employers of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of ($x | Thing_NP).", "List all the first Air Dates of ($x | Thing_NP).", "show me all first Air Dates of ($x | Thing_NP).", "What are the first Air Dates of ($x | Thing_NP)?", "What is the first Air Date of ($x | Thing_NP)?", "What was the first Air Date of ($x | Thing_NP)?", "What were the first Air Dates of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many first Air Date does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "174",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Air Date of ($x | Thing_NP)?", "the first Air Dates of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wine regions of ($x | Grape_NP).", "List all the wine regions of ($x | Grape_NP).", "show me all wine regions of ($x | Grape_NP).", "What are the wine regions of ($x | Grape_NP)?", "What is the wine region of ($x | Grape_NP)?", "What was the wine region of ($x | Grape_NP)?", "What were the wine regions of ($x | Grape_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many wine region does ($x | Grape_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Grape",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine region of ($x | Grape_NP)?", "the wine regions of ($x | Grape_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "178",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all doctoral supervisors of ($x | Scientist_NP).", "List all the doctoral supervisors of ($x | Scientist_NP).", "show me all doctoral supervisors of ($x | Scientist_NP).", "Who are the doctoral supervisors of ($x | Scientist_NP)?", "Who is the doctoral supervisor of ($x | Scientist_NP)?", "Who was the doctoral supervisor of ($x | Scientist_NP)?", "Who were the doctoral supervisors of ($x | Scientist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many doctoral supervisor does ($x | Scientist_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of ($x | Scientist_NP)?", "the doctoral supervisors of ($x | Scientist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of ($x | Country_NP)?", "What was the form of government of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "182",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many form of government does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "183",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of ($x | City_NP).", "List all the time zones of ($x | City_NP).", "show me all time zones of ($x | City_NP).", "What are the time zones of ($x | City_NP)?", "What is the time zone of ($x | City_NP)?", "What was the time zone of ($x | City_NP)?", "What were the time zones of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many time zone does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ($x | City_NP)?", "the time zones of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "187",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of ($x | City_NP).", "List all the time zones of ($x | City_NP).", "show me all time zones of ($x | City_NP).", "What are the time zones of ($x | City_NP)?", "What is the time zone of ($x | City_NP)?", "What was the time zone of ($x | City_NP)?", "What were the time zones of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "188",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many time zone does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ($x | City_NP)?", "the time zones of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the dissolution date of ($x | AdministrativeRegion_NP)?", "What was the dissolution date of ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many dissolution date does ($x | AdministrativeRegion_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "192",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the dissolution date of ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "193",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all producers of ($x | Film_NP).", "List all the producers of ($x | Film_NP).", "show me all producers of ($x | Film_NP).", "Who are the producers of ($x | Film_NP)?", "Who is the producer of ($x | Film_NP)?", "Who was the producer of ($x | Film_NP)?", "Who were the producers of ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many producer does ($x | Film_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Film",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the producer of ($x | Film_NP)?", "the producers of ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Planet",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all minimum Temperatures of ($x | Planet_NP).", "List all the minimum Temperatures of ($x | Planet_NP).", "show me all minimum Temperatures of ($x | Planet_NP).", "What are the minimum Temperatures of ($x | Planet_NP)?", "What is the minimum Temperature of ($x | Planet_NP)?", "What was the minimum Temperature of ($x | Planet_NP)?", "What were the minimum Temperatures of ($x | Planet_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "197",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Planet",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many minimum Temperature does ($x | Planet_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "198",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Planet",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the minimum Temperature of ($x | Planet_NP)?", "the minimum Temperatures of ($x | Planet_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of ($x | Person_NP)?", "What was the nationality of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many nationality does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "202",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all cities in ($x | AdministrativeRegion_NP).", "List all the cities in ($x | AdministrativeRegion_NP).", "show me all cities in ($x | AdministrativeRegion_NP).", "What are the cities in ($x | AdministrativeRegion_NP)?", "What is the city in ($x | AdministrativeRegion_NP)?", "What was the city in ($x | AdministrativeRegion_NP)?", "What were the cities in ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "203",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many city does ($x | AdministrativeRegion_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities in ($x | AdministrativeRegion_NP)?", "the city in ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all hosts of ($x | TelevisionShow_NP).", "List all the hosts of ($x | TelevisionShow_NP).", "show me all hosts of ($x | TelevisionShow_NP).", "Who are the hosts of ($x | TelevisionShow_NP)?", "Who is the host of ($x | TelevisionShow_NP)?", "Who was the host of ($x | TelevisionShow_NP)?", "Who were the hosts of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many host does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "207",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of ($x | TelevisionShow_NP)?", "the hosts of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all developers of ($x | Work_NP).", "List all the developers of ($x | Work_NP).", "show me all developers of ($x | Work_NP).", "Who are the developers of ($x | Work_NP)?", "Who is the developer of ($x | Work_NP)?", "Who was the developer of ($x | Work_NP)?", "Who were the developers of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many developer does ($x | Work_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the developer of ($x | Work_NP)?", "the developers of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wine productions of ($x | Company_NP).", "List all the wine productions of ($x | Company_NP).", "show me all wine productions of ($x | Company_NP).", "What are the wine productions of ($x | Company_NP)?", "What is the wine production of ($x | Company_NP)?", "What was the wine production of ($x | Company_NP)?", "What were the wine productions of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many wine production does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine production of ($x | Company_NP)?", "the wine productions of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of ($x | Person_NP).", "List all the causes of death of ($x | Person_NP).", "show me all causes of death of ($x | Person_NP).", "What are the causes of death of ($x | Person_NP)?", "What is the cause of death of ($x | Person_NP)?", "What was the cause of death of ($x | Person_NP)?", "What were the causes of death of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many cause of death does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of ($x | Person_NP)?", "the causes of death of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of ($x | Country_NP).", "List all the currencies of ($x | Country_NP).", "show me all currencies of ($x | Country_NP).", "What are the currencies of ($x | Country_NP)?", "What is the currency of ($x | Country_NP)?", "What was the currency of ($x | Country_NP)?", "What were the currencies of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many currency does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ($x | Country_NP)?", "the currency of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of ($x | Country_NP).", "List all the currencies of ($x | Country_NP).", "show me all currencies of ($x | Country_NP).", "What are the currencies of ($x | Country_NP)?", "What is the currency of ($x | Country_NP)?", "What was the currency of ($x | Country_NP)?", "What were the currencies of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many currency does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ($x | Country_NP)?", "the currency of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of ($x | Person_NP)?", "What was the religion of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many religion does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the religion of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Thing_NP).", "List all the founders of ($x | Thing_NP).", "show me all founders of ($x | Thing_NP).", "Who are the founders of ($x | Thing_NP)?", "Who is the founder of ($x | Thing_NP)?", "Who was the founder of ($x | Thing_NP)?", "Who were the founders of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many founder does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Thing_NP)?", "the founders of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "229",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of ($x | Thing_NP).", "List all the diameters of ($x | Thing_NP).", "show me all diameters of ($x | Thing_NP).", "What are the diameters of ($x | Thing_NP)?", "What is the diameter of ($x | Thing_NP)?", "What was the diameter of ($x | Thing_NP)?", "What were the diameters of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many diameter does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the diameter of ($x | Thing_NP)?", "the diameters of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of ($x | Place_NP).", "List all the residences of ($x | Place_NP).", "show me all residences of ($x | Place_NP).", "Who are the residences of ($x | Place_NP)?", "Who is the residence of ($x | Place_NP)?", "Who was the residence of ($x | Place_NP)?", "Who were the residences of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "233",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many residence does ($x | Place_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "234",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ($x | Place_NP)?", "the residences of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of ($x | Person_NP).", "List all the daughters of ($x | Person_NP).", "show me all daughters of ($x | Person_NP).", "Who are the daughters of ($x | Person_NP)?", "Who is the daughter of ($x | Person_NP)?", "Who was the daughter of ($x | Person_NP)?", "Who were the daughters of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many daughter does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the daughter of ($x | Person_NP)?", "the daughters of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "238",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all closing Dates of ($x | Company_NP).", "List all the closing Dates of ($x | Company_NP).", "show me all closing Dates of ($x | Company_NP).", "What are the closing Dates of ($x | Company_NP)?", "What is the closing Date of ($x | Company_NP)?", "What was the closing Date of ($x | Company_NP)?", "What were the closing Dates of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many closing Date does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the closing Date of ($x | Company_NP)?", "the closing Dates of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Who is the successor of ($x | Politician_NP)?", "Who was the successor of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many successor does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "243",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all vice president of ($x | Politician_NP).", "List all the vice president of ($x | Politician_NP).", "show me all vice president of ($x | Politician_NP).", "Who are the vice president of ($x | Politician_NP)?", "Who is the vice president of ($x | Politician_NP)?", "Who was the vice president of ($x | Politician_NP)?", "Who were the vice president of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many vice president does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "247",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of ($x | Person_NP).", "List all the children of ($x | Person_NP).", "show me all children of ($x | Person_NP).", "Who are the children of ($x | Person_NP)?", "Who is the child of ($x | Person_NP)?", "Who was the child of ($x | Person_NP)?", "Who were the children of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many child does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of ($x | Person_NP)?", "the children of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the number of pages of ($x | WrittenWork_NP)?", "What was the number of pages of ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many number of pages does ($x | WrittenWork_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "252",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of ($x | Person_NP).", "List all the residences of ($x | Person_NP).", "show me all residences of ($x | Person_NP).", "What are the residences of ($x | Person_NP)?", "What is the residence of ($x | Person_NP)?", "What was the residence of ($x | Person_NP)?", "What were the residences of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many residence does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ($x | Person_NP)?", "the residences of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of ($x | Person_NP).", "List all the governors of ($x | Person_NP).", "show me all governors of ($x | Person_NP).", "Who are the governors of ($x | Person_NP)?", "Who is the governor of ($x | Person_NP)?", "Who was the governor of ($x | Person_NP)?", "Who were the governors of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "257",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many governor does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of ($x | Person_NP)?", "the governors of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "259",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the headquarter of ($x | Building_NP)?", "What was the headquarter of ($x | Building_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "260",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many headquarter does ($x | Building_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "261",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Building",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ($x | Building_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "262",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the headquarter of ($x | Organisation_NP)?", "What was the headquarter of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "263",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many headquarter does ($x | Organisation_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "265",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of ($x | City_NP)?", "What was the area code of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "266",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many area code does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "267",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the area code of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all addresses of ($x | ArchitecturalStructure_NP).", "List all the addresses of ($x | ArchitecturalStructure_NP).", "show me all addresses of ($x | ArchitecturalStructure_NP).", "What are the addresses of ($x | ArchitecturalStructure_NP)?", "What is the address of ($x | ArchitecturalStructure_NP)?", "What was the address of ($x | ArchitecturalStructure_NP)?", "What were the addresses of ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/address> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many address does ($x | ArchitecturalStructure_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/address> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "270",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the address of ($x | ArchitecturalStructure_NP)?", "the addresses of ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/address> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "271",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Publisher_NP).", "List all the founders of ($x | Publisher_NP).", "show me all founders of ($x | Publisher_NP).", "Who are the founders of ($x | Publisher_NP)?", "Who is the founder of ($x | Publisher_NP)?", "Who was the founder of ($x | Publisher_NP)?", "Who were the founders of ($x | Publisher_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "272",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many founder does ($x | Publisher_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Publisher",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Publisher_NP)?", "the founders of ($x | Publisher_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "274",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the number of locations of ($x | Company_NP)?", "What was the number of locations of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "275",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many number of locations does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "276",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of locations of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "277",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all associated Musical Artists of ($x | Band_NP).", "List all the associated Musical Artists of ($x | Band_NP).", "show me all associated Musical Artists of ($x | Band_NP).", "What are the associated Musical Artists of ($x | Band_NP)?", "What is the associated Musical Artist of ($x | Band_NP)?", "What was the associated Musical Artist of ($x | Band_NP)?", "What were the associated Musical Artists of ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many associated Musical Artist does ($x | Band_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "279",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the associated Musical Artist of ($x | Band_NP)?", "the associated Musical Artists of ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "280",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all music composers of ($x | TelevisionShow_NP).", "List all the music composers of ($x | TelevisionShow_NP).", "show me all music composers of ($x | TelevisionShow_NP).", "Who are the music composers of ($x | TelevisionShow_NP)?", "Who is the music composer of ($x | TelevisionShow_NP)?", "Who was the music composer of ($x | TelevisionShow_NP)?", "Who were the music composers of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "281",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many music composer does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "282",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ($x | TelevisionShow_NP)?", "the music composers of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "283",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Who is the first to climb  ($x | Mountain_NP)?", "Who was the first to climb  ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "284",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many first to climb does ($x | Mountain_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first to climb  ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "286",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the foundation place of ($x | Company_NP)?", "What was the foundation place of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "287",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many foundation place does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "288",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation place of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of ($x | Person_NP).", "List all the resting places of ($x | Person_NP).", "show me all resting places of ($x | Person_NP).", "What are the resting places of ($x | Person_NP)?", "What is the resting place of ($x | Person_NP)?", "What was the resting place of ($x | Person_NP)?", "What were the resting places of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many resting place does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "291",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ($x | Person_NP)?", "the resting places of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "292",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of ($x | Person_NP)?", "What was the nationality of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many nationality does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "295",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsClub",
    "returnType" : "Stadium",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all home stadiums of ($x | SportsClub_NP).", "List all the home stadiums of ($x | SportsClub_NP).", "show me all home stadiums of ($x | SportsClub_NP).", "What are the home stadiums of ($x | SportsClub_NP)?", "What is the home stadium of ($x | SportsClub_NP)?", "What was the home stadium of ($x | SportsClub_NP)?", "What were the home stadiums of ($x | SportsClub_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "296",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsClub",
    "returnType" : "Stadium",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many home stadium does ($x | SportsClub_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "297",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "SportsClub",
    "returnType" : "Stadium",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the home stadium of ($x | SportsClub_NP)?", "the home stadiums of ($x | SportsClub_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all ingredients of ($x | Food_NP).", "List all the ingredients of ($x | Food_NP).", "show me all ingredients of ($x | Food_NP).", "What are the ingredients of ($x | Food_NP)?", "What is the ingredient of ($x | Food_NP)?", "What was the ingredient of ($x | Food_NP)?", "What were the ingredients of ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many ingredient does ($x | Food_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "300",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ($x | Food_NP)?", "the ingredients of ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "301",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all ingredients of ($x | Food_NP).", "List all the ingredients of ($x | Food_NP).", "show me all ingredients of ($x | Food_NP).", "What are the ingredients of ($x | Food_NP)?", "What is the ingredient of ($x | Food_NP)?", "What was the ingredient of ($x | Food_NP)?", "What were the ingredients of ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "302",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many ingredient does ($x | Food_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ($x | Food_NP)?", "the ingredients of ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Who is the father of ($x | Royalty_NP)?", "Who was the father of ($x | Royalty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "305",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many father does ($x | Royalty_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "306",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of ($x | Royalty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "307",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all cities of ($x | AdministrativeRegion_NP).", "List all the cities of ($x | AdministrativeRegion_NP).", "show me all cities of ($x | AdministrativeRegion_NP).", "What are the cities of ($x | AdministrativeRegion_NP)?", "What is the city of ($x | AdministrativeRegion_NP)?", "What was the city of ($x | AdministrativeRegion_NP)?", "What were the cities of ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many city does ($x | AdministrativeRegion_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities of ($x | AdministrativeRegion_NP)?", "the city of ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "310",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of ($x | City_NP).", "List all the nicknames of ($x | City_NP).", "show me all nicknames of ($x | City_NP).", "What are the nicknames of ($x | City_NP)?", "What is the nickname of ($x | City_NP)?", "What was the nickname of ($x | City_NP)?", "What were the nicknames of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "311",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many nickname does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "312",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nickname of ($x | City_NP)?", "the nicknames of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "313",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Model",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the height of ($x | Model_NP)?", "What was the height of ($x | Model_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Model",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many height does ($x | Model_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "315",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Model",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the height of ($x | Model_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "316",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of ($x | Place_NP).", "List all the flags of ($x | Place_NP).", "show me all flags of ($x | Place_NP).", "What are the flags of ($x | Place_NP)?", "What is the flag of ($x | Place_NP)?", "What was the flag of ($x | Place_NP)?", "What were the flags of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "317",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many flag does ($x | Place_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "318",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the flag of ($x | Place_NP)?", "the flags of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all music composers of ($x | TelevisionShow_NP).", "List all the music composers of ($x | TelevisionShow_NP).", "show me all music composers of ($x | TelevisionShow_NP).", "Who are the music composers of ($x | TelevisionShow_NP)?", "Who is the music composer of ($x | TelevisionShow_NP)?", "Who was the music composer of ($x | TelevisionShow_NP)?", "Who were the music composers of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "320",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many music composer does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "321",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ($x | TelevisionShow_NP)?", "the music composers of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "322",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of ($x | Person_NP).", "List all the sons of ($x | Person_NP).", "show me all sons of ($x | Person_NP).", "Who are the sons of ($x | Person_NP)?", "Who is the son of ($x | Person_NP)?", "Who was the son of ($x | Person_NP)?", "Who were the sons of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "323",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many son does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ($x | Person_NP)?", "the sons of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "325",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of ($x | Person_NP).", "List all the sons of ($x | Person_NP).", "show me all sons of ($x | Person_NP).", "Who are the sons of ($x | Person_NP)?", "Who is the son of ($x | Person_NP)?", "Who was the son of ($x | Person_NP)?", "Who were the sons of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "326",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many son does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "327",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ($x | Person_NP)?", "the sons of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "328",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of ($x | City_NP).", "List all the mayors of ($x | City_NP).", "show me all mayors of ($x | City_NP).", "Who are the mayors of ($x | City_NP)?", "Who is the mayor of ($x | City_NP)?", "Who was the mayor of ($x | City_NP)?", "Who were the mayors of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many mayor does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "330",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ($x | City_NP)?", "the mayors of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "331",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of ($x | Country_NP)?", "What was the largest country of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "332",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many largest country does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "333",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "334",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Location",
    "frameType" : "FULL_DATASET",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>)\n    (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>)\n  ))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  } ]
}