{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb_312",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) first to climb.", "List all the persons with first to climb  ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's first to climb?", "What ([A-Za-z0-9_-]*) is the first to climb  ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the first to climb  the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's first to climb?", "What ([A-Za-z0-9_-]*) was the first to climb  ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the first to climb  the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first to climb  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first to climb  the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first to climb  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first to climb  the ([A-Za-z0-9_-]*)?", "Who is the first to climb  ([A-Za-z0-9_-]*)?", "Who is the first to climb  the ([A-Za-z0-9_-]*)?", "Who was the first to climb  ([A-Za-z0-9_-]*)?", "Who was the first to climb  the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb_312",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first to climb  ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#residence_of_259",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) residences.", "Give me all residences of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) residence.", "Give me the ([A-Za-z0-9_-]*) residences.", "List all residences of ([A-Za-z0-9_-]*).", "List all the cities with residence of ([A-Za-z0-9_-]*).", "List all the residences of ([A-Za-z0-9_-]*).", "show me all residences of ([A-Za-z0-9_-]*).", "What are the residences of ([A-Za-z0-9_-]*)?", "What are the residences of the ([A-Za-z0-9_-]*)?", "What is the residence of ([A-Za-z0-9_-]*)?", "What is the residence of the ([A-Za-z0-9_-]*)?", "What was the residence of ([A-Za-z0-9_-]*)?", "What was the residence of the ([A-Za-z0-9_-]*)?", "What were the residences of ([A-Za-z0-9_-]*)?", "What were the residences of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the residences of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the residences of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the residence of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the residence of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the residence of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the residence of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the residences of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the residences of the ([A-Za-z0-9_-]*)?", "Who are the residences of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's residence?", "Who is the residence of ([A-Za-z0-9_-]*)?", "Who is the residence of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's residence?", "Who was the residence of ([A-Za-z0-9_-]*)?", "Who was the residence of the ([A-Za-z0-9_-]*)?", "Who were the residences of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#residence_of_259",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ([A-Za-z0-9_-]*)?", "the residences of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#deathplace_307",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) death place.", "List all the places with death place of ([A-Za-z0-9_-]*).", "What is the death place of ([A-Za-z0-9_-]*)?", "What is the death place of the ([A-Za-z0-9_-]*)?", "What was the death place of ([A-Za-z0-9_-]*)?", "What was the death place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the death place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the death place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the death place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the death place of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's death place?", "Who is the death place of ([A-Za-z0-9_-]*)?", "Who is the death place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's death place?", "Who was the death place of ([A-Za-z0-9_-]*)?", "Who was the death place of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#deathplace_307",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death place of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#foundingyear_of_374",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) founding year.", "What is the founding year of ([A-Za-z0-9_-]*)?", "What is the founding year of the ([A-Za-z0-9_-]*)?", "What was the founding year of ([A-Za-z0-9_-]*)?", "What was the founding year of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founding year of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founding year of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founding year of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founding year of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's founding year?", "Who is the founding year of ([A-Za-z0-9_-]*)?", "Who is the founding year of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's founding year?", "Who was the founding year of ([A-Za-z0-9_-]*)?", "Who was the founding year of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#foundingyear_of_374",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding year of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) holidays.", "Give me all holidays of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) holiday.", "Give me the ([A-Za-z0-9_-]*) holidays.", "List all holidays of ([A-Za-z0-9_-]*).", "List all the holidays of ([A-Za-z0-9_-]*).", "show me all holidays of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the holidays of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's holiday?", "What ([A-Za-z0-9_-]*) is the holiday of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the holiday of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's holiday?", "What ([A-Za-z0-9_-]*) was the holiday of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the holiday of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the holidays of the ([A-Za-z0-9_-]*)?", "What are the holidays of ([A-Za-z0-9_-]*)?", "What are the holidays of the ([A-Za-z0-9_-]*)?", "What is the holiday of ([A-Za-z0-9_-]*)?", "What is the holiday of the ([A-Za-z0-9_-]*)?", "What was the holiday of ([A-Za-z0-9_-]*)?", "What was the holiday of the ([A-Za-z0-9_-]*)?", "What were the holidays of ([A-Za-z0-9_-]*)?", "What were the holidays of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the holidays of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the holidays of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the holiday of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the holiday of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the holiday of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the holiday of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the holidays of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the holidays of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the holiday of ([A-Za-z0-9_-]*)?", "the holidays of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) holidays.", "Give me all holidays of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) holiday.", "Give me the ([A-Za-z0-9_-]*) holidays.", "List all holidays of ([A-Za-z0-9_-]*).", "List all the holidays of ([A-Za-z0-9_-]*).", "show me all holidays of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the holidays of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's holiday?", "What ([A-Za-z0-9_-]*) is the holiday of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the holiday of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's holiday?", "What ([A-Za-z0-9_-]*) was the holiday of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the holiday of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the holidays of the ([A-Za-z0-9_-]*)?", "What are the holidays of ([A-Za-z0-9_-]*)?", "What are the holidays of the ([A-Za-z0-9_-]*)?", "What is the holiday of ([A-Za-z0-9_-]*)?", "What is the holiday of the ([A-Za-z0-9_-]*)?", "What was the holiday of ([A-Za-z0-9_-]*)?", "What was the holiday of the ([A-Za-z0-9_-]*)?", "What were the holidays of ([A-Za-z0-9_-]*)?", "What were the holidays of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the holidays of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the holidays of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the holiday of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the holiday of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the holiday of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the holiday of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the holidays of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the holidays of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#holiday-of_270",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the holiday of ([A-Za-z0-9_-]*)?", "the holidays of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#president-of_254",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What are the presidents of ([A-Za-z0-9_-]*)?", "What are the presidents of the ([A-Za-z0-9_-]*)?", "What is the president of ([A-Za-z0-9_-]*)?", "What is the president of the ([A-Za-z0-9_-]*)?", "What was the president of ([A-Za-z0-9_-]*)?", "What was the president of the ([A-Za-z0-9_-]*)?", "What were the presidents of ([A-Za-z0-9_-]*)?", "What were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's president?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's president?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/office> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#president-of_254",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/office> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#flag-of_272",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) flags.", "Give me all flags of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) flag.", "Give me the ([A-Za-z0-9_-]*) flags.", "List all flags of ([A-Za-z0-9_-]*).", "List all the flags of ([A-Za-z0-9_-]*).", "show me all flags of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the flags of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's flag?", "What ([A-Za-z0-9_-]*) is the flag of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the flag of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's flag?", "What ([A-Za-z0-9_-]*) was the flag of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the flag of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the flags of the ([A-Za-z0-9_-]*)?", "What are the flags of ([A-Za-z0-9_-]*)?", "What are the flags of the ([A-Za-z0-9_-]*)?", "What is the flag of ([A-Za-z0-9_-]*)?", "What is the flag of the ([A-Za-z0-9_-]*)?", "What was the flag of ([A-Za-z0-9_-]*)?", "What was the flag of the ([A-Za-z0-9_-]*)?", "What were the flags of ([A-Za-z0-9_-]*)?", "What were the flags of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the flags of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the flags of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the flag of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the flag of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the flag of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the flag of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the flags of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the flags of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/flag> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#flag-of_272",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the flag of ([A-Za-z0-9_-]*)?", "the flags of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/flag> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#book-in_291",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) books.", "Give me all books in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) book.", "Give me the ([A-Za-z0-9_-]*) books.", "List all books in ([A-Za-z0-9_-]*).", "List all the books in ([A-Za-z0-9_-]*).", "List all the television shows with book in ([A-Za-z0-9_-]*).", "show me all books in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the books in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) is the book in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the book in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) was the book in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the book in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the books in the ([A-Za-z0-9_-]*)?", "What are the books in ([A-Za-z0-9_-]*)?", "What are the books in the ([A-Za-z0-9_-]*)?", "What is the book in ([A-Za-z0-9_-]*)?", "What is the book in the ([A-Za-z0-9_-]*)?", "What was the book in ([A-Za-z0-9_-]*)?", "What was the book in the ([A-Za-z0-9_-]*)?", "What were the books in ([A-Za-z0-9_-]*)?", "What were the books in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#book-in_291",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in ([A-Za-z0-9_-]*)?", "the books in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#president_of_308",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) authors.", "Give me all authors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) author.", "Give me the ([A-Za-z0-9_-]*) authors.", "List all authors of ([A-Za-z0-9_-]*).", "List all the authors of ([A-Za-z0-9_-]*).", "List all the persons with author of ([A-Za-z0-9_-]*).", "show me all authors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the authors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's author?", "What ([A-Za-z0-9_-]*) is the author of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the author of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's author?", "What ([A-Za-z0-9_-]*) was the author of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the author of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the authors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the authors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the authors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the author of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the author of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the author of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the author of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the authors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the authors of the ([A-Za-z0-9_-]*)?", "Who are the authors of ([A-Za-z0-9_-]*)?", "Who are the authors of the ([A-Za-z0-9_-]*)?", "Who is the author of ([A-Za-z0-9_-]*)?", "Who is the author of the ([A-Za-z0-9_-]*)?", "Who was the author of ([A-Za-z0-9_-]*)?", "Who was the author of the ([A-Za-z0-9_-]*)?", "Who were the authors of ([A-Za-z0-9_-]*)?", "Who were the authors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of ([A-Za-z0-9_-]*)?", "the authors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) authors.", "Give me all authors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) author.", "Give me the ([A-Za-z0-9_-]*) authors.", "List all authors of ([A-Za-z0-9_-]*).", "List all the authors of ([A-Za-z0-9_-]*).", "List all the persons with author of ([A-Za-z0-9_-]*).", "show me all authors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the authors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's author?", "What ([A-Za-z0-9_-]*) is the author of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the author of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's author?", "What ([A-Za-z0-9_-]*) was the author of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the author of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the authors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the authors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the authors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the author of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the author of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the author of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the author of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the authors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the authors of the ([A-Za-z0-9_-]*)?", "Who are the authors of ([A-Za-z0-9_-]*)?", "Who are the authors of the ([A-Za-z0-9_-]*)?", "Who is the author of ([A-Za-z0-9_-]*)?", "Who is the author of the ([A-Za-z0-9_-]*)?", "Who was the author of ([A-Za-z0-9_-]*)?", "Who was the author of the ([A-Za-z0-9_-]*)?", "Who were the authors of ([A-Za-z0-9_-]*)?", "Who were the authors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of ([A-Za-z0-9_-]*)?", "the authors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) authors.", "Give me all authors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) author.", "Give me the ([A-Za-z0-9_-]*) authors.", "List all authors of ([A-Za-z0-9_-]*).", "List all the authors of ([A-Za-z0-9_-]*).", "List all the persons with author of ([A-Za-z0-9_-]*).", "show me all authors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the authors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's author?", "What ([A-Za-z0-9_-]*) is the author of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the author of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's author?", "What ([A-Za-z0-9_-]*) was the author of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the author of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the authors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the authors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the authors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the author of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the author of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the author of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the author of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the authors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the authors of the ([A-Za-z0-9_-]*)?", "Who are the authors of ([A-Za-z0-9_-]*)?", "Who are the authors of the ([A-Za-z0-9_-]*)?", "Who is the author of ([A-Za-z0-9_-]*)?", "Who is the author of the ([A-Za-z0-9_-]*)?", "Who was the author of ([A-Za-z0-9_-]*)?", "Who was the author of the ([A-Za-z0-9_-]*)?", "Who were the authors of ([A-Za-z0-9_-]*)?", "Who were the authors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#author_of_381",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of ([A-Za-z0-9_-]*)?", "the authors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of_375",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) foundation series.", "Give me all foundation series of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) foundation series.", "List all foundation series of ([A-Za-z0-9_-]*).", "List all the foundation series of ([A-Za-z0-9_-]*).", "List all the persons with foundation series of ([A-Za-z0-9_-]*).", "show me all foundation series of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the foundation series of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's foundation series?", "What ([A-Za-z0-9_-]*) is the foundation series of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the foundation series of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's foundation series?", "What ([A-Za-z0-9_-]*) was the foundation series of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the foundation series of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the foundation series of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the foundation series of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the foundation series of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the foundation series of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the foundation series of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the foundation series of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the foundation series of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the foundation series of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the foundation series of the ([A-Za-z0-9_-]*)?", "Who are the foundation series of ([A-Za-z0-9_-]*)?", "Who are the foundation series of the ([A-Za-z0-9_-]*)?", "Who is the foundation series of ([A-Za-z0-9_-]*)?", "Who is the foundation series of the ([A-Za-z0-9_-]*)?", "Who was the foundation series of ([A-Za-z0-9_-]*)?", "Who was the foundation series of the ([A-Za-z0-9_-]*)?", "Who were the foundation series of ([A-Za-z0-9_-]*)?", "Who were the foundation series of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of_375",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation series of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) TV show.", "Give me all TV show with ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) TV show.", "List all the actors with TV show with ([A-Za-z0-9_-]*).", "List all the TV show with ([A-Za-z0-9_-]*).", "List all TV show with ([A-Za-z0-9_-]*).", "show me all TV show with ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the TV show with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the TV show with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the TV show with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the TV show with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the TV show with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the TV show with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the TV show with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the TV show with the ([A-Za-z0-9_-]*)?", "Who are the TV show with ([A-Za-z0-9_-]*)?", "Who are the TV show with the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's TV show?", "Who is the TV show with ([A-Za-z0-9_-]*)?", "Who is the TV show with the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's TV show?", "Who was the TV show with ([A-Za-z0-9_-]*)?", "Who was the TV show with the ([A-Za-z0-9_-]*)?", "Who were the TV show with ([A-Za-z0-9_-]*)?", "Who were the TV show with the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the TV show with ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) TV show.", "Give me all TV show with ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) TV show.", "List all the actors with TV show with ([A-Za-z0-9_-]*).", "List all the TV show with ([A-Za-z0-9_-]*).", "List all TV show with ([A-Za-z0-9_-]*).", "show me all TV show with ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the TV show with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the TV show with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the TV show with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the TV show with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the TV show with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the TV show with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the TV show with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the TV show with the ([A-Za-z0-9_-]*)?", "Who are the TV show with ([A-Za-z0-9_-]*)?", "Who are the TV show with the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's TV show?", "Who is the TV show with ([A-Za-z0-9_-]*)?", "Who is the TV show with the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's TV show?", "Who was the TV show with ([A-Za-z0-9_-]*)?", "Who was the TV show with the ([A-Za-z0-9_-]*)?", "Who were the TV show with ([A-Za-z0-9_-]*)?", "Who were the TV show with the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#tv-show-with_367",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the TV show with ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) countries.", "Give me all countries from ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) countries.", "Give me the ([A-Za-z0-9_-]*) country.", "List all countries from ([A-Za-z0-9_-]*).", "List all the cities with country from ([A-Za-z0-9_-]*).", "List all the countries from ([A-Za-z0-9_-]*).", "show me all countries from ([A-Za-z0-9_-]*).", "What are the countries from ([A-Za-z0-9_-]*)?", "What are the countries from the ([A-Za-z0-9_-]*)?", "What is the country from ([A-Za-z0-9_-]*)?", "What is the country from the ([A-Za-z0-9_-]*)?", "What was the country from ([A-Za-z0-9_-]*)?", "What was the country from the ([A-Za-z0-9_-]*)?", "What were the countries from ([A-Za-z0-9_-]*)?", "What were the countries from the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the countries from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the countries from the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the country from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the country from the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the country from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the country from the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the countries from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the countries from the ([A-Za-z0-9_-]*)?", "Who are the countries from the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's country?", "Who is the country from ([A-Za-z0-9_-]*)?", "Who is the country from the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's country?", "Who was the country from ([A-Za-z0-9_-]*)?", "Who was the country from the ([A-Za-z0-9_-]*)?", "Who were the countries from the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the countries from ([A-Za-z0-9_-]*)?", "the country from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) countries.", "Give me all countries from ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) countries.", "Give me the ([A-Za-z0-9_-]*) country.", "List all countries from ([A-Za-z0-9_-]*).", "List all the cities with country from ([A-Za-z0-9_-]*).", "List all the countries from ([A-Za-z0-9_-]*).", "show me all countries from ([A-Za-z0-9_-]*).", "What are the countries from ([A-Za-z0-9_-]*)?", "What are the countries from the ([A-Za-z0-9_-]*)?", "What is the country from ([A-Za-z0-9_-]*)?", "What is the country from the ([A-Za-z0-9_-]*)?", "What was the country from ([A-Za-z0-9_-]*)?", "What was the country from the ([A-Za-z0-9_-]*)?", "What were the countries from ([A-Za-z0-9_-]*)?", "What were the countries from the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the countries from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the countries from the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the country from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the country from the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the country from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the country from the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the countries from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the countries from the ([A-Za-z0-9_-]*)?", "Who are the countries from the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's country?", "Who is the country from ([A-Za-z0-9_-]*)?", "Who is the country from the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's country?", "Who was the country from ([A-Za-z0-9_-]*)?", "Who was the country from the ([A-Za-z0-9_-]*)?", "Who were the countries from the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#country-from_232",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the countries from ([A-Za-z0-9_-]*)?", "the country from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) location.", "List all the countries with location of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?", "What is the location of ([A-Za-z0-9_-]*)?", "What is the location of the ([A-Za-z0-9_-]*)?", "What was the location of ([A-Za-z0-9_-]*)?", "What was the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) location.", "List all the countries with location of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?", "What is the location of ([A-Za-z0-9_-]*)?", "What is the location of the ([A-Za-z0-9_-]*)?", "What was the location of ([A-Za-z0-9_-]*)?", "What was the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) location.", "List all the countries with location of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?", "What is the location of ([A-Za-z0-9_-]*)?", "What is the location of the ([A-Za-z0-9_-]*)?", "What was the location of ([A-Za-z0-9_-]*)?", "What was the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2_342",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#composer-of_275",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) music composers.", "Give me all music composers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) music composer.", "Give me the ([A-Za-z0-9_-]*) music composers.", "List all music composers of ([A-Za-z0-9_-]*).", "List all the music composers of ([A-Za-z0-9_-]*).", "List all the persons with music composer of ([A-Za-z0-9_-]*).", "show me all music composers of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the music composers of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's music composer?", "What ([A-Za-z0-9_-]*) is the music composer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the music composer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's music composer?", "What ([A-Za-z0-9_-]*) was the music composer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the music composer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the music composers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the music composers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the music composers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music composer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music composer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music composer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music composer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the music composers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the music composers of the ([A-Za-z0-9_-]*)?", "Who are the music composers of ([A-Za-z0-9_-]*)?", "Who are the music composers of the ([A-Za-z0-9_-]*)?", "Who is the music composer of ([A-Za-z0-9_-]*)?", "Who is the music composer of the ([A-Za-z0-9_-]*)?", "Who was the music composer of ([A-Za-z0-9_-]*)?", "Who was the music composer of the ([A-Za-z0-9_-]*)?", "Who were the music composers of ([A-Za-z0-9_-]*)?", "Who were the music composers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#composer-of_275",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ([A-Za-z0-9_-]*)?", "the music composers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) federal chancellors.", "Give me all federal chancellors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) federal chancellor.", "Give me the ([A-Za-z0-9_-]*) federal chancellors.", "List all federal chancellors of ([A-Za-z0-9_-]*).", "List all the cities with federal chancellor of ([A-Za-z0-9_-]*).", "List all the federal chancellors of ([A-Za-z0-9_-]*).", "show me all federal chancellors of ([A-Za-z0-9_-]*).", "What are the federal chancellors of ([A-Za-z0-9_-]*)?", "What are the federal chancellors of the ([A-Za-z0-9_-]*)?", "What is the federal chancellor of ([A-Za-z0-9_-]*)?", "What is the federal chancellor of the ([A-Za-z0-9_-]*)?", "What was the federal chancellor of ([A-Za-z0-9_-]*)?", "What was the federal chancellor of the ([A-Za-z0-9_-]*)?", "What were the federal chancellors of ([A-Za-z0-9_-]*)?", "What were the federal chancellors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the federal chancellors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the federal chancellors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the federal chancellor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the federal chancellor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the federal chancellor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the federal chancellor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the federal chancellors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the federal chancellors of the ([A-Za-z0-9_-]*)?", "Who are the federal chancellors of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's federal chancellor?", "Who is the federal chancellor of ([A-Za-z0-9_-]*)?", "Who is the federal chancellor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's federal chancellor?", "Who was the federal chancellor of ([A-Za-z0-9_-]*)?", "Who was the federal chancellor of the ([A-Za-z0-9_-]*)?", "Who were the federal chancellors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the federal chancellor of ([A-Za-z0-9_-]*)?", "the federal chancellors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) federal chancellors.", "Give me all federal chancellors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) federal chancellor.", "Give me the ([A-Za-z0-9_-]*) federal chancellors.", "List all federal chancellors of ([A-Za-z0-9_-]*).", "List all the cities with federal chancellor of ([A-Za-z0-9_-]*).", "List all the federal chancellors of ([A-Za-z0-9_-]*).", "show me all federal chancellors of ([A-Za-z0-9_-]*).", "What are the federal chancellors of ([A-Za-z0-9_-]*)?", "What are the federal chancellors of the ([A-Za-z0-9_-]*)?", "What is the federal chancellor of ([A-Za-z0-9_-]*)?", "What is the federal chancellor of the ([A-Za-z0-9_-]*)?", "What was the federal chancellor of ([A-Za-z0-9_-]*)?", "What was the federal chancellor of the ([A-Za-z0-9_-]*)?", "What were the federal chancellors of ([A-Za-z0-9_-]*)?", "What were the federal chancellors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the federal chancellors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the federal chancellors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the federal chancellor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the federal chancellor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the federal chancellor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the federal chancellor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the federal chancellors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the federal chancellors of the ([A-Za-z0-9_-]*)?", "Who are the federal chancellors of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's federal chancellor?", "Who is the federal chancellor of ([A-Za-z0-9_-]*)?", "Who is the federal chancellor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's federal chancellor?", "Who was the federal chancellor of ([A-Za-z0-9_-]*)?", "Who was the federal chancellor of the ([A-Za-z0-9_-]*)?", "Who were the federal chancellors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#federal-chancellor-of_376",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the federal chancellor of ([A-Za-z0-9_-]*)?", "the federal chancellors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/office> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#city-of_321",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) cities.", "Give me all cities of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) cities.", "Give me the ([A-Za-z0-9_-]*) city.", "List all cities of ([A-Za-z0-9_-]*).", "List all the cities of ([A-Za-z0-9_-]*).", "List all the cities with city of ([A-Za-z0-9_-]*).", "show me all cities of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the cities of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's city?", "What ([A-Za-z0-9_-]*) is the city of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the city of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's city?", "What ([A-Za-z0-9_-]*) was the city of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the city of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the cities of the ([A-Za-z0-9_-]*)?", "What are the cities of ([A-Za-z0-9_-]*)?", "What are the cities of the ([A-Za-z0-9_-]*)?", "What is the city of ([A-Za-z0-9_-]*)?", "What is the city of the ([A-Za-z0-9_-]*)?", "What was the city of ([A-Za-z0-9_-]*)?", "What was the city of the ([A-Za-z0-9_-]*)?", "What were the cities of ([A-Za-z0-9_-]*)?", "What were the cities of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the cities of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the cities of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the city of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the city of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the city of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the city of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the cities of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the cities of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#city-of_321",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities of ([A-Za-z0-9_-]*)?", "the city of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) members.", "Give me all members of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) member.", "Give me the ([A-Za-z0-9_-]*) members.", "List all members of ([A-Za-z0-9_-]*).", "List all the members of ([A-Za-z0-9_-]*).", "List all the musical artists with member of ([A-Za-z0-9_-]*).", "show me all members of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the members of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's member?", "What ([A-Za-z0-9_-]*) is the member of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the member of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's member?", "What ([A-Za-z0-9_-]*) was the member of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the member of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the members of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the members of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of the ([A-Za-z0-9_-]*)?", "Who are the members of ([A-Za-z0-9_-]*)?", "Who are the members of the ([A-Za-z0-9_-]*)?", "Who is the member of ([A-Za-z0-9_-]*)?", "Who is the member of the ([A-Za-z0-9_-]*)?", "Who was the member of ([A-Za-z0-9_-]*)?", "Who was the member of the ([A-Za-z0-9_-]*)?", "Who were the members of ([A-Za-z0-9_-]*)?", "Who were the members of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ([A-Za-z0-9_-]*)?", "the members of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) members.", "Give me all members of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) member.", "Give me the ([A-Za-z0-9_-]*) members.", "List all members of ([A-Za-z0-9_-]*).", "List all the members of ([A-Za-z0-9_-]*).", "List all the musical artists with member of ([A-Za-z0-9_-]*).", "show me all members of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the members of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's member?", "What ([A-Za-z0-9_-]*) is the member of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the member of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's member?", "What ([A-Za-z0-9_-]*) was the member of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the member of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the members of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the members of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of the ([A-Za-z0-9_-]*)?", "Who are the members of ([A-Za-z0-9_-]*)?", "Who are the members of the ([A-Za-z0-9_-]*)?", "Who is the member of ([A-Za-z0-9_-]*)?", "Who is the member of the ([A-Za-z0-9_-]*)?", "Who was the member of ([A-Za-z0-9_-]*)?", "Who was the member of the ([A-Za-z0-9_-]*)?", "Who were the members of ([A-Za-z0-9_-]*)?", "Who were the members of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ([A-Za-z0-9_-]*)?", "the members of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) members.", "Give me all members of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) member.", "Give me the ([A-Za-z0-9_-]*) members.", "List all members of ([A-Za-z0-9_-]*).", "List all the members of ([A-Za-z0-9_-]*).", "List all the musical artists with member of ([A-Za-z0-9_-]*).", "show me all members of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the members of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's member?", "What ([A-Za-z0-9_-]*) is the member of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the member of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's member?", "What ([A-Za-z0-9_-]*) was the member of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the member of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the members of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the members of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of the ([A-Za-z0-9_-]*)?", "Who are the members of ([A-Za-z0-9_-]*)?", "Who are the members of the ([A-Za-z0-9_-]*)?", "Who is the member of ([A-Za-z0-9_-]*)?", "Who is the member of the ([A-Za-z0-9_-]*)?", "Who was the member of ([A-Za-z0-9_-]*)?", "Who was the member of the ([A-Za-z0-9_-]*)?", "Who were the members of ([A-Za-z0-9_-]*)?", "Who were the members of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#membership-of_322",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ([A-Za-z0-9_-]*)?", "the members of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#city-in_238",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) cities.", "Give me all cities in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) cities.", "Give me the ([A-Za-z0-9_-]*) city.", "List all cities in ([A-Za-z0-9_-]*).", "List all the cities in ([A-Za-z0-9_-]*).", "List all the cities with city in ([A-Za-z0-9_-]*).", "show me all cities in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the cities in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's city?", "What ([A-Za-z0-9_-]*) is the city in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the city in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's city?", "What ([A-Za-z0-9_-]*) was the city in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the city in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the cities in the ([A-Za-z0-9_-]*)?", "What are the cities in ([A-Za-z0-9_-]*)?", "What are the cities in the ([A-Za-z0-9_-]*)?", "What is the city in ([A-Za-z0-9_-]*)?", "What is the city in the ([A-Za-z0-9_-]*)?", "What was the city in ([A-Za-z0-9_-]*)?", "What was the city in the ([A-Za-z0-9_-]*)?", "What were the cities in ([A-Za-z0-9_-]*)?", "What were the cities in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the cities in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the cities in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the city in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the city in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the city in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the city in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the cities in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the cities in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#city-in_238",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities in ([A-Za-z0-9_-]*)?", "the city in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isPartOf> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) movies.", "Give me all movies of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) movie.", "Give me the ([A-Za-z0-9_-]*) movies.", "List all movies of ([A-Za-z0-9_-]*).", "List all the movies of ([A-Za-z0-9_-]*).", "show me all movies of ([A-Za-z0-9_-]*).", "What are the movies of ([A-Za-z0-9_-]*)?", "What are the movies of the ([A-Za-z0-9_-]*)?", "What is the movie of ([A-Za-z0-9_-]*)?", "What is the movie of the ([A-Za-z0-9_-]*)?", "What was the movie of ([A-Za-z0-9_-]*)?", "What was the movie of the ([A-Za-z0-9_-]*)?", "What were the movies of ([A-Za-z0-9_-]*)?", "What were the movies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the movies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the movies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the movie of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the movie of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the movie of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the movie of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the movies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the movies of the ([A-Za-z0-9_-]*)?", "Who are the movies of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's movie?", "Who is the movie of ([A-Za-z0-9_-]*)?", "Who is the movie of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's movie?", "Who was the movie of ([A-Za-z0-9_-]*)?", "Who was the movie of the ([A-Za-z0-9_-]*)?", "Who were the movies of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the movie of ([A-Za-z0-9_-]*)?", "the movies of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) movies.", "Give me all movies of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) movie.", "Give me the ([A-Za-z0-9_-]*) movies.", "List all movies of ([A-Za-z0-9_-]*).", "List all the movies of ([A-Za-z0-9_-]*).", "show me all movies of ([A-Za-z0-9_-]*).", "What are the movies of ([A-Za-z0-9_-]*)?", "What are the movies of the ([A-Za-z0-9_-]*)?", "What is the movie of ([A-Za-z0-9_-]*)?", "What is the movie of the ([A-Za-z0-9_-]*)?", "What was the movie of ([A-Za-z0-9_-]*)?", "What was the movie of the ([A-Za-z0-9_-]*)?", "What were the movies of ([A-Za-z0-9_-]*)?", "What were the movies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the movies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the movies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the movie of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the movie of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the movie of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the movie of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the movies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the movies of the ([A-Za-z0-9_-]*)?", "Who are the movies of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's movie?", "Who is the movie of ([A-Za-z0-9_-]*)?", "Who is the movie of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's movie?", "Who was the movie of ([A-Za-z0-9_-]*)?", "Who was the movie of the ([A-Za-z0-9_-]*)?", "Who were the movies of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#movie_with_295",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the movie of ([A-Za-z0-9_-]*)?", "the movies of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#birthyear_of_327",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) birth year.", "What is the birth year of ([A-Za-z0-9_-]*)?", "What is the birth year of the ([A-Za-z0-9_-]*)?", "What was the birth year of ([A-Za-z0-9_-]*)?", "What was the birth year of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth year of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth year of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth year of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth year of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth year?", "Who is the birth year of ([A-Za-z0-9_-]*)?", "Who is the birth year of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth year?", "Who was the birth year of ([A-Za-z0-9_-]*)?", "Who was the birth year of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#birthyear_of_327",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth year of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#foundationplace_of_360",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) foundation place.", "List all the cities with foundation place of ([A-Za-z0-9_-]*).", "What is the foundation place of ([A-Za-z0-9_-]*)?", "What is the foundation place of the ([A-Za-z0-9_-]*)?", "What was the foundation place of ([A-Za-z0-9_-]*)?", "What was the foundation place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the foundation place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the foundation place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the foundation place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the foundation place of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's foundation place?", "Who is the foundation place of ([A-Za-z0-9_-]*)?", "Who is the foundation place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's foundation place?", "Who was the foundation place of ([A-Za-z0-9_-]*)?", "Who was the foundation place of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#foundationplace_of_360",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation place of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) origin.", "List all the countries with origin of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's origin?", "What ([A-Za-z0-9_-]*) is the origin of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the origin of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's origin?", "What ([A-Za-z0-9_-]*) was the origin of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the origin of the ([A-Za-z0-9_-]*)?", "What is the origin of ([A-Za-z0-9_-]*)?", "What is the origin of the ([A-Za-z0-9_-]*)?", "What was the origin of ([A-Za-z0-9_-]*)?", "What was the origin of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the origin of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the origin of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the origin of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the origin of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the origin of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) origin.", "List all the countries with origin of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's origin?", "What ([A-Za-z0-9_-]*) is the origin of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the origin of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's origin?", "What ([A-Za-z0-9_-]*) was the origin of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the origin of the ([A-Za-z0-9_-]*)?", "What is the origin of ([A-Za-z0-9_-]*)?", "What is the origin of the ([A-Za-z0-9_-]*)?", "What was the origin of ([A-Za-z0-9_-]*)?", "What was the origin of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the origin of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the origin of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the origin of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the origin of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#origin-of_341",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the origin of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#programminglanguage_of_339",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) programming languages.", "Give me all programming languages of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) programming language.", "Give me the ([A-Za-z0-9_-]*) programming languages.", "List all programming languages of ([A-Za-z0-9_-]*).", "List all the languages with programming language of ([A-Za-z0-9_-]*).", "List all the programming languages of ([A-Za-z0-9_-]*).", "show me all programming languages of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the programming languages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's programming language?", "What ([A-Za-z0-9_-]*) is the programming language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the programming language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's programming language?", "What ([A-Za-z0-9_-]*) was the programming language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the programming language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the programming languages of the ([A-Za-z0-9_-]*)?", "What are the programming languages of ([A-Za-z0-9_-]*)?", "What are the programming languages of the ([A-Za-z0-9_-]*)?", "What is the programming language of ([A-Za-z0-9_-]*)?", "What is the programming language of the ([A-Za-z0-9_-]*)?", "What was the programming language of ([A-Za-z0-9_-]*)?", "What was the programming language of the ([A-Za-z0-9_-]*)?", "What were the programming languages of ([A-Za-z0-9_-]*)?", "What were the programming languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the programming languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the programming languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the programming language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the programming language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the programming language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the programming language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the programming languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the programming languages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#programminglanguage_of_339",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the programming language of ([A-Za-z0-9_-]*)?", "the programming languages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) total amount of employee.", "Give me all total amount of employee of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) total amount of employee.", "List all the agents with total amount of employee of ([A-Za-z0-9_-]*).", "List all the total amount of employee of ([A-Za-z0-9_-]*).", "List all total amount of employee of ([A-Za-z0-9_-]*).", "show me all total amount of employee of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the total amount of employee of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's total amount of employee?", "What ([A-Za-z0-9_-]*) is the total amount of employee of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the total amount of employee of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's total amount of employee?", "What ([A-Za-z0-9_-]*) was the total amount of employee of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the total amount of employee of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the total amount of employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the total amount of employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the total amount of employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the total amount of employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the total amount of employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the total amount of employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the total amount of employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the total amount of employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the total amount of employee of the ([A-Za-z0-9_-]*)?", "Who are the total amount of employee of ([A-Za-z0-9_-]*)?", "Who are the total amount of employee of the ([A-Za-z0-9_-]*)?", "Who is the total amount of employee of ([A-Za-z0-9_-]*)?", "Who is the total amount of employee of the ([A-Za-z0-9_-]*)?", "Who was the total amount of employee of ([A-Za-z0-9_-]*)?", "Who was the total amount of employee of the ([A-Za-z0-9_-]*)?", "Who were the total amount of employee of ([A-Za-z0-9_-]*)?", "Who were the total amount of employee of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the total amount of employee of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) total amount of employee.", "Give me all total amount of employee of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) total amount of employee.", "List all the agents with total amount of employee of ([A-Za-z0-9_-]*).", "List all the total amount of employee of ([A-Za-z0-9_-]*).", "List all total amount of employee of ([A-Za-z0-9_-]*).", "show me all total amount of employee of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the total amount of employee of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's total amount of employee?", "What ([A-Za-z0-9_-]*) is the total amount of employee of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the total amount of employee of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's total amount of employee?", "What ([A-Za-z0-9_-]*) was the total amount of employee of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the total amount of employee of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the total amount of employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the total amount of employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the total amount of employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the total amount of employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the total amount of employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the total amount of employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the total amount of employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the total amount of employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the total amount of employee of the ([A-Za-z0-9_-]*)?", "Who are the total amount of employee of ([A-Za-z0-9_-]*)?", "Who are the total amount of employee of the ([A-Za-z0-9_-]*)?", "Who is the total amount of employee of ([A-Za-z0-9_-]*)?", "Who is the total amount of employee of the ([A-Za-z0-9_-]*)?", "Who was the total amount of employee of ([A-Za-z0-9_-]*)?", "Who was the total amount of employee of the ([A-Za-z0-9_-]*)?", "Who were the total amount of employee of ([A-Za-z0-9_-]*)?", "Who were the total amount of employee of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#total-amount-of-employee-of_320",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the total amount of employee of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#deliverydate-of_245",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MeanOfTransportation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) delivery Dates.", "Give me all delivery Dates of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) delivery Date.", "Give me the ([A-Za-z0-9_-]*) delivery Dates.", "List all delivery Dates of ([A-Za-z0-9_-]*).", "List all the delivery Dates of ([A-Za-z0-9_-]*).", "show me all delivery Dates of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the delivery Dates of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's delivery Date?", "What ([A-Za-z0-9_-]*) is the delivery Date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the delivery Date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's delivery Date?", "What ([A-Za-z0-9_-]*) was the delivery Date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the delivery Date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the delivery Dates of the ([A-Za-z0-9_-]*)?", "What are the delivery Dates of ([A-Za-z0-9_-]*)?", "What are the delivery Dates of the ([A-Za-z0-9_-]*)?", "What is the delivery Date of ([A-Za-z0-9_-]*)?", "What is the delivery Date of the ([A-Za-z0-9_-]*)?", "What was the delivery Date of ([A-Za-z0-9_-]*)?", "What was the delivery Date of the ([A-Za-z0-9_-]*)?", "What were the delivery Dates of ([A-Za-z0-9_-]*)?", "What were the delivery Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the delivery Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the delivery Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the delivery Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the delivery Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the delivery Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the delivery Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the delivery Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the delivery Dates of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deliveryDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#deliverydate-of_245",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "MeanOfTransportation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the delivery Date of ([A-Za-z0-9_-]*)?", "the delivery Dates of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deliveryDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#address-of_334",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) addresses.", "Give me all addresses of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) address.", "Give me the ([A-Za-z0-9_-]*) addresses.", "List all addresses of ([A-Za-z0-9_-]*).", "List all the addresses of ([A-Za-z0-9_-]*).", "show me all addresses of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the addresses of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's address?", "What ([A-Za-z0-9_-]*) is the address of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the address of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's address?", "What ([A-Za-z0-9_-]*) was the address of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the address of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the addresses of the ([A-Za-z0-9_-]*)?", "What are the addresses of ([A-Za-z0-9_-]*)?", "What are the addresses of the ([A-Za-z0-9_-]*)?", "What is the address of ([A-Za-z0-9_-]*)?", "What is the address of the ([A-Za-z0-9_-]*)?", "What was the address of ([A-Za-z0-9_-]*)?", "What was the address of the ([A-Za-z0-9_-]*)?", "What were the addresses of ([A-Za-z0-9_-]*)?", "What were the addresses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the addresses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the addresses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the address of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the address of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the address of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the address of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the addresses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the addresses of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/address> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#address-of_334",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the address of ([A-Za-z0-9_-]*)?", "the addresses of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/address> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#musiccomposer-of_310",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) music composers.", "Give me all music composers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) music composer.", "Give me the ([A-Za-z0-9_-]*) music composers.", "List all music composers of ([A-Za-z0-9_-]*).", "List all the music composers of ([A-Za-z0-9_-]*).", "List all the persons with music composer of ([A-Za-z0-9_-]*).", "show me all music composers of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the music composers of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's music composer?", "What ([A-Za-z0-9_-]*) is the music composer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the music composer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's music composer?", "What ([A-Za-z0-9_-]*) was the music composer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the music composer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the music composers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the music composers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the music composers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music composer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music composer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music composer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music composer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the music composers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the music composers of the ([A-Za-z0-9_-]*)?", "Who are the music composers of ([A-Za-z0-9_-]*)?", "Who are the music composers of the ([A-Za-z0-9_-]*)?", "Who is the music composer of ([A-Za-z0-9_-]*)?", "Who is the music composer of the ([A-Za-z0-9_-]*)?", "Who was the music composer of ([A-Za-z0-9_-]*)?", "Who was the music composer of the ([A-Za-z0-9_-]*)?", "Who were the music composers of ([A-Za-z0-9_-]*)?", "Who were the music composers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#musiccomposer-of_310",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ([A-Za-z0-9_-]*)?", "the music composers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) boardgames.", "Give me all boardgames by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) boardgame.", "Give me the ([A-Za-z0-9_-]*) boardgames.", "List all boardgames by ([A-Za-z0-9_-]*).", "List all the agents with boardgame by ([A-Za-z0-9_-]*).", "List all the boardgames by ([A-Za-z0-9_-]*).", "show me all boardgames by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the boardgames by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's boardgame?", "What ([A-Za-z0-9_-]*) is the boardgame by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the boardgame by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's boardgame?", "What ([A-Za-z0-9_-]*) was the boardgame by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the boardgame by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the boardgames by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the boardgames by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the boardgames by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the boardgame by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the boardgame by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the boardgame by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the boardgame by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the boardgames by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the boardgames by the ([A-Za-z0-9_-]*)?", "Who are the boardgames by ([A-Za-z0-9_-]*)?", "Who are the boardgames by the ([A-Za-z0-9_-]*)?", "Who is the boardgame by ([A-Za-z0-9_-]*)?", "Who is the boardgame by the ([A-Za-z0-9_-]*)?", "Who was the boardgame by ([A-Za-z0-9_-]*)?", "Who was the boardgame by the ([A-Za-z0-9_-]*)?", "Who were the boardgames by ([A-Za-z0-9_-]*)?", "Who were the boardgames by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the boardgame by ([A-Za-z0-9_-]*)?", "the boardgames by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) boardgames.", "Give me all boardgames by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) boardgame.", "Give me the ([A-Za-z0-9_-]*) boardgames.", "List all boardgames by ([A-Za-z0-9_-]*).", "List all the agents with boardgame by ([A-Za-z0-9_-]*).", "List all the boardgames by ([A-Za-z0-9_-]*).", "show me all boardgames by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the boardgames by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's boardgame?", "What ([A-Za-z0-9_-]*) is the boardgame by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the boardgame by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's boardgame?", "What ([A-Za-z0-9_-]*) was the boardgame by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the boardgame by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the boardgames by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the boardgames by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the boardgames by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the boardgame by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the boardgame by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the boardgame by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the boardgame by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the boardgames by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the boardgames by the ([A-Za-z0-9_-]*)?", "Who are the boardgames by ([A-Za-z0-9_-]*)?", "Who are the boardgames by the ([A-Za-z0-9_-]*)?", "Who is the boardgame by ([A-Za-z0-9_-]*)?", "Who is the boardgame by the ([A-Za-z0-9_-]*)?", "Who was the boardgame by ([A-Za-z0-9_-]*)?", "Who was the boardgame by the ([A-Za-z0-9_-]*)?", "Who were the boardgames by ([A-Za-z0-9_-]*)?", "Who were the boardgames by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the boardgame by ([A-Za-z0-9_-]*)?", "the boardgames by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) boardgames.", "Give me all boardgames by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) boardgame.", "Give me the ([A-Za-z0-9_-]*) boardgames.", "List all boardgames by ([A-Za-z0-9_-]*).", "List all the agents with boardgame by ([A-Za-z0-9_-]*).", "List all the boardgames by ([A-Za-z0-9_-]*).", "show me all boardgames by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the boardgames by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's boardgame?", "What ([A-Za-z0-9_-]*) is the boardgame by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the boardgame by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's boardgame?", "What ([A-Za-z0-9_-]*) was the boardgame by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the boardgame by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the boardgames by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the boardgames by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the boardgames by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the boardgame by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the boardgame by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the boardgame by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the boardgame by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the boardgames by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the boardgames by the ([A-Za-z0-9_-]*)?", "Who are the boardgames by ([A-Za-z0-9_-]*)?", "Who are the boardgames by the ([A-Za-z0-9_-]*)?", "Who is the boardgame by ([A-Za-z0-9_-]*)?", "Who is the boardgame by the ([A-Za-z0-9_-]*)?", "Who was the boardgame by ([A-Za-z0-9_-]*)?", "Who was the boardgame by the ([A-Za-z0-9_-]*)?", "Who were the boardgames by ([A-Za-z0-9_-]*)?", "Who were the boardgames by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1_278",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the boardgame by ([A-Za-z0-9_-]*)?", "the boardgames by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) serieses.", "Give me all serieses of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) series.", "Give me the ([A-Za-z0-9_-]*) serieses.", "List all serieses of ([A-Za-z0-9_-]*).", "List all the serieses of ([A-Za-z0-9_-]*).", "List all the works with series of ([A-Za-z0-9_-]*).", "show me all serieses of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the serieses of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's series?", "What ([A-Za-z0-9_-]*) is the series of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the series of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's series?", "What ([A-Za-z0-9_-]*) was the series of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the series of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the serieses of the ([A-Za-z0-9_-]*)?", "What are the serieses of ([A-Za-z0-9_-]*)?", "What are the serieses of the ([A-Za-z0-9_-]*)?", "What is the series of ([A-Za-z0-9_-]*)?", "What is the series of the ([A-Za-z0-9_-]*)?", "What was the series of ([A-Za-z0-9_-]*)?", "What was the series of the ([A-Za-z0-9_-]*)?", "What were the serieses of ([A-Za-z0-9_-]*)?", "What were the serieses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the serieses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the serieses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the series of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the series of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the series of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the series of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the serieses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the serieses of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the series of ([A-Za-z0-9_-]*)?", "the serieses of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) serieses.", "Give me all serieses of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) series.", "Give me the ([A-Za-z0-9_-]*) serieses.", "List all serieses of ([A-Za-z0-9_-]*).", "List all the serieses of ([A-Za-z0-9_-]*).", "List all the works with series of ([A-Za-z0-9_-]*).", "show me all serieses of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the serieses of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's series?", "What ([A-Za-z0-9_-]*) is the series of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the series of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's series?", "What ([A-Za-z0-9_-]*) was the series of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the series of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the serieses of the ([A-Za-z0-9_-]*)?", "What are the serieses of ([A-Za-z0-9_-]*)?", "What are the serieses of the ([A-Za-z0-9_-]*)?", "What is the series of ([A-Za-z0-9_-]*)?", "What is the series of the ([A-Za-z0-9_-]*)?", "What was the series of ([A-Za-z0-9_-]*)?", "What was the series of the ([A-Za-z0-9_-]*)?", "What were the serieses of ([A-Za-z0-9_-]*)?", "What were the serieses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the serieses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the serieses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the series of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the series of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the series of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the series of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the serieses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the serieses of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#series_of_306",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the series of ([A-Za-z0-9_-]*)?", "the serieses of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#completiondate-of_380",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) completion date.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's completion date?", "What ([A-Za-z0-9_-]*) is the completion date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the completion date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's completion date?", "What ([A-Za-z0-9_-]*) was the completion date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the completion date of the ([A-Za-z0-9_-]*)?", "What is the completion date of ([A-Za-z0-9_-]*)?", "What is the completion date of the ([A-Za-z0-9_-]*)?", "What was the completion date of ([A-Za-z0-9_-]*)?", "What was the completion date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the completion date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the completion date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the completion date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the completion date of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#completiondate-of_380",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the completion date of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#parent-of_338",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) parents.", "Give me all parents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) parent.", "Give me the ([A-Za-z0-9_-]*) parents.", "List all parents of ([A-Za-z0-9_-]*).", "List all the parents of ([A-Za-z0-9_-]*).", "List all the persons with parent of ([A-Za-z0-9_-]*).", "show me all parents of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the parents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the parent of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the parent of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the parent of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the parent of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parents of the ([A-Za-z0-9_-]*)?", "Who are the parents of ([A-Za-z0-9_-]*)?", "Who are the parents of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's parent?", "Who is the parent of ([A-Za-z0-9_-]*)?", "Who is the parent of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's parent?", "Who was the parent of ([A-Za-z0-9_-]*)?", "Who was the parent of the ([A-Za-z0-9_-]*)?", "Who were the parents of ([A-Za-z0-9_-]*)?", "Who were the parents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/parent> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#parent-of_338",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parent of ([A-Za-z0-9_-]*)?", "the parents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/parent> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of_287",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) elevation.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's elevation?", "What ([A-Za-z0-9_-]*) is the elevation of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the elevation of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's elevation?", "What ([A-Za-z0-9_-]*) was the elevation of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the elevation of the ([A-Za-z0-9_-]*)?", "What is the elevation of ([A-Za-z0-9_-]*)?", "What is the elevation of the ([A-Za-z0-9_-]*)?", "What was the elevation of ([A-Za-z0-9_-]*)?", "What was the elevation of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the elevation of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the elevation of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the elevation of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the elevation of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of_287",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the elevation of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) ruling parties.", "Give me all ruling parties in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) ruling parties.", "Give me the ([A-Za-z0-9_-]*) ruling party.", "List all ruling parties in ([A-Za-z0-9_-]*).", "List all the agents with ruling party in ([A-Za-z0-9_-]*).", "List all the ruling parties in ([A-Za-z0-9_-]*).", "show me all ruling parties in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the ruling parties in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's ruling party?", "What ([A-Za-z0-9_-]*) is the ruling party in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the ruling party in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's ruling party?", "What ([A-Za-z0-9_-]*) was the ruling party in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ruling party in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the ruling parties in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ruling parties in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ruling parties in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ruling party in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ruling party in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ruling party in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ruling party in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ruling parties in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ruling parties in the ([A-Za-z0-9_-]*)?", "Who are the ruling parties in ([A-Za-z0-9_-]*)?", "Who are the ruling parties in the ([A-Za-z0-9_-]*)?", "Who is the ruling party in ([A-Za-z0-9_-]*)?", "Who is the ruling party in the ([A-Za-z0-9_-]*)?", "Who was the ruling party in ([A-Za-z0-9_-]*)?", "Who was the ruling party in the ([A-Za-z0-9_-]*)?", "Who were the ruling parties in ([A-Za-z0-9_-]*)?", "Who were the ruling parties in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ruling parties in ([A-Za-z0-9_-]*)?", "the ruling party in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) ruling parties.", "Give me all ruling parties in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) ruling parties.", "Give me the ([A-Za-z0-9_-]*) ruling party.", "List all ruling parties in ([A-Za-z0-9_-]*).", "List all the agents with ruling party in ([A-Za-z0-9_-]*).", "List all the ruling parties in ([A-Za-z0-9_-]*).", "show me all ruling parties in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the ruling parties in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's ruling party?", "What ([A-Za-z0-9_-]*) is the ruling party in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the ruling party in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's ruling party?", "What ([A-Za-z0-9_-]*) was the ruling party in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ruling party in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the ruling parties in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ruling parties in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ruling parties in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ruling party in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ruling party in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ruling party in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ruling party in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ruling parties in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ruling parties in the ([A-Za-z0-9_-]*)?", "Who are the ruling parties in ([A-Za-z0-9_-]*)?", "Who are the ruling parties in the ([A-Za-z0-9_-]*)?", "Who is the ruling party in ([A-Za-z0-9_-]*)?", "Who is the ruling party in the ([A-Za-z0-9_-]*)?", "Who was the ruling party in ([A-Za-z0-9_-]*)?", "Who was the ruling party in the ([A-Za-z0-9_-]*)?", "Who were the ruling parties in ([A-Za-z0-9_-]*)?", "Who were the ruling parties in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#ruling-party-in_379",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ruling parties in ([A-Za-z0-9_-]*)?", "the ruling party in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderParty> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "259",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) causes of death.", "Give me all causes of death of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) cause of death.", "Give me the ([A-Za-z0-9_-]*) causes of death.", "List all causes of death of ([A-Za-z0-9_-]*).", "List all the causes of death of ([A-Za-z0-9_-]*).", "show me all causes of death of ([A-Za-z0-9_-]*).", "What are the causes of death of ([A-Za-z0-9_-]*)?", "What are the causes of death of the ([A-Za-z0-9_-]*)?", "What is the cause of death of ([A-Za-z0-9_-]*)?", "What is the cause of death of the ([A-Za-z0-9_-]*)?", "What was the cause of death of ([A-Za-z0-9_-]*)?", "What was the cause of death of the ([A-Za-z0-9_-]*)?", "What were the causes of death of ([A-Za-z0-9_-]*)?", "What were the causes of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the causes of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the causes of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the cause of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the cause of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the cause of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the cause of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the causes of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the causes of death of the ([A-Za-z0-9_-]*)?", "Who are the causes of death of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's cause of death?", "Who is the cause of death of ([A-Za-z0-9_-]*)?", "Who is the cause of death of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's cause of death?", "Who was the cause of death of ([A-Za-z0-9_-]*)?", "Who was the cause of death of the ([A-Za-z0-9_-]*)?", "Who were the causes of death of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "263",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of ([A-Za-z0-9_-]*)?", "the causes of death of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) causes of death.", "Give me all causes of death of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) cause of death.", "Give me the ([A-Za-z0-9_-]*) causes of death.", "List all causes of death of ([A-Za-z0-9_-]*).", "List all the causes of death of ([A-Za-z0-9_-]*).", "show me all causes of death of ([A-Za-z0-9_-]*).", "What are the causes of death of ([A-Za-z0-9_-]*)?", "What are the causes of death of the ([A-Za-z0-9_-]*)?", "What is the cause of death of ([A-Za-z0-9_-]*)?", "What is the cause of death of the ([A-Za-z0-9_-]*)?", "What was the cause of death of ([A-Za-z0-9_-]*)?", "What was the cause of death of the ([A-Za-z0-9_-]*)?", "What were the causes of death of ([A-Za-z0-9_-]*)?", "What were the causes of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the causes of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the causes of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the cause of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the cause of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the cause of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the cause of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the causes of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the causes of death of the ([A-Za-z0-9_-]*)?", "Who are the causes of death of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's cause of death?", "Who is the cause of death of ([A-Za-z0-9_-]*)?", "Who is the cause of death of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's cause of death?", "Who was the cause of death of ([A-Za-z0-9_-]*)?", "Who was the cause of death of the ([A-Za-z0-9_-]*)?", "Who were the causes of death of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of ([A-Za-z0-9_-]*)?", "the causes of death of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) causes of death.", "Give me all causes of death of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) cause of death.", "Give me the ([A-Za-z0-9_-]*) causes of death.", "List all causes of death of ([A-Za-z0-9_-]*).", "List all the causes of death of ([A-Za-z0-9_-]*).", "show me all causes of death of ([A-Za-z0-9_-]*).", "What are the causes of death of ([A-Za-z0-9_-]*)?", "What are the causes of death of the ([A-Za-z0-9_-]*)?", "What is the cause of death of ([A-Za-z0-9_-]*)?", "What is the cause of death of the ([A-Za-z0-9_-]*)?", "What was the cause of death of ([A-Za-z0-9_-]*)?", "What was the cause of death of the ([A-Za-z0-9_-]*)?", "What were the causes of death of ([A-Za-z0-9_-]*)?", "What were the causes of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the causes of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the causes of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the cause of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the cause of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the cause of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the cause of death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the causes of death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the causes of death of the ([A-Za-z0-9_-]*)?", "Who are the causes of death of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's cause of death?", "Who is the cause of death of ([A-Za-z0-9_-]*)?", "Who is the cause of death of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's cause of death?", "Who was the cause of death of ([A-Za-z0-9_-]*)?", "Who was the cause of death of the ([A-Za-z0-9_-]*)?", "Who were the causes of death of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#causeofdeath_of_331",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of ([A-Za-z0-9_-]*)?", "the causes of death of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "274",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "279",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "283",
    "lexicalEntryUri" : "http://localhost:8080#president-of_3_277",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "284",
    "lexicalEntryUri" : "http://localhost:8080#openingdate-of_373",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) opening Dates.", "Give me all opening Dates of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) opening Date.", "Give me the ([A-Za-z0-9_-]*) opening Dates.", "List all opening Dates of ([A-Za-z0-9_-]*).", "List all the opening Dates of ([A-Za-z0-9_-]*).", "show me all opening Dates of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the opening Dates of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's opening Date?", "What ([A-Za-z0-9_-]*) is the opening Date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the opening Date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's opening Date?", "What ([A-Za-z0-9_-]*) was the opening Date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the opening Date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the opening Dates of the ([A-Za-z0-9_-]*)?", "What are the opening Dates of ([A-Za-z0-9_-]*)?", "What are the opening Dates of the ([A-Za-z0-9_-]*)?", "What is the opening Date of ([A-Za-z0-9_-]*)?", "What is the opening Date of the ([A-Za-z0-9_-]*)?", "What was the opening Date of ([A-Za-z0-9_-]*)?", "What was the opening Date of the ([A-Za-z0-9_-]*)?", "What were the opening Dates of ([A-Za-z0-9_-]*)?", "What were the opening Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the opening Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the opening Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the opening Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the opening Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the opening Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the opening Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the opening Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the opening Dates of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "288",
    "lexicalEntryUri" : "http://localhost:8080#openingdate-of_373",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the opening Date of ([A-Za-z0-9_-]*)?", "the opening Dates of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) time zones.", "Give me all time zones of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) time zone.", "Give me the ([A-Za-z0-9_-]*) time zones.", "List all the time zones of ([A-Za-z0-9_-]*).", "List all time zones of ([A-Za-z0-9_-]*).", "show me all time zones of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the time zones of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) is the time zone of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the time zone of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) was the time zone of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the time zone of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the time zones of the ([A-Za-z0-9_-]*)?", "What are the time zones of ([A-Za-z0-9_-]*)?", "What are the time zones of the ([A-Za-z0-9_-]*)?", "What is the time zone of ([A-Za-z0-9_-]*)?", "What is the time zone of the ([A-Za-z0-9_-]*)?", "What was the time zone of ([A-Za-z0-9_-]*)?", "What was the time zone of the ([A-Za-z0-9_-]*)?", "What were the time zones of ([A-Za-z0-9_-]*)?", "What were the time zones of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the time zones of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the time zones of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the time zones of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the time zones of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ([A-Za-z0-9_-]*)?", "the time zones of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) time zones.", "Give me all time zones of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) time zone.", "Give me the ([A-Za-z0-9_-]*) time zones.", "List all the time zones of ([A-Za-z0-9_-]*).", "List all time zones of ([A-Za-z0-9_-]*).", "show me all time zones of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the time zones of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) is the time zone of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the time zone of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) was the time zone of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the time zone of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the time zones of the ([A-Za-z0-9_-]*)?", "What are the time zones of ([A-Za-z0-9_-]*)?", "What are the time zones of the ([A-Za-z0-9_-]*)?", "What is the time zone of ([A-Za-z0-9_-]*)?", "What is the time zone of the ([A-Za-z0-9_-]*)?", "What was the time zone of ([A-Za-z0-9_-]*)?", "What was the time zone of the ([A-Za-z0-9_-]*)?", "What were the time zones of ([A-Za-z0-9_-]*)?", "What were the time zones of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the time zones of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the time zones of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the time zones of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the time zones of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ([A-Za-z0-9_-]*)?", "the time zones of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) time zones.", "Give me all time zones of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) time zone.", "Give me the ([A-Za-z0-9_-]*) time zones.", "List all the time zones of ([A-Za-z0-9_-]*).", "List all time zones of ([A-Za-z0-9_-]*).", "show me all time zones of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the time zones of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) is the time zone of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the time zone of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) was the time zone of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the time zone of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the time zones of the ([A-Za-z0-9_-]*)?", "What are the time zones of ([A-Za-z0-9_-]*)?", "What are the time zones of the ([A-Za-z0-9_-]*)?", "What is the time zone of ([A-Za-z0-9_-]*)?", "What is the time zone of the ([A-Za-z0-9_-]*)?", "What was the time zone of ([A-Za-z0-9_-]*)?", "What was the time zone of the ([A-Za-z0-9_-]*)?", "What were the time zones of ([A-Za-z0-9_-]*)?", "What were the time zones of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the time zones of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the time zones of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the time zones of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the time zones of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ([A-Za-z0-9_-]*)?", "the time zones of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) time zones.", "Give me all time zones of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) time zone.", "Give me the ([A-Za-z0-9_-]*) time zones.", "List all the time zones of ([A-Za-z0-9_-]*).", "List all time zones of ([A-Za-z0-9_-]*).", "show me all time zones of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the time zones of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) is the time zone of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the time zone of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) was the time zone of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the time zone of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the time zones of the ([A-Za-z0-9_-]*)?", "What are the time zones of ([A-Za-z0-9_-]*)?", "What are the time zones of the ([A-Za-z0-9_-]*)?", "What is the time zone of ([A-Za-z0-9_-]*)?", "What is the time zone of the ([A-Za-z0-9_-]*)?", "What was the time zone of ([A-Za-z0-9_-]*)?", "What was the time zone of the ([A-Za-z0-9_-]*)?", "What were the time zones of ([A-Za-z0-9_-]*)?", "What were the time zones of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the time zones of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the time zones of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the time zones of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the time zones of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#timezone-of_274",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ([A-Za-z0-9_-]*)?", "the time zones of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#associatedmusicalartist-of_332",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) associated Musical Artists.", "Give me all associated Musical Artists of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) associated Musical Artist.", "Give me the ([A-Za-z0-9_-]*) associated Musical Artists.", "List all associated Musical Artists of ([A-Za-z0-9_-]*).", "List all the associated Musical Artists of ([A-Za-z0-9_-]*).", "List all the places with associated Musical Artist of ([A-Za-z0-9_-]*).", "show me all associated Musical Artists of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the associated Musical Artists of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's associated Musical Artist?", "What ([A-Za-z0-9_-]*) is the associated Musical Artist of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the associated Musical Artist of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's associated Musical Artist?", "What ([A-Za-z0-9_-]*) was the associated Musical Artist of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the associated Musical Artist of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the associated Musical Artists of the ([A-Za-z0-9_-]*)?", "What are the associated Musical Artists of ([A-Za-z0-9_-]*)?", "What are the associated Musical Artists of the ([A-Za-z0-9_-]*)?", "What is the associated Musical Artist of ([A-Za-z0-9_-]*)?", "What is the associated Musical Artist of the ([A-Za-z0-9_-]*)?", "What was the associated Musical Artist of ([A-Za-z0-9_-]*)?", "What was the associated Musical Artist of the ([A-Za-z0-9_-]*)?", "What were the associated Musical Artists of ([A-Za-z0-9_-]*)?", "What were the associated Musical Artists of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the associated Musical Artists of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the associated Musical Artists of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the associated Musical Artist of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the associated Musical Artist of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the associated Musical Artist of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the associated Musical Artist of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the associated Musical Artists of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the associated Musical Artists of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "313",
    "lexicalEntryUri" : "http://localhost:8080#associatedmusicalartist-of_332",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Band" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the associated Musical Artist of ([A-Za-z0-9_-]*)?", "the associated Musical Artists of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) wives.", "Give me all wives of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) wife.", "Give me the ([A-Za-z0-9_-]*) wives.", "List all the persons with wife of ([A-Za-z0-9_-]*).", "List all the wives of ([A-Za-z0-9_-]*).", "List all wives of ([A-Za-z0-9_-]*).", "show me all wives of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the wives of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the wives of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wife of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wife of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wife of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wife of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wives of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wives of the ([A-Za-z0-9_-]*)?", "Who are the wives of ([A-Za-z0-9_-]*)?", "Who are the wives of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's wife?", "Who is the wife of ([A-Za-z0-9_-]*)?", "Who is the wife of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's wife?", "Who was the wife of ([A-Za-z0-9_-]*)?", "Who was the wife of the ([A-Za-z0-9_-]*)?", "Who were the wives of ([A-Za-z0-9_-]*)?", "Who were the wives of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "318",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of ([A-Za-z0-9_-]*)?", "the wives of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) wives.", "Give me all wives of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) wife.", "Give me the ([A-Za-z0-9_-]*) wives.", "List all the persons with wife of ([A-Za-z0-9_-]*).", "List all the wives of ([A-Za-z0-9_-]*).", "List all wives of ([A-Za-z0-9_-]*).", "show me all wives of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the wives of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the wives of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wife of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wife of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wife of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wife of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wives of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wives of the ([A-Za-z0-9_-]*)?", "Who are the wives of ([A-Za-z0-9_-]*)?", "Who are the wives of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's wife?", "Who is the wife of ([A-Za-z0-9_-]*)?", "Who is the wife of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's wife?", "Who was the wife of ([A-Za-z0-9_-]*)?", "Who was the wife of the ([A-Za-z0-9_-]*)?", "Who were the wives of ([A-Za-z0-9_-]*)?", "Who were the wives of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "323",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of ([A-Za-z0-9_-]*)?", "the wives of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) wives.", "Give me all wives of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) wife.", "Give me the ([A-Za-z0-9_-]*) wives.", "List all the persons with wife of ([A-Za-z0-9_-]*).", "List all the wives of ([A-Za-z0-9_-]*).", "List all wives of ([A-Za-z0-9_-]*).", "show me all wives of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the wives of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the wives of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wife of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wife of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wife of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wife of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wives of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wives of the ([A-Za-z0-9_-]*)?", "Who are the wives of ([A-Za-z0-9_-]*)?", "Who are the wives of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's wife?", "Who is the wife of ([A-Za-z0-9_-]*)?", "Who is the wife of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's wife?", "Who was the wife of ([A-Za-z0-9_-]*)?", "Who was the wife of the ([A-Za-z0-9_-]*)?", "Who were the wives of ([A-Za-z0-9_-]*)?", "Who were the wives of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "328",
    "lexicalEntryUri" : "http://localhost:8080#wife-of_377",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of ([A-Za-z0-9_-]*)?", "the wives of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#museum_in_230",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) museums.", "Give me all museums in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) museum.", "Give me the ([A-Za-z0-9_-]*) museums.", "List all museums in ([A-Za-z0-9_-]*).", "List all the cities with museum in ([A-Za-z0-9_-]*).", "List all the museums in ([A-Za-z0-9_-]*).", "show me all museums in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the museums in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's museum?", "What ([A-Za-z0-9_-]*) is the museum in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the museum in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's museum?", "What ([A-Za-z0-9_-]*) was the museum in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the museum in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the museums in the ([A-Za-z0-9_-]*)?", "What are the museums in ([A-Za-z0-9_-]*)?", "What are the museums in the ([A-Za-z0-9_-]*)?", "What is the museum in ([A-Za-z0-9_-]*)?", "What is the museum in the ([A-Za-z0-9_-]*)?", "What was the museum in ([A-Za-z0-9_-]*)?", "What was the museum in the ([A-Za-z0-9_-]*)?", "What were the museums in ([A-Za-z0-9_-]*)?", "What were the museums in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the museums in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the museums in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the museum in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the museum in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the museum in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the museum in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the museums in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the museums in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "333",
    "lexicalEntryUri" : "http://localhost:8080#museum_in_230",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the museum in ([A-Za-z0-9_-]*)?", "the museums in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "334",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's president?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's president?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "338",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "339",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's president?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's president?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "343",
    "lexicalEntryUri" : "http://localhost:8080#president-of_2_284",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "344",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) museums.", "Give me all museums in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) museum.", "Give me the ([A-Za-z0-9_-]*) museums.", "List all museums in ([A-Za-z0-9_-]*).", "List all the museums in ([A-Za-z0-9_-]*).", "List all the settlements with museum in ([A-Za-z0-9_-]*).", "show me all museums in ([A-Za-z0-9_-]*).", "What are the museums in ([A-Za-z0-9_-]*)?", "What are the museums in the ([A-Za-z0-9_-]*)?", "What is the museum in ([A-Za-z0-9_-]*)?", "What is the museum in the ([A-Za-z0-9_-]*)?", "What was the museum in ([A-Za-z0-9_-]*)?", "What was the museum in the ([A-Za-z0-9_-]*)?", "What were the museums in ([A-Za-z0-9_-]*)?", "What were the museums in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the museums in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the museums in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the museum in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the museum in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the museum in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the museum in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the museums in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the museums in the ([A-Za-z0-9_-]*)?", "Who are the museums in the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's museum?", "Who is the museum in ([A-Za-z0-9_-]*)?", "Who is the museum in the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's museum?", "Who was the museum in ([A-Za-z0-9_-]*)?", "Who was the museum in the ([A-Za-z0-9_-]*)?", "Who were the museums in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "348",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the museum in ([A-Za-z0-9_-]*)?", "the museums in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "349",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) museums.", "Give me all museums in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) museum.", "Give me the ([A-Za-z0-9_-]*) museums.", "List all museums in ([A-Za-z0-9_-]*).", "List all the museums in ([A-Za-z0-9_-]*).", "List all the museums with museum in ([A-Za-z0-9_-]*).", "show me all museums in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the museums in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's museum?", "What ([A-Za-z0-9_-]*) is the museum in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the museum in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's museum?", "What ([A-Za-z0-9_-]*) was the museum in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the museum in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the museums in the ([A-Za-z0-9_-]*)?", "What are the museums in ([A-Za-z0-9_-]*)?", "What are the museums in the ([A-Za-z0-9_-]*)?", "What is the museum in ([A-Za-z0-9_-]*)?", "What is the museum in the ([A-Za-z0-9_-]*)?", "What was the museum in ([A-Za-z0-9_-]*)?", "What was the museum in the ([A-Za-z0-9_-]*)?", "What were the museums in ([A-Za-z0-9_-]*)?", "What were the museums in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the museums in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the museums in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the museum in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the museum in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the museum in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the museum in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the museums in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the museums in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "353",
    "lexicalEntryUri" : "http://localhost:8080#museums-in_328",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the museum in ([A-Za-z0-9_-]*)?", "the museums in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "354",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founders.", "Give me all founders of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founder.", "Give me the ([A-Za-z0-9_-]*) founders.", "List all founders of ([A-Za-z0-9_-]*).", "List all the company with founder of ([A-Za-z0-9_-]*).", "List all the founders of ([A-Za-z0-9_-]*).", "show me all founders of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "Who are the founders of ([A-Za-z0-9_-]*)?", "Who are the founders of the ([A-Za-z0-9_-]*)?", "Who is the founder of ([A-Za-z0-9_-]*)?", "Who is the founder of the ([A-Za-z0-9_-]*)?", "Who was the founder of ([A-Za-z0-9_-]*)?", "Who was the founder of the ([A-Za-z0-9_-]*)?", "Who were the founders of ([A-Za-z0-9_-]*)?", "Who were the founders of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "358",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ([A-Za-z0-9_-]*)?", "the founders of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "359",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founders.", "Give me all founders of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founder.", "Give me the ([A-Za-z0-9_-]*) founders.", "List all founders of ([A-Za-z0-9_-]*).", "List all the company with founder of ([A-Za-z0-9_-]*).", "List all the founders of ([A-Za-z0-9_-]*).", "show me all founders of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "Who are the founders of ([A-Za-z0-9_-]*)?", "Who are the founders of the ([A-Za-z0-9_-]*)?", "Who is the founder of ([A-Za-z0-9_-]*)?", "Who is the founder of the ([A-Za-z0-9_-]*)?", "Who was the founder of ([A-Za-z0-9_-]*)?", "Who was the founder of the ([A-Za-z0-9_-]*)?", "Who were the founders of ([A-Za-z0-9_-]*)?", "Who were the founders of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "363",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ([A-Za-z0-9_-]*)?", "the founders of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "364",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founders.", "Give me all founders of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founder.", "Give me the ([A-Za-z0-9_-]*) founders.", "List all founders of ([A-Za-z0-9_-]*).", "List all the company with founder of ([A-Za-z0-9_-]*).", "List all the founders of ([A-Za-z0-9_-]*).", "show me all founders of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "Who are the founders of ([A-Za-z0-9_-]*)?", "Who are the founders of the ([A-Za-z0-9_-]*)?", "Who is the founder of ([A-Za-z0-9_-]*)?", "Who is the founder of the ([A-Za-z0-9_-]*)?", "Who was the founder of ([A-Za-z0-9_-]*)?", "Who was the founder of the ([A-Za-z0-9_-]*)?", "Who were the founders of ([A-Za-z0-9_-]*)?", "Who were the founders of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "368",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ([A-Za-z0-9_-]*)?", "the founders of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "369",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founders.", "Give me all founders of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founder.", "Give me the ([A-Za-z0-9_-]*) founders.", "List all founders of ([A-Za-z0-9_-]*).", "List all the company with founder of ([A-Za-z0-9_-]*).", "List all the founders of ([A-Za-z0-9_-]*).", "show me all founders of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "Who are the founders of ([A-Za-z0-9_-]*)?", "Who are the founders of the ([A-Za-z0-9_-]*)?", "Who is the founder of ([A-Za-z0-9_-]*)?", "Who is the founder of the ([A-Za-z0-9_-]*)?", "Who was the founder of ([A-Za-z0-9_-]*)?", "Who was the founder of the ([A-Za-z0-9_-]*)?", "Who were the founders of ([A-Za-z0-9_-]*)?", "Who were the founders of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "373",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ([A-Za-z0-9_-]*)?", "the founders of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "374",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founders.", "Give me all founders of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founder.", "Give me the ([A-Za-z0-9_-]*) founders.", "List all founders of ([A-Za-z0-9_-]*).", "List all the company with founder of ([A-Za-z0-9_-]*).", "List all the founders of ([A-Za-z0-9_-]*).", "show me all founders of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "Who are the founders of ([A-Za-z0-9_-]*)?", "Who are the founders of the ([A-Za-z0-9_-]*)?", "Who is the founder of ([A-Za-z0-9_-]*)?", "Who is the founder of the ([A-Za-z0-9_-]*)?", "Who was the founder of ([A-Za-z0-9_-]*)?", "Who was the founder of the ([A-Za-z0-9_-]*)?", "Who were the founders of ([A-Za-z0-9_-]*)?", "Who were the founders of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "378",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_265",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ([A-Za-z0-9_-]*)?", "the founders of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "379",
    "lexicalEntryUri" : "http://localhost:8080#recordlabel_of_318",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Genre" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) record labels.", "Give me all record labels of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) record label.", "Give me the ([A-Za-z0-9_-]*) record labels.", "List all record labels of ([A-Za-z0-9_-]*).", "List all the record labels of ([A-Za-z0-9_-]*).", "show me all record labels of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the record labels of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's record label?", "What ([A-Za-z0-9_-]*) is the record label of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the record label of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's record label?", "What ([A-Za-z0-9_-]*) was the record label of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the record label of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the record labels of the ([A-Za-z0-9_-]*)?", "What are the record labels of ([A-Za-z0-9_-]*)?", "What are the record labels of the ([A-Za-z0-9_-]*)?", "What is the record label of ([A-Za-z0-9_-]*)?", "What is the record label of the ([A-Za-z0-9_-]*)?", "What was the record label of ([A-Za-z0-9_-]*)?", "What was the record label of the ([A-Za-z0-9_-]*)?", "What were the record labels of ([A-Za-z0-9_-]*)?", "What were the record labels of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the record labels of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the record labels of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the record label of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the record label of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the record label of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the record label of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the record labels of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the record labels of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/RecordLabel> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "383",
    "lexicalEntryUri" : "http://localhost:8080#recordlabel_of_318",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Genre" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the record label of ([A-Za-z0-9_-]*)?", "the record labels of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/RecordLabel> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "384",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of_358",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) Fmayor.", "Give me all Fmayor of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) Fmayor.", "Give me the ([A-Za-z0-9_-]*) nickname.", "List all Fmayor of ([A-Za-z0-9_-]*).", "List all the Fmayor of ([A-Za-z0-9_-]*).", "show me all Fmayor of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the Fmayor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's nickname?", "What ([A-Za-z0-9_-]*) is the nickname of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the nickname of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's nickname?", "What ([A-Za-z0-9_-]*) was the nickname of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the nickname of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the Fmayor of the ([A-Za-z0-9_-]*)?", "What are the Fmayor of ([A-Za-z0-9_-]*)?", "What are the Fmayor of the ([A-Za-z0-9_-]*)?", "What is the nickname of ([A-Za-z0-9_-]*)?", "What is the nickname of the ([A-Za-z0-9_-]*)?", "What was the nickname of ([A-Za-z0-9_-]*)?", "What was the nickname of the ([A-Za-z0-9_-]*)?", "What were the Fmayor of ([A-Za-z0-9_-]*)?", "What were the Fmayor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the Fmayor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the Fmayor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the nickname of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the nickname of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the nickname of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the nickname of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the Fmayor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the Fmayor of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "388",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of_358",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the Fmayor of ([A-Za-z0-9_-]*)?", "the nickname of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "389",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) autobiography.", "List all the authors with autobiography of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's autobiography?", "What ([A-Za-z0-9_-]*) is the autobiography of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the autobiography of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's autobiography?", "What ([A-Za-z0-9_-]*) was the autobiography of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the autobiography of the ([A-Za-z0-9_-]*)?", "What is the autobiography of ([A-Za-z0-9_-]*)?", "What is the autobiography of the ([A-Za-z0-9_-]*)?", "What was the autobiography of ([A-Za-z0-9_-]*)?", "What was the autobiography of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the autobiography of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the autobiography of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the autobiography of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the autobiography of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "392",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "393",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) autobiography.", "List all the authors with autobiography of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's autobiography?", "What ([A-Za-z0-9_-]*) is the autobiography of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the autobiography of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's autobiography?", "What ([A-Za-z0-9_-]*) was the autobiography of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the autobiography of the ([A-Za-z0-9_-]*)?", "What is the autobiography of ([A-Za-z0-9_-]*)?", "What is the autobiography of the ([A-Za-z0-9_-]*)?", "What was the autobiography of ([A-Za-z0-9_-]*)?", "What was the autobiography of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the autobiography of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the autobiography of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the autobiography of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the autobiography of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "396",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "397",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) autobiography.", "List all the authors with autobiography of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's autobiography?", "What ([A-Za-z0-9_-]*) is the autobiography of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the autobiography of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's autobiography?", "What ([A-Za-z0-9_-]*) was the autobiography of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the autobiography of the ([A-Za-z0-9_-]*)?", "What is the autobiography of ([A-Za-z0-9_-]*)?", "What is the autobiography of the ([A-Za-z0-9_-]*)?", "What was the autobiography of ([A-Za-z0-9_-]*)?", "What was the autobiography of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the autobiography of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the autobiography of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the autobiography of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the autobiography of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "400",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of_333",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "401",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) specialities.", "Give me all specialities of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) specialities.", "Give me the ([A-Za-z0-9_-]*) speciality.", "List all specialities of ([A-Za-z0-9_-]*).", "List all the specialities of ([A-Za-z0-9_-]*).", "show me all specialities of ([A-Za-z0-9_-]*).", "What are the specialities of ([A-Za-z0-9_-]*)?", "What are the specialities of the ([A-Za-z0-9_-]*)?", "What is the speciality of ([A-Za-z0-9_-]*)?", "What is the speciality of the ([A-Za-z0-9_-]*)?", "What was the speciality of ([A-Za-z0-9_-]*)?", "What was the speciality of the ([A-Za-z0-9_-]*)?", "What were the specialities of ([A-Za-z0-9_-]*)?", "What were the specialities of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the specialities of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the specialities of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the speciality of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the speciality of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the speciality of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the speciality of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the specialities of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the specialities of the ([A-Za-z0-9_-]*)?", "Who are the specialities of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's speciality?", "Who is the speciality of ([A-Za-z0-9_-]*)?", "Who is the speciality of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's speciality?", "Who was the speciality of ([A-Za-z0-9_-]*)?", "Who was the speciality of the ([A-Za-z0-9_-]*)?", "Who were the specialities of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "405",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the specialities of ([A-Za-z0-9_-]*)?", "the speciality of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "406",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) specialities.", "Give me all specialities of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) specialities.", "Give me the ([A-Za-z0-9_-]*) speciality.", "List all specialities of ([A-Za-z0-9_-]*).", "List all the specialities of ([A-Za-z0-9_-]*).", "show me all specialities of ([A-Za-z0-9_-]*).", "What are the specialities of ([A-Za-z0-9_-]*)?", "What are the specialities of the ([A-Za-z0-9_-]*)?", "What is the speciality of ([A-Za-z0-9_-]*)?", "What is the speciality of the ([A-Za-z0-9_-]*)?", "What was the speciality of ([A-Za-z0-9_-]*)?", "What was the speciality of the ([A-Za-z0-9_-]*)?", "What were the specialities of ([A-Za-z0-9_-]*)?", "What were the specialities of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the specialities of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the specialities of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the speciality of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the speciality of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the speciality of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the speciality of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the specialities of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the specialities of the ([A-Za-z0-9_-]*)?", "Who are the specialities of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's speciality?", "Who is the speciality of ([A-Za-z0-9_-]*)?", "Who is the speciality of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's speciality?", "Who was the speciality of ([A-Za-z0-9_-]*)?", "Who was the speciality of the ([A-Za-z0-9_-]*)?", "Who were the specialities of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "410",
    "lexicalEntryUri" : "http://localhost:8080#speciality-of_351",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the specialities of ([A-Za-z0-9_-]*)?", "the speciality of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "411",
    "lexicalEntryUri" : "http://localhost:8080#leader-of-1_234",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) leaders.", "Give me all leaders of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) leader.", "Give me the ([A-Za-z0-9_-]*) leaders.", "List all leaders of ([A-Za-z0-9_-]*).", "List all the leaders of ([A-Za-z0-9_-]*).", "List all the organizations with leader of ([A-Za-z0-9_-]*).", "show me all leaders of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the leaders of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's leader?", "What ([A-Za-z0-9_-]*) is the leader of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the leader of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's leader?", "What ([A-Za-z0-9_-]*) was the leader of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the leader of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the leaders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the leaders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the leaders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the leader of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the leader of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the leader of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the leader of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the leaders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the leaders of the ([A-Za-z0-9_-]*)?", "Who are the leaders of ([A-Za-z0-9_-]*)?", "Who are the leaders of the ([A-Za-z0-9_-]*)?", "Who is the leader of ([A-Za-z0-9_-]*)?", "Who is the leader of the ([A-Za-z0-9_-]*)?", "Who was the leader of ([A-Za-z0-9_-]*)?", "Who was the leader of the ([A-Za-z0-9_-]*)?", "Who were the leaders of ([A-Za-z0-9_-]*)?", "Who were the leaders of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "415",
    "lexicalEntryUri" : "http://localhost:8080#leader-of-1_234",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the leader of ([A-Za-z0-9_-]*)?", "the leaders of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "416",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of_268",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) isbns.", "Give me all isbns of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) isbn.", "Give me the ([A-Za-z0-9_-]*) isbns.", "List all isbns of ([A-Za-z0-9_-]*).", "List all the isbns of ([A-Za-z0-9_-]*).", "show me all isbns of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the isbns of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's isbn?", "What ([A-Za-z0-9_-]*) is the isbn of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the isbn of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's isbn?", "What ([A-Za-z0-9_-]*) was the isbn of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the isbn of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the isbns of the ([A-Za-z0-9_-]*)?", "What are the isbns of ([A-Za-z0-9_-]*)?", "What are the isbns of the ([A-Za-z0-9_-]*)?", "What is the isbn of ([A-Za-z0-9_-]*)?", "What is the isbn of the ([A-Za-z0-9_-]*)?", "What was the isbn of ([A-Za-z0-9_-]*)?", "What was the isbn of the ([A-Za-z0-9_-]*)?", "What were the isbns of ([A-Za-z0-9_-]*)?", "What were the isbns of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the isbns of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the isbns of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the isbn of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the isbn of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the isbn of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the isbn of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the isbns of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the isbns of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isbn> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "420",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of_268",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the isbn of ([A-Za-z0-9_-]*)?", "the isbns of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/isbn> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "421",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) governors.", "Give me all governors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) governor.", "Give me the ([A-Za-z0-9_-]*) governors.", "List all governors of ([A-Za-z0-9_-]*).", "List all the governors of ([A-Za-z0-9_-]*).", "List all the persons with governor of ([A-Za-z0-9_-]*).", "show me all governors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the governors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's governor?", "What ([A-Za-z0-9_-]*) is the governor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the governor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's governor?", "What ([A-Za-z0-9_-]*) was the governor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the governor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the governors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the governors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the governors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the governor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the governor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the governor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the governor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the governors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the governors of the ([A-Za-z0-9_-]*)?", "Who are the governors of ([A-Za-z0-9_-]*)?", "Who are the governors of the ([A-Za-z0-9_-]*)?", "Who is the governor of ([A-Za-z0-9_-]*)?", "Who is the governor of the ([A-Za-z0-9_-]*)?", "Who was the governor of ([A-Za-z0-9_-]*)?", "Who was the governor of the ([A-Za-z0-9_-]*)?", "Who were the governors of ([A-Za-z0-9_-]*)?", "Who were the governors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "425",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of ([A-Za-z0-9_-]*)?", "the governors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "426",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) governors.", "Give me all governors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) governor.", "Give me the ([A-Za-z0-9_-]*) governors.", "List all governors of ([A-Za-z0-9_-]*).", "List all the governors of ([A-Za-z0-9_-]*).", "List all the persons with governor of ([A-Za-z0-9_-]*).", "show me all governors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the governors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's governor?", "What ([A-Za-z0-9_-]*) is the governor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the governor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's governor?", "What ([A-Za-z0-9_-]*) was the governor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the governor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the governors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the governors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the governors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the governor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the governor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the governor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the governor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the governors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the governors of the ([A-Za-z0-9_-]*)?", "Who are the governors of ([A-Za-z0-9_-]*)?", "Who are the governors of the ([A-Za-z0-9_-]*)?", "Who is the governor of ([A-Za-z0-9_-]*)?", "Who is the governor of the ([A-Za-z0-9_-]*)?", "Who was the governor of ([A-Za-z0-9_-]*)?", "Who was the governor of the ([A-Za-z0-9_-]*)?", "Who were the governors of ([A-Za-z0-9_-]*)?", "Who were the governors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "430",
    "lexicalEntryUri" : "http://localhost:8080#governor_of_266",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of ([A-Za-z0-9_-]*)?", "the governors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/governor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "431",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) official languages.", "Give me all official languages of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) official language.", "Give me the ([A-Za-z0-9_-]*) official languages.", "List all official languages of ([A-Za-z0-9_-]*).", "List all the languages with official language of ([A-Za-z0-9_-]*).", "List all the official languages of ([A-Za-z0-9_-]*).", "show me all official languages of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?", "What are the official languages of ([A-Za-z0-9_-]*)?", "What are the official languages of the ([A-Za-z0-9_-]*)?", "What is the official language of ([A-Za-z0-9_-]*)?", "What is the official language of the ([A-Za-z0-9_-]*)?", "What was the official language of ([A-Za-z0-9_-]*)?", "What was the official language of the ([A-Za-z0-9_-]*)?", "What were the official languages of ([A-Za-z0-9_-]*)?", "What were the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "435",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ([A-Za-z0-9_-]*)?", "the official languages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "436",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) official languages.", "Give me all official languages of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) official language.", "Give me the ([A-Za-z0-9_-]*) official languages.", "List all official languages of ([A-Za-z0-9_-]*).", "List all the languages with official language of ([A-Za-z0-9_-]*).", "List all the official languages of ([A-Za-z0-9_-]*).", "show me all official languages of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?", "What are the official languages of ([A-Za-z0-9_-]*)?", "What are the official languages of the ([A-Za-z0-9_-]*)?", "What is the official language of ([A-Za-z0-9_-]*)?", "What is the official language of the ([A-Za-z0-9_-]*)?", "What was the official language of ([A-Za-z0-9_-]*)?", "What was the official language of the ([A-Za-z0-9_-]*)?", "What were the official languages of ([A-Za-z0-9_-]*)?", "What were the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "440",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_1_383",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ([A-Za-z0-9_-]*)?", "the official languages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "441",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) astronauts.", "Give me all astronauts of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) astronaut.", "Give me the ([A-Za-z0-9_-]*) astronauts.", "List all astronauts of ([A-Za-z0-9_-]*).", "List all the astronauts of ([A-Za-z0-9_-]*).", "List all the Space missions with astronaut of ([A-Za-z0-9_-]*).", "show me all astronauts of ([A-Za-z0-9_-]*).", "What are the astronauts of ([A-Za-z0-9_-]*)?", "What are the astronauts of the ([A-Za-z0-9_-]*)?", "What is the astronaut of ([A-Za-z0-9_-]*)?", "What is the astronaut of the ([A-Za-z0-9_-]*)?", "What was the astronaut of ([A-Za-z0-9_-]*)?", "What was the astronaut of the ([A-Za-z0-9_-]*)?", "What were the astronauts of ([A-Za-z0-9_-]*)?", "What were the astronauts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the astronauts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the astronauts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the astronaut of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the astronaut of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the astronaut of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the astronaut of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the astronauts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the astronauts of the ([A-Za-z0-9_-]*)?", "Who are the astronauts of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's astronaut?", "Who is the astronaut of ([A-Za-z0-9_-]*)?", "Who is the astronaut of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's astronaut?", "Who was the astronaut of ([A-Za-z0-9_-]*)?", "Who was the astronaut of the ([A-Za-z0-9_-]*)?", "Who were the astronauts of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "445",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the astronaut of ([A-Za-z0-9_-]*)?", "the astronauts of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "446",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) astronauts.", "Give me all astronauts of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) astronaut.", "Give me the ([A-Za-z0-9_-]*) astronauts.", "List all astronauts of ([A-Za-z0-9_-]*).", "List all the astronauts of ([A-Za-z0-9_-]*).", "List all the Space missions with astronaut of ([A-Za-z0-9_-]*).", "show me all astronauts of ([A-Za-z0-9_-]*).", "What are the astronauts of ([A-Za-z0-9_-]*)?", "What are the astronauts of the ([A-Za-z0-9_-]*)?", "What is the astronaut of ([A-Za-z0-9_-]*)?", "What is the astronaut of the ([A-Za-z0-9_-]*)?", "What was the astronaut of ([A-Za-z0-9_-]*)?", "What was the astronaut of the ([A-Za-z0-9_-]*)?", "What were the astronauts of ([A-Za-z0-9_-]*)?", "What were the astronauts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the astronauts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the astronauts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the astronaut of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the astronaut of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the astronaut of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the astronaut of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the astronauts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the astronauts of the ([A-Za-z0-9_-]*)?", "Who are the astronauts of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's astronaut?", "Who is the astronaut of ([A-Za-z0-9_-]*)?", "Who is the astronaut of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's astronaut?", "Who was the astronaut of ([A-Za-z0-9_-]*)?", "Who was the astronaut of the ([A-Za-z0-9_-]*)?", "Who were the astronauts of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "450",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of_233",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the astronaut of ([A-Za-z0-9_-]*)?", "the astronauts of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "451",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) currencies.", "Give me all currencies of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) currencies.", "Give me the ([A-Za-z0-9_-]*) currency.", "List all currencies of ([A-Za-z0-9_-]*).", "List all the currencies of ([A-Za-z0-9_-]*).", "List all the currencies with currency of ([A-Za-z0-9_-]*).", "show me all currencies of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the currencies of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's currency?", "What ([A-Za-z0-9_-]*) is the currency of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the currency of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's currency?", "What ([A-Za-z0-9_-]*) was the currency of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the currency of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the currencies of the ([A-Za-z0-9_-]*)?", "What are the currencies of ([A-Za-z0-9_-]*)?", "What are the currencies of the ([A-Za-z0-9_-]*)?", "What is the currency of ([A-Za-z0-9_-]*)?", "What is the currency of the ([A-Za-z0-9_-]*)?", "What was the currency of ([A-Za-z0-9_-]*)?", "What was the currency of the ([A-Za-z0-9_-]*)?", "What were the currencies of ([A-Za-z0-9_-]*)?", "What were the currencies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the currencies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the currencies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the currency of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the currency of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the currency of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the currency of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the currencies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the currencies of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "455",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ([A-Za-z0-9_-]*)?", "the currency of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "456",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) currencies.", "Give me all currencies of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) currencies.", "Give me the ([A-Za-z0-9_-]*) currency.", "List all currencies of ([A-Za-z0-9_-]*).", "List all the currencies of ([A-Za-z0-9_-]*).", "List all the currencies with currency of ([A-Za-z0-9_-]*).", "show me all currencies of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the currencies of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's currency?", "What ([A-Za-z0-9_-]*) is the currency of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the currency of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's currency?", "What ([A-Za-z0-9_-]*) was the currency of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the currency of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the currencies of the ([A-Za-z0-9_-]*)?", "What are the currencies of ([A-Za-z0-9_-]*)?", "What are the currencies of the ([A-Za-z0-9_-]*)?", "What is the currency of ([A-Za-z0-9_-]*)?", "What is the currency of the ([A-Za-z0-9_-]*)?", "What was the currency of ([A-Za-z0-9_-]*)?", "What was the currency of the ([A-Za-z0-9_-]*)?", "What were the currencies of ([A-Za-z0-9_-]*)?", "What were the currencies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the currencies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the currencies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the currency of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the currency of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the currency of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the currency of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the currencies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the currencies of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "460",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ([A-Za-z0-9_-]*)?", "the currency of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "461",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) currencies.", "Give me all currencies of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) currencies.", "Give me the ([A-Za-z0-9_-]*) currency.", "List all currencies of ([A-Za-z0-9_-]*).", "List all the currencies of ([A-Za-z0-9_-]*).", "List all the currencies with currency of ([A-Za-z0-9_-]*).", "show me all currencies of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the currencies of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's currency?", "What ([A-Za-z0-9_-]*) is the currency of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the currency of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's currency?", "What ([A-Za-z0-9_-]*) was the currency of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the currency of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the currencies of the ([A-Za-z0-9_-]*)?", "What are the currencies of ([A-Za-z0-9_-]*)?", "What are the currencies of the ([A-Za-z0-9_-]*)?", "What is the currency of ([A-Za-z0-9_-]*)?", "What is the currency of the ([A-Za-z0-9_-]*)?", "What was the currency of ([A-Za-z0-9_-]*)?", "What was the currency of the ([A-Za-z0-9_-]*)?", "What were the currencies of ([A-Za-z0-9_-]*)?", "What were the currencies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the currencies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the currencies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the currency of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the currency of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the currency of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the currency of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the currencies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the currencies of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "465",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ([A-Za-z0-9_-]*)?", "the currency of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "466",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) currencies.", "Give me all currencies of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) currencies.", "Give me the ([A-Za-z0-9_-]*) currency.", "List all currencies of ([A-Za-z0-9_-]*).", "List all the currencies of ([A-Za-z0-9_-]*).", "List all the currencies with currency of ([A-Za-z0-9_-]*).", "show me all currencies of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the currencies of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's currency?", "What ([A-Za-z0-9_-]*) is the currency of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the currency of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's currency?", "What ([A-Za-z0-9_-]*) was the currency of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the currency of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the currencies of the ([A-Za-z0-9_-]*)?", "What are the currencies of ([A-Za-z0-9_-]*)?", "What are the currencies of the ([A-Za-z0-9_-]*)?", "What is the currency of ([A-Za-z0-9_-]*)?", "What is the currency of the ([A-Za-z0-9_-]*)?", "What was the currency of ([A-Za-z0-9_-]*)?", "What was the currency of the ([A-Za-z0-9_-]*)?", "What were the currencies of ([A-Za-z0-9_-]*)?", "What were the currencies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the currencies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the currencies of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the currency of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the currency of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the currency of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the currency of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the currencies of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the currencies of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "470",
    "lexicalEntryUri" : "http://localhost:8080#currency_of_258",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ([A-Za-z0-9_-]*)?", "the currency of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "471",
    "lexicalEntryUri" : "http://localhost:8080#height_of_252",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Model" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) height.", "What is the height of ([A-Za-z0-9_-]*)?", "What is the height of the ([A-Za-z0-9_-]*)?", "What was the height of ([A-Za-z0-9_-]*)?", "What was the height of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the height of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the height of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the height of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the height of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's height?", "Who is the height of ([A-Za-z0-9_-]*)?", "Who is the height of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's height?", "Who was the height of ([A-Za-z0-9_-]*)?", "Who was the height of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "474",
    "lexicalEntryUri" : "http://localhost:8080#height_of_252",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Model" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the height of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "475",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1_347",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founders.", "Give me all founders of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founder.", "Give me the ([A-Za-z0-9_-]*) founders.", "List all founders of ([A-Za-z0-9_-]*).", "List all the agents with founder of ([A-Za-z0-9_-]*).", "List all the founders of ([A-Za-z0-9_-]*).", "show me all founders of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's founder?", "What ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "Who are the founders of ([A-Za-z0-9_-]*)?", "Who are the founders of the ([A-Za-z0-9_-]*)?", "Who is the founder of ([A-Za-z0-9_-]*)?", "Who is the founder of the ([A-Za-z0-9_-]*)?", "Who was the founder of ([A-Za-z0-9_-]*)?", "Who was the founder of the ([A-Za-z0-9_-]*)?", "Who were the founders of ([A-Za-z0-9_-]*)?", "Who were the founders of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "479",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1_347",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ([A-Za-z0-9_-]*)?", "the founders of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "480",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of_355",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) nationality.", "List all the countries with nationality of ([A-Za-z0-9_-]*).", "What is the nationality of ([A-Za-z0-9_-]*)?", "What is the nationality of the ([A-Za-z0-9_-]*)?", "What was the nationality of ([A-Za-z0-9_-]*)?", "What was the nationality of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the nationality of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the nationality of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the nationality of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the nationality of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's nationality?", "Who is the nationality of ([A-Za-z0-9_-]*)?", "Who is the nationality of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's nationality?", "Who was the nationality of ([A-Za-z0-9_-]*)?", "Who was the nationality of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/citizenship> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "483",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of_355",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/citizenship> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "484",
    "lexicalEntryUri" : "http://localhost:8080#producer-of_315",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) producers.", "Give me all producers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) producer.", "Give me the ([A-Za-z0-9_-]*) producers.", "List all producers of ([A-Za-z0-9_-]*).", "List all the company with producer of ([A-Za-z0-9_-]*).", "List all the producers of ([A-Za-z0-9_-]*).", "show me all producers of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the producers of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's producer?", "What ([A-Za-z0-9_-]*) is the producer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the producer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's producer?", "What ([A-Za-z0-9_-]*) was the producer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the producer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the producers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the producers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the producers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the producer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the producer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the producer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the producer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the producers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the producers of the ([A-Za-z0-9_-]*)?", "Who are the producers of ([A-Za-z0-9_-]*)?", "Who are the producers of the ([A-Za-z0-9_-]*)?", "Who is the producer of ([A-Za-z0-9_-]*)?", "Who is the producer of the ([A-Za-z0-9_-]*)?", "Who was the producer of ([A-Za-z0-9_-]*)?", "Who was the producer of the ([A-Za-z0-9_-]*)?", "Who were the producers of ([A-Za-z0-9_-]*)?", "Who were the producers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "488",
    "lexicalEntryUri" : "http://localhost:8080#producer-of_315",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the producer of ([A-Za-z0-9_-]*)?", "the producers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "489",
    "lexicalEntryUri" : "http://localhost:8080#firstascentperson-of_282",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) first Ascent Persons.", "Give me all first Ascent Persons of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) first Ascent Person.", "Give me the ([A-Za-z0-9_-]*) first Ascent Persons.", "List all first Ascent Persons of ([A-Za-z0-9_-]*).", "List all the first Ascent Persons of ([A-Za-z0-9_-]*).", "List all the places with first Ascent Person of ([A-Za-z0-9_-]*).", "show me all first Ascent Persons of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the first Ascent Persons of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's first Ascent Person?", "What ([A-Za-z0-9_-]*) is the first Ascent Person of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the first Ascent Person of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's first Ascent Person?", "What ([A-Za-z0-9_-]*) was the first Ascent Person of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the first Ascent Person of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the first Ascent Persons of the ([A-Za-z0-9_-]*)?", "What are the first Ascent Persons of ([A-Za-z0-9_-]*)?", "What are the first Ascent Persons of the ([A-Za-z0-9_-]*)?", "What is the first Ascent Person of ([A-Za-z0-9_-]*)?", "What is the first Ascent Person of the ([A-Za-z0-9_-]*)?", "What was the first Ascent Person of ([A-Za-z0-9_-]*)?", "What was the first Ascent Person of the ([A-Za-z0-9_-]*)?", "What were the first Ascent Persons of ([A-Za-z0-9_-]*)?", "What were the first Ascent Persons of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the first Ascent Persons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the first Ascent Persons of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first Ascent Person of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first Ascent Person of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first Ascent Person of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first Ascent Person of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the first Ascent Persons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the first Ascent Persons of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "493",
    "lexicalEntryUri" : "http://localhost:8080#firstascentperson-of_282",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Ascent Person of ([A-Za-z0-9_-]*)?", "the first Ascent Persons of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "494",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) inhabitants.", "Give me all inhabitants of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) inhabitant.", "Give me the ([A-Za-z0-9_-]*) inhabitants.", "List all inhabitants of ([A-Za-z0-9_-]*).", "List all the inhabitants of ([A-Za-z0-9_-]*).", "show me all inhabitants of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the inhabitants of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's inhabitant?", "What ([A-Za-z0-9_-]*) is the inhabitant of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the inhabitant of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's inhabitant?", "What ([A-Za-z0-9_-]*) was the inhabitant of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the inhabitant of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the inhabitants of the ([A-Za-z0-9_-]*)?", "What are the inhabitants of ([A-Za-z0-9_-]*)?", "What are the inhabitants of the ([A-Za-z0-9_-]*)?", "What is the inhabitant of ([A-Za-z0-9_-]*)?", "What is the inhabitant of the ([A-Za-z0-9_-]*)?", "What was the inhabitant of ([A-Za-z0-9_-]*)?", "What was the inhabitant of the ([A-Za-z0-9_-]*)?", "What were the inhabitants of ([A-Za-z0-9_-]*)?", "What were the inhabitants of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the inhabitants of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the inhabitants of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the inhabitant of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the inhabitant of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the inhabitant of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the inhabitant of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the inhabitants of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the inhabitants of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "498",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the inhabitant of ([A-Za-z0-9_-]*)?", "the inhabitants of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "499",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) inhabitants.", "Give me all inhabitants of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) inhabitant.", "Give me the ([A-Za-z0-9_-]*) inhabitants.", "List all inhabitants of ([A-Za-z0-9_-]*).", "List all the inhabitants of ([A-Za-z0-9_-]*).", "show me all inhabitants of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the inhabitants of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's inhabitant?", "What ([A-Za-z0-9_-]*) is the inhabitant of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the inhabitant of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's inhabitant?", "What ([A-Za-z0-9_-]*) was the inhabitant of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the inhabitant of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the inhabitants of the ([A-Za-z0-9_-]*)?", "What are the inhabitants of ([A-Za-z0-9_-]*)?", "What are the inhabitants of the ([A-Za-z0-9_-]*)?", "What is the inhabitant of ([A-Za-z0-9_-]*)?", "What is the inhabitant of the ([A-Za-z0-9_-]*)?", "What was the inhabitant of ([A-Za-z0-9_-]*)?", "What was the inhabitant of the ([A-Za-z0-9_-]*)?", "What were the inhabitants of ([A-Za-z0-9_-]*)?", "What were the inhabitants of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the inhabitants of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the inhabitants of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the inhabitant of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the inhabitant of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the inhabitant of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the inhabitant of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the inhabitants of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the inhabitants of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "503",
    "lexicalEntryUri" : "http://localhost:8080#inhabitant_of_243",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the inhabitant of ([A-Za-z0-9_-]*)?", "the inhabitants of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "504",
    "lexicalEntryUri" : "http://localhost:8080#employer-of_319",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) employers.", "Give me all employers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) employer.", "Give me the ([A-Za-z0-9_-]*) employers.", "List all employers of ([A-Za-z0-9_-]*).", "List all the employers of ([A-Za-z0-9_-]*).", "List all the places with employer of ([A-Za-z0-9_-]*).", "show me all employers of ([A-Za-z0-9_-]*).", "What are the employers of ([A-Za-z0-9_-]*)?", "What are the employers of the ([A-Za-z0-9_-]*)?", "What is the employer of ([A-Za-z0-9_-]*)?", "What is the employer of the ([A-Za-z0-9_-]*)?", "What was the employer of ([A-Za-z0-9_-]*)?", "What was the employer of the ([A-Za-z0-9_-]*)?", "What were the employers of ([A-Za-z0-9_-]*)?", "What were the employers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employers of the ([A-Za-z0-9_-]*)?", "Who are the employers of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's employer?", "Who is the employer of ([A-Za-z0-9_-]*)?", "Who is the employer of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's employer?", "Who was the employer of ([A-Za-z0-9_-]*)?", "Who was the employer of the ([A-Za-z0-9_-]*)?", "Who were the employers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "508",
    "lexicalEntryUri" : "http://localhost:8080#employer-of_319",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employer of ([A-Za-z0-9_-]*)?", "the employers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/employer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "509",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) members.", "Give me all members of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) member.", "Give me the ([A-Za-z0-9_-]*) members.", "List all members of ([A-Za-z0-9_-]*).", "List all the company with member of ([A-Za-z0-9_-]*).", "List all the members of ([A-Za-z0-9_-]*).", "show me all members of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the members of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of the ([A-Za-z0-9_-]*)?", "Who are the members of ([A-Za-z0-9_-]*)?", "Who are the members of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's member?", "Who is the member of ([A-Za-z0-9_-]*)?", "Who is the member of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's member?", "Who was the member of ([A-Za-z0-9_-]*)?", "Who was the member of the ([A-Za-z0-9_-]*)?", "Who were the members of ([A-Za-z0-9_-]*)?", "Who were the members of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "513",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ([A-Za-z0-9_-]*)?", "the members of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "514",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) members.", "Give me all members of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) member.", "Give me the ([A-Za-z0-9_-]*) members.", "List all members of ([A-Za-z0-9_-]*).", "List all the company with member of ([A-Za-z0-9_-]*).", "List all the members of ([A-Za-z0-9_-]*).", "show me all members of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the members of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the member of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the members of the ([A-Za-z0-9_-]*)?", "Who are the members of ([A-Za-z0-9_-]*)?", "Who are the members of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's member?", "Who is the member of ([A-Za-z0-9_-]*)?", "Who is the member of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's member?", "Who was the member of ([A-Za-z0-9_-]*)?", "Who was the member of the ([A-Za-z0-9_-]*)?", "Who were the members of ([A-Za-z0-9_-]*)?", "Who were the members of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "518",
    "lexicalEntryUri" : "http://localhost:8080#member-of_236",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ([A-Za-z0-9_-]*)?", "the members of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "519",
    "lexicalEntryUri" : "http://localhost:8080#restingplace-of_237",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) resting place.", "What is the resting place of ([A-Za-z0-9_-]*)?", "What is the resting place of the ([A-Za-z0-9_-]*)?", "What was the resting place of ([A-Za-z0-9_-]*)?", "What was the resting place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the resting place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the resting place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the resting place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the resting place of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's resting place?", "Who is the resting place of ([A-Za-z0-9_-]*)?", "Who is the resting place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's resting place?", "Who was the resting place of ([A-Za-z0-9_-]*)?", "Who was the resting place of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "522",
    "lexicalEntryUri" : "http://localhost:8080#restingplace-of_237",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "523",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) official languages.", "Give me all official languages of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) official language.", "Give me the ([A-Za-z0-9_-]*) official languages.", "List all official languages of ([A-Za-z0-9_-]*).", "List all the languages with official language of ([A-Za-z0-9_-]*).", "List all the official languages of ([A-Za-z0-9_-]*).", "show me all official languages of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?", "What are the official languages of ([A-Za-z0-9_-]*)?", "What are the official languages of the ([A-Za-z0-9_-]*)?", "What is the official language of ([A-Za-z0-9_-]*)?", "What is the official language of the ([A-Za-z0-9_-]*)?", "What was the official language of ([A-Za-z0-9_-]*)?", "What was the official language of the ([A-Za-z0-9_-]*)?", "What were the official languages of ([A-Za-z0-9_-]*)?", "What were the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "527",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ([A-Za-z0-9_-]*)?", "the official languages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "528",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) official languages.", "Give me all official languages of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) official language.", "Give me the ([A-Za-z0-9_-]*) official languages.", "List all official languages of ([A-Za-z0-9_-]*).", "List all the languages with official language of ([A-Za-z0-9_-]*).", "List all the official languages of ([A-Za-z0-9_-]*).", "show me all official languages of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?", "What are the official languages of ([A-Za-z0-9_-]*)?", "What are the official languages of the ([A-Za-z0-9_-]*)?", "What is the official language of ([A-Za-z0-9_-]*)?", "What is the official language of the ([A-Za-z0-9_-]*)?", "What was the official language of ([A-Za-z0-9_-]*)?", "What was the official language of the ([A-Za-z0-9_-]*)?", "What were the official languages of ([A-Za-z0-9_-]*)?", "What were the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "532",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ([A-Za-z0-9_-]*)?", "the official languages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "533",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) official languages.", "Give me all official languages of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) official language.", "Give me the ([A-Za-z0-9_-]*) official languages.", "List all official languages of ([A-Za-z0-9_-]*).", "List all the languages with official language of ([A-Za-z0-9_-]*).", "List all the official languages of ([A-Za-z0-9_-]*).", "show me all official languages of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's official language?", "What ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?", "What are the official languages of ([A-Za-z0-9_-]*)?", "What are the official languages of the ([A-Za-z0-9_-]*)?", "What is the official language of ([A-Za-z0-9_-]*)?", "What is the official language of the ([A-Za-z0-9_-]*)?", "What was the official language of ([A-Za-z0-9_-]*)?", "What was the official language of the ([A-Za-z0-9_-]*)?", "What were the official languages of ([A-Za-z0-9_-]*)?", "What were the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official languages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official language of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official languages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "537",
    "lexicalEntryUri" : "http://localhost:8080#officiallanguage-of_336",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ([A-Za-z0-9_-]*)?", "the official languages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "538",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) names.", "Give me all names of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) name.", "Give me the ([A-Za-z0-9_-]*) names.", "List all names of ([A-Za-z0-9_-]*).", "List all the names of ([A-Za-z0-9_-]*).", "show me all names of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the names of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's name?", "What ([A-Za-z0-9_-]*) is the name of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the name of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's name?", "What ([A-Za-z0-9_-]*) was the name of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the name of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the names of the ([A-Za-z0-9_-]*)?", "What are the names of ([A-Za-z0-9_-]*)?", "What are the names of the ([A-Za-z0-9_-]*)?", "What is the name of ([A-Za-z0-9_-]*)?", "What is the name of the ([A-Za-z0-9_-]*)?", "What was the name of ([A-Za-z0-9_-]*)?", "What was the name of the ([A-Za-z0-9_-]*)?", "What were the names of ([A-Za-z0-9_-]*)?", "What were the names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the names of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "542",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the name of ([A-Za-z0-9_-]*)?", "the names of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "543",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) names.", "Give me all names of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) name.", "Give me the ([A-Za-z0-9_-]*) names.", "List all names of ([A-Za-z0-9_-]*).", "List all the names of ([A-Za-z0-9_-]*).", "show me all names of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the names of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's name?", "What ([A-Za-z0-9_-]*) is the name of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the name of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's name?", "What ([A-Za-z0-9_-]*) was the name of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the name of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the names of the ([A-Za-z0-9_-]*)?", "What are the names of ([A-Za-z0-9_-]*)?", "What are the names of the ([A-Za-z0-9_-]*)?", "What is the name of ([A-Za-z0-9_-]*)?", "What is the name of the ([A-Za-z0-9_-]*)?", "What was the name of ([A-Za-z0-9_-]*)?", "What was the name of the ([A-Za-z0-9_-]*)?", "What were the names of ([A-Za-z0-9_-]*)?", "What were the names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the names of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "547",
    "lexicalEntryUri" : "http://localhost:8080#total-population-of_329",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the name of ([A-Za-z0-9_-]*)?", "the names of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "548",
    "lexicalEntryUri" : "http://localhost:8080#music_by_388",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) musics.", "Give me all musics by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) music.", "Give me the ([A-Za-z0-9_-]*) musics.", "List all musics by ([A-Za-z0-9_-]*).", "List all the musicals with music by ([A-Za-z0-9_-]*).", "List all the musics by ([A-Za-z0-9_-]*).", "show me all musics by ([A-Za-z0-9_-]*).", "What are the musics by ([A-Za-z0-9_-]*)?", "What are the musics by the ([A-Za-z0-9_-]*)?", "What is the music by ([A-Za-z0-9_-]*)?", "What is the music by the ([A-Za-z0-9_-]*)?", "What was the music by ([A-Za-z0-9_-]*)?", "What was the music by the ([A-Za-z0-9_-]*)?", "What were the musics by ([A-Za-z0-9_-]*)?", "What were the musics by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the musics by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the musics by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the musics by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the musics by the ([A-Za-z0-9_-]*)?", "Who are the musics by the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's music?", "Who is the music by ([A-Za-z0-9_-]*)?", "Who is the music by the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's music?", "Who was the music by ([A-Za-z0-9_-]*)?", "Who was the music by the ([A-Za-z0-9_-]*)?", "Who were the musics by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "552",
    "lexicalEntryUri" : "http://localhost:8080#music_by_388",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by ([A-Za-z0-9_-]*)?", "the musics by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "553",
    "lexicalEntryUri" : "http://localhost:8080#lastelectiondate-of_304",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) last Election Dates.", "Give me all last Election Dates of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) last Election Date.", "Give me the ([A-Za-z0-9_-]*) last Election Dates.", "List all last Election Dates of ([A-Za-z0-9_-]*).", "List all the last Election Dates of ([A-Za-z0-9_-]*).", "show me all last Election Dates of ([A-Za-z0-9_-]*).", "What are the last Election Dates of ([A-Za-z0-9_-]*)?", "What are the last Election Dates of the ([A-Za-z0-9_-]*)?", "What is the last Election Date of ([A-Za-z0-9_-]*)?", "What is the last Election Date of the ([A-Za-z0-9_-]*)?", "What was the last Election Date of ([A-Za-z0-9_-]*)?", "What was the last Election Date of the ([A-Za-z0-9_-]*)?", "What were the last Election Dates of ([A-Za-z0-9_-]*)?", "What were the last Election Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the last Election Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the last Election Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the last Election Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the last Election Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the last Election Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the last Election Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the last Election Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the last Election Dates of the ([A-Za-z0-9_-]*)?", "Who are the last Election Dates of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's last Election Date?", "Who is the last Election Date of ([A-Za-z0-9_-]*)?", "Who is the last Election Date of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's last Election Date?", "Who was the last Election Date of ([A-Za-z0-9_-]*)?", "Who was the last Election Date of the ([A-Za-z0-9_-]*)?", "Who were the last Election Dates of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "557",
    "lexicalEntryUri" : "http://localhost:8080#lastelectiondate-of_304",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the last Election Date of ([A-Za-z0-9_-]*)?", "the last Election Dates of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "558",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) parts.", "Give me all parts of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) part.", "Give me the ([A-Za-z0-9_-]*) parts.", "List all parts of ([A-Za-z0-9_-]*).", "List all the parts of ([A-Za-z0-9_-]*).", "List all the politicalParties with part of ([A-Za-z0-9_-]*).", "show me all parts of ([A-Za-z0-9_-]*).", "What are the parts of ([A-Za-z0-9_-]*)?", "What are the parts of the ([A-Za-z0-9_-]*)?", "What is the part of ([A-Za-z0-9_-]*)?", "What is the part of the ([A-Za-z0-9_-]*)?", "What was the part of ([A-Za-z0-9_-]*)?", "What was the part of the ([A-Za-z0-9_-]*)?", "What were the parts of ([A-Za-z0-9_-]*)?", "What were the parts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the part of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the part of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the part of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the part of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parts of the ([A-Za-z0-9_-]*)?", "Who are the parts of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's part?", "Who is the part of ([A-Za-z0-9_-]*)?", "Who is the part of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's part?", "Who was the part of ([A-Za-z0-9_-]*)?", "Who was the part of the ([A-Za-z0-9_-]*)?", "Who were the parts of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "562",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the part of ([A-Za-z0-9_-]*)?", "the parts of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "563",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) parts.", "Give me all parts of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) part.", "Give me the ([A-Za-z0-9_-]*) parts.", "List all parts of ([A-Za-z0-9_-]*).", "List all the parts of ([A-Za-z0-9_-]*).", "List all the politicalParties with part of ([A-Za-z0-9_-]*).", "show me all parts of ([A-Za-z0-9_-]*).", "What are the parts of ([A-Za-z0-9_-]*)?", "What are the parts of the ([A-Za-z0-9_-]*)?", "What is the part of ([A-Za-z0-9_-]*)?", "What is the part of the ([A-Za-z0-9_-]*)?", "What was the part of ([A-Za-z0-9_-]*)?", "What was the part of the ([A-Za-z0-9_-]*)?", "What were the parts of ([A-Za-z0-9_-]*)?", "What were the parts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the part of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the part of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the part of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the part of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parts of the ([A-Za-z0-9_-]*)?", "Who are the parts of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's part?", "Who is the part of ([A-Za-z0-9_-]*)?", "Who is the part of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's part?", "Who was the part of ([A-Za-z0-9_-]*)?", "Who was the part of the ([A-Za-z0-9_-]*)?", "Who were the parts of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "567",
    "lexicalEntryUri" : "http://localhost:8080#part-of_267",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the part of ([A-Za-z0-9_-]*)?", "the parts of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alliance> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "568",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) sons.", "Give me all sons of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) son.", "Give me the ([A-Za-z0-9_-]*) sons.", "List all sons of ([A-Za-z0-9_-]*).", "List all the persons with son of ([A-Za-z0-9_-]*).", "List all the sons of ([A-Za-z0-9_-]*).", "show me all sons of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the sons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the sons of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the son of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the son of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the son of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the son of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the sons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the sons of the ([A-Za-z0-9_-]*)?", "Who are the sons of ([A-Za-z0-9_-]*)?", "Who are the sons of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's son?", "Who is the son of ([A-Za-z0-9_-]*)?", "Who is the son of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's son?", "Who was the son of ([A-Za-z0-9_-]*)?", "Who was the son of the ([A-Za-z0-9_-]*)?", "Who were the sons of ([A-Za-z0-9_-]*)?", "Who were the sons of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "572",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ([A-Za-z0-9_-]*)?", "the sons of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "573",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) sons.", "Give me all sons of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) son.", "Give me the ([A-Za-z0-9_-]*) sons.", "List all sons of ([A-Za-z0-9_-]*).", "List all the persons with son of ([A-Za-z0-9_-]*).", "List all the sons of ([A-Za-z0-9_-]*).", "show me all sons of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the sons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the sons of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the son of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the son of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the son of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the son of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the sons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the sons of the ([A-Za-z0-9_-]*)?", "Who are the sons of ([A-Za-z0-9_-]*)?", "Who are the sons of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's son?", "Who is the son of ([A-Za-z0-9_-]*)?", "Who is the son of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's son?", "Who was the son of ([A-Za-z0-9_-]*)?", "Who was the son of the ([A-Za-z0-9_-]*)?", "Who were the sons of ([A-Za-z0-9_-]*)?", "Who were the sons of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "577",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ([A-Za-z0-9_-]*)?", "the sons of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "578",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) sons.", "Give me all sons of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) son.", "Give me the ([A-Za-z0-9_-]*) sons.", "List all sons of ([A-Za-z0-9_-]*).", "List all the persons with son of ([A-Za-z0-9_-]*).", "List all the sons of ([A-Za-z0-9_-]*).", "show me all sons of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the sons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the sons of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the son of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the son of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the son of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the son of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the sons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the sons of the ([A-Za-z0-9_-]*)?", "Who are the sons of ([A-Za-z0-9_-]*)?", "Who are the sons of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's son?", "Who is the son of ([A-Za-z0-9_-]*)?", "Who is the son of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's son?", "Who was the son of ([A-Za-z0-9_-]*)?", "Who was the son of the ([A-Za-z0-9_-]*)?", "Who were the sons of ([A-Za-z0-9_-]*)?", "Who were the sons of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "582",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ([A-Za-z0-9_-]*)?", "the sons of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "583",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) sons.", "Give me all sons of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) son.", "Give me the ([A-Za-z0-9_-]*) sons.", "List all sons of ([A-Za-z0-9_-]*).", "List all the persons with son of ([A-Za-z0-9_-]*).", "List all the sons of ([A-Za-z0-9_-]*).", "show me all sons of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the sons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the sons of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the son of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the son of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the son of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the son of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the sons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the sons of the ([A-Za-z0-9_-]*)?", "Who are the sons of ([A-Za-z0-9_-]*)?", "Who are the sons of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's son?", "Who is the son of ([A-Za-z0-9_-]*)?", "Who is the son of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's son?", "Who was the son of ([A-Za-z0-9_-]*)?", "Who was the son of the ([A-Za-z0-9_-]*)?", "Who were the sons of ([A-Za-z0-9_-]*)?", "Who were the sons of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "587",
    "lexicalEntryUri" : "http://localhost:8080#son_of_247",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ([A-Za-z0-9_-]*)?", "the sons of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "588",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) death.", "What is the death of ([A-Za-z0-9_-]*)?", "What is the death of the ([A-Za-z0-9_-]*)?", "What was the death of ([A-Za-z0-9_-]*)?", "What was the death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the death of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's death?", "Who is the death of ([A-Za-z0-9_-]*)?", "Who is the death of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's death?", "Who was the death of ([A-Za-z0-9_-]*)?", "Who was the death of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "591",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "592",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) death.", "What is the death of ([A-Za-z0-9_-]*)?", "What is the death of the ([A-Za-z0-9_-]*)?", "What was the death of ([A-Za-z0-9_-]*)?", "What was the death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the death of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the death of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the death of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's death?", "Who is the death of ([A-Za-z0-9_-]*)?", "Who is the death of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's death?", "Who was the death of ([A-Za-z0-9_-]*)?", "Who was the death of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "595",
    "lexicalEntryUri" : "http://localhost:8080#death_of_280",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "596",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) parties.", "Give me all parties of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) parties.", "Give me the ([A-Za-z0-9_-]*) party.", "List all parties of ([A-Za-z0-9_-]*).", "List all the parties of ([A-Za-z0-9_-]*).", "show me all parties of ([A-Za-z0-9_-]*).", "What are the parties of ([A-Za-z0-9_-]*)?", "What are the parties of the ([A-Za-z0-9_-]*)?", "What is the party of ([A-Za-z0-9_-]*)?", "What is the party of the ([A-Za-z0-9_-]*)?", "What was the party of ([A-Za-z0-9_-]*)?", "What was the party of the ([A-Za-z0-9_-]*)?", "What were the parties of ([A-Za-z0-9_-]*)?", "What were the parties of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parties of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parties of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the party of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the party of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the party of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the party of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parties of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parties of the ([A-Za-z0-9_-]*)?", "Who are the parties of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's party?", "Who is the party of ([A-Za-z0-9_-]*)?", "Who is the party of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's party?", "Who was the party of ([A-Za-z0-9_-]*)?", "Who was the party of the ([A-Za-z0-9_-]*)?", "Who were the parties of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "600",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ([A-Za-z0-9_-]*)?", "the party of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "601",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) parties.", "Give me all parties of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) parties.", "Give me the ([A-Za-z0-9_-]*) party.", "List all parties of ([A-Za-z0-9_-]*).", "List all the parties of ([A-Za-z0-9_-]*).", "show me all parties of ([A-Za-z0-9_-]*).", "What are the parties of ([A-Za-z0-9_-]*)?", "What are the parties of the ([A-Za-z0-9_-]*)?", "What is the party of ([A-Za-z0-9_-]*)?", "What is the party of the ([A-Za-z0-9_-]*)?", "What was the party of ([A-Za-z0-9_-]*)?", "What was the party of the ([A-Za-z0-9_-]*)?", "What were the parties of ([A-Za-z0-9_-]*)?", "What were the parties of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parties of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the parties of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the party of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the party of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the party of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the party of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parties of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the parties of the ([A-Za-z0-9_-]*)?", "Who are the parties of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's party?", "Who is the party of ([A-Za-z0-9_-]*)?", "Who is the party of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's party?", "Who was the party of ([A-Za-z0-9_-]*)?", "Who was the party of the ([A-Za-z0-9_-]*)?", "Who were the parties of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "605",
    "lexicalEntryUri" : "http://localhost:8080#party-of_386",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ([A-Za-z0-9_-]*)?", "the party of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "606",
    "lexicalEntryUri" : "http://localhost:8080#postcode-of_378",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) post code.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's post code?", "What ([A-Za-z0-9_-]*) is the post code of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the post code of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's post code?", "What ([A-Za-z0-9_-]*) was the post code of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the post code of the ([A-Za-z0-9_-]*)?", "What is the post code of ([A-Za-z0-9_-]*)?", "What is the post code of the ([A-Za-z0-9_-]*)?", "What was the post code of ([A-Za-z0-9_-]*)?", "What was the post code of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the post code of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the post code of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the post code of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the post code of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/postalCode> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "609",
    "lexicalEntryUri" : "http://localhost:8080#postcode-of_378",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the post code of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/postalCode> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "610",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) books.", "Give me all books in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) book.", "Give me the ([A-Za-z0-9_-]*) books.", "List all books in ([A-Za-z0-9_-]*).", "List all the books in ([A-Za-z0-9_-]*).", "List all the works with book in ([A-Za-z0-9_-]*).", "show me all books in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the books in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) is the book in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the book in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) was the book in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the book in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the books in the ([A-Za-z0-9_-]*)?", "What are the books in ([A-Za-z0-9_-]*)?", "What are the books in the ([A-Za-z0-9_-]*)?", "What is the book in ([A-Za-z0-9_-]*)?", "What is the book in the ([A-Za-z0-9_-]*)?", "What was the book in ([A-Za-z0-9_-]*)?", "What was the book in the ([A-Za-z0-9_-]*)?", "What were the books in ([A-Za-z0-9_-]*)?", "What were the books in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "614",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in ([A-Za-z0-9_-]*)?", "the books in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "615",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) books.", "Give me all books in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) book.", "Give me the ([A-Za-z0-9_-]*) books.", "List all books in ([A-Za-z0-9_-]*).", "List all the books in ([A-Za-z0-9_-]*).", "List all the works with book in ([A-Za-z0-9_-]*).", "show me all books in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the books in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) is the book in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the book in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) was the book in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the book in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the books in the ([A-Za-z0-9_-]*)?", "What are the books in ([A-Za-z0-9_-]*)?", "What are the books in the ([A-Za-z0-9_-]*)?", "What is the book in ([A-Za-z0-9_-]*)?", "What is the book in the ([A-Za-z0-9_-]*)?", "What was the book in ([A-Za-z0-9_-]*)?", "What was the book in the ([A-Za-z0-9_-]*)?", "What were the books in ([A-Za-z0-9_-]*)?", "What were the books in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "619",
    "lexicalEntryUri" : "http://localhost:8080#book_in_369",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in ([A-Za-z0-9_-]*)?", "the books in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "620",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) main businesses.", "Give me all main businesses of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) main businesses.", "Give me the ([A-Za-z0-9_-]*) main_business_of.", "List all main businesses of ([A-Za-z0-9_-]*).", "List all the bands with main_business_of of ([A-Za-z0-9_-]*).", "List all the main businesses of ([A-Za-z0-9_-]*).", "show me all main businesses of ([A-Za-z0-9_-]*).", "What are the main businesses of ([A-Za-z0-9_-]*)?", "What are the main businesses of the ([A-Za-z0-9_-]*)?", "What is the main_business_of of ([A-Za-z0-9_-]*)?", "What is the main_business_of of the ([A-Za-z0-9_-]*)?", "What was the main_business_of of ([A-Za-z0-9_-]*)?", "What was the main_business_of of the ([A-Za-z0-9_-]*)?", "What were the main businesses of ([A-Za-z0-9_-]*)?", "What were the main businesses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the main businesses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the main businesses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the main_business_of of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the main_business_of of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the main_business_of of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the main_business_of of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the main businesses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the main businesses of the ([A-Za-z0-9_-]*)?", "Who are the main businesses of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's main_business_of?", "Who is the main_business_of of ([A-Za-z0-9_-]*)?", "Who is the main_business_of of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's main_business_of?", "Who was the main_business_of of ([A-Za-z0-9_-]*)?", "Who was the main_business_of of the ([A-Za-z0-9_-]*)?", "Who were the main businesses of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "624",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the main businesses of ([A-Za-z0-9_-]*)?", "the main_business_of of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "625",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) main businesses.", "Give me all main businesses of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) main businesses.", "Give me the ([A-Za-z0-9_-]*) main_business_of.", "List all main businesses of ([A-Za-z0-9_-]*).", "List all the bands with main_business_of of ([A-Za-z0-9_-]*).", "List all the main businesses of ([A-Za-z0-9_-]*).", "show me all main businesses of ([A-Za-z0-9_-]*).", "What are the main businesses of ([A-Za-z0-9_-]*)?", "What are the main businesses of the ([A-Za-z0-9_-]*)?", "What is the main_business_of of ([A-Za-z0-9_-]*)?", "What is the main_business_of of the ([A-Za-z0-9_-]*)?", "What was the main_business_of of ([A-Za-z0-9_-]*)?", "What was the main_business_of of the ([A-Za-z0-9_-]*)?", "What were the main businesses of ([A-Za-z0-9_-]*)?", "What were the main businesses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the main businesses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the main businesses of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the main_business_of of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the main_business_of of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the main_business_of of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the main_business_of of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the main businesses of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the main businesses of the ([A-Za-z0-9_-]*)?", "Who are the main businesses of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's main_business_of?", "Who is the main_business_of of ([A-Za-z0-9_-]*)?", "Who is the main_business_of of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's main_business_of?", "Who was the main_business_of of ([A-Za-z0-9_-]*)?", "Who was the main_business_of of the ([A-Za-z0-9_-]*)?", "Who were the main businesses of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "629",
    "lexicalEntryUri" : "http://localhost:8080#main_business_of_264",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the main businesses of ([A-Za-z0-9_-]*)?", "the main_business_of of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "630",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) headquarters.", "Give me all headquarters of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) headquarter.", "Give me the ([A-Za-z0-9_-]*) headquarters.", "List all headquarters of ([A-Za-z0-9_-]*).", "List all the headquarters of ([A-Za-z0-9_-]*).", "show me all headquarters of ([A-Za-z0-9_-]*).", "What are the headquarters of ([A-Za-z0-9_-]*)?", "What are the headquarters of the ([A-Za-z0-9_-]*)?", "What is the headquarter of ([A-Za-z0-9_-]*)?", "What is the headquarter of the ([A-Za-z0-9_-]*)?", "What was the headquarter of ([A-Za-z0-9_-]*)?", "What was the headquarter of the ([A-Za-z0-9_-]*)?", "What were the headquarters of ([A-Za-z0-9_-]*)?", "What were the headquarters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the headquarters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the headquarters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the headquarters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the headquarters of the ([A-Za-z0-9_-]*)?", "Who are the headquarters of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's headquarter?", "Who is the headquarter of ([A-Za-z0-9_-]*)?", "Who is the headquarter of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's headquarter?", "Who was the headquarter of ([A-Za-z0-9_-]*)?", "Who was the headquarter of the ([A-Za-z0-9_-]*)?", "Who were the headquarters of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "634",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ([A-Za-z0-9_-]*)?", "the headquarters of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "635",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) headquarters.", "Give me all headquarters of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) headquarter.", "Give me the ([A-Za-z0-9_-]*) headquarters.", "List all headquarters of ([A-Za-z0-9_-]*).", "List all the headquarters of ([A-Za-z0-9_-]*).", "show me all headquarters of ([A-Za-z0-9_-]*).", "What are the headquarters of ([A-Za-z0-9_-]*)?", "What are the headquarters of the ([A-Za-z0-9_-]*)?", "What is the headquarter of ([A-Za-z0-9_-]*)?", "What is the headquarter of the ([A-Za-z0-9_-]*)?", "What was the headquarter of ([A-Za-z0-9_-]*)?", "What was the headquarter of the ([A-Za-z0-9_-]*)?", "What were the headquarters of ([A-Za-z0-9_-]*)?", "What were the headquarters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the headquarters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the headquarters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the headquarters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the headquarters of the ([A-Za-z0-9_-]*)?", "Who are the headquarters of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's headquarter?", "Who is the headquarter of ([A-Za-z0-9_-]*)?", "Who is the headquarter of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's headquarter?", "Who was the headquarter of ([A-Za-z0-9_-]*)?", "Who was the headquarter of the ([A-Za-z0-9_-]*)?", "Who were the headquarters of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "639",
    "lexicalEntryUri" : "http://localhost:8080#first-name_of_352",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ([A-Za-z0-9_-]*)?", "the headquarters of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/alias> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "640",
    "lexicalEntryUri" : "http://localhost:8080#deathdate-of_283",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) death date.", "What is the death date of ([A-Za-z0-9_-]*)?", "What is the death date of the ([A-Za-z0-9_-]*)?", "What was the death date of ([A-Za-z0-9_-]*)?", "What was the death date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the death date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the death date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the death date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the death date of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's death date?", "Who is the death date of ([A-Za-z0-9_-]*)?", "Who is the death date of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's death date?", "Who was the death date of ([A-Za-z0-9_-]*)?", "Who was the death date of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "643",
    "lexicalEntryUri" : "http://localhost:8080#deathdate-of_283",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death date of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "644",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) father.", "List all the persons with father of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's father?", "What ([A-Za-z0-9_-]*) is the father of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the father of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's father?", "What ([A-Za-z0-9_-]*) was the father of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the father of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the father of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the father of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the father of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the father of the ([A-Za-z0-9_-]*)?", "Who is the father of ([A-Za-z0-9_-]*)?", "Who is the father of the ([A-Za-z0-9_-]*)?", "Who was the father of ([A-Za-z0-9_-]*)?", "Who was the father of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "647",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "648",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) father.", "List all the persons with father of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's father?", "What ([A-Za-z0-9_-]*) is the father of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the father of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's father?", "What ([A-Za-z0-9_-]*) was the father of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the father of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the father of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the father of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the father of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the father of the ([A-Za-z0-9_-]*)?", "Who is the father of ([A-Za-z0-9_-]*)?", "Who is the father of the ([A-Za-z0-9_-]*)?", "Who was the father of ([A-Za-z0-9_-]*)?", "Who was the father of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "651",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "652",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) father.", "List all the persons with father of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's father?", "What ([A-Za-z0-9_-]*) is the father of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the father of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's father?", "What ([A-Za-z0-9_-]*) was the father of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the father of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the father of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the father of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the father of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the father of the ([A-Za-z0-9_-]*)?", "Who is the father of ([A-Za-z0-9_-]*)?", "Who is the father of the ([A-Za-z0-9_-]*)?", "Who was the father of ([A-Za-z0-9_-]*)?", "Who was the father of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "655",
    "lexicalEntryUri" : "http://localhost:8080#father_of_337",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/father> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "656",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of_344",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) resting places.", "Give me all resting places of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) resting place.", "Give me the ([A-Za-z0-9_-]*) resting places.", "List all resting places of ([A-Za-z0-9_-]*).", "List all the countries with resting place of ([A-Za-z0-9_-]*).", "List all the resting places of ([A-Za-z0-9_-]*).", "show me all resting places of ([A-Za-z0-9_-]*).", "What are the resting places of ([A-Za-z0-9_-]*)?", "What are the resting places of the ([A-Za-z0-9_-]*)?", "What is the resting place of ([A-Za-z0-9_-]*)?", "What is the resting place of the ([A-Za-z0-9_-]*)?", "What was the resting place of ([A-Za-z0-9_-]*)?", "What was the resting place of the ([A-Za-z0-9_-]*)?", "What were the resting places of ([A-Za-z0-9_-]*)?", "What were the resting places of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the resting places of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the resting places of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the resting place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the resting place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the resting place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the resting place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the resting places of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the resting places of the ([A-Za-z0-9_-]*)?", "Who are the resting places of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's resting place?", "Who is the resting place of ([A-Za-z0-9_-]*)?", "Who is the resting place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's resting place?", "Who was the resting place of ([A-Za-z0-9_-]*)?", "Who was the resting place of the ([A-Za-z0-9_-]*)?", "Who were the resting places of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "660",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of_344",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ([A-Za-z0-9_-]*)?", "the resting places of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "661",
    "lexicalEntryUri" : "http://localhost:8080#numberofstudents-of_285",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "School" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) number Of Students.", "Give me all number Of Students of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) number Of Student.", "Give me the ([A-Za-z0-9_-]*) number Of Students.", "List all number Of Students of ([A-Za-z0-9_-]*).", "List all the number Of Students of ([A-Za-z0-9_-]*).", "show me all number Of Students of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the number Of Students of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's number Of Student?", "What ([A-Za-z0-9_-]*) is the number Of Student of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the number Of Student of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's number Of Student?", "What ([A-Za-z0-9_-]*) was the number Of Student of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the number Of Student of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the number Of Students of the ([A-Za-z0-9_-]*)?", "What are the number Of Students of ([A-Za-z0-9_-]*)?", "What are the number Of Students of the ([A-Za-z0-9_-]*)?", "What is the number Of Student of ([A-Za-z0-9_-]*)?", "What is the number Of Student of the ([A-Za-z0-9_-]*)?", "What was the number Of Student of ([A-Za-z0-9_-]*)?", "What was the number Of Student of the ([A-Za-z0-9_-]*)?", "What were the number Of Students of ([A-Za-z0-9_-]*)?", "What were the number Of Students of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the number Of Students of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the number Of Students of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number Of Student of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number Of Student of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number Of Student of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number Of Student of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the number Of Students of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the number Of Students of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "665",
    "lexicalEntryUri" : "http://localhost:8080#numberofstudents-of_285",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "School" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Student of ([A-Za-z0-9_-]*)?", "the number Of Students of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "666",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of_244",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) daughters.", "Give me all daughters of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) daughter.", "Give me the ([A-Za-z0-9_-]*) daughters.", "List all daughters of ([A-Za-z0-9_-]*).", "List all the daughters of ([A-Za-z0-9_-]*).", "List all the persons with daughter of ([A-Za-z0-9_-]*).", "show me all daughters of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the daughters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the daughters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the daughter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the daughter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the daughter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the daughter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the daughters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the daughters of the ([A-Za-z0-9_-]*)?", "Who are the daughters of ([A-Za-z0-9_-]*)?", "Who are the daughters of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's daughter?", "Who is the daughter of ([A-Za-z0-9_-]*)?", "Who is the daughter of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's daughter?", "Who was the daughter of ([A-Za-z0-9_-]*)?", "Who was the daughter of the ([A-Za-z0-9_-]*)?", "Who were the daughters of ([A-Za-z0-9_-]*)?", "Who were the daughters of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "670",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of_244",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the daughter of ([A-Za-z0-9_-]*)?", "the daughters of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "671",
    "lexicalEntryUri" : "http://localhost:8080#numberofseasons-of_296",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) number Of Seasons.", "Give me all number Of Seasons of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) number Of Season.", "Give me the ([A-Za-z0-9_-]*) number Of Seasons.", "List all number Of Seasons of ([A-Za-z0-9_-]*).", "List all the number Of Seasons of ([A-Za-z0-9_-]*).", "show me all number Of Seasons of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the number Of Seasons of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's number Of Season?", "What ([A-Za-z0-9_-]*) is the number Of Season of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the number Of Season of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's number Of Season?", "What ([A-Za-z0-9_-]*) was the number Of Season of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the number Of Season of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the number Of Seasons of the ([A-Za-z0-9_-]*)?", "What are the number Of Seasons of ([A-Za-z0-9_-]*)?", "What are the number Of Seasons of the ([A-Za-z0-9_-]*)?", "What is the number Of Season of ([A-Za-z0-9_-]*)?", "What is the number Of Season of the ([A-Za-z0-9_-]*)?", "What was the number Of Season of ([A-Za-z0-9_-]*)?", "What was the number Of Season of the ([A-Za-z0-9_-]*)?", "What were the number Of Seasons of ([A-Za-z0-9_-]*)?", "What were the number Of Seasons of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the number Of Seasons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the number Of Seasons of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number Of Season of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number Of Season of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number Of Season of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number Of Season of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the number Of Seasons of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the number Of Seasons of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "675",
    "lexicalEntryUri" : "http://localhost:8080#numberofseasons-of_296",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Season of ([A-Za-z0-9_-]*)?", "the number Of Seasons of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "676",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) borough.", "Give me all borough of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) borough.", "List all borough of ([A-Za-z0-9_-]*).", "List all the borough of ([A-Za-z0-9_-]*).", "show me all borough of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's borough?", "What ([A-Za-z0-9_-]*) is the borough of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's borough?", "What ([A-Za-z0-9_-]*) was the borough of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the borough of the ([A-Za-z0-9_-]*)?", "What are the borough of ([A-Za-z0-9_-]*)?", "What are the borough of the ([A-Za-z0-9_-]*)?", "What is the borough of ([A-Za-z0-9_-]*)?", "What is the borough of the ([A-Za-z0-9_-]*)?", "What was the borough of ([A-Za-z0-9_-]*)?", "What was the borough of the ([A-Za-z0-9_-]*)?", "What were the borough of ([A-Za-z0-9_-]*)?", "What were the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the borough of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "680",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "681",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) borough.", "Give me all borough of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) borough.", "List all borough of ([A-Za-z0-9_-]*).", "List all the borough of ([A-Za-z0-9_-]*).", "show me all borough of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's borough?", "What ([A-Za-z0-9_-]*) is the borough of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's borough?", "What ([A-Za-z0-9_-]*) was the borough of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the borough of the ([A-Za-z0-9_-]*)?", "What are the borough of ([A-Za-z0-9_-]*)?", "What are the borough of the ([A-Za-z0-9_-]*)?", "What is the borough of ([A-Za-z0-9_-]*)?", "What is the borough of the ([A-Za-z0-9_-]*)?", "What was the borough of ([A-Za-z0-9_-]*)?", "What was the borough of the ([A-Za-z0-9_-]*)?", "What were the borough of ([A-Za-z0-9_-]*)?", "What were the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the borough of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "685",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "686",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) borough.", "Give me all borough of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) borough.", "List all borough of ([A-Za-z0-9_-]*).", "List all the borough of ([A-Za-z0-9_-]*).", "show me all borough of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's borough?", "What ([A-Za-z0-9_-]*) is the borough of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's borough?", "What ([A-Za-z0-9_-]*) was the borough of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the borough of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the borough of the ([A-Za-z0-9_-]*)?", "What are the borough of ([A-Za-z0-9_-]*)?", "What are the borough of the ([A-Za-z0-9_-]*)?", "What is the borough of ([A-Za-z0-9_-]*)?", "What is the borough of the ([A-Za-z0-9_-]*)?", "What was the borough of ([A-Za-z0-9_-]*)?", "What was the borough of the ([A-Za-z0-9_-]*)?", "What were the borough of ([A-Za-z0-9_-]*)?", "What were the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the borough of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the borough of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the borough of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "690",
    "lexicalEntryUri" : "http://localhost:8080#borough-of_365",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "691",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) missions.", "Give me all missions of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) mission.", "Give me the ([A-Za-z0-9_-]*) missions.", "List all missions of ([A-Za-z0-9_-]*).", "List all the missions of ([A-Za-z0-9_-]*).", "List all the television shows with mission of ([A-Za-z0-9_-]*).", "show me all missions of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the missions of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's mission?", "What ([A-Za-z0-9_-]*) is the mission of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the mission of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's mission?", "What ([A-Za-z0-9_-]*) was the mission of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the mission of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the missions of the ([A-Za-z0-9_-]*)?", "What are the missions of ([A-Za-z0-9_-]*)?", "What are the missions of the ([A-Za-z0-9_-]*)?", "What is the mission of ([A-Za-z0-9_-]*)?", "What is the mission of the ([A-Za-z0-9_-]*)?", "What was the mission of ([A-Za-z0-9_-]*)?", "What was the mission of the ([A-Za-z0-9_-]*)?", "What were the missions of ([A-Za-z0-9_-]*)?", "What were the missions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the missions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the missions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mission of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mission of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mission of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mission of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the missions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the missions of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "695",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of ([A-Za-z0-9_-]*)?", "the missions of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "696",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) missions.", "Give me all missions of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) mission.", "Give me the ([A-Za-z0-9_-]*) missions.", "List all missions of ([A-Za-z0-9_-]*).", "List all the missions of ([A-Za-z0-9_-]*).", "List all the television shows with mission of ([A-Za-z0-9_-]*).", "show me all missions of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the missions of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's mission?", "What ([A-Za-z0-9_-]*) is the mission of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the mission of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's mission?", "What ([A-Za-z0-9_-]*) was the mission of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the mission of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the missions of the ([A-Za-z0-9_-]*)?", "What are the missions of ([A-Za-z0-9_-]*)?", "What are the missions of the ([A-Za-z0-9_-]*)?", "What is the mission of ([A-Za-z0-9_-]*)?", "What is the mission of the ([A-Za-z0-9_-]*)?", "What was the mission of ([A-Za-z0-9_-]*)?", "What was the mission of the ([A-Za-z0-9_-]*)?", "What were the missions of ([A-Za-z0-9_-]*)?", "What were the missions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the missions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the missions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mission of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mission of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mission of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mission of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the missions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the missions of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "700",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of ([A-Za-z0-9_-]*)?", "the missions of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "701",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) missions.", "Give me all missions of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) mission.", "Give me the ([A-Za-z0-9_-]*) missions.", "List all missions of ([A-Za-z0-9_-]*).", "List all the missions of ([A-Za-z0-9_-]*).", "List all the television shows with mission of ([A-Za-z0-9_-]*).", "show me all missions of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the missions of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's mission?", "What ([A-Za-z0-9_-]*) is the mission of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the mission of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's mission?", "What ([A-Za-z0-9_-]*) was the mission of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the mission of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the missions of the ([A-Za-z0-9_-]*)?", "What are the missions of ([A-Za-z0-9_-]*)?", "What are the missions of the ([A-Za-z0-9_-]*)?", "What is the mission of ([A-Za-z0-9_-]*)?", "What is the mission of the ([A-Za-z0-9_-]*)?", "What was the mission of ([A-Za-z0-9_-]*)?", "What was the mission of the ([A-Za-z0-9_-]*)?", "What were the missions of ([A-Za-z0-9_-]*)?", "What were the missions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the missions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the missions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mission of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mission of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mission of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mission of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the missions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the missions of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "705",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of ([A-Za-z0-9_-]*)?", "the missions of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "706",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) missions.", "Give me all missions of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) mission.", "Give me the ([A-Za-z0-9_-]*) missions.", "List all missions of ([A-Za-z0-9_-]*).", "List all the missions of ([A-Za-z0-9_-]*).", "List all the television shows with mission of ([A-Za-z0-9_-]*).", "show me all missions of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the missions of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's mission?", "What ([A-Za-z0-9_-]*) is the mission of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the mission of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's mission?", "What ([A-Za-z0-9_-]*) was the mission of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the mission of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the missions of the ([A-Za-z0-9_-]*)?", "What are the missions of ([A-Za-z0-9_-]*)?", "What are the missions of the ([A-Za-z0-9_-]*)?", "What is the mission of ([A-Za-z0-9_-]*)?", "What is the mission of the ([A-Za-z0-9_-]*)?", "What was the mission of ([A-Za-z0-9_-]*)?", "What was the mission of the ([A-Za-z0-9_-]*)?", "What were the missions of ([A-Za-z0-9_-]*)?", "What were the missions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the missions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the missions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mission of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mission of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mission of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mission of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the missions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the missions of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "710",
    "lexicalEntryUri" : "http://localhost:8080#mission-of_366",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Event" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of ([A-Za-z0-9_-]*)?", "the missions of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programme> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "711",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1_346",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) mayors.", "Give me all mayors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) mayor.", "Give me the ([A-Za-z0-9_-]*) mayors.", "List all mayors of ([A-Za-z0-9_-]*).", "List all the mayors of ([A-Za-z0-9_-]*).", "List all the persons with mayor of ([A-Za-z0-9_-]*).", "show me all mayors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the mayors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's mayor?", "What ([A-Za-z0-9_-]*) is the mayor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the mayor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's mayor?", "What ([A-Za-z0-9_-]*) was the mayor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the mayor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the mayors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the mayors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the mayors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mayor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mayor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mayor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mayor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the mayors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the mayors of the ([A-Za-z0-9_-]*)?", "Who are the mayors of ([A-Za-z0-9_-]*)?", "Who are the mayors of the ([A-Za-z0-9_-]*)?", "Who is the mayor of ([A-Za-z0-9_-]*)?", "Who is the mayor of the ([A-Za-z0-9_-]*)?", "Who was the mayor of ([A-Za-z0-9_-]*)?", "Who was the mayor of the ([A-Za-z0-9_-]*)?", "Who were the mayors of ([A-Za-z0-9_-]*)?", "Who were the mayors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mayor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "715",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1_346",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ([A-Za-z0-9_-]*)?", "the mayors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mayor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "716",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) breweries.", "Give me all breweries of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) breweries.", "Give me the ([A-Za-z0-9_-]*) brewery.", "List all breweries of ([A-Za-z0-9_-]*).", "List all the breweries of ([A-Za-z0-9_-]*).", "List all the places with brewery of ([A-Za-z0-9_-]*).", "show me all breweries of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the breweries of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's brewery?", "What ([A-Za-z0-9_-]*) is the brewery of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the brewery of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's brewery?", "What ([A-Za-z0-9_-]*) was the brewery of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the brewery of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the breweries of the ([A-Za-z0-9_-]*)?", "What are the breweries of ([A-Za-z0-9_-]*)?", "What are the breweries of the ([A-Za-z0-9_-]*)?", "What is the brewery of ([A-Za-z0-9_-]*)?", "What is the brewery of the ([A-Za-z0-9_-]*)?", "What was the brewery of ([A-Za-z0-9_-]*)?", "What was the brewery of the ([A-Za-z0-9_-]*)?", "What were the breweries of ([A-Za-z0-9_-]*)?", "What were the breweries of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the breweries of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the breweries of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the brewery of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the brewery of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the brewery of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the brewery of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the breweries of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the breweries of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "720",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the breweries of ([A-Za-z0-9_-]*)?", "the brewery of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "721",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) breweries.", "Give me all breweries of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) breweries.", "Give me the ([A-Za-z0-9_-]*) brewery.", "List all breweries of ([A-Za-z0-9_-]*).", "List all the breweries of ([A-Za-z0-9_-]*).", "List all the places with brewery of ([A-Za-z0-9_-]*).", "show me all breweries of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the breweries of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's brewery?", "What ([A-Za-z0-9_-]*) is the brewery of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the brewery of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's brewery?", "What ([A-Za-z0-9_-]*) was the brewery of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the brewery of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the breweries of the ([A-Za-z0-9_-]*)?", "What are the breweries of ([A-Za-z0-9_-]*)?", "What are the breweries of the ([A-Za-z0-9_-]*)?", "What is the brewery of ([A-Za-z0-9_-]*)?", "What is the brewery of the ([A-Za-z0-9_-]*)?", "What was the brewery of ([A-Za-z0-9_-]*)?", "What was the brewery of the ([A-Za-z0-9_-]*)?", "What were the breweries of ([A-Za-z0-9_-]*)?", "What were the breweries of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the breweries of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the breweries of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the brewery of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the brewery of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the brewery of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the brewery of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the breweries of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the breweries of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "725",
    "lexicalEntryUri" : "http://localhost:8080#breweries-in_261",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the breweries of ([A-Za-z0-9_-]*)?", "the brewery of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "726",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) writers.", "Give me all writers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) writer.", "Give me the ([A-Za-z0-9_-]*) writers.", "List all the actors with writer of ([A-Za-z0-9_-]*).", "List all the writers of ([A-Za-z0-9_-]*).", "List all writers of ([A-Za-z0-9_-]*).", "show me all writers of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the writers of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's writer?", "What ([A-Za-z0-9_-]*) is the writer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the writer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's writer?", "What ([A-Za-z0-9_-]*) was the writer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the writer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the writers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the writers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the writers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the writer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the writer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the writer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the writer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the writers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the writers of the ([A-Za-z0-9_-]*)?", "Who are the writers of ([A-Za-z0-9_-]*)?", "Who are the writers of the ([A-Za-z0-9_-]*)?", "Who is the writer of ([A-Za-z0-9_-]*)?", "Who is the writer of the ([A-Za-z0-9_-]*)?", "Who was the writer of ([A-Za-z0-9_-]*)?", "Who was the writer of the ([A-Za-z0-9_-]*)?", "Who were the writers of ([A-Za-z0-9_-]*)?", "Who were the writers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "730",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the writer of ([A-Za-z0-9_-]*)?", "the writers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "731",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) writers.", "Give me all writers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) writer.", "Give me the ([A-Za-z0-9_-]*) writers.", "List all the actors with writer of ([A-Za-z0-9_-]*).", "List all the writers of ([A-Za-z0-9_-]*).", "List all writers of ([A-Za-z0-9_-]*).", "show me all writers of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the writers of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's writer?", "What ([A-Za-z0-9_-]*) is the writer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the writer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's writer?", "What ([A-Za-z0-9_-]*) was the writer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the writer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the writers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the writers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the writers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the writer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the writer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the writer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the writer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the writers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the writers of the ([A-Za-z0-9_-]*)?", "Who are the writers of ([A-Za-z0-9_-]*)?", "Who are the writers of the ([A-Za-z0-9_-]*)?", "Who is the writer of ([A-Za-z0-9_-]*)?", "Who is the writer of the ([A-Za-z0-9_-]*)?", "Who was the writer of ([A-Za-z0-9_-]*)?", "Who was the writer of the ([A-Za-z0-9_-]*)?", "Who were the writers of ([A-Za-z0-9_-]*)?", "Who were the writers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "735",
    "lexicalEntryUri" : "http://localhost:8080#writer_of_239",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the writer of ([A-Za-z0-9_-]*)?", "the writers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "736",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) states.", "Give me all states in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) state.", "Give me the ([A-Za-z0-9_-]*) states.", "List all states in ([A-Za-z0-9_-]*).", "List all the states in ([A-Za-z0-9_-]*).", "show me all states in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the states in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's state?", "What ([A-Za-z0-9_-]*) is the state in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the state in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's state?", "What ([A-Za-z0-9_-]*) was the state in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the state in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the states in the ([A-Za-z0-9_-]*)?", "What are the states in ([A-Za-z0-9_-]*)?", "What are the states in the ([A-Za-z0-9_-]*)?", "What is the state in ([A-Za-z0-9_-]*)?", "What is the state in the ([A-Za-z0-9_-]*)?", "What was the state in ([A-Za-z0-9_-]*)?", "What was the state in the ([A-Za-z0-9_-]*)?", "What were the states in ([A-Za-z0-9_-]*)?", "What were the states in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the states in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the states in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the state in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the state in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the state in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the state in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the states in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the states in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "740",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the state in ([A-Za-z0-9_-]*)?", "the states in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "741",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) states.", "Give me all states in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) state.", "Give me the ([A-Za-z0-9_-]*) states.", "List all states in ([A-Za-z0-9_-]*).", "List all the states in ([A-Za-z0-9_-]*).", "show me all states in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the states in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's state?", "What ([A-Za-z0-9_-]*) is the state in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the state in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's state?", "What ([A-Za-z0-9_-]*) was the state in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the state in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the states in the ([A-Za-z0-9_-]*)?", "What are the states in ([A-Za-z0-9_-]*)?", "What are the states in the ([A-Za-z0-9_-]*)?", "What is the state in ([A-Za-z0-9_-]*)?", "What is the state in the ([A-Za-z0-9_-]*)?", "What was the state in ([A-Za-z0-9_-]*)?", "What was the state in the ([A-Za-z0-9_-]*)?", "What were the states in ([A-Za-z0-9_-]*)?", "What were the states in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the states in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the states in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the state in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the state in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the state in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the state in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the states in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the states in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "745",
    "lexicalEntryUri" : "http://localhost:8080#state_in_228",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the state in ([A-Za-z0-9_-]*)?", "the states in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/type> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "746",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) names.", "Give me all names of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) name.", "Give me the ([A-Za-z0-9_-]*) names.", "List all names of ([A-Za-z0-9_-]*).", "List all the names of ([A-Za-z0-9_-]*).", "show me all names of ([A-Za-z0-9_-]*).", "What are the names of ([A-Za-z0-9_-]*)?", "What are the names of the ([A-Za-z0-9_-]*)?", "What is the name of ([A-Za-z0-9_-]*)?", "What is the name of the ([A-Za-z0-9_-]*)?", "What was the name of ([A-Za-z0-9_-]*)?", "What was the name of the ([A-Za-z0-9_-]*)?", "What were the names of ([A-Za-z0-9_-]*)?", "What were the names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the names of the ([A-Za-z0-9_-]*)?", "Who are the names of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's name?", "Who is the name of ([A-Za-z0-9_-]*)?", "Who is the name of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's name?", "Who was the name of ([A-Za-z0-9_-]*)?", "Who was the name of the ([A-Za-z0-9_-]*)?", "Who were the names of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "750",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the name of ([A-Za-z0-9_-]*)?", "the names of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "751",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) names.", "Give me all names of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) name.", "Give me the ([A-Za-z0-9_-]*) names.", "List all names of ([A-Za-z0-9_-]*).", "List all the names of ([A-Za-z0-9_-]*).", "show me all names of ([A-Za-z0-9_-]*).", "What are the names of ([A-Za-z0-9_-]*)?", "What are the names of the ([A-Za-z0-9_-]*)?", "What is the name of ([A-Za-z0-9_-]*)?", "What is the name of the ([A-Za-z0-9_-]*)?", "What was the name of ([A-Za-z0-9_-]*)?", "What was the name of the ([A-Za-z0-9_-]*)?", "What were the names of ([A-Za-z0-9_-]*)?", "What were the names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the names of the ([A-Za-z0-9_-]*)?", "Who are the names of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's name?", "Who is the name of ([A-Za-z0-9_-]*)?", "Who is the name of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's name?", "Who was the name of ([A-Za-z0-9_-]*)?", "Who was the name of the ([A-Za-z0-9_-]*)?", "Who were the names of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "755",
    "lexicalEntryUri" : "http://localhost:8080#name-of_385",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the name of ([A-Za-z0-9_-]*)?", "the names of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/name> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "756",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) capital.", "List all the cities with capital of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's capital?", "What ([A-Za-z0-9_-]*) is the capital of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the capital of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's capital?", "What ([A-Za-z0-9_-]*) was the capital of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the capital of the ([A-Za-z0-9_-]*)?", "What is the capital of ([A-Za-z0-9_-]*)?", "What is the capital of the ([A-Za-z0-9_-]*)?", "What was the capital of ([A-Za-z0-9_-]*)?", "What was the capital of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the capital of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the capital of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the capital of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the capital of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "759",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "760",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) capital.", "List all the cities with capital of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's capital?", "What ([A-Za-z0-9_-]*) is the capital of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the capital of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's capital?", "What ([A-Za-z0-9_-]*) was the capital of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the capital of the ([A-Za-z0-9_-]*)?", "What is the capital of ([A-Za-z0-9_-]*)?", "What is the capital of the ([A-Za-z0-9_-]*)?", "What was the capital of ([A-Za-z0-9_-]*)?", "What was the capital of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the capital of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the capital of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the capital of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the capital of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "763",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "764",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) capital.", "List all the cities with capital of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's capital?", "What ([A-Za-z0-9_-]*) is the capital of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the capital of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's capital?", "What ([A-Za-z0-9_-]*) was the capital of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the capital of the ([A-Za-z0-9_-]*)?", "What is the capital of ([A-Za-z0-9_-]*)?", "What is the capital of the ([A-Za-z0-9_-]*)?", "What was the capital of ([A-Za-z0-9_-]*)?", "What was the capital of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the capital of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the capital of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the capital of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the capital of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "767",
    "lexicalEntryUri" : "http://localhost:8080#capital-of_311",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/capital> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "768",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) largest country.", "List all the countries with largest country of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's largest country?", "What ([A-Za-z0-9_-]*) is the largest country of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the largest country of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's largest country?", "What ([A-Za-z0-9_-]*) was the largest country of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the largest country of the ([A-Za-z0-9_-]*)?", "What is the largest country of ([A-Za-z0-9_-]*)?", "What is the largest country of the ([A-Za-z0-9_-]*)?", "What was the largest country of ([A-Za-z0-9_-]*)?", "What was the largest country of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest country of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest country of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest country of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest country of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "771",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "772",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) largest country.", "List all the countries with largest country of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's largest country?", "What ([A-Za-z0-9_-]*) is the largest country of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the largest country of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's largest country?", "What ([A-Za-z0-9_-]*) was the largest country of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the largest country of the ([A-Za-z0-9_-]*)?", "What is the largest country of ([A-Za-z0-9_-]*)?", "What is the largest country of the ([A-Za-z0-9_-]*)?", "What was the largest country of ([A-Za-z0-9_-]*)?", "What was the largest country of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest country of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest country of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest country of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest country of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "775",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "776",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) largest country.", "List all the countries with largest country of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's largest country?", "What ([A-Za-z0-9_-]*) is the largest country of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the largest country of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's largest country?", "What ([A-Za-z0-9_-]*) was the largest country of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the largest country of the ([A-Za-z0-9_-]*)?", "What is the largest country of ([A-Za-z0-9_-]*)?", "What is the largest country of the ([A-Za-z0-9_-]*)?", "What was the largest country of ([A-Za-z0-9_-]*)?", "What was the largest country of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest country of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest country of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest country of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest country of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "779",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in_299",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "780",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of_316",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) home stadiums.", "Give me all home stadiums of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) home stadium.", "Give me the ([A-Za-z0-9_-]*) home stadiums.", "List all home stadiums of ([A-Za-z0-9_-]*).", "List all the home stadiums of ([A-Za-z0-9_-]*).", "List all the stadiums with home stadium of ([A-Za-z0-9_-]*).", "show me all home stadiums of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the home stadiums of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's home stadium?", "What ([A-Za-z0-9_-]*) is the home stadium of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the home stadium of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's home stadium?", "What ([A-Za-z0-9_-]*) was the home stadium of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the home stadium of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the home stadiums of the ([A-Za-z0-9_-]*)?", "What are the home stadiums of ([A-Za-z0-9_-]*)?", "What are the home stadiums of the ([A-Za-z0-9_-]*)?", "What is the home stadium of ([A-Za-z0-9_-]*)?", "What is the home stadium of the ([A-Za-z0-9_-]*)?", "What was the home stadium of ([A-Za-z0-9_-]*)?", "What was the home stadium of the ([A-Za-z0-9_-]*)?", "What were the home stadiums of ([A-Za-z0-9_-]*)?", "What were the home stadiums of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the home stadiums of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the home stadiums of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the home stadium of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the home stadium of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the home stadium of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the home stadium of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the home stadiums of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the home stadiums of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ground> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "784",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of_316",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the home stadium of ([A-Za-z0-9_-]*)?", "the home stadiums of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ground> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "785",
    "lexicalEntryUri" : "http://localhost:8080#releasedate-of_231",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) release date.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's release date?", "What ([A-Za-z0-9_-]*) is the release date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the release date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's release date?", "What ([A-Za-z0-9_-]*) was the release date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the release date of the ([A-Za-z0-9_-]*)?", "What is the release date of ([A-Za-z0-9_-]*)?", "What is the release date of the ([A-Za-z0-9_-]*)?", "What was the release date of ([A-Za-z0-9_-]*)?", "What was the release date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the release date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the release date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the release date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the release date of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "788",
    "lexicalEntryUri" : "http://localhost:8080#releasedate-of_231",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the release date of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "789",
    "lexicalEntryUri" : "http://localhost:8080#firstairdate-of_240",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) first Air Dates.", "Give me all first Air Dates of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) first Air Date.", "Give me the ([A-Za-z0-9_-]*) first Air Dates.", "List all first Air Dates of ([A-Za-z0-9_-]*).", "List all the first Air Dates of ([A-Za-z0-9_-]*).", "show me all first Air Dates of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the first Air Dates of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's first Air Date?", "What ([A-Za-z0-9_-]*) is the first Air Date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the first Air Date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's first Air Date?", "What ([A-Za-z0-9_-]*) was the first Air Date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the first Air Date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the first Air Dates of the ([A-Za-z0-9_-]*)?", "What are the first Air Dates of ([A-Za-z0-9_-]*)?", "What are the first Air Dates of the ([A-Za-z0-9_-]*)?", "What is the first Air Date of ([A-Za-z0-9_-]*)?", "What is the first Air Date of the ([A-Za-z0-9_-]*)?", "What was the first Air Date of ([A-Za-z0-9_-]*)?", "What was the first Air Date of the ([A-Za-z0-9_-]*)?", "What were the first Air Dates of ([A-Za-z0-9_-]*)?", "What were the first Air Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the first Air Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the first Air Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first Air Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first Air Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first Air Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first Air Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the first Air Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the first Air Dates of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAirDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "793",
    "lexicalEntryUri" : "http://localhost:8080#firstairdate-of_240",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Air Date of ([A-Za-z0-9_-]*)?", "the first Air Dates of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAirDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "794",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) location.", "List all the places with location of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?", "What is the location of ([A-Za-z0-9_-]*)?", "What is the location of the ([A-Za-z0-9_-]*)?", "What was the location of ([A-Za-z0-9_-]*)?", "What was the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "797",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "798",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) location.", "List all the places with location of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?", "What is the location of ([A-Za-z0-9_-]*)?", "What is the location of the ([A-Za-z0-9_-]*)?", "What was the location of ([A-Za-z0-9_-]*)?", "What was the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "801",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "802",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) location.", "List all the places with location of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's location?", "What ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?", "What is the location of ([A-Za-z0-9_-]*)?", "What is the location of the ([A-Za-z0-9_-]*)?", "What was the location of ([A-Za-z0-9_-]*)?", "What was the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the location of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the location of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "805",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1_343",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "806",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2_349",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) mayors.", "Give me all mayors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) mayor.", "Give me the ([A-Za-z0-9_-]*) mayors.", "List all mayors of ([A-Za-z0-9_-]*).", "List all the mayors of ([A-Za-z0-9_-]*).", "List all the persons with mayor of ([A-Za-z0-9_-]*).", "show me all mayors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the mayors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's mayor?", "What ([A-Za-z0-9_-]*) is the mayor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the mayor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's mayor?", "What ([A-Za-z0-9_-]*) was the mayor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the mayor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the mayors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the mayors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the mayors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mayor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the mayor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mayor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the mayor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the mayors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the mayors of the ([A-Za-z0-9_-]*)?", "Who are the mayors of ([A-Za-z0-9_-]*)?", "Who are the mayors of the ([A-Za-z0-9_-]*)?", "Who is the mayor of ([A-Za-z0-9_-]*)?", "Who is the mayor of the ([A-Za-z0-9_-]*)?", "Who was the mayor of ([A-Za-z0-9_-]*)?", "Who was the mayor of the ([A-Za-z0-9_-]*)?", "Who were the mayors of ([A-Za-z0-9_-]*)?", "Who were the mayors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "810",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2_349",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ([A-Za-z0-9_-]*)?", "the mayors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "811",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) employees.", "Give me all employees of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) employee.", "Give me the ([A-Za-z0-9_-]*) employees.", "List all employees of ([A-Za-z0-9_-]*).", "List all the employees of ([A-Za-z0-9_-]*).", "show me all employees of ([A-Za-z0-9_-]*).", "What are the employees of ([A-Za-z0-9_-]*)?", "What are the employees of the ([A-Za-z0-9_-]*)?", "What is the employee of ([A-Za-z0-9_-]*)?", "What is the employee of the ([A-Za-z0-9_-]*)?", "What was the employee of ([A-Za-z0-9_-]*)?", "What was the employee of the ([A-Za-z0-9_-]*)?", "What were the employees of ([A-Za-z0-9_-]*)?", "What were the employees of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employees of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employees of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employees of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employees of the ([A-Za-z0-9_-]*)?", "Who are the employees of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's employee?", "Who is the employee of ([A-Za-z0-9_-]*)?", "Who is the employee of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's employee?", "Who was the employee of ([A-Za-z0-9_-]*)?", "Who was the employee of the ([A-Za-z0-9_-]*)?", "Who were the employees of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "815",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of ([A-Za-z0-9_-]*)?", "the employees of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "816",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) employees.", "Give me all employees of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) employee.", "Give me the ([A-Za-z0-9_-]*) employees.", "List all employees of ([A-Za-z0-9_-]*).", "List all the employees of ([A-Za-z0-9_-]*).", "show me all employees of ([A-Za-z0-9_-]*).", "What are the employees of ([A-Za-z0-9_-]*)?", "What are the employees of the ([A-Za-z0-9_-]*)?", "What is the employee of ([A-Za-z0-9_-]*)?", "What is the employee of the ([A-Za-z0-9_-]*)?", "What was the employee of ([A-Za-z0-9_-]*)?", "What was the employee of the ([A-Za-z0-9_-]*)?", "What were the employees of ([A-Za-z0-9_-]*)?", "What were the employees of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employees of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employees of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employees of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employees of the ([A-Za-z0-9_-]*)?", "Who are the employees of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's employee?", "Who is the employee of ([A-Za-z0-9_-]*)?", "Who is the employee of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's employee?", "Who was the employee of ([A-Za-z0-9_-]*)?", "Who was the employee of the ([A-Za-z0-9_-]*)?", "Who were the employees of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "820",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of ([A-Za-z0-9_-]*)?", "the employees of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "821",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) employees.", "Give me all employees of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) employee.", "Give me the ([A-Za-z0-9_-]*) employees.", "List all employees of ([A-Za-z0-9_-]*).", "List all the employees of ([A-Za-z0-9_-]*).", "show me all employees of ([A-Za-z0-9_-]*).", "What are the employees of ([A-Za-z0-9_-]*)?", "What are the employees of the ([A-Za-z0-9_-]*)?", "What is the employee of ([A-Za-z0-9_-]*)?", "What is the employee of the ([A-Za-z0-9_-]*)?", "What was the employee of ([A-Za-z0-9_-]*)?", "What was the employee of the ([A-Za-z0-9_-]*)?", "What were the employees of ([A-Za-z0-9_-]*)?", "What were the employees of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employees of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employees of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employees of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employees of the ([A-Za-z0-9_-]*)?", "Who are the employees of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's employee?", "Who is the employee of ([A-Za-z0-9_-]*)?", "Who is the employee of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's employee?", "Who was the employee of ([A-Za-z0-9_-]*)?", "Who was the employee of the ([A-Za-z0-9_-]*)?", "Who were the employees of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "825",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of ([A-Za-z0-9_-]*)?", "the employees of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "826",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) employees.", "Give me all employees of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) employee.", "Give me the ([A-Za-z0-9_-]*) employees.", "List all employees of ([A-Za-z0-9_-]*).", "List all the employees of ([A-Za-z0-9_-]*).", "show me all employees of ([A-Za-z0-9_-]*).", "What are the employees of ([A-Za-z0-9_-]*)?", "What are the employees of the ([A-Za-z0-9_-]*)?", "What is the employee of ([A-Za-z0-9_-]*)?", "What is the employee of the ([A-Za-z0-9_-]*)?", "What was the employee of ([A-Za-z0-9_-]*)?", "What was the employee of the ([A-Za-z0-9_-]*)?", "What were the employees of ([A-Za-z0-9_-]*)?", "What were the employees of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employees of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the employees of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employee of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the employee of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employees of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the employees of the ([A-Za-z0-9_-]*)?", "Who are the employees of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's employee?", "Who is the employee of ([A-Za-z0-9_-]*)?", "Who is the employee of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's employee?", "Who was the employee of ([A-Za-z0-9_-]*)?", "Who was the employee of the ([A-Za-z0-9_-]*)?", "Who were the employees of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "830",
    "lexicalEntryUri" : "http://localhost:8080#employee-of_255",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of ([A-Za-z0-9_-]*)?", "the employees of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfEmployees> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "831",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_263",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) developers.", "Give me all developers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) developer.", "Give me the ([A-Za-z0-9_-]*) developers.", "List all developers of ([A-Za-z0-9_-]*).", "List all the agents with developer of ([A-Za-z0-9_-]*).", "List all the developers of ([A-Za-z0-9_-]*).", "show me all developers of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the developers of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's developer?", "What ([A-Za-z0-9_-]*) is the developer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the developer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's developer?", "What ([A-Za-z0-9_-]*) was the developer of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the developer of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the developers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the developers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the developers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the developer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the developer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the developer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the developer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the developers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the developers of the ([A-Za-z0-9_-]*)?", "Who are the developers of ([A-Za-z0-9_-]*)?", "Who are the developers of the ([A-Za-z0-9_-]*)?", "Who is the developer of ([A-Za-z0-9_-]*)?", "Who is the developer of the ([A-Za-z0-9_-]*)?", "Who was the developer of ([A-Za-z0-9_-]*)?", "Who was the developer of the ([A-Za-z0-9_-]*)?", "Who were the developers of ([A-Za-z0-9_-]*)?", "Who were the developers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "835",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_263",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the developer of ([A-Za-z0-9_-]*)?", "the developers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "836",
    "lexicalEntryUri" : "http://localhost:8080#b-sides_of_271",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bSide> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "837",
    "lexicalEntryUri" : "http://localhost:8080#b-sides_of_271",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bSide> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "838",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) runtime.", "List all the populated places with runtime of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's runtime?", "What ([A-Za-z0-9_-]*) is the runtime of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the runtime of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's runtime?", "What ([A-Za-z0-9_-]*) was the runtime of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the runtime of the ([A-Za-z0-9_-]*)?", "What is the runtime of ([A-Za-z0-9_-]*)?", "What is the runtime of the ([A-Za-z0-9_-]*)?", "What was the runtime of ([A-Za-z0-9_-]*)?", "What was the runtime of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the runtime of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the runtime of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the runtime of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the runtime of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "841",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the runtime of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "842",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) runtime.", "List all the populated places with runtime of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's runtime?", "What ([A-Za-z0-9_-]*) is the runtime of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the runtime of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's runtime?", "What ([A-Za-z0-9_-]*) was the runtime of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the runtime of the ([A-Za-z0-9_-]*)?", "What is the runtime of ([A-Za-z0-9_-]*)?", "What is the runtime of the ([A-Za-z0-9_-]*)?", "What was the runtime of ([A-Za-z0-9_-]*)?", "What was the runtime of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the runtime of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the runtime of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the runtime of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the runtime of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "845",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of_297",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Software" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the runtime of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borders> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "846",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) vice president.", "Give me all vice president of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) vice president.", "List all the politicians with vice president of ([A-Za-z0-9_-]*).", "List all the vice president of ([A-Za-z0-9_-]*).", "List all vice president of ([A-Za-z0-9_-]*).", "show me all vice president of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the vice president of the ([A-Za-z0-9_-]*)?", "Who are the vice president of ([A-Za-z0-9_-]*)?", "Who are the vice president of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's vice president?", "Who is the vice president of ([A-Za-z0-9_-]*)?", "Who is the vice president of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's vice president?", "Who was the vice president of ([A-Za-z0-9_-]*)?", "Who was the vice president of the ([A-Za-z0-9_-]*)?", "Who were the vice president of ([A-Za-z0-9_-]*)?", "Who were the vice president of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "850",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "851",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) vice president.", "Give me all vice president of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) vice president.", "List all the politicians with vice president of ([A-Za-z0-9_-]*).", "List all the vice president of ([A-Za-z0-9_-]*).", "List all vice president of ([A-Za-z0-9_-]*).", "show me all vice president of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the vice president of the ([A-Za-z0-9_-]*)?", "Who are the vice president of ([A-Za-z0-9_-]*)?", "Who are the vice president of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's vice president?", "Who is the vice president of ([A-Za-z0-9_-]*)?", "Who is the vice president of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's vice president?", "Who was the vice president of ([A-Za-z0-9_-]*)?", "Who was the vice president of the ([A-Za-z0-9_-]*)?", "Who were the vice president of ([A-Za-z0-9_-]*)?", "Who were the vice president of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "855",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "856",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) vice president.", "Give me all vice president of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) vice president.", "List all the politicians with vice president of ([A-Za-z0-9_-]*).", "List all the vice president of ([A-Za-z0-9_-]*).", "List all vice president of ([A-Za-z0-9_-]*).", "show me all vice president of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the vice president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the vice president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the vice president of the ([A-Za-z0-9_-]*)?", "Who are the vice president of ([A-Za-z0-9_-]*)?", "Who are the vice president of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's vice president?", "Who is the vice president of ([A-Za-z0-9_-]*)?", "Who is the vice president of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's vice president?", "Who was the vice president of ([A-Za-z0-9_-]*)?", "Who was the vice president of the ([A-Za-z0-9_-]*)?", "Who were the vice president of ([A-Za-z0-9_-]*)?", "Who were the vice president of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "860",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of_249",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/vicePresident> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "861",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) editors.", "Give me all editors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) editor.", "Give me the ([A-Za-z0-9_-]*) editors.", "List all editors of ([A-Za-z0-9_-]*).", "List all the editors of ([A-Za-z0-9_-]*).", "List all the persons with editor of ([A-Za-z0-9_-]*).", "show me all editors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the editors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's editor?", "What ([A-Za-z0-9_-]*) is the editor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the editor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's editor?", "What ([A-Za-z0-9_-]*) was the editor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the editor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the editors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the editors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the editors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the editor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the editor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the editor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the editor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the editors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the editors of the ([A-Za-z0-9_-]*)?", "Who are the editors of ([A-Za-z0-9_-]*)?", "Who are the editors of the ([A-Za-z0-9_-]*)?", "Who is the editor of ([A-Za-z0-9_-]*)?", "Who is the editor of the ([A-Za-z0-9_-]*)?", "Who was the editor of ([A-Za-z0-9_-]*)?", "Who was the editor of the ([A-Za-z0-9_-]*)?", "Who were the editors of ([A-Za-z0-9_-]*)?", "Who were the editors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "865",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of ([A-Za-z0-9_-]*)?", "the editors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "866",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) editors.", "Give me all editors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) editor.", "Give me the ([A-Za-z0-9_-]*) editors.", "List all editors of ([A-Za-z0-9_-]*).", "List all the editors of ([A-Za-z0-9_-]*).", "List all the persons with editor of ([A-Za-z0-9_-]*).", "show me all editors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the editors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's editor?", "What ([A-Za-z0-9_-]*) is the editor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the editor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's editor?", "What ([A-Za-z0-9_-]*) was the editor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the editor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the editors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the editors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the editors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the editor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the editor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the editor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the editor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the editors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the editors of the ([A-Za-z0-9_-]*)?", "Who are the editors of ([A-Za-z0-9_-]*)?", "Who are the editors of the ([A-Za-z0-9_-]*)?", "Who is the editor of ([A-Za-z0-9_-]*)?", "Who is the editor of the ([A-Za-z0-9_-]*)?", "Who was the editor of ([A-Za-z0-9_-]*)?", "Who was the editor of the ([A-Za-z0-9_-]*)?", "Who were the editors of ([A-Za-z0-9_-]*)?", "Who were the editors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "870",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of ([A-Za-z0-9_-]*)?", "the editors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "871",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) editors.", "Give me all editors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) editor.", "Give me the ([A-Za-z0-9_-]*) editors.", "List all editors of ([A-Za-z0-9_-]*).", "List all the editors of ([A-Za-z0-9_-]*).", "List all the persons with editor of ([A-Za-z0-9_-]*).", "show me all editors of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the editors of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's editor?", "What ([A-Za-z0-9_-]*) is the editor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the editor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's editor?", "What ([A-Za-z0-9_-]*) was the editor of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the editor of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the editors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the editors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the editors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the editor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the editor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the editor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the editor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the editors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the editors of the ([A-Za-z0-9_-]*)?", "Who are the editors of ([A-Za-z0-9_-]*)?", "Who are the editors of the ([A-Za-z0-9_-]*)?", "Who is the editor of ([A-Za-z0-9_-]*)?", "Who is the editor of the ([A-Za-z0-9_-]*)?", "Who was the editor of ([A-Za-z0-9_-]*)?", "Who was the editor of the ([A-Za-z0-9_-]*)?", "Who were the editors of ([A-Za-z0-9_-]*)?", "Who were the editors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "875",
    "lexicalEntryUri" : "http://localhost:8080#editor_of_269",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of ([A-Za-z0-9_-]*)?", "the editors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "876",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) hosts.", "Give me all hosts of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) host.", "Give me the ([A-Za-z0-9_-]*) hosts.", "List all hosts of ([A-Za-z0-9_-]*).", "List all the hosts of ([A-Za-z0-9_-]*).", "List all the persons with host of ([A-Za-z0-9_-]*).", "show me all hosts of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the hosts of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's host?", "What ([A-Za-z0-9_-]*) is the host of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the host of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's host?", "What ([A-Za-z0-9_-]*) was the host of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the host of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the hosts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the hosts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the hosts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the host of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the host of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the host of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the host of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the hosts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the hosts of the ([A-Za-z0-9_-]*)?", "Who are the hosts of ([A-Za-z0-9_-]*)?", "Who are the hosts of the ([A-Za-z0-9_-]*)?", "Who is the host of ([A-Za-z0-9_-]*)?", "Who is the host of the ([A-Za-z0-9_-]*)?", "Who was the host of ([A-Za-z0-9_-]*)?", "Who was the host of the ([A-Za-z0-9_-]*)?", "Who were the hosts of ([A-Za-z0-9_-]*)?", "Who were the hosts of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "880",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of ([A-Za-z0-9_-]*)?", "the hosts of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "881",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) hosts.", "Give me all hosts of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) host.", "Give me the ([A-Za-z0-9_-]*) hosts.", "List all hosts of ([A-Za-z0-9_-]*).", "List all the hosts of ([A-Za-z0-9_-]*).", "List all the persons with host of ([A-Za-z0-9_-]*).", "show me all hosts of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the hosts of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's host?", "What ([A-Za-z0-9_-]*) is the host of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the host of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's host?", "What ([A-Za-z0-9_-]*) was the host of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the host of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the hosts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the hosts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the hosts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the host of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the host of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the host of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the host of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the hosts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the hosts of the ([A-Za-z0-9_-]*)?", "Who are the hosts of ([A-Za-z0-9_-]*)?", "Who are the hosts of the ([A-Za-z0-9_-]*)?", "Who is the host of ([A-Za-z0-9_-]*)?", "Who is the host of the ([A-Za-z0-9_-]*)?", "Who was the host of ([A-Za-z0-9_-]*)?", "Who was the host of the ([A-Za-z0-9_-]*)?", "Who were the hosts of ([A-Za-z0-9_-]*)?", "Who were the hosts of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "885",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of ([A-Za-z0-9_-]*)?", "the hosts of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "886",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) hosts.", "Give me all hosts of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) host.", "Give me the ([A-Za-z0-9_-]*) hosts.", "List all hosts of ([A-Za-z0-9_-]*).", "List all the hosts of ([A-Za-z0-9_-]*).", "List all the persons with host of ([A-Za-z0-9_-]*).", "show me all hosts of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the hosts of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's host?", "What ([A-Za-z0-9_-]*) is the host of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the host of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's host?", "What ([A-Za-z0-9_-]*) was the host of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the host of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the hosts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the hosts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the hosts of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the host of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the host of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the host of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the host of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the hosts of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the hosts of the ([A-Za-z0-9_-]*)?", "Who are the hosts of ([A-Za-z0-9_-]*)?", "Who are the hosts of the ([A-Za-z0-9_-]*)?", "Who is the host of ([A-Za-z0-9_-]*)?", "Who is the host of the ([A-Za-z0-9_-]*)?", "Who was the host of ([A-Za-z0-9_-]*)?", "Who was the host of the ([A-Za-z0-9_-]*)?", "Who were the hosts of ([A-Za-z0-9_-]*)?", "Who were the hosts of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "890",
    "lexicalEntryUri" : "http://localhost:8080#host_of_324",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of ([A-Za-z0-9_-]*)?", "the hosts of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "891",
    "lexicalEntryUri" : "http://localhost:8080#minimumtemperature-of_250",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Planet" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) minimum Temperatures.", "Give me all minimum Temperatures of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) minimum Temperature.", "Give me the ([A-Za-z0-9_-]*) minimum Temperatures.", "List all minimum Temperatures of ([A-Za-z0-9_-]*).", "List all the minimum Temperatures of ([A-Za-z0-9_-]*).", "show me all minimum Temperatures of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the minimum Temperatures of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's minimum Temperature?", "What ([A-Za-z0-9_-]*) is the minimum Temperature of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the minimum Temperature of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's minimum Temperature?", "What ([A-Za-z0-9_-]*) was the minimum Temperature of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the minimum Temperature of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the minimum Temperatures of the ([A-Za-z0-9_-]*)?", "What are the minimum Temperatures of ([A-Za-z0-9_-]*)?", "What are the minimum Temperatures of the ([A-Za-z0-9_-]*)?", "What is the minimum Temperature of ([A-Za-z0-9_-]*)?", "What is the minimum Temperature of the ([A-Za-z0-9_-]*)?", "What was the minimum Temperature of ([A-Za-z0-9_-]*)?", "What was the minimum Temperature of the ([A-Za-z0-9_-]*)?", "What were the minimum Temperatures of ([A-Za-z0-9_-]*)?", "What were the minimum Temperatures of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the minimum Temperatures of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the minimum Temperatures of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the minimum Temperature of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the minimum Temperature of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the minimum Temperature of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the minimum Temperature of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the minimum Temperatures of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the minimum Temperatures of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "895",
    "lexicalEntryUri" : "http://localhost:8080#minimumtemperature-of_250",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Planet" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the minimum Temperature of ([A-Za-z0-9_-]*)?", "the minimum Temperatures of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "896",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) musics.", "Give me all musics by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) music.", "Give me the ([A-Za-z0-9_-]*) musics.", "List all musics by ([A-Za-z0-9_-]*).", "List all the musics by ([A-Za-z0-9_-]*).", "List all the persons with music by ([A-Za-z0-9_-]*).", "show me all musics by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the musics by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's music?", "What ([A-Za-z0-9_-]*) is the music by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the music by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's music?", "What ([A-Za-z0-9_-]*) was the music by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the music by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the musics by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the musics by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the musics by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the musics by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the musics by the ([A-Za-z0-9_-]*)?", "Who are the musics by ([A-Za-z0-9_-]*)?", "Who are the musics by the ([A-Za-z0-9_-]*)?", "Who is the music by ([A-Za-z0-9_-]*)?", "Who is the music by the ([A-Za-z0-9_-]*)?", "Who was the music by ([A-Za-z0-9_-]*)?", "Who was the music by the ([A-Za-z0-9_-]*)?", "Who were the musics by ([A-Za-z0-9_-]*)?", "Who were the musics by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "900",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by ([A-Za-z0-9_-]*)?", "the musics by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "901",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) musics.", "Give me all musics by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) music.", "Give me the ([A-Za-z0-9_-]*) musics.", "List all musics by ([A-Za-z0-9_-]*).", "List all the musics by ([A-Za-z0-9_-]*).", "List all the persons with music by ([A-Za-z0-9_-]*).", "show me all musics by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the musics by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's music?", "What ([A-Za-z0-9_-]*) is the music by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the music by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's music?", "What ([A-Za-z0-9_-]*) was the music by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the music by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the musics by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the musics by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the musics by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the music by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the music by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the musics by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the musics by the ([A-Za-z0-9_-]*)?", "Who are the musics by ([A-Za-z0-9_-]*)?", "Who are the musics by the ([A-Za-z0-9_-]*)?", "Who is the music by ([A-Za-z0-9_-]*)?", "Who is the music by the ([A-Za-z0-9_-]*)?", "Who was the music by ([A-Za-z0-9_-]*)?", "Who was the music by the ([A-Za-z0-9_-]*)?", "Who were the musics by ([A-Za-z0-9_-]*)?", "Who were the musics by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "905",
    "lexicalEntryUri" : "http://localhost:8080#music-by_326",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by ([A-Za-z0-9_-]*)?", "the musics by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "906",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of_273",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Grape" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) wine regions.", "Give me all wine regions of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) wine region.", "Give me the ([A-Za-z0-9_-]*) wine regions.", "List all the places with wine region of ([A-Za-z0-9_-]*).", "List all the wine regions of ([A-Za-z0-9_-]*).", "List all wine regions of ([A-Za-z0-9_-]*).", "show me all wine regions of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the wine regions of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's wine region?", "What ([A-Za-z0-9_-]*) is the wine region of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the wine region of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's wine region?", "What ([A-Za-z0-9_-]*) was the wine region of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the wine region of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the wine regions of the ([A-Za-z0-9_-]*)?", "What are the wine regions of ([A-Za-z0-9_-]*)?", "What are the wine regions of the ([A-Za-z0-9_-]*)?", "What is the wine region of ([A-Za-z0-9_-]*)?", "What is the wine region of the ([A-Za-z0-9_-]*)?", "What was the wine region of ([A-Za-z0-9_-]*)?", "What was the wine region of the ([A-Za-z0-9_-]*)?", "What were the wine regions of ([A-Za-z0-9_-]*)?", "What were the wine regions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the wine regions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the wine regions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wine region of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wine region of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wine region of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wine region of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wine regions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wine regions of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineRegion> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "910",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of_273",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Grape" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine region of ([A-Za-z0-9_-]*)?", "the wine regions of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineRegion> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "911",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) episodes.", "Give me all episodes in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) episode.", "Give me the ([A-Za-z0-9_-]*) episodes.", "List all episodes in ([A-Za-z0-9_-]*).", "List all the episodes in ([A-Za-z0-9_-]*).", "List all the works with episode in ([A-Za-z0-9_-]*).", "show me all episodes in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the episodes in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's episode?", "What ([A-Za-z0-9_-]*) is the episode in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the episode in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's episode?", "What ([A-Za-z0-9_-]*) was the episode in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the episode in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the episodes in the ([A-Za-z0-9_-]*)?", "What are the episodes in ([A-Za-z0-9_-]*)?", "What are the episodes in the ([A-Za-z0-9_-]*)?", "What is the episode in ([A-Za-z0-9_-]*)?", "What is the episode in the ([A-Za-z0-9_-]*)?", "What was the episode in ([A-Za-z0-9_-]*)?", "What was the episode in the ([A-Za-z0-9_-]*)?", "What were the episodes in ([A-Za-z0-9_-]*)?", "What were the episodes in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the episodes in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the episodes in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the episode in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the episode in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the episode in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the episode in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the episodes in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the episodes in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "915",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the episode in ([A-Za-z0-9_-]*)?", "the episodes in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "916",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) episodes.", "Give me all episodes in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) episode.", "Give me the ([A-Za-z0-9_-]*) episodes.", "List all episodes in ([A-Za-z0-9_-]*).", "List all the episodes in ([A-Za-z0-9_-]*).", "List all the works with episode in ([A-Za-z0-9_-]*).", "show me all episodes in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the episodes in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's episode?", "What ([A-Za-z0-9_-]*) is the episode in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the episode in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's episode?", "What ([A-Za-z0-9_-]*) was the episode in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the episode in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the episodes in the ([A-Za-z0-9_-]*)?", "What are the episodes in ([A-Za-z0-9_-]*)?", "What are the episodes in the ([A-Za-z0-9_-]*)?", "What is the episode in ([A-Za-z0-9_-]*)?", "What is the episode in the ([A-Za-z0-9_-]*)?", "What was the episode in ([A-Za-z0-9_-]*)?", "What was the episode in the ([A-Za-z0-9_-]*)?", "What were the episodes in ([A-Za-z0-9_-]*)?", "What were the episodes in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the episodes in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the episodes in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the episode in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the episode in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the episode in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the episode in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the episodes in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the episodes in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "920",
    "lexicalEntryUri" : "http://localhost:8080#episode-of_242",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "TelevisionEpisode" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the episode in ([A-Za-z0-9_-]*)?", "the episodes in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "921",
    "lexicalEntryUri" : "http://localhost:8080#creator-of_256",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) creators.", "Give me all creators of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) creator.", "Give me the ([A-Za-z0-9_-]*) creators.", "List all creators of ([A-Za-z0-9_-]*).", "List all the creators of ([A-Za-z0-9_-]*).", "List all the persons with creator of ([A-Za-z0-9_-]*).", "show me all creators of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the creators of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the creators of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the creator of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the creator of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the creator of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the creator of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the creators of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the creators of the ([A-Za-z0-9_-]*)?", "Who are the creators of ([A-Za-z0-9_-]*)?", "Who are the creators of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's creator?", "Who is the creator of ([A-Za-z0-9_-]*)?", "Who is the creator of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's creator?", "Who was the creator of ([A-Za-z0-9_-]*)?", "Who was the creator of the ([A-Za-z0-9_-]*)?", "Who were the creators of ([A-Za-z0-9_-]*)?", "Who were the creators of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "925",
    "lexicalEntryUri" : "http://localhost:8080#creator-of_256",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of ([A-Za-z0-9_-]*)?", "the creators of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "926",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) population densty rank.", "List all the populated places with population densty rank of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's population densty rank?", "What ([A-Za-z0-9_-]*) is the population densty rank of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the population densty rank of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's population densty rank?", "What ([A-Za-z0-9_-]*) was the population densty rank of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the population densty rank of the ([A-Za-z0-9_-]*)?", "What is the population densty rank of ([A-Za-z0-9_-]*)?", "What is the population densty rank of the ([A-Za-z0-9_-]*)?", "What was the population densty rank of ([A-Za-z0-9_-]*)?", "What was the population densty rank of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population densty rank of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population densty rank of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population densty rank of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population densty rank of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "929",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population densty rank of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "930",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) population densty rank.", "List all the populated places with population densty rank of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's population densty rank?", "What ([A-Za-z0-9_-]*) is the population densty rank of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the population densty rank of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's population densty rank?", "What ([A-Za-z0-9_-]*) was the population densty rank of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the population densty rank of the ([A-Za-z0-9_-]*)?", "What is the population densty rank of ([A-Za-z0-9_-]*)?", "What is the population densty rank of the ([A-Za-z0-9_-]*)?", "What was the population densty rank of ([A-Za-z0-9_-]*)?", "What was the population densty rank of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population densty rank of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population densty rank of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population densty rank of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population densty rank of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "933",
    "lexicalEntryUri" : "http://localhost:8080#population-densty-rank-of_298",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population densty rank of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/populationDensityRank> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "934",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) industries.", "Give me all industries of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) industries.", "Give me the ([A-Za-z0-9_-]*) industry.", "List all industries of ([A-Za-z0-9_-]*).", "List all the foods with industry of ([A-Za-z0-9_-]*).", "List all the industries of ([A-Za-z0-9_-]*).", "show me all industries of ([A-Za-z0-9_-]*).", "What are the industries of ([A-Za-z0-9_-]*)?", "What are the industries of the ([A-Za-z0-9_-]*)?", "What is the industry of ([A-Za-z0-9_-]*)?", "What is the industry of the ([A-Za-z0-9_-]*)?", "What was the industry of ([A-Za-z0-9_-]*)?", "What was the industry of the ([A-Za-z0-9_-]*)?", "What were the industries of ([A-Za-z0-9_-]*)?", "What were the industries of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the industries of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the industries of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the industry of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the industry of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the industry of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the industry of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the industries of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the industries of the ([A-Za-z0-9_-]*)?", "Who are the industries of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's industry?", "Who is the industry of ([A-Za-z0-9_-]*)?", "Who is the industry of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's industry?", "Who was the industry of ([A-Za-z0-9_-]*)?", "Who was the industry of the ([A-Za-z0-9_-]*)?", "Who were the industries of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "938",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the industries of ([A-Za-z0-9_-]*)?", "the industry of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "939",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) industries.", "Give me all industries of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) industries.", "Give me the ([A-Za-z0-9_-]*) industry.", "List all industries of ([A-Za-z0-9_-]*).", "List all the foods with industry of ([A-Za-z0-9_-]*).", "List all the industries of ([A-Za-z0-9_-]*).", "show me all industries of ([A-Za-z0-9_-]*).", "What are the industries of ([A-Za-z0-9_-]*)?", "What are the industries of the ([A-Za-z0-9_-]*)?", "What is the industry of ([A-Za-z0-9_-]*)?", "What is the industry of the ([A-Za-z0-9_-]*)?", "What was the industry of ([A-Za-z0-9_-]*)?", "What was the industry of the ([A-Za-z0-9_-]*)?", "What were the industries of ([A-Za-z0-9_-]*)?", "What were the industries of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the industries of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the industries of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the industry of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the industry of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the industry of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the industry of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the industries of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the industries of the ([A-Za-z0-9_-]*)?", "Who are the industries of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's industry?", "Who is the industry of ([A-Za-z0-9_-]*)?", "Who is the industry of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's industry?", "Who was the industry of ([A-Za-z0-9_-]*)?", "Who was the industry of the ([A-Za-z0-9_-]*)?", "Who were the industries of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "943",
    "lexicalEntryUri" : "http://localhost:8080#industry-of_384",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the industries of ([A-Za-z0-9_-]*)?", "the industry of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/industry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "944",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) doctoral supervisors.", "Give me all doctoral supervisors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) doctoral supervisor.", "Give me the ([A-Za-z0-9_-]*) doctoral supervisors.", "List all doctoral supervisors of ([A-Za-z0-9_-]*).", "List all the doctoral supervisors of ([A-Za-z0-9_-]*).", "List all the persons with doctoral supervisor of ([A-Za-z0-9_-]*).", "show me all doctoral supervisors of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the doctoral supervisors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the doctoral supervisor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the doctoral supervisor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the doctoral supervisors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "Who are the doctoral supervisors of ([A-Za-z0-9_-]*)?", "Who are the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's doctoral supervisor?", "Who is the doctoral supervisor of ([A-Za-z0-9_-]*)?", "Who is the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's doctoral supervisor?", "Who was the doctoral supervisor of ([A-Za-z0-9_-]*)?", "Who was the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "Who were the doctoral supervisors of ([A-Za-z0-9_-]*)?", "Who were the doctoral supervisors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "948",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of ([A-Za-z0-9_-]*)?", "the doctoral supervisors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "949",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) doctoral supervisors.", "Give me all doctoral supervisors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) doctoral supervisor.", "Give me the ([A-Za-z0-9_-]*) doctoral supervisors.", "List all doctoral supervisors of ([A-Za-z0-9_-]*).", "List all the doctoral supervisors of ([A-Za-z0-9_-]*).", "List all the persons with doctoral supervisor of ([A-Za-z0-9_-]*).", "show me all doctoral supervisors of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the doctoral supervisors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the doctoral supervisor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the doctoral supervisor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the doctoral supervisors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "Who are the doctoral supervisors of ([A-Za-z0-9_-]*)?", "Who are the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's doctoral supervisor?", "Who is the doctoral supervisor of ([A-Za-z0-9_-]*)?", "Who is the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's doctoral supervisor?", "Who was the doctoral supervisor of ([A-Za-z0-9_-]*)?", "Who was the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "Who were the doctoral supervisors of ([A-Za-z0-9_-]*)?", "Who were the doctoral supervisors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "953",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of ([A-Za-z0-9_-]*)?", "the doctoral supervisors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "954",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) doctoral supervisors.", "Give me all doctoral supervisors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) doctoral supervisor.", "Give me the ([A-Za-z0-9_-]*) doctoral supervisors.", "List all doctoral supervisors of ([A-Za-z0-9_-]*).", "List all the doctoral supervisors of ([A-Za-z0-9_-]*).", "List all the persons with doctoral supervisor of ([A-Za-z0-9_-]*).", "show me all doctoral supervisors of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the doctoral supervisors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the doctoral supervisor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the doctoral supervisor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the doctoral supervisors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "Who are the doctoral supervisors of ([A-Za-z0-9_-]*)?", "Who are the doctoral supervisors of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's doctoral supervisor?", "Who is the doctoral supervisor of ([A-Za-z0-9_-]*)?", "Who is the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's doctoral supervisor?", "Who was the doctoral supervisor of ([A-Za-z0-9_-]*)?", "Who was the doctoral supervisor of the ([A-Za-z0-9_-]*)?", "Who were the doctoral supervisors of ([A-Za-z0-9_-]*)?", "Who were the doctoral supervisors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "958",
    "lexicalEntryUri" : "http://localhost:8080#doctoralsupervisor_of_300",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of ([A-Za-z0-9_-]*)?", "the doctoral supervisors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "959",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) time zone.", "List all the countries with time zone in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) is the time zone in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the time zone in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) was the time zone in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the time zone in the ([A-Za-z0-9_-]*)?", "What is the time zone in ([A-Za-z0-9_-]*)?", "What is the time zone in the ([A-Za-z0-9_-]*)?", "What was the time zone in ([A-Za-z0-9_-]*)?", "What was the time zone in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "962",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "963",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) time zone.", "List all the countries with time zone in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) is the time zone in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the time zone in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's time zone?", "What ([A-Za-z0-9_-]*) was the time zone in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the time zone in the ([A-Za-z0-9_-]*)?", "What is the time zone in ([A-Za-z0-9_-]*)?", "What is the time zone in the ([A-Za-z0-9_-]*)?", "What was the time zone in ([A-Za-z0-9_-]*)?", "What was the time zone in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the time zone in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the time zone in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "966",
    "lexicalEntryUri" : "http://localhost:8080#time-zone_in_241",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/timeZone> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "967",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of_294",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) nationality.", "List all the countries with nationality of ([A-Za-z0-9_-]*).", "What is the nationality of ([A-Za-z0-9_-]*)?", "What is the nationality of the ([A-Za-z0-9_-]*)?", "What was the nationality of ([A-Za-z0-9_-]*)?", "What was the nationality of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the nationality of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the nationality of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the nationality of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the nationality of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's nationality?", "Who is the nationality of ([A-Za-z0-9_-]*)?", "Who is the nationality of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's nationality?", "Who was the nationality of ([A-Za-z0-9_-]*)?", "Who was the nationality of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "970",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of_294",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "971",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) official colors.", "Give me all official colors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) official color.", "Give me the ([A-Za-z0-9_-]*) official colors.", "List all official colors of ([A-Za-z0-9_-]*).", "List all the official colors of ([A-Za-z0-9_-]*).", "show me all official colors of ([A-Za-z0-9_-]*).", "What are the official colors of ([A-Za-z0-9_-]*)?", "What are the official colors of the ([A-Za-z0-9_-]*)?", "What is the official color of ([A-Za-z0-9_-]*)?", "What is the official color of the ([A-Za-z0-9_-]*)?", "What was the official color of ([A-Za-z0-9_-]*)?", "What was the official color of the ([A-Za-z0-9_-]*)?", "What were the official colors of ([A-Za-z0-9_-]*)?", "What were the official colors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official colors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official colors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official color of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official color of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official color of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official color of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official colors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official colors of the ([A-Za-z0-9_-]*)?", "Who are the official colors of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's official color?", "Who is the official color of ([A-Za-z0-9_-]*)?", "Who is the official color of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's official color?", "Who was the official color of ([A-Za-z0-9_-]*)?", "Who was the official color of the ([A-Za-z0-9_-]*)?", "Who were the official colors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "975",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official color of ([A-Za-z0-9_-]*)?", "the official colors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "976",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) official colors.", "Give me all official colors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) official color.", "Give me the ([A-Za-z0-9_-]*) official colors.", "List all official colors of ([A-Za-z0-9_-]*).", "List all the official colors of ([A-Za-z0-9_-]*).", "show me all official colors of ([A-Za-z0-9_-]*).", "What are the official colors of ([A-Za-z0-9_-]*)?", "What are the official colors of the ([A-Za-z0-9_-]*)?", "What is the official color of ([A-Za-z0-9_-]*)?", "What is the official color of the ([A-Za-z0-9_-]*)?", "What was the official color of ([A-Za-z0-9_-]*)?", "What was the official color of the ([A-Za-z0-9_-]*)?", "What were the official colors of ([A-Za-z0-9_-]*)?", "What were the official colors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official colors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the official colors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official color of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the official color of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official color of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the official color of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official colors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the official colors of the ([A-Za-z0-9_-]*)?", "Who are the official colors of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's official color?", "Who is the official color of ([A-Za-z0-9_-]*)?", "Who is the official color of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's official color?", "Who was the official color of ([A-Za-z0-9_-]*)?", "Who was the official color of the ([A-Za-z0-9_-]*)?", "Who were the official colors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "980",
    "lexicalEntryUri" : "http://localhost:8080#official_color_of_260",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official color of ([A-Za-z0-9_-]*)?", "the official colors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialSchoolColour> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "981",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) children.", "Give me all children of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) child.", "Give me the ([A-Za-z0-9_-]*) children.", "List all children of ([A-Za-z0-9_-]*).", "List all the children of ([A-Za-z0-9_-]*).", "List all the persons with child of ([A-Za-z0-9_-]*).", "show me all children of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the children of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the children of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the child of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the child of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the child of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the child of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the children of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the children of the ([A-Za-z0-9_-]*)?", "Who are the children of ([A-Za-z0-9_-]*)?", "Who are the children of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's child?", "Who is the child of ([A-Za-z0-9_-]*)?", "Who is the child of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's child?", "Who was the child of ([A-Za-z0-9_-]*)?", "Who was the child of the ([A-Za-z0-9_-]*)?", "Who were the children of ([A-Za-z0-9_-]*)?", "Who were the children of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "985",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of ([A-Za-z0-9_-]*)?", "the children of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "986",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) children.", "Give me all children of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) child.", "Give me the ([A-Za-z0-9_-]*) children.", "List all children of ([A-Za-z0-9_-]*).", "List all the children of ([A-Za-z0-9_-]*).", "List all the persons with child of ([A-Za-z0-9_-]*).", "show me all children of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the children of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the children of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the child of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the child of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the child of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the child of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the children of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the children of the ([A-Za-z0-9_-]*)?", "Who are the children of ([A-Za-z0-9_-]*)?", "Who are the children of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's child?", "Who is the child of ([A-Za-z0-9_-]*)?", "Who is the child of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's child?", "Who was the child of ([A-Za-z0-9_-]*)?", "Who was the child of the ([A-Za-z0-9_-]*)?", "Who were the children of ([A-Za-z0-9_-]*)?", "Who were the children of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "990",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of ([A-Za-z0-9_-]*)?", "the children of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "991",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) children.", "Give me all children of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) child.", "Give me the ([A-Za-z0-9_-]*) children.", "List all children of ([A-Za-z0-9_-]*).", "List all the children of ([A-Za-z0-9_-]*).", "List all the persons with child of ([A-Za-z0-9_-]*).", "show me all children of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the children of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the children of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the child of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the child of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the child of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the child of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the children of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the children of the ([A-Za-z0-9_-]*)?", "Who are the children of ([A-Za-z0-9_-]*)?", "Who are the children of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's child?", "Who is the child of ([A-Za-z0-9_-]*)?", "Who is the child of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's child?", "Who was the child of ([A-Za-z0-9_-]*)?", "Who was the child of the ([A-Za-z0-9_-]*)?", "Who were the children of ([A-Za-z0-9_-]*)?", "Who were the children of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "995",
    "lexicalEntryUri" : "http://localhost:8080#child_of_257",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of ([A-Za-z0-9_-]*)?", "the children of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/child> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "996",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) owners.", "Give me all owners of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) owner.", "Give me the ([A-Za-z0-9_-]*) owners.", "List all owners of ([A-Za-z0-9_-]*).", "List all the owners of ([A-Za-z0-9_-]*).", "List all the persons with owner of ([A-Za-z0-9_-]*).", "show me all owners of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the owners of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the owners of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the owner of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the owner of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the owner of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the owner of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the owners of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the owners of the ([A-Za-z0-9_-]*)?", "Who are the owners of ([A-Za-z0-9_-]*)?", "Who are the owners of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's owner?", "Who is the owner of ([A-Za-z0-9_-]*)?", "Who is the owner of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's owner?", "Who was the owner of ([A-Za-z0-9_-]*)?", "Who was the owner of the ([A-Za-z0-9_-]*)?", "Who were the owners of ([A-Za-z0-9_-]*)?", "Who were the owners of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1000",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the owner of ([A-Za-z0-9_-]*)?", "the owners of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1001",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) owners.", "Give me all owners of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) owner.", "Give me the ([A-Za-z0-9_-]*) owners.", "List all owners of ([A-Za-z0-9_-]*).", "List all the owners of ([A-Za-z0-9_-]*).", "List all the persons with owner of ([A-Za-z0-9_-]*).", "show me all owners of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the owners of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the owners of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the owner of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the owner of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the owner of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the owner of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the owners of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the owners of the ([A-Za-z0-9_-]*)?", "Who are the owners of ([A-Za-z0-9_-]*)?", "Who are the owners of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's owner?", "Who is the owner of ([A-Za-z0-9_-]*)?", "Who is the owner of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's owner?", "Who was the owner of ([A-Za-z0-9_-]*)?", "Who was the owner of the ([A-Za-z0-9_-]*)?", "Who were the owners of ([A-Za-z0-9_-]*)?", "Who were the owners of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1005",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1_368",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the owner of ([A-Za-z0-9_-]*)?", "the owners of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1006",
    "lexicalEntryUri" : "http://localhost:8080#dissolutiondate_of_350",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) dissolution date.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's dissolution date?", "What ([A-Za-z0-9_-]*) is the dissolution date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the dissolution date of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's dissolution date?", "What ([A-Za-z0-9_-]*) was the dissolution date of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the dissolution date of the ([A-Za-z0-9_-]*)?", "What is the dissolution date of ([A-Za-z0-9_-]*)?", "What is the dissolution date of the ([A-Za-z0-9_-]*)?", "What was the dissolution date of ([A-Za-z0-9_-]*)?", "What was the dissolution date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the dissolution date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the dissolution date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the dissolution date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the dissolution date of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1009",
    "lexicalEntryUri" : "http://localhost:8080#dissolutiondate_of_350",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "AdministrativeRegion" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the dissolution date of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1010",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) largest city.", "List all the cities with largest city of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's largest city?", "What ([A-Za-z0-9_-]*) is the largest city of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the largest city of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's largest city?", "What ([A-Za-z0-9_-]*) was the largest city of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the largest city of the ([A-Za-z0-9_-]*)?", "What is the largest city of ([A-Za-z0-9_-]*)?", "What is the largest city of the ([A-Za-z0-9_-]*)?", "What was the largest city of ([A-Za-z0-9_-]*)?", "What was the largest city of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest city of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest city of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest city of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest city of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1013",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1014",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) largest city.", "List all the cities with largest city of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's largest city?", "What ([A-Za-z0-9_-]*) is the largest city of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the largest city of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's largest city?", "What ([A-Za-z0-9_-]*) was the largest city of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the largest city of the ([A-Za-z0-9_-]*)?", "What is the largest city of ([A-Za-z0-9_-]*)?", "What is the largest city of the ([A-Za-z0-9_-]*)?", "What was the largest city of ([A-Za-z0-9_-]*)?", "What was the largest city of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest city of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest city of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest city of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest city of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1017",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1018",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) largest city.", "List all the cities with largest city of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's largest city?", "What ([A-Za-z0-9_-]*) is the largest city of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the largest city of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's largest city?", "What ([A-Za-z0-9_-]*) was the largest city of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the largest city of the ([A-Za-z0-9_-]*)?", "What is the largest city of ([A-Za-z0-9_-]*)?", "What is the largest city of the ([A-Za-z0-9_-]*)?", "What was the largest city of ([A-Za-z0-9_-]*)?", "What was the largest city of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest city of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest city of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest city of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest city of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1021",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_of_323",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1022",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) books.", "Give me all books by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) book.", "Give me the ([A-Za-z0-9_-]*) books.", "List all books by ([A-Za-z0-9_-]*).", "List all the books by ([A-Za-z0-9_-]*).", "List all the writers with book by ([A-Za-z0-9_-]*).", "show me all books by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the books by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) is the book by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the book by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) was the book by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the book by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the books by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books by the ([A-Za-z0-9_-]*)?", "Who are the books by ([A-Za-z0-9_-]*)?", "Who are the books by the ([A-Za-z0-9_-]*)?", "Who is the book by ([A-Za-z0-9_-]*)?", "Who is the book by the ([A-Za-z0-9_-]*)?", "Who was the book by ([A-Za-z0-9_-]*)?", "Who was the book by the ([A-Za-z0-9_-]*)?", "Who were the books by ([A-Za-z0-9_-]*)?", "Who were the books by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1026",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by ([A-Za-z0-9_-]*)?", "the books by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1027",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) books.", "Give me all books by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) book.", "Give me the ([A-Za-z0-9_-]*) books.", "List all books by ([A-Za-z0-9_-]*).", "List all the books by ([A-Za-z0-9_-]*).", "List all the writers with book by ([A-Za-z0-9_-]*).", "show me all books by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the books by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) is the book by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the book by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) was the book by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the book by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the books by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books by the ([A-Za-z0-9_-]*)?", "Who are the books by ([A-Za-z0-9_-]*)?", "Who are the books by the ([A-Za-z0-9_-]*)?", "Who is the book by ([A-Za-z0-9_-]*)?", "Who is the book by the ([A-Za-z0-9_-]*)?", "Who was the book by ([A-Za-z0-9_-]*)?", "Who was the book by the ([A-Za-z0-9_-]*)?", "Who were the books by ([A-Za-z0-9_-]*)?", "Who were the books by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1031",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by ([A-Za-z0-9_-]*)?", "the books by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1032",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) books.", "Give me all books by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) book.", "Give me the ([A-Za-z0-9_-]*) books.", "List all books by ([A-Za-z0-9_-]*).", "List all the books by ([A-Za-z0-9_-]*).", "List all the writers with book by ([A-Za-z0-9_-]*).", "show me all books by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the books by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) is the book by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the book by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's book?", "What ([A-Za-z0-9_-]*) was the book by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the book by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the books by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the books by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the book by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the book by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the books by the ([A-Za-z0-9_-]*)?", "Who are the books by ([A-Za-z0-9_-]*)?", "Who are the books by the ([A-Za-z0-9_-]*)?", "Who is the book by ([A-Za-z0-9_-]*)?", "Who is the book by the ([A-Za-z0-9_-]*)?", "Who was the book by ([A-Za-z0-9_-]*)?", "Who was the book by the ([A-Za-z0-9_-]*)?", "Who were the books by ([A-Za-z0-9_-]*)?", "Who were the books by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1036",
    "lexicalEntryUri" : "http://localhost:8080#book_by_330",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by ([A-Za-z0-9_-]*)?", "the books by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1037",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) number of pages.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's number of pages?", "What ([A-Za-z0-9_-]*) is the number of pages of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the number of pages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's number of pages?", "What ([A-Za-z0-9_-]*) was the number of pages of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the number of pages of the ([A-Za-z0-9_-]*)?", "What is the number of pages of ([A-Za-z0-9_-]*)?", "What is the number of pages of the ([A-Za-z0-9_-]*)?", "What was the number of pages of ([A-Za-z0-9_-]*)?", "What was the number of pages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number of pages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number of pages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number of pages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number of pages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1040",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1041",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) number of pages.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's number of pages?", "What ([A-Za-z0-9_-]*) is the number of pages of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the number of pages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's number of pages?", "What ([A-Za-z0-9_-]*) was the number of pages of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the number of pages of the ([A-Za-z0-9_-]*)?", "What is the number of pages of ([A-Za-z0-9_-]*)?", "What is the number of pages of the ([A-Za-z0-9_-]*)?", "What was the number of pages of ([A-Za-z0-9_-]*)?", "What was the number of pages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number of pages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number of pages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number of pages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number of pages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1044",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1045",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) number of pages.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's number of pages?", "What ([A-Za-z0-9_-]*) is the number of pages of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the number of pages of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's number of pages?", "What ([A-Za-z0-9_-]*) was the number of pages of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the number of pages of the ([A-Za-z0-9_-]*)?", "What is the number of pages of ([A-Za-z0-9_-]*)?", "What is the number of pages of the ([A-Za-z0-9_-]*)?", "What was the number of pages of ([A-Za-z0-9_-]*)?", "What was the number of pages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number of pages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number of pages of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number of pages of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number of pages of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1048",
    "lexicalEntryUri" : "http://localhost:8080#numberofpages-of_248",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfPages> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1049",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) instruments.", "Give me all instruments in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) instrument.", "Give me the ([A-Za-z0-9_-]*) instruments.", "List all instruments in ([A-Za-z0-9_-]*).", "List all the instruments in ([A-Za-z0-9_-]*).", "List all the musical artists with instrument in ([A-Za-z0-9_-]*).", "show me all instruments in ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the instruments in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the instruments in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the instrument in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the instrument in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the instrument in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the instrument in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the instruments in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the instruments in the ([A-Za-z0-9_-]*)?", "Who are the instruments in ([A-Za-z0-9_-]*)?", "Who are the instruments in the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's instrument?", "Who is the instrument in ([A-Za-z0-9_-]*)?", "Who is the instrument in the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's instrument?", "Who was the instrument in ([A-Za-z0-9_-]*)?", "Who was the instrument in the ([A-Za-z0-9_-]*)?", "Who were the instruments in ([A-Za-z0-9_-]*)?", "Who were the instruments in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1053",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the instrument in ([A-Za-z0-9_-]*)?", "the instruments in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1054",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) instruments.", "Give me all instruments in ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) instrument.", "Give me the ([A-Za-z0-9_-]*) instruments.", "List all instruments in ([A-Za-z0-9_-]*).", "List all the instruments in ([A-Za-z0-9_-]*).", "List all the musical artists with instrument in ([A-Za-z0-9_-]*).", "show me all instruments in ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the instruments in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the instruments in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the instrument in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the instrument in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the instrument in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the instrument in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the instruments in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the instruments in the ([A-Za-z0-9_-]*)?", "Who are the instruments in ([A-Za-z0-9_-]*)?", "Who are the instruments in the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's instrument?", "Who is the instrument in ([A-Za-z0-9_-]*)?", "Who is the instrument in the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's instrument?", "Who was the instrument in ([A-Za-z0-9_-]*)?", "Who was the instrument in the ([A-Za-z0-9_-]*)?", "Who were the instruments in ([A-Za-z0-9_-]*)?", "Who were the instruments in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1058",
    "lexicalEntryUri" : "http://localhost:8080#instrument-of_276",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the instrument in ([A-Za-z0-9_-]*)?", "the instruments in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1059",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "IceHockeyLeague" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) coaches.", "Give me all coaches of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) coach.", "Give me the ([A-Za-z0-9_-]*) coaches.", "List all coaches of ([A-Za-z0-9_-]*).", "List all the coaches of ([A-Za-z0-9_-]*).", "List all the persons with coach of ([A-Za-z0-9_-]*).", "show me all coaches of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the coaches of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's coach?", "What ([A-Za-z0-9_-]*) is the coach of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the coach of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's coach?", "What ([A-Za-z0-9_-]*) was the coach of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the coach of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the coaches of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the coaches of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the coaches of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the coach of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the coach of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the coach of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the coach of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the coaches of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the coaches of the ([A-Za-z0-9_-]*)?", "Who are the coaches of ([A-Za-z0-9_-]*)?", "Who are the coaches of the ([A-Za-z0-9_-]*)?", "Who is the coach of ([A-Za-z0-9_-]*)?", "Who is the coach of the ([A-Za-z0-9_-]*)?", "Who was the coach of ([A-Za-z0-9_-]*)?", "Who was the coach of the ([A-Za-z0-9_-]*)?", "Who were the coaches of ([A-Za-z0-9_-]*)?", "Who were the coaches of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1063",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "IceHockeyLeague" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ([A-Za-z0-9_-]*)?", "the coaches of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1064",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) coaches.", "Give me all coaches of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) coach.", "Give me the ([A-Za-z0-9_-]*) coaches.", "List all coaches of ([A-Za-z0-9_-]*).", "List all the coaches of ([A-Za-z0-9_-]*).", "List all the persons with coach of ([A-Za-z0-9_-]*).", "show me all coaches of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the coaches of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's coach?", "What ([A-Za-z0-9_-]*) is the coach of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the coach of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's coach?", "What ([A-Za-z0-9_-]*) was the coach of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the coach of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the coaches of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the coaches of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the coaches of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the coach of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the coach of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the coach of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the coach of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the coaches of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the coaches of the ([A-Za-z0-9_-]*)?", "Who are the coaches of ([A-Za-z0-9_-]*)?", "Who are the coaches of the ([A-Za-z0-9_-]*)?", "Who is the coach of ([A-Za-z0-9_-]*)?", "Who is the coach of the ([A-Za-z0-9_-]*)?", "Who was the coach of ([A-Za-z0-9_-]*)?", "Who was the coach of the ([A-Za-z0-9_-]*)?", "Who were the coaches of ([A-Za-z0-9_-]*)?", "Who were the coaches of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1068",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ([A-Za-z0-9_-]*)?", "the coaches of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1069",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) coaches.", "Give me all coaches of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) coach.", "Give me the ([A-Za-z0-9_-]*) coaches.", "List all coaches of ([A-Za-z0-9_-]*).", "List all the coaches of ([A-Za-z0-9_-]*).", "List all the persons with coach of ([A-Za-z0-9_-]*).", "show me all coaches of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the coaches of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's coach?", "What ([A-Za-z0-9_-]*) is the coach of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the coach of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's coach?", "What ([A-Za-z0-9_-]*) was the coach of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the coach of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the coaches of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the coaches of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the coaches of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the coach of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the coach of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the coach of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the coach of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the coaches of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the coaches of the ([A-Za-z0-9_-]*)?", "Who are the coaches of ([A-Za-z0-9_-]*)?", "Who are the coaches of the ([A-Za-z0-9_-]*)?", "Who is the coach of ([A-Za-z0-9_-]*)?", "Who is the coach of the ([A-Za-z0-9_-]*)?", "Who was the coach of ([A-Za-z0-9_-]*)?", "Who was the coach of the ([A-Za-z0-9_-]*)?", "Who were the coaches of ([A-Za-z0-9_-]*)?", "Who were the coaches of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1073",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ([A-Za-z0-9_-]*)?", "the coaches of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1074",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) coaches.", "Give me all coaches of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) coach.", "Give me the ([A-Za-z0-9_-]*) coaches.", "List all coaches of ([A-Za-z0-9_-]*).", "List all the coaches of ([A-Za-z0-9_-]*).", "List all the persons with coach of ([A-Za-z0-9_-]*).", "show me all coaches of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the coaches of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's coach?", "What ([A-Za-z0-9_-]*) is the coach of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the coach of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's coach?", "What ([A-Za-z0-9_-]*) was the coach of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the coach of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the coaches of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the coaches of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the coaches of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the coach of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the coach of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the coach of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the coach of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the coaches of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the coaches of the ([A-Za-z0-9_-]*)?", "Who are the coaches of ([A-Za-z0-9_-]*)?", "Who are the coaches of the ([A-Za-z0-9_-]*)?", "Who is the coach of ([A-Za-z0-9_-]*)?", "Who is the coach of the ([A-Za-z0-9_-]*)?", "Who was the coach of ([A-Za-z0-9_-]*)?", "Who was the coach of the ([A-Za-z0-9_-]*)?", "Who were the coaches of ([A-Za-z0-9_-]*)?", "Who were the coaches of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1078",
    "lexicalEntryUri" : "http://localhost:8080#coach_of_302",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ([A-Za-z0-9_-]*)?", "the coaches of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/coach> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1079",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) artistic movements.", "Give me all artistic movements of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) artistic movement.", "Give me the ([A-Za-z0-9_-]*) artistic movements.", "List all artistic movements of ([A-Za-z0-9_-]*).", "List all the artistic movements of ([A-Za-z0-9_-]*).", "show me all artistic movements of ([A-Za-z0-9_-]*).", "What are the artistic movements of ([A-Za-z0-9_-]*)?", "What are the artistic movements of the ([A-Za-z0-9_-]*)?", "What is the artistic movement of ([A-Za-z0-9_-]*)?", "What is the artistic movement of the ([A-Za-z0-9_-]*)?", "What was the artistic movement of ([A-Za-z0-9_-]*)?", "What was the artistic movement of the ([A-Za-z0-9_-]*)?", "What were the artistic movements of ([A-Za-z0-9_-]*)?", "What were the artistic movements of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the artistic movements of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the artistic movements of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the artistic movement of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the artistic movement of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the artistic movement of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the artistic movement of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the artistic movements of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the artistic movements of the ([A-Za-z0-9_-]*)?", "Who are the artistic movements of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's artistic movement?", "Who is the artistic movement of ([A-Za-z0-9_-]*)?", "Who is the artistic movement of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's artistic movement?", "Who was the artistic movement of ([A-Za-z0-9_-]*)?", "Who was the artistic movement of the ([A-Za-z0-9_-]*)?", "Who were the artistic movements of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1083",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ([A-Za-z0-9_-]*)?", "the artistic movements of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1084",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) artistic movements.", "Give me all artistic movements of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) artistic movement.", "Give me the ([A-Za-z0-9_-]*) artistic movements.", "List all artistic movements of ([A-Za-z0-9_-]*).", "List all the artistic movements of ([A-Za-z0-9_-]*).", "show me all artistic movements of ([A-Za-z0-9_-]*).", "What are the artistic movements of ([A-Za-z0-9_-]*)?", "What are the artistic movements of the ([A-Za-z0-9_-]*)?", "What is the artistic movement of ([A-Za-z0-9_-]*)?", "What is the artistic movement of the ([A-Za-z0-9_-]*)?", "What was the artistic movement of ([A-Za-z0-9_-]*)?", "What was the artistic movement of the ([A-Za-z0-9_-]*)?", "What were the artistic movements of ([A-Za-z0-9_-]*)?", "What were the artistic movements of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the artistic movements of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the artistic movements of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the artistic movement of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the artistic movement of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the artistic movement of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the artistic movement of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the artistic movements of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the artistic movements of the ([A-Za-z0-9_-]*)?", "Who are the artistic movements of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's artistic movement?", "Who is the artistic movement of ([A-Za-z0-9_-]*)?", "Who is the artistic movement of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's artistic movement?", "Who was the artistic movement of ([A-Za-z0-9_-]*)?", "Who was the artistic movement of the ([A-Za-z0-9_-]*)?", "Who were the artistic movements of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1088",
    "lexicalEntryUri" : "http://localhost:8080#artisticmovement_of_293",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ([A-Za-z0-9_-]*)?", "the artistic movements of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1089",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) federal ministers.", "Give me all federal ministers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) federal minister.", "Give me the ([A-Za-z0-9_-]*) federal ministers.", "List all federal ministers of ([A-Za-z0-9_-]*).", "List all the federal ministers of ([A-Za-z0-9_-]*).", "List all the persons with federal minister of ([A-Za-z0-9_-]*).", "show me all federal ministers of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the federal ministers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the federal ministers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the federal minister of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the federal minister of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the federal minister of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the federal minister of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the federal ministers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the federal ministers of the ([A-Za-z0-9_-]*)?", "Who are the federal ministers of ([A-Za-z0-9_-]*)?", "Who are the federal ministers of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's federal minister?", "Who is the federal minister of ([A-Za-z0-9_-]*)?", "Who is the federal minister of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's federal minister?", "Who was the federal minister of ([A-Za-z0-9_-]*)?", "Who was the federal minister of the ([A-Za-z0-9_-]*)?", "Who were the federal ministers of ([A-Za-z0-9_-]*)?", "Who were the federal ministers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1093",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the federal minister of ([A-Za-z0-9_-]*)?", "the federal ministers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1094",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) federal ministers.", "Give me all federal ministers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) federal minister.", "Give me the ([A-Za-z0-9_-]*) federal ministers.", "List all federal ministers of ([A-Za-z0-9_-]*).", "List all the federal ministers of ([A-Za-z0-9_-]*).", "List all the persons with federal minister of ([A-Za-z0-9_-]*).", "show me all federal ministers of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the federal ministers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the federal ministers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the federal minister of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the federal minister of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the federal minister of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the federal minister of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the federal ministers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the federal ministers of the ([A-Za-z0-9_-]*)?", "Who are the federal ministers of ([A-Za-z0-9_-]*)?", "Who are the federal ministers of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's federal minister?", "Who is the federal minister of ([A-Za-z0-9_-]*)?", "Who is the federal minister of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's federal minister?", "Who was the federal minister of ([A-Za-z0-9_-]*)?", "Who was the federal minister of the ([A-Za-z0-9_-]*)?", "Who were the federal ministers of ([A-Za-z0-9_-]*)?", "Who were the federal ministers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1098",
    "lexicalEntryUri" : "http://localhost:8080#federal-minister_of_292",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the federal minister of ([A-Za-z0-9_-]*)?", "the federal ministers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1099",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of_359",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) influencers.", "Give me all influencers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) influencer.", "Give me the ([A-Za-z0-9_-]*) influencers.", "List all influencers of ([A-Za-z0-9_-]*).", "List all the influencers of ([A-Za-z0-9_-]*).", "List all the persons with influencer of ([A-Za-z0-9_-]*).", "show me all influencers of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the influencers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the influencers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the influencer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the influencer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the influencer of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the influencer of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the influencers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the influencers of the ([A-Za-z0-9_-]*)?", "Who are the influencers of ([A-Za-z0-9_-]*)?", "Who are the influencers of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's influencer?", "Who is the influencer of ([A-Za-z0-9_-]*)?", "Who is the influencer of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's influencer?", "Who was the influencer of ([A-Za-z0-9_-]*)?", "Who was the influencer of the ([A-Za-z0-9_-]*)?", "Who were the influencers of ([A-Za-z0-9_-]*)?", "Who were the influencers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1103",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of_359",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the influencer of ([A-Za-z0-9_-]*)?", "the influencers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1104",
    "lexicalEntryUri" : "http://localhost:8080#team_of_354",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) teams.", "Give me all teams of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) team.", "Give me the ([A-Za-z0-9_-]*) teams.", "List all teams of ([A-Za-z0-9_-]*).", "List all the Ice Hockey Leagues with team of ([A-Za-z0-9_-]*).", "List all the teams of ([A-Za-z0-9_-]*).", "show me all teams of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the teams of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's team?", "What ([A-Za-z0-9_-]*) is the team of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the team of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's team?", "What ([A-Za-z0-9_-]*) was the team of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the team of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the teams of the ([A-Za-z0-9_-]*)?", "What are the teams of ([A-Za-z0-9_-]*)?", "What are the teams of the ([A-Za-z0-9_-]*)?", "What is the team of ([A-Za-z0-9_-]*)?", "What is the team of the ([A-Za-z0-9_-]*)?", "What was the team of ([A-Za-z0-9_-]*)?", "What was the team of the ([A-Za-z0-9_-]*)?", "What were the teams of ([A-Za-z0-9_-]*)?", "What were the teams of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the teams of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the teams of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the team of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the team of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the team of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the team of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the teams of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the teams of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1108",
    "lexicalEntryUri" : "http://localhost:8080#team_of_354",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the team of ([A-Za-z0-9_-]*)?", "the teams of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1109",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) successor.", "List all the persons with successor of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) is the successor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the successor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the successor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the successor of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's successor?", "Who is the successor of ([A-Za-z0-9_-]*)?", "Who is the successor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's successor?", "Who was the successor of ([A-Za-z0-9_-]*)?", "Who was the successor of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1112",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1113",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) successor.", "List all the persons with successor of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) is the successor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the successor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the successor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the successor of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's successor?", "Who is the successor of ([A-Za-z0-9_-]*)?", "Who is the successor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's successor?", "Who was the successor of ([A-Za-z0-9_-]*)?", "Who was the successor of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1116",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1117",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) successor.", "List all the persons with successor of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) is the successor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the successor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the successor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the successor of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's successor?", "Who is the successor of ([A-Za-z0-9_-]*)?", "Who is the successor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's successor?", "Who was the successor of ([A-Za-z0-9_-]*)?", "Who was the successor of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1120",
    "lexicalEntryUri" : "http://localhost:8080#successor_of_303",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1121",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) form of government.", "Give me all form of government of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) form of government.", "List all form of government of ([A-Za-z0-9_-]*).", "List all the form of government of ([A-Za-z0-9_-]*).", "List all the organizations with form of government of ([A-Za-z0-9_-]*).", "show me all form of government of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the form of government of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's form of government?", "What ([A-Za-z0-9_-]*) is the form of government of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the form of government of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's form of government?", "What ([A-Za-z0-9_-]*) was the form of government of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the form of government of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the form of government of the ([A-Za-z0-9_-]*)?", "Who are the form of government of ([A-Za-z0-9_-]*)?", "Who are the form of government of the ([A-Za-z0-9_-]*)?", "Who is the form of government of ([A-Za-z0-9_-]*)?", "Who is the form of government of the ([A-Za-z0-9_-]*)?", "Who was the form of government of ([A-Za-z0-9_-]*)?", "Who was the form of government of the ([A-Za-z0-9_-]*)?", "Who were the form of government of ([A-Za-z0-9_-]*)?", "Who were the form of government of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1125",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1126",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) form of government.", "Give me all form of government of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) form of government.", "List all form of government of ([A-Za-z0-9_-]*).", "List all the form of government of ([A-Za-z0-9_-]*).", "List all the organizations with form of government of ([A-Za-z0-9_-]*).", "show me all form of government of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the form of government of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's form of government?", "What ([A-Za-z0-9_-]*) is the form of government of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the form of government of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's form of government?", "What ([A-Za-z0-9_-]*) was the form of government of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the form of government of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the form of government of the ([A-Za-z0-9_-]*)?", "Who are the form of government of ([A-Za-z0-9_-]*)?", "Who are the form of government of the ([A-Za-z0-9_-]*)?", "Who is the form of government of ([A-Za-z0-9_-]*)?", "Who is the form of government of the ([A-Za-z0-9_-]*)?", "Who was the form of government of ([A-Za-z0-9_-]*)?", "Who was the form of government of the ([A-Za-z0-9_-]*)?", "Who were the form of government of ([A-Za-z0-9_-]*)?", "Who were the form of government of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1130",
    "lexicalEntryUri" : "http://localhost:8080#form-of-government_of_382",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1131",
    "lexicalEntryUri" : "http://localhost:8080#number_of_363",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) number of locations.", "What is the number of locations of ([A-Za-z0-9_-]*)?", "What is the number of locations of the ([A-Za-z0-9_-]*)?", "What was the number of locations of ([A-Za-z0-9_-]*)?", "What was the number of locations of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number of locations of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the number of locations of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number of locations of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the number of locations of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's number of locations?", "Who is the number of locations of ([A-Za-z0-9_-]*)?", "Who is the number of locations of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's number of locations?", "Who was the number of locations of ([A-Za-z0-9_-]*)?", "Who was the number of locations of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1134",
    "lexicalEntryUri" : "http://localhost:8080#number_of_363",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of locations of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1135",
    "lexicalEntryUri" : "http://localhost:8080#areacode_of_235",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) area code.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's area code?", "What ([A-Za-z0-9_-]*) is the area code of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the area code of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's area code?", "What ([A-Za-z0-9_-]*) was the area code of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the area code of the ([A-Za-z0-9_-]*)?", "What is the area code of ([A-Za-z0-9_-]*)?", "What is the area code of the ([A-Za-z0-9_-]*)?", "What was the area code of ([A-Za-z0-9_-]*)?", "What was the area code of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the area code of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the area code of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the area code of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the area code of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaCode> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1138",
    "lexicalEntryUri" : "http://localhost:8080#areacode_of_235",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the area code of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaCode> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1139",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) birthdays.", "Give me all birthdays of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) birthday.", "Give me the ([A-Za-z0-9_-]*) birthdays.", "List all birthdays of ([A-Za-z0-9_-]*).", "List all the birthdays of ([A-Za-z0-9_-]*).", "show me all birthdays of ([A-Za-z0-9_-]*).", "What are the birthdays of ([A-Za-z0-9_-]*)?", "What are the birthdays of the ([A-Za-z0-9_-]*)?", "What is the birthday of ([A-Za-z0-9_-]*)?", "What is the birthday of the ([A-Za-z0-9_-]*)?", "What was the birthday of ([A-Za-z0-9_-]*)?", "What was the birthday of the ([A-Za-z0-9_-]*)?", "What were the birthdays of ([A-Za-z0-9_-]*)?", "What were the birthdays of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birthdays of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birthdays of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birthday of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birthday of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birthday of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birthday of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birthdays of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birthdays of the ([A-Za-z0-9_-]*)?", "Who are the birthdays of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birthday?", "Who is the birthday of ([A-Za-z0-9_-]*)?", "Who is the birthday of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birthday?", "Who was the birthday of ([A-Za-z0-9_-]*)?", "Who was the birthday of the ([A-Za-z0-9_-]*)?", "Who were the birthdays of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1143",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birthday of ([A-Za-z0-9_-]*)?", "the birthdays of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1144",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) birthdays.", "Give me all birthdays of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) birthday.", "Give me the ([A-Za-z0-9_-]*) birthdays.", "List all birthdays of ([A-Za-z0-9_-]*).", "List all the birthdays of ([A-Za-z0-9_-]*).", "show me all birthdays of ([A-Za-z0-9_-]*).", "What are the birthdays of ([A-Za-z0-9_-]*)?", "What are the birthdays of the ([A-Za-z0-9_-]*)?", "What is the birthday of ([A-Za-z0-9_-]*)?", "What is the birthday of the ([A-Za-z0-9_-]*)?", "What was the birthday of ([A-Za-z0-9_-]*)?", "What was the birthday of the ([A-Za-z0-9_-]*)?", "What were the birthdays of ([A-Za-z0-9_-]*)?", "What were the birthdays of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birthdays of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birthdays of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birthday of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birthday of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birthday of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birthday of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birthdays of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birthdays of the ([A-Za-z0-9_-]*)?", "Who are the birthdays of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birthday?", "Who is the birthday of ([A-Za-z0-9_-]*)?", "Who is the birthday of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birthday?", "Who was the birthday of ([A-Za-z0-9_-]*)?", "Who was the birthday of the ([A-Za-z0-9_-]*)?", "Who were the birthdays of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1148",
    "lexicalEntryUri" : "http://localhost:8080#birthday-of_356",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birthday of ([A-Za-z0-9_-]*)?", "the birthdays of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1149",
    "lexicalEntryUri" : "http://localhost:8080#religion-of_364",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) religion.", "What is the religion of ([A-Za-z0-9_-]*)?", "What is the religion of the ([A-Za-z0-9_-]*)?", "What was the religion of ([A-Za-z0-9_-]*)?", "What was the religion of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the religion of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the religion of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the religion of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the religion of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's religion?", "Who is the religion of ([A-Za-z0-9_-]*)?", "Who is the religion of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's religion?", "Who was the religion of ([A-Za-z0-9_-]*)?", "Who was the religion of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1152",
    "lexicalEntryUri" : "http://localhost:8080#religion-of_364",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the religion of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1153",
    "lexicalEntryUri" : "http://localhost:8080#firstseason_of_372",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) first season.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's first season?", "What ([A-Za-z0-9_-]*) is the first season of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the first season of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's first season?", "What ([A-Za-z0-9_-]*) was the first season of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the first season of the ([A-Za-z0-9_-]*)?", "What is the first season of ([A-Za-z0-9_-]*)?", "What is the first season of the ([A-Za-z0-9_-]*)?", "What was the first season of ([A-Za-z0-9_-]*)?", "What was the first season of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first season of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first season of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first season of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first season of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seasonNumber> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1156",
    "lexicalEntryUri" : "http://localhost:8080#firstseason_of_372",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first season of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seasonNumber> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1157",
    "lexicalEntryUri" : "http://localhost:8080#cost-of_253",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) costs.", "Give me all costs of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) cost.", "Give me the ([A-Za-z0-9_-]*) costs.", "List all costs of ([A-Za-z0-9_-]*).", "List all the costs of ([A-Za-z0-9_-]*).", "show me all costs of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the costs of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's cost?", "What ([A-Za-z0-9_-]*) is the cost of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the cost of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's cost?", "What ([A-Za-z0-9_-]*) was the cost of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the cost of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the costs of the ([A-Za-z0-9_-]*)?", "What are the costs of ([A-Za-z0-9_-]*)?", "What are the costs of the ([A-Za-z0-9_-]*)?", "What is the cost of ([A-Za-z0-9_-]*)?", "What is the cost of the ([A-Za-z0-9_-]*)?", "What was the cost of ([A-Za-z0-9_-]*)?", "What was the cost of the ([A-Za-z0-9_-]*)?", "What were the costs of ([A-Za-z0-9_-]*)?", "What were the costs of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the costs of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the costs of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the cost of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the cost of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the cost of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the cost of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the costs of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the costs of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1161",
    "lexicalEntryUri" : "http://localhost:8080#cost-of_253",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cost of ([A-Za-z0-9_-]*)?", "the costs of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1162",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2_340",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founders.", "Give me all founders of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founder.", "Give me the ([A-Za-z0-9_-]*) founders.", "List all founders of ([A-Za-z0-9_-]*).", "List all the founders of ([A-Za-z0-9_-]*).", "List all the popes with founder of ([A-Za-z0-9_-]*).", "show me all founders of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founders of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founder of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founders of the ([A-Za-z0-9_-]*)?", "Who are the founders of ([A-Za-z0-9_-]*)?", "Who are the founders of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's founder?", "Who is the founder of ([A-Za-z0-9_-]*)?", "Who is the founder of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's founder?", "Who was the founder of ([A-Za-z0-9_-]*)?", "Who was the founder of the ([A-Za-z0-9_-]*)?", "Who were the founders of ([A-Za-z0-9_-]*)?", "Who were the founders of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1166",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2_340",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ([A-Za-z0-9_-]*)?", "the founders of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1167",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) population.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's population?", "What ([A-Za-z0-9_-]*) is the population of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the population of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's population?", "What ([A-Za-z0-9_-]*) was the population of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the population of the ([A-Za-z0-9_-]*)?", "What is the population of ([A-Za-z0-9_-]*)?", "What is the population of the ([A-Za-z0-9_-]*)?", "What was the population of ([A-Za-z0-9_-]*)?", "What was the population of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1170",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1171",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) population.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's population?", "What ([A-Za-z0-9_-]*) is the population of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the population of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's population?", "What ([A-Za-z0-9_-]*) was the population of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the population of the ([A-Za-z0-9_-]*)?", "What is the population of ([A-Za-z0-9_-]*)?", "What is the population of the ([A-Za-z0-9_-]*)?", "What was the population of ([A-Za-z0-9_-]*)?", "What was the population of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1174",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1175",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) population.", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's population?", "What ([A-Za-z0-9_-]*) is the population of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the population of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's population?", "What ([A-Za-z0-9_-]*) was the population of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the population of the ([A-Za-z0-9_-]*)?", "What is the population of ([A-Za-z0-9_-]*)?", "What is the population of the ([A-Za-z0-9_-]*)?", "What was the population of ([A-Za-z0-9_-]*)?", "What was the population of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the population of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the population of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1178",
    "lexicalEntryUri" : "http://localhost:8080#population-of_313",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1179",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) alma maters.", "Give me all alma maters of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) alma mater.", "Give me the ([A-Za-z0-9_-]*) alma maters.", "List all alma maters of ([A-Za-z0-9_-]*).", "List all the alma maters of ([A-Za-z0-9_-]*).", "show me all alma maters of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the alma maters of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's alma mater?", "What ([A-Za-z0-9_-]*) is the alma mater of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the alma mater of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's alma mater?", "What ([A-Za-z0-9_-]*) was the alma mater of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the alma mater of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the alma maters of the ([A-Za-z0-9_-]*)?", "What are the alma maters of ([A-Za-z0-9_-]*)?", "What are the alma maters of the ([A-Za-z0-9_-]*)?", "What is the alma mater of ([A-Za-z0-9_-]*)?", "What is the alma mater of the ([A-Za-z0-9_-]*)?", "What was the alma mater of ([A-Za-z0-9_-]*)?", "What was the alma mater of the ([A-Za-z0-9_-]*)?", "What were the alma maters of ([A-Za-z0-9_-]*)?", "What were the alma maters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the alma maters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the alma maters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the alma mater of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the alma mater of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the alma mater of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the alma mater of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the alma maters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the alma maters of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1183",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alma mater of ([A-Za-z0-9_-]*)?", "the alma maters of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1184",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) alma maters.", "Give me all alma maters of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) alma mater.", "Give me the ([A-Za-z0-9_-]*) alma maters.", "List all alma maters of ([A-Za-z0-9_-]*).", "List all the alma maters of ([A-Za-z0-9_-]*).", "show me all alma maters of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the alma maters of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's alma mater?", "What ([A-Za-z0-9_-]*) is the alma mater of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the alma mater of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's alma mater?", "What ([A-Za-z0-9_-]*) was the alma mater of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the alma mater of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the alma maters of the ([A-Za-z0-9_-]*)?", "What are the alma maters of ([A-Za-z0-9_-]*)?", "What are the alma maters of the ([A-Za-z0-9_-]*)?", "What is the alma mater of ([A-Za-z0-9_-]*)?", "What is the alma mater of the ([A-Za-z0-9_-]*)?", "What was the alma mater of ([A-Za-z0-9_-]*)?", "What was the alma mater of the ([A-Za-z0-9_-]*)?", "What were the alma maters of ([A-Za-z0-9_-]*)?", "What were the alma maters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the alma maters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the alma maters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the alma mater of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the alma mater of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the alma mater of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the alma mater of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the alma maters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the alma maters of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1188",
    "lexicalEntryUri" : "http://localhost:8080#alma-mater-of_227",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alma mater of ([A-Za-z0-9_-]*)?", "the alma maters of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1189",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) managers.", "Give me all managers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) manager.", "Give me the ([A-Za-z0-9_-]*) managers.", "List all managers of ([A-Za-z0-9_-]*).", "List all the managers of ([A-Za-z0-9_-]*).", "show me all managers of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the managers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the managers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the manager of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the manager of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the manager of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the manager of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the managers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the managers of the ([A-Za-z0-9_-]*)?", "Who are the managers of ([A-Za-z0-9_-]*)?", "Who are the managers of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's manager?", "Who is the manager of ([A-Za-z0-9_-]*)?", "Who is the manager of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's manager?", "Who was the manager of ([A-Za-z0-9_-]*)?", "Who was the manager of the ([A-Za-z0-9_-]*)?", "Who were the managers of ([A-Za-z0-9_-]*)?", "Who were the managers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1193",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the manager of ([A-Za-z0-9_-]*)?", "the managers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1194",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) managers.", "Give me all managers of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) manager.", "Give me the ([A-Za-z0-9_-]*) managers.", "List all managers of ([A-Za-z0-9_-]*).", "List all the managers of ([A-Za-z0-9_-]*).", "show me all managers of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the managers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the managers of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the manager of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the manager of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the manager of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the manager of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the managers of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the managers of the ([A-Za-z0-9_-]*)?", "Who are the managers of ([A-Za-z0-9_-]*)?", "Who are the managers of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's manager?", "Who is the manager of ([A-Za-z0-9_-]*)?", "Who is the manager of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's manager?", "Who was the manager of ([A-Za-z0-9_-]*)?", "Who was the manager of the ([A-Za-z0-9_-]*)?", "Who were the managers of ([A-Za-z0-9_-]*)?", "Who were the managers of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1198",
    "lexicalEntryUri" : "http://localhost:8080#manager-of_262",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SoccerManager" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the manager of ([A-Za-z0-9_-]*)?", "the managers of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manager> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1199",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) residences.", "Give me all residences of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) residence.", "Give me the ([A-Za-z0-9_-]*) residences.", "List all residences of ([A-Za-z0-9_-]*).", "List all the persons with residence of ([A-Za-z0-9_-]*).", "List all the residences of ([A-Za-z0-9_-]*).", "show me all residences of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the residences of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's residence?", "What ([A-Za-z0-9_-]*) is the residence of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the residence of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's residence?", "What ([A-Za-z0-9_-]*) was the residence of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the residence of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the residences of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the residences of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the residences of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the residence of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the residence of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the residence of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the residence of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the residences of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the residences of the ([A-Za-z0-9_-]*)?", "Who are the residences of ([A-Za-z0-9_-]*)?", "Who are the residences of the ([A-Za-z0-9_-]*)?", "Who is the residence of ([A-Za-z0-9_-]*)?", "Who is the residence of the ([A-Za-z0-9_-]*)?", "Who was the residence of ([A-Za-z0-9_-]*)?", "Who was the residence of the ([A-Za-z0-9_-]*)?", "Who were the residences of ([A-Za-z0-9_-]*)?", "Who were the residences of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1203",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ([A-Za-z0-9_-]*)?", "the residences of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1204",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) residences.", "Give me all residences of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) residence.", "Give me the ([A-Za-z0-9_-]*) residences.", "List all residences of ([A-Za-z0-9_-]*).", "List all the countries with residence of ([A-Za-z0-9_-]*).", "List all the residences of ([A-Za-z0-9_-]*).", "show me all residences of ([A-Za-z0-9_-]*).", "What are the residences of ([A-Za-z0-9_-]*)?", "What are the residences of the ([A-Za-z0-9_-]*)?", "What is the residence of ([A-Za-z0-9_-]*)?", "What is the residence of the ([A-Za-z0-9_-]*)?", "What was the residence of ([A-Za-z0-9_-]*)?", "What was the residence of the ([A-Za-z0-9_-]*)?", "What were the residences of ([A-Za-z0-9_-]*)?", "What were the residences of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the residences of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the residences of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the residence of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the residence of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the residence of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the residence of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the residences of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the residences of the ([A-Za-z0-9_-]*)?", "Who are the residences of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's residence?", "Who is the residence of ([A-Za-z0-9_-]*)?", "Who is the residence of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's residence?", "Who was the residence of ([A-Za-z0-9_-]*)?", "Who was the residence of the ([A-Za-z0-9_-]*)?", "Who were the residences of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1208",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ([A-Za-z0-9_-]*)?", "the residences of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1209",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) residences.", "Give me all residences of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) residence.", "Give me the ([A-Za-z0-9_-]*) residences.", "List all residences of ([A-Za-z0-9_-]*).", "List all the countries with residence of ([A-Za-z0-9_-]*).", "List all the residences of ([A-Za-z0-9_-]*).", "show me all residences of ([A-Za-z0-9_-]*).", "What are the residences of ([A-Za-z0-9_-]*)?", "What are the residences of the ([A-Za-z0-9_-]*)?", "What is the residence of ([A-Za-z0-9_-]*)?", "What is the residence of the ([A-Za-z0-9_-]*)?", "What was the residence of ([A-Za-z0-9_-]*)?", "What was the residence of the ([A-Za-z0-9_-]*)?", "What were the residences of ([A-Za-z0-9_-]*)?", "What were the residences of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the residences of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the residences of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the residence of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the residence of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the residence of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the residence of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the residences of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the residences of the ([A-Za-z0-9_-]*)?", "Who are the residences of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's residence?", "Who is the residence of ([A-Za-z0-9_-]*)?", "Who is the residence of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's residence?", "Who was the residence of ([A-Za-z0-9_-]*)?", "Who was the residence of the ([A-Za-z0-9_-]*)?", "Who were the residences of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1213",
    "lexicalEntryUri" : "http://localhost:8080#residence-of_290",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ([A-Za-z0-9_-]*)?", "the residences of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1214",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) ingredients.", "Give me all ingredients of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) ingredient.", "Give me the ([A-Za-z0-9_-]*) ingredients.", "List all ingredients of ([A-Za-z0-9_-]*).", "List all the ingredients of ([A-Za-z0-9_-]*).", "show me all ingredients of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the ingredients of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's ingredient?", "What ([A-Za-z0-9_-]*) is the ingredient of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the ingredient of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's ingredient?", "What ([A-Za-z0-9_-]*) was the ingredient of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ingredient of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the ingredients of the ([A-Za-z0-9_-]*)?", "What are the ingredients of ([A-Za-z0-9_-]*)?", "What are the ingredients of the ([A-Za-z0-9_-]*)?", "What is the ingredient of ([A-Za-z0-9_-]*)?", "What is the ingredient of the ([A-Za-z0-9_-]*)?", "What was the ingredient of ([A-Za-z0-9_-]*)?", "What was the ingredient of the ([A-Za-z0-9_-]*)?", "What were the ingredients of ([A-Za-z0-9_-]*)?", "What were the ingredients of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ingredients of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ingredients of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ingredient of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ingredient of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ingredient of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ingredient of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ingredients of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ingredients of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1218",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ([A-Za-z0-9_-]*)?", "the ingredients of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1219",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) ingredients.", "Give me all ingredients of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) ingredient.", "Give me the ([A-Za-z0-9_-]*) ingredients.", "List all ingredients of ([A-Za-z0-9_-]*).", "List all the ingredients of ([A-Za-z0-9_-]*).", "show me all ingredients of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the ingredients of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's ingredient?", "What ([A-Za-z0-9_-]*) is the ingredient of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the ingredient of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's ingredient?", "What ([A-Za-z0-9_-]*) was the ingredient of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ingredient of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the ingredients of the ([A-Za-z0-9_-]*)?", "What are the ingredients of ([A-Za-z0-9_-]*)?", "What are the ingredients of the ([A-Za-z0-9_-]*)?", "What is the ingredient of ([A-Za-z0-9_-]*)?", "What is the ingredient of the ([A-Za-z0-9_-]*)?", "What was the ingredient of ([A-Za-z0-9_-]*)?", "What was the ingredient of the ([A-Za-z0-9_-]*)?", "What were the ingredients of ([A-Za-z0-9_-]*)?", "What were the ingredients of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ingredients of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ingredients of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ingredient of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ingredient of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ingredient of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ingredient of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ingredients of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ingredients of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1223",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ([A-Za-z0-9_-]*)?", "the ingredients of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1224",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) ingredients.", "Give me all ingredients of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) ingredient.", "Give me the ([A-Za-z0-9_-]*) ingredients.", "List all ingredients of ([A-Za-z0-9_-]*).", "List all the ingredients of ([A-Za-z0-9_-]*).", "show me all ingredients of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the ingredients of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's ingredient?", "What ([A-Za-z0-9_-]*) is the ingredient of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the ingredient of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's ingredient?", "What ([A-Za-z0-9_-]*) was the ingredient of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ingredient of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the ingredients of the ([A-Za-z0-9_-]*)?", "What are the ingredients of ([A-Za-z0-9_-]*)?", "What are the ingredients of the ([A-Za-z0-9_-]*)?", "What is the ingredient of ([A-Za-z0-9_-]*)?", "What is the ingredient of the ([A-Za-z0-9_-]*)?", "What was the ingredient of ([A-Za-z0-9_-]*)?", "What was the ingredient of the ([A-Za-z0-9_-]*)?", "What were the ingredients of ([A-Za-z0-9_-]*)?", "What were the ingredients of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ingredients of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ingredients of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ingredient of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ingredient of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ingredient of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ingredient of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ingredients of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ingredients of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1228",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ([A-Za-z0-9_-]*)?", "the ingredients of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1229",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) ingredients.", "Give me all ingredients of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) ingredient.", "Give me the ([A-Za-z0-9_-]*) ingredients.", "List all ingredients of ([A-Za-z0-9_-]*).", "List all the ingredients of ([A-Za-z0-9_-]*).", "show me all ingredients of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the ingredients of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's ingredient?", "What ([A-Za-z0-9_-]*) is the ingredient of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the ingredient of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's ingredient?", "What ([A-Za-z0-9_-]*) was the ingredient of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ingredient of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the ingredients of the ([A-Za-z0-9_-]*)?", "What are the ingredients of ([A-Za-z0-9_-]*)?", "What are the ingredients of the ([A-Za-z0-9_-]*)?", "What is the ingredient of ([A-Za-z0-9_-]*)?", "What is the ingredient of the ([A-Za-z0-9_-]*)?", "What was the ingredient of ([A-Za-z0-9_-]*)?", "What was the ingredient of the ([A-Za-z0-9_-]*)?", "What were the ingredients of ([A-Za-z0-9_-]*)?", "What were the ingredients of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ingredients of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the ingredients of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ingredient of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the ingredient of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ingredient of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the ingredient of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ingredients of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the ingredients of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1233",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of_345",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Food" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ([A-Za-z0-9_-]*)?", "the ingredients of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ingredient> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1234",
    "lexicalEntryUri" : "http://localhost:8080#formofgovernment-of_314",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) form of government.", "List all the countries with form of government of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's form of government?", "What ([A-Za-z0-9_-]*) is the form of government of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the form of government of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's form of government?", "What ([A-Za-z0-9_-]*) was the form of government of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the form of government of the ([A-Za-z0-9_-]*)?", "What is the form of government of ([A-Za-z0-9_-]*)?", "What is the form of government of the ([A-Za-z0-9_-]*)?", "What was the form of government of ([A-Za-z0-9_-]*)?", "What was the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the form of government of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the form of government of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the form of government of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1237",
    "lexicalEntryUri" : "http://localhost:8080#formofgovernment-of_314",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1238",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) games.", "Give me all games by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) game.", "Give me the ([A-Za-z0-9_-]*) games.", "List all games by ([A-Za-z0-9_-]*).", "List all the company with game by ([A-Za-z0-9_-]*).", "List all the games by ([A-Za-z0-9_-]*).", "show me all games by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the games by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's game?", "What ([A-Za-z0-9_-]*) is the game by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the game by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's game?", "What ([A-Za-z0-9_-]*) was the game by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the game by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the games by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the games by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the games by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the game by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the game by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the game by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the game by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the games by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the games by the ([A-Za-z0-9_-]*)?", "Who are the games by ([A-Za-z0-9_-]*)?", "Who are the games by the ([A-Za-z0-9_-]*)?", "Who is the game by ([A-Za-z0-9_-]*)?", "Who is the game by the ([A-Za-z0-9_-]*)?", "Who was the game by ([A-Za-z0-9_-]*)?", "Who was the game by the ([A-Za-z0-9_-]*)?", "Who were the games by ([A-Za-z0-9_-]*)?", "Who were the games by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1242",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by ([A-Za-z0-9_-]*)?", "the games by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1243",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) games.", "Give me all games by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) game.", "Give me the ([A-Za-z0-9_-]*) games.", "List all games by ([A-Za-z0-9_-]*).", "List all the company with game by ([A-Za-z0-9_-]*).", "List all the games by ([A-Za-z0-9_-]*).", "show me all games by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the games by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's game?", "What ([A-Za-z0-9_-]*) is the game by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the game by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's game?", "What ([A-Za-z0-9_-]*) was the game by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the game by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the games by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the games by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the games by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the game by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the game by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the game by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the game by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the games by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the games by the ([A-Za-z0-9_-]*)?", "Who are the games by ([A-Za-z0-9_-]*)?", "Who are the games by the ([A-Za-z0-9_-]*)?", "Who is the game by ([A-Za-z0-9_-]*)?", "Who is the game by the ([A-Za-z0-9_-]*)?", "Who was the game by ([A-Za-z0-9_-]*)?", "Who was the game by the ([A-Za-z0-9_-]*)?", "Who were the games by ([A-Za-z0-9_-]*)?", "Who were the games by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1247",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by ([A-Za-z0-9_-]*)?", "the games by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1248",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) games.", "Give me all games by ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) game.", "Give me the ([A-Za-z0-9_-]*) games.", "List all games by ([A-Za-z0-9_-]*).", "List all the company with game by ([A-Za-z0-9_-]*).", "List all the games by ([A-Za-z0-9_-]*).", "show me all games by ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the games by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's game?", "What ([A-Za-z0-9_-]*) is the game by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the game by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's game?", "What ([A-Za-z0-9_-]*) was the game by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the game by the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the games by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the games by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the games by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the game by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the game by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the game by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the game by the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the games by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the games by the ([A-Za-z0-9_-]*)?", "Who are the games by ([A-Za-z0-9_-]*)?", "Who are the games by the ([A-Za-z0-9_-]*)?", "Who is the game by ([A-Za-z0-9_-]*)?", "Who is the game by the ([A-Za-z0-9_-]*)?", "Who was the game by ([A-Za-z0-9_-]*)?", "Who was the game by the ([A-Za-z0-9_-]*)?", "Who were the games by ([A-Za-z0-9_-]*)?", "Who were the games by the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1252",
    "lexicalEntryUri" : "http://localhost:8080#game_by_305",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by ([A-Za-z0-9_-]*)?", "the games by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1253",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founding dates.", "Give me all founding dates of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founding date.", "Give me the ([A-Za-z0-9_-]*) founding dates.", "List all founding dates of ([A-Za-z0-9_-]*).", "List all the founding dates of ([A-Za-z0-9_-]*).", "show me all founding dates of ([A-Za-z0-9_-]*).", "What are the founding dates of ([A-Za-z0-9_-]*)?", "What are the founding dates of the ([A-Za-z0-9_-]*)?", "What is the founding date of ([A-Za-z0-9_-]*)?", "What is the founding date of the ([A-Za-z0-9_-]*)?", "What was the founding date of ([A-Za-z0-9_-]*)?", "What was the founding date of the ([A-Za-z0-9_-]*)?", "What were the founding dates of ([A-Za-z0-9_-]*)?", "What were the founding dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founding dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founding dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founding date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founding date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founding date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founding date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founding dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founding dates of the ([A-Za-z0-9_-]*)?", "Who are the founding dates of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's founding date?", "Who is the founding date of ([A-Za-z0-9_-]*)?", "Who is the founding date of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's founding date?", "Who was the founding date of ([A-Za-z0-9_-]*)?", "Who was the founding date of the ([A-Za-z0-9_-]*)?", "Who were the founding dates of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1257",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding date of ([A-Za-z0-9_-]*)?", "the founding dates of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1258",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) founding dates.", "Give me all founding dates of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) founding date.", "Give me the ([A-Za-z0-9_-]*) founding dates.", "List all founding dates of ([A-Za-z0-9_-]*).", "List all the founding dates of ([A-Za-z0-9_-]*).", "show me all founding dates of ([A-Za-z0-9_-]*).", "What are the founding dates of ([A-Za-z0-9_-]*)?", "What are the founding dates of the ([A-Za-z0-9_-]*)?", "What is the founding date of ([A-Za-z0-9_-]*)?", "What is the founding date of the ([A-Za-z0-9_-]*)?", "What was the founding date of ([A-Za-z0-9_-]*)?", "What was the founding date of the ([A-Za-z0-9_-]*)?", "What were the founding dates of ([A-Za-z0-9_-]*)?", "What were the founding dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founding dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the founding dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founding date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the founding date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founding date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the founding date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founding dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the founding dates of the ([A-Za-z0-9_-]*)?", "Who are the founding dates of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's founding date?", "Who is the founding date of ([A-Za-z0-9_-]*)?", "Who is the founding date of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's founding date?", "Who was the founding date of ([A-Za-z0-9_-]*)?", "Who was the founding date of the ([A-Za-z0-9_-]*)?", "Who were the founding dates of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1262",
    "lexicalEntryUri" : "http://localhost:8080#founding-date_of_301",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding date of ([A-Za-z0-9_-]*)?", "the founding dates of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1263",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of_353",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) wine productions.", "Give me all wine productions of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) wine production.", "Give me the ([A-Za-z0-9_-]*) wine productions.", "List all the locations with wine production of ([A-Za-z0-9_-]*).", "List all the wine productions of ([A-Za-z0-9_-]*).", "List all wine productions of ([A-Za-z0-9_-]*).", "show me all wine productions of ([A-Za-z0-9_-]*).", "What are the wine productions of ([A-Za-z0-9_-]*)?", "What are the wine productions of the ([A-Za-z0-9_-]*)?", "What is the wine production of ([A-Za-z0-9_-]*)?", "What is the wine production of the ([A-Za-z0-9_-]*)?", "What was the wine production of ([A-Za-z0-9_-]*)?", "What was the wine production of the ([A-Za-z0-9_-]*)?", "What were the wine productions of ([A-Za-z0-9_-]*)?", "What were the wine productions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the wine productions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the wine productions of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wine production of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the wine production of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wine production of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the wine production of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wine productions of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the wine productions of the ([A-Za-z0-9_-]*)?", "Who are the wine productions of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's wine production?", "Who is the wine production of ([A-Za-z0-9_-]*)?", "Who is the wine production of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's wine production?", "Who was the wine production of ([A-Za-z0-9_-]*)?", "Who was the wine production of the ([A-Za-z0-9_-]*)?", "Who were the wine productions of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1267",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of_353",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine production of ([A-Za-z0-9_-]*)?", "the wine productions of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1268",
    "lexicalEntryUri" : "http://localhost:8080#governor-of_229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) governors.", "Give me all governors of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) governor.", "Give me the ([A-Za-z0-9_-]*) governors.", "List all governors of ([A-Za-z0-9_-]*).", "List all the governors of ([A-Za-z0-9_-]*).", "List all the persons with governor of ([A-Za-z0-9_-]*).", "show me all governors of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the governors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the governors of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the governor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the governor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the governor of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the governor of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the governors of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the governors of the ([A-Za-z0-9_-]*)?", "Who are the governors of ([A-Za-z0-9_-]*)?", "Who are the governors of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's governor?", "Who is the governor of ([A-Za-z0-9_-]*)?", "Who is the governor of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's governor?", "Who was the governor of ([A-Za-z0-9_-]*)?", "Who was the governor of the ([A-Za-z0-9_-]*)?", "Who were the governors of ([A-Za-z0-9_-]*)?", "Who were the governors of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1272",
    "lexicalEntryUri" : "http://localhost:8080#governor-of_229",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of ([A-Za-z0-9_-]*)?", "the governors of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1273",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1277",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1278",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presidents.", "Give me all presidents of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) president.", "Give me the ([A-Za-z0-9_-]*) presidents.", "List all presidents of ([A-Za-z0-9_-]*).", "List all the persons with president of ([A-Za-z0-9_-]*).", "List all the presidents of ([A-Za-z0-9_-]*).", "show me all presidents of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's president?", "What ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the presidents of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the president of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the presidents of the ([A-Za-z0-9_-]*)?", "Who are the presidents of ([A-Za-z0-9_-]*)?", "Who are the presidents of the ([A-Za-z0-9_-]*)?", "Who is the president of ([A-Za-z0-9_-]*)?", "Who is the president of the ([A-Za-z0-9_-]*)?", "Who was the president of ([A-Za-z0-9_-]*)?", "Who was the president of the ([A-Za-z0-9_-]*)?", "Who were the presidents of ([A-Za-z0-9_-]*)?", "Who were the presidents of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1282",
    "lexicalEntryUri" : "http://localhost:8080#president-of_1_286",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ([A-Za-z0-9_-]*)?", "the presidents of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1283",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) net incomes.", "Give me all net incomes of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) net income.", "Give me the ([A-Za-z0-9_-]*) net incomes.", "List all net incomes of ([A-Za-z0-9_-]*).", "List all the net incomes of ([A-Za-z0-9_-]*).", "show me all net incomes of ([A-Za-z0-9_-]*).", "What are the net incomes of ([A-Za-z0-9_-]*)?", "What are the net incomes of the ([A-Za-z0-9_-]*)?", "What is the net income of ([A-Za-z0-9_-]*)?", "What is the net income of the ([A-Za-z0-9_-]*)?", "What was the net income of ([A-Za-z0-9_-]*)?", "What was the net income of the ([A-Za-z0-9_-]*)?", "What were the net incomes of ([A-Za-z0-9_-]*)?", "What were the net incomes of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the net incomes of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the net incomes of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the net income of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the net income of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the net income of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the net income of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the net incomes of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the net incomes of the ([A-Za-z0-9_-]*)?", "Who are the net incomes of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's net income?", "Who is the net income of ([A-Za-z0-9_-]*)?", "Who is the net income of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's net income?", "Who was the net income of ([A-Za-z0-9_-]*)?", "Who was the net income of the ([A-Za-z0-9_-]*)?", "Who were the net incomes of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1287",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of ([A-Za-z0-9_-]*)?", "the net incomes of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1288",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) net incomes.", "Give me all net incomes of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) net income.", "Give me the ([A-Za-z0-9_-]*) net incomes.", "List all net incomes of ([A-Za-z0-9_-]*).", "List all the net incomes of ([A-Za-z0-9_-]*).", "show me all net incomes of ([A-Za-z0-9_-]*).", "What are the net incomes of ([A-Za-z0-9_-]*)?", "What are the net incomes of the ([A-Za-z0-9_-]*)?", "What is the net income of ([A-Za-z0-9_-]*)?", "What is the net income of the ([A-Za-z0-9_-]*)?", "What was the net income of ([A-Za-z0-9_-]*)?", "What was the net income of the ([A-Za-z0-9_-]*)?", "What were the net incomes of ([A-Za-z0-9_-]*)?", "What were the net incomes of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the net incomes of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the net incomes of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the net income of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the net income of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the net income of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the net income of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the net incomes of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the net incomes of the ([A-Za-z0-9_-]*)?", "Who are the net incomes of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's net income?", "Who is the net income of ([A-Za-z0-9_-]*)?", "Who is the net income of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's net income?", "Who was the net income of ([A-Za-z0-9_-]*)?", "Who was the net income of the ([A-Za-z0-9_-]*)?", "Who were the net incomes of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1292",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of ([A-Za-z0-9_-]*)?", "the net incomes of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1293",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) net incomes.", "Give me all net incomes of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) net income.", "Give me the ([A-Za-z0-9_-]*) net incomes.", "List all net incomes of ([A-Za-z0-9_-]*).", "List all the net incomes of ([A-Za-z0-9_-]*).", "show me all net incomes of ([A-Za-z0-9_-]*).", "What are the net incomes of ([A-Za-z0-9_-]*)?", "What are the net incomes of the ([A-Za-z0-9_-]*)?", "What is the net income of ([A-Za-z0-9_-]*)?", "What is the net income of the ([A-Za-z0-9_-]*)?", "What was the net income of ([A-Za-z0-9_-]*)?", "What was the net income of the ([A-Za-z0-9_-]*)?", "What were the net incomes of ([A-Za-z0-9_-]*)?", "What were the net incomes of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the net incomes of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the net incomes of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the net income of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the net income of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the net income of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the net income of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the net incomes of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the net incomes of the ([A-Za-z0-9_-]*)?", "Who are the net incomes of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's net income?", "Who is the net income of ([A-Za-z0-9_-]*)?", "Who is the net income of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's net income?", "Who was the net income of ([A-Za-z0-9_-]*)?", "Who was the net income of the ([A-Za-z0-9_-]*)?", "Who were the net incomes of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1297",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of ([A-Za-z0-9_-]*)?", "the net incomes of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1298",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) net incomes.", "Give me all net incomes of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) net income.", "Give me the ([A-Za-z0-9_-]*) net incomes.", "List all net incomes of ([A-Za-z0-9_-]*).", "List all the net incomes of ([A-Za-z0-9_-]*).", "show me all net incomes of ([A-Za-z0-9_-]*).", "What are the net incomes of ([A-Za-z0-9_-]*)?", "What are the net incomes of the ([A-Za-z0-9_-]*)?", "What is the net income of ([A-Za-z0-9_-]*)?", "What is the net income of the ([A-Za-z0-9_-]*)?", "What was the net income of ([A-Za-z0-9_-]*)?", "What was the net income of the ([A-Za-z0-9_-]*)?", "What were the net incomes of ([A-Za-z0-9_-]*)?", "What were the net incomes of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the net incomes of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the net incomes of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the net income of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the net income of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the net income of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the net income of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the net incomes of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the net incomes of the ([A-Za-z0-9_-]*)?", "Who are the net incomes of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's net income?", "Who is the net income of ([A-Za-z0-9_-]*)?", "Who is the net income of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's net income?", "Who was the net income of ([A-Za-z0-9_-]*)?", "Who was the net income of the ([A-Za-z0-9_-]*)?", "Who were the net incomes of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1302",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of_251",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of ([A-Za-z0-9_-]*)?", "the net incomes of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/netIncome> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1303",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) birth place.", "List all the countries with birth place of ([A-Za-z0-9_-]*).", "What is the birth place of ([A-Za-z0-9_-]*)?", "What is the birth place of the ([A-Za-z0-9_-]*)?", "What was the birth place of ([A-Za-z0-9_-]*)?", "What was the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth place?", "Who is the birth place of ([A-Za-z0-9_-]*)?", "Who is the birth place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth place?", "Who was the birth place of ([A-Za-z0-9_-]*)?", "Who was the birth place of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1306",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1307",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) birth place.", "List all the countries with birth place of ([A-Za-z0-9_-]*).", "What is the birth place of ([A-Za-z0-9_-]*)?", "What is the birth place of the ([A-Za-z0-9_-]*)?", "What was the birth place of ([A-Za-z0-9_-]*)?", "What was the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth place?", "Who is the birth place of ([A-Za-z0-9_-]*)?", "Who is the birth place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth place?", "Who was the birth place of ([A-Za-z0-9_-]*)?", "Who was the birth place of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1310",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1311",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) birth place.", "List all the countries with birth place of ([A-Za-z0-9_-]*).", "What is the birth place of ([A-Za-z0-9_-]*)?", "What is the birth place of the ([A-Za-z0-9_-]*)?", "What was the birth place of ([A-Za-z0-9_-]*)?", "What was the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth place?", "Who is the birth place of ([A-Za-z0-9_-]*)?", "Who is the birth place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth place?", "Who was the birth place of ([A-Za-z0-9_-]*)?", "Who was the birth place of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1314",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1315",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) birth place.", "List all the countries with birth place of ([A-Za-z0-9_-]*).", "What is the birth place of ([A-Za-z0-9_-]*)?", "What is the birth place of the ([A-Za-z0-9_-]*)?", "What was the birth place of ([A-Za-z0-9_-]*)?", "What was the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth place?", "Who is the birth place of ([A-Za-z0-9_-]*)?", "Who is the birth place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth place?", "Who was the birth place of ([A-Za-z0-9_-]*)?", "Who was the birth place of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1318",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1319",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) birth place.", "List all the countries with birth place of ([A-Za-z0-9_-]*).", "What is the birth place of ([A-Za-z0-9_-]*)?", "What is the birth place of the ([A-Za-z0-9_-]*)?", "What was the birth place of ([A-Za-z0-9_-]*)?", "What was the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth place of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth place of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth place?", "Who is the birth place of ([A-Za-z0-9_-]*)?", "Who is the birth place of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth place?", "Who was the birth place of ([A-Za-z0-9_-]*)?", "Who was the birth place of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1322",
    "lexicalEntryUri" : "http://localhost:8080#birthplace_of_288",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1323",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) organizations.", "Give me all organizations of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) organization.", "Give me the ([A-Za-z0-9_-]*) organizations.", "List all organizations of ([A-Za-z0-9_-]*).", "List all the foods with organization of ([A-Za-z0-9_-]*).", "List all the organizations of ([A-Za-z0-9_-]*).", "show me all organizations of ([A-Za-z0-9_-]*).", "What are the organizations of ([A-Za-z0-9_-]*)?", "What are the organizations of the ([A-Za-z0-9_-]*)?", "What is the organization of ([A-Za-z0-9_-]*)?", "What is the organization of the ([A-Za-z0-9_-]*)?", "What was the organization of ([A-Za-z0-9_-]*)?", "What was the organization of the ([A-Za-z0-9_-]*)?", "What were the organizations of ([A-Za-z0-9_-]*)?", "What were the organizations of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the organizations of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the organizations of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the organization of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the organization of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the organization of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the organization of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the organizations of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the organizations of the ([A-Za-z0-9_-]*)?", "Who are the organizations of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's organization?", "Who is the organization of ([A-Za-z0-9_-]*)?", "Who is the organization of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's organization?", "Who was the organization of ([A-Za-z0-9_-]*)?", "Who was the organization of the ([A-Za-z0-9_-]*)?", "Who were the organizations of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1327",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the organization of ([A-Za-z0-9_-]*)?", "the organizations of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1328",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) organizations.", "Give me all organizations of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) organization.", "Give me the ([A-Za-z0-9_-]*) organizations.", "List all organizations of ([A-Za-z0-9_-]*).", "List all the foods with organization of ([A-Za-z0-9_-]*).", "List all the organizations of ([A-Za-z0-9_-]*).", "show me all organizations of ([A-Za-z0-9_-]*).", "What are the organizations of ([A-Za-z0-9_-]*)?", "What are the organizations of the ([A-Za-z0-9_-]*)?", "What is the organization of ([A-Za-z0-9_-]*)?", "What is the organization of the ([A-Za-z0-9_-]*)?", "What was the organization of ([A-Za-z0-9_-]*)?", "What was the organization of the ([A-Za-z0-9_-]*)?", "What were the organizations of ([A-Za-z0-9_-]*)?", "What were the organizations of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the organizations of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the organizations of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the organization of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the organization of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the organization of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the organization of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the organizations of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the organizations of the ([A-Za-z0-9_-]*)?", "Who are the organizations of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's organization?", "Who is the organization of ([A-Za-z0-9_-]*)?", "Who is the organization of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's organization?", "Who was the organization of ([A-Za-z0-9_-]*)?", "Who was the organization of the ([A-Za-z0-9_-]*)?", "Who were the organizations of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1332",
    "lexicalEntryUri" : "http://localhost:8080#organization-of_335",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the organization of ([A-Za-z0-9_-]*)?", "the organizations of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/industry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1333",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of_361",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) diameters.", "Give me all diameters of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) diameter.", "Give me the ([A-Za-z0-9_-]*) diameters.", "List all diameters of ([A-Za-z0-9_-]*).", "List all the diameters of ([A-Za-z0-9_-]*).", "show me all diameters of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the diameters of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's diameter?", "What ([A-Za-z0-9_-]*) is the diameter of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the diameter of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's diameter?", "What ([A-Za-z0-9_-]*) was the diameter of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the diameter of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the diameters of the ([A-Za-z0-9_-]*)?", "What are the diameters of ([A-Za-z0-9_-]*)?", "What are the diameters of the ([A-Za-z0-9_-]*)?", "What is the diameter of ([A-Za-z0-9_-]*)?", "What is the diameter of the ([A-Za-z0-9_-]*)?", "What was the diameter of ([A-Za-z0-9_-]*)?", "What was the diameter of the ([A-Za-z0-9_-]*)?", "What were the diameters of ([A-Za-z0-9_-]*)?", "What were the diameters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the diameters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the diameters of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the diameter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the diameter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the diameter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the diameter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the diameters of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the diameters of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/diameter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1337",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of_361",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the diameter of ([A-Za-z0-9_-]*)?", "the diameters of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/diameter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1338",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) headquarter.", "List all the cities with headquarter of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's headquarter?", "What ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's headquarter?", "What ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?", "What is the headquarter of ([A-Za-z0-9_-]*)?", "What is the headquarter of the ([A-Za-z0-9_-]*)?", "What was the headquarter of ([A-Za-z0-9_-]*)?", "What was the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1341",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1342",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) headquarter.", "List all the populated places with headquarter of ([A-Za-z0-9_-]*).", "What is the headquarter of ([A-Za-z0-9_-]*)?", "What is the headquarter of the ([A-Za-z0-9_-]*)?", "What was the headquarter of ([A-Za-z0-9_-]*)?", "What was the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's headquarter?", "Who is the headquarter of ([A-Za-z0-9_-]*)?", "Who is the headquarter of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's headquarter?", "Who was the headquarter of ([A-Za-z0-9_-]*)?", "Who was the headquarter of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/headquarter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1345",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/headquarter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1346",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) headquarter.", "List all the places with headquarter of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's headquarter?", "What ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's headquarter?", "What ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?", "What is the headquarter of ([A-Za-z0-9_-]*)?", "What is the headquarter of the ([A-Za-z0-9_-]*)?", "What was the headquarter of ([A-Za-z0-9_-]*)?", "What was the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1349",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1350",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) headquarter.", "List all the places with headquarter of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's headquarter?", "What ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's headquarter?", "What ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?", "What is the headquarter of ([A-Za-z0-9_-]*)?", "What is the headquarter of the ([A-Za-z0-9_-]*)?", "What was the headquarter of ([A-Za-z0-9_-]*)?", "What was the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the headquarter of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the headquarter of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1353",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of_309",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1354",
    "lexicalEntryUri" : "http://localhost:8080#closingdate-of_348",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) closing Dates.", "Give me all closing Dates of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) closing Date.", "Give me the ([A-Za-z0-9_-]*) closing Dates.", "List all closing Dates of ([A-Za-z0-9_-]*).", "List all the closing Dates of ([A-Za-z0-9_-]*).", "show me all closing Dates of ([A-Za-z0-9_-]*).", "What are the closing Dates of ([A-Za-z0-9_-]*)?", "What are the closing Dates of the ([A-Za-z0-9_-]*)?", "What is the closing Date of ([A-Za-z0-9_-]*)?", "What is the closing Date of the ([A-Za-z0-9_-]*)?", "What was the closing Date of ([A-Za-z0-9_-]*)?", "What was the closing Date of the ([A-Za-z0-9_-]*)?", "What were the closing Dates of ([A-Za-z0-9_-]*)?", "What were the closing Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the closing Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the closing Dates of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the closing Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the closing Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the closing Date of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the closing Date of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the closing Dates of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the closing Dates of the ([A-Za-z0-9_-]*)?", "Who are the closing Dates of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's closing Date?", "Who is the closing Date of ([A-Za-z0-9_-]*)?", "Who is the closing Date of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's closing Date?", "Who was the closing Date of ([A-Za-z0-9_-]*)?", "Who was the closing Date of the ([A-Za-z0-9_-]*)?", "Who were the closing Dates of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/closingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1358",
    "lexicalEntryUri" : "http://localhost:8080#closingdate-of_348",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "date" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the closing Date of ([A-Za-z0-9_-]*)?", "the closing Dates of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/closingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1359",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) movies.", "Give me all movies with ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) movie.", "Give me the ([A-Za-z0-9_-]*) movies.", "List all movies with ([A-Za-z0-9_-]*).", "List all the actors with movie with ([A-Za-z0-9_-]*).", "List all the movies with ([A-Za-z0-9_-]*).", "show me all movies with ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the movies with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the movies with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the movie with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the movie with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the movie with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the movie with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the movies with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the movies with the ([A-Za-z0-9_-]*)?", "Who are the movies with ([A-Za-z0-9_-]*)?", "Who are the movies with the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's movie?", "Who is the movie with ([A-Za-z0-9_-]*)?", "Who is the movie with the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's movie?", "Who was the movie with ([A-Za-z0-9_-]*)?", "Who was the movie with the ([A-Za-z0-9_-]*)?", "Who were the movies with ([A-Za-z0-9_-]*)?", "Who were the movies with the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1363",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the movie with ([A-Za-z0-9_-]*)?", "the movies with ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1364",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) movies.", "Give me all movies with ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) movie.", "Give me the ([A-Za-z0-9_-]*) movies.", "List all movies with ([A-Za-z0-9_-]*).", "List all the actors with movie with ([A-Za-z0-9_-]*).", "List all the movies with ([A-Za-z0-9_-]*).", "show me all movies with ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the movies with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the movies with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the movie with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the movie with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the movie with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the movie with the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the movies with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the movies with the ([A-Za-z0-9_-]*)?", "Who are the movies with ([A-Za-z0-9_-]*)?", "Who are the movies with the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's movie?", "Who is the movie with ([A-Za-z0-9_-]*)?", "Who is the movie with the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's movie?", "Who was the movie with ([A-Za-z0-9_-]*)?", "Who was the movie with the ([A-Za-z0-9_-]*)?", "Who were the movies with ([A-Za-z0-9_-]*)?", "Who were the movies with the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1368",
    "lexicalEntryUri" : "http://localhost:8080#movie-with_289",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the movie with ([A-Za-z0-9_-]*)?", "the movies with ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1369",
    "lexicalEntryUri" : "http://localhost:8080#alterego-of_357",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ComicsCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) alter ego.", "List all the persons with alter ego of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's alter ego?", "What ([A-Za-z0-9_-]*) is the alter ego of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the alter ego of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's alter ego?", "What ([A-Za-z0-9_-]*) was the alter ego of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the alter ego of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the alter ego of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the alter ego of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the alter ego of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the alter ego of the ([A-Za-z0-9_-]*)?", "Who is the alter ego of ([A-Za-z0-9_-]*)?", "Who is the alter ego of the ([A-Za-z0-9_-]*)?", "Who was the alter ego of ([A-Za-z0-9_-]*)?", "Who was the alter ego of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/alterEgo> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1372",
    "lexicalEntryUri" : "http://localhost:8080#alterego-of_357",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ComicsCharacter" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alter ego of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/alterEgo> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1373",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) creators.", "Give me all creators of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) creator.", "Give me the ([A-Za-z0-9_-]*) creators.", "List all creators of ([A-Za-z0-9_-]*).", "List all the creators of ([A-Za-z0-9_-]*).", "List all the organizations with creator of ([A-Za-z0-9_-]*).", "show me all creators of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the creators of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the creators of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the creator of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the creator of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the creator of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the creator of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the creators of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the creators of the ([A-Za-z0-9_-]*)?", "Who are the creators of ([A-Za-z0-9_-]*)?", "Who are the creators of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's creator?", "Who is the creator of ([A-Za-z0-9_-]*)?", "Who is the creator of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's creator?", "Who was the creator of ([A-Za-z0-9_-]*)?", "Who was the creator of the ([A-Za-z0-9_-]*)?", "Who were the creators of ([A-Za-z0-9_-]*)?", "Who were the creators of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1377",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of ([A-Za-z0-9_-]*)?", "the creators of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1378",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) creators.", "Give me all creators of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) creator.", "Give me the ([A-Za-z0-9_-]*) creators.", "List all creators of ([A-Za-z0-9_-]*).", "List all the creators of ([A-Za-z0-9_-]*).", "List all the organizations with creator of ([A-Za-z0-9_-]*).", "show me all creators of ([A-Za-z0-9_-]*).", "which ([A-Za-z0-9_-]*) are the creators of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the creators of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the creator of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the creator of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the creator of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the creator of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the creators of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the creators of the ([A-Za-z0-9_-]*)?", "Who are the creators of ([A-Za-z0-9_-]*)?", "Who are the creators of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's creator?", "Who is the creator of ([A-Za-z0-9_-]*)?", "Who is the creator of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's creator?", "Who was the creator of ([A-Za-z0-9_-]*)?", "Who was the creator of the ([A-Za-z0-9_-]*)?", "Who were the creators of ([A-Za-z0-9_-]*)?", "Who were the creators of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1382",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_387",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of ([A-Za-z0-9_-]*)?", "the creators of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1383",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) architects.", "Give me all architects of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) architect.", "Give me the ([A-Za-z0-9_-]*) architects.", "List all architects of ([A-Za-z0-9_-]*).", "List all the architects of ([A-Za-z0-9_-]*).", "List all the persons with architect of ([A-Za-z0-9_-]*).", "show me all architects of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the architects of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's architect?", "What ([A-Za-z0-9_-]*) is the architect of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the architect of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's architect?", "What ([A-Za-z0-9_-]*) was the architect of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the architect of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the architects of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the architects of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the architects of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the architect of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the architect of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the architect of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the architect of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the architects of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the architects of the ([A-Za-z0-9_-]*)?", "Who are the architects of ([A-Za-z0-9_-]*)?", "Who are the architects of the ([A-Za-z0-9_-]*)?", "Who is the architect of ([A-Za-z0-9_-]*)?", "Who is the architect of the ([A-Za-z0-9_-]*)?", "Who was the architect of ([A-Za-z0-9_-]*)?", "Who was the architect of the ([A-Za-z0-9_-]*)?", "Who were the architects of ([A-Za-z0-9_-]*)?", "Who were the architects of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1387",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the architect of ([A-Za-z0-9_-]*)?", "the architects of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1388",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) architects.", "Give me all architects of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) architect.", "Give me the ([A-Za-z0-9_-]*) architects.", "List all architects of ([A-Za-z0-9_-]*).", "List all the architects of ([A-Za-z0-9_-]*).", "List all the persons with architect of ([A-Za-z0-9_-]*).", "show me all architects of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the architects of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's architect?", "What ([A-Za-z0-9_-]*) is the architect of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the architect of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's architect?", "What ([A-Za-z0-9_-]*) was the architect of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the architect of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the architects of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the architects of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the architects of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the architect of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the architect of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the architect of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the architect of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the architects of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the architects of the ([A-Za-z0-9_-]*)?", "Who are the architects of ([A-Za-z0-9_-]*)?", "Who are the architects of the ([A-Za-z0-9_-]*)?", "Who is the architect of ([A-Za-z0-9_-]*)?", "Who is the architect of the ([A-Za-z0-9_-]*)?", "Who was the architect of ([A-Za-z0-9_-]*)?", "Who was the architect of the ([A-Za-z0-9_-]*)?", "Who were the architects of ([A-Za-z0-9_-]*)?", "Who were the architects of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1392",
    "lexicalEntryUri" : "http://localhost:8080#architect_of_1_325",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the architect of ([A-Za-z0-9_-]*)?", "the architects of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1393",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_in_370",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) largest city.", "List all the cities with largest city in ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's largest city?", "What ([A-Za-z0-9_-]*) is the largest city in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the largest city in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's largest city?", "What ([A-Za-z0-9_-]*) was the largest city in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the largest city in the ([A-Za-z0-9_-]*)?", "What is the largest city in ([A-Za-z0-9_-]*)?", "What is the largest city in the ([A-Za-z0-9_-]*)?", "What was the largest city in ([A-Za-z0-9_-]*)?", "What was the largest city in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest city in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the largest city in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest city in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the largest city in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1396",
    "lexicalEntryUri" : "http://localhost:8080#largestcity_in_370",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/largestCity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1397",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) birth names.", "Give me all birth names of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) birth name.", "Give me the ([A-Za-z0-9_-]*) birth names.", "List all birth names of ([A-Za-z0-9_-]*).", "List all the birth names of ([A-Za-z0-9_-]*).", "show me all birth names of ([A-Za-z0-9_-]*).", "What are the birth names of ([A-Za-z0-9_-]*)?", "What are the birth names of the ([A-Za-z0-9_-]*)?", "What is the birth name of ([A-Za-z0-9_-]*)?", "What is the birth name of the ([A-Za-z0-9_-]*)?", "What was the birth name of ([A-Za-z0-9_-]*)?", "What was the birth name of the ([A-Za-z0-9_-]*)?", "What were the birth names of ([A-Za-z0-9_-]*)?", "What were the birth names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birth names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birth names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birth names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birth names of the ([A-Za-z0-9_-]*)?", "Who are the birth names of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth name?", "Who is the birth name of ([A-Za-z0-9_-]*)?", "Who is the birth name of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth name?", "Who was the birth name of ([A-Za-z0-9_-]*)?", "Who was the birth name of the ([A-Za-z0-9_-]*)?", "Who were the birth names of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1401",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth name of ([A-Za-z0-9_-]*)?", "the birth names of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1402",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) birth names.", "Give me all birth names of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) birth name.", "Give me the ([A-Za-z0-9_-]*) birth names.", "List all birth names of ([A-Za-z0-9_-]*).", "List all the birth names of ([A-Za-z0-9_-]*).", "show me all birth names of ([A-Za-z0-9_-]*).", "What are the birth names of ([A-Za-z0-9_-]*)?", "What are the birth names of the ([A-Za-z0-9_-]*)?", "What is the birth name of ([A-Za-z0-9_-]*)?", "What is the birth name of the ([A-Za-z0-9_-]*)?", "What was the birth name of ([A-Za-z0-9_-]*)?", "What was the birth name of the ([A-Za-z0-9_-]*)?", "What were the birth names of ([A-Za-z0-9_-]*)?", "What were the birth names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birth names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birth names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birth names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birth names of the ([A-Za-z0-9_-]*)?", "Who are the birth names of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth name?", "Who is the birth name of ([A-Za-z0-9_-]*)?", "Who is the birth name of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth name?", "Who was the birth name of ([A-Za-z0-9_-]*)?", "Who was the birth name of the ([A-Za-z0-9_-]*)?", "Who were the birth names of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1406",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth name of ([A-Za-z0-9_-]*)?", "the birth names of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1407",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) birth names.", "Give me all birth names of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) birth name.", "Give me the ([A-Za-z0-9_-]*) birth names.", "List all birth names of ([A-Za-z0-9_-]*).", "List all the birth names of ([A-Za-z0-9_-]*).", "show me all birth names of ([A-Za-z0-9_-]*).", "What are the birth names of ([A-Za-z0-9_-]*)?", "What are the birth names of the ([A-Za-z0-9_-]*)?", "What is the birth name of ([A-Za-z0-9_-]*)?", "What is the birth name of the ([A-Za-z0-9_-]*)?", "What was the birth name of ([A-Za-z0-9_-]*)?", "What was the birth name of the ([A-Za-z0-9_-]*)?", "What were the birth names of ([A-Za-z0-9_-]*)?", "What were the birth names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birth names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birth names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birth names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birth names of the ([A-Za-z0-9_-]*)?", "Who are the birth names of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth name?", "Who is the birth name of ([A-Za-z0-9_-]*)?", "Who is the birth name of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth name?", "Who was the birth name of ([A-Za-z0-9_-]*)?", "Who was the birth name of the ([A-Za-z0-9_-]*)?", "Who were the birth names of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1411",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth name of ([A-Za-z0-9_-]*)?", "the birth names of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/birthName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1412",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) birth names.", "Give me all birth names of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) birth name.", "Give me the ([A-Za-z0-9_-]*) birth names.", "List all birth names of ([A-Za-z0-9_-]*).", "List all the birth names of ([A-Za-z0-9_-]*).", "show me all birth names of ([A-Za-z0-9_-]*).", "What are the birth names of ([A-Za-z0-9_-]*)?", "What are the birth names of the ([A-Za-z0-9_-]*)?", "What is the birth name of ([A-Za-z0-9_-]*)?", "What is the birth name of the ([A-Za-z0-9_-]*)?", "What was the birth name of ([A-Za-z0-9_-]*)?", "What was the birth name of the ([A-Za-z0-9_-]*)?", "What were the birth names of ([A-Za-z0-9_-]*)?", "What were the birth names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birth names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the birth names of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the birth name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth name of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the birth name of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birth names of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the birth names of the ([A-Za-z0-9_-]*)?", "Who are the birth names of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's birth name?", "Who is the birth name of ([A-Za-z0-9_-]*)?", "Who is the birth name of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's birth name?", "Who was the birth name of ([A-Za-z0-9_-]*)?", "Who was the birth name of the ([A-Za-z0-9_-]*)?", "Who were the birth names of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1416",
    "lexicalEntryUri" : "http://localhost:8080#birth-name-of_279",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth name of ([A-Za-z0-9_-]*)?", "the birth names of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1417",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) kings.", "Give me all kings of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) king.", "Give me the ([A-Za-z0-9_-]*) kings.", "List all kings of ([A-Za-z0-9_-]*).", "List all the kings of ([A-Za-z0-9_-]*).", "List all the persons with king of ([A-Za-z0-9_-]*).", "show me all kings of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the kings of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's king?", "What ([A-Za-z0-9_-]*) is the king of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the king of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's king?", "What ([A-Za-z0-9_-]*) was the king of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the king of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of the ([A-Za-z0-9_-]*)?", "Who are the kings of ([A-Za-z0-9_-]*)?", "Who are the kings of the ([A-Za-z0-9_-]*)?", "Who is the king of ([A-Za-z0-9_-]*)?", "Who is the king of the ([A-Za-z0-9_-]*)?", "Who was the king of ([A-Za-z0-9_-]*)?", "Who was the king of the ([A-Za-z0-9_-]*)?", "Who were the kings of ([A-Za-z0-9_-]*)?", "Who were the kings of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1421",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Legislature" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ([A-Za-z0-9_-]*)?", "the kings of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/leader> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1422",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) kings.", "Give me all kings of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) king.", "Give me the ([A-Za-z0-9_-]*) kings.", "List all kings of ([A-Za-z0-9_-]*).", "List all the cities with king of ([A-Za-z0-9_-]*).", "List all the kings of ([A-Za-z0-9_-]*).", "show me all kings of ([A-Za-z0-9_-]*).", "What are the kings of ([A-Za-z0-9_-]*)?", "What are the kings of the ([A-Za-z0-9_-]*)?", "What is the king of ([A-Za-z0-9_-]*)?", "What is the king of the ([A-Za-z0-9_-]*)?", "What was the king of ([A-Za-z0-9_-]*)?", "What was the king of the ([A-Za-z0-9_-]*)?", "What were the kings of ([A-Za-z0-9_-]*)?", "What were the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of the ([A-Za-z0-9_-]*)?", "Who are the kings of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's king?", "Who is the king of ([A-Za-z0-9_-]*)?", "Who is the king of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's king?", "Who was the king of ([A-Za-z0-9_-]*)?", "Who was the king of the ([A-Za-z0-9_-]*)?", "Who were the kings of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1426",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ([A-Za-z0-9_-]*)?", "the kings of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1427",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) kings.", "Give me all kings of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) king.", "Give me the ([A-Za-z0-9_-]*) kings.", "List all kings of ([A-Za-z0-9_-]*).", "List all the kings of ([A-Za-z0-9_-]*).", "List all the persons with king of ([A-Za-z0-9_-]*).", "show me all kings of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the kings of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's king?", "What ([A-Za-z0-9_-]*) is the king of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the king of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's king?", "What ([A-Za-z0-9_-]*) was the king of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the king of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of the ([A-Za-z0-9_-]*)?", "Who are the kings of ([A-Za-z0-9_-]*)?", "Who are the kings of the ([A-Za-z0-9_-]*)?", "Who is the king of ([A-Za-z0-9_-]*)?", "Who is the king of the ([A-Za-z0-9_-]*)?", "Who was the king of ([A-Za-z0-9_-]*)?", "Who was the king of the ([A-Za-z0-9_-]*)?", "Who were the kings of ([A-Za-z0-9_-]*)?", "Who were the kings of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1431",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ([A-Za-z0-9_-]*)?", "the kings of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1432",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) kings.", "Give me all kings of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) king.", "Give me the ([A-Za-z0-9_-]*) kings.", "List all kings of ([A-Za-z0-9_-]*).", "List all the cities with king of ([A-Za-z0-9_-]*).", "List all the kings of ([A-Za-z0-9_-]*).", "show me all kings of ([A-Za-z0-9_-]*).", "What are the kings of ([A-Za-z0-9_-]*)?", "What are the kings of the ([A-Za-z0-9_-]*)?", "What is the king of ([A-Za-z0-9_-]*)?", "What is the king of the ([A-Za-z0-9_-]*)?", "What was the king of ([A-Za-z0-9_-]*)?", "What was the king of the ([A-Za-z0-9_-]*)?", "What were the kings of ([A-Za-z0-9_-]*)?", "What were the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of the ([A-Za-z0-9_-]*)?", "Who are the kings of the ([A-Za-z0-9_-]*)?", "Who is ([A-Za-z0-9_-]*) 's king?", "Who is the king of ([A-Za-z0-9_-]*)?", "Who is the king of the ([A-Za-z0-9_-]*)?", "Who was ([A-Za-z0-9_-]*) 's king?", "Who was the king of ([A-Za-z0-9_-]*)?", "Who was the king of the ([A-Za-z0-9_-]*)?", "Who were the kings of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1436",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ([A-Za-z0-9_-]*)?", "the kings of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1437",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) kings.", "Give me all kings of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) king.", "Give me the ([A-Za-z0-9_-]*) kings.", "List all kings of ([A-Za-z0-9_-]*).", "List all the kings of ([A-Za-z0-9_-]*).", "List all the persons with king of ([A-Za-z0-9_-]*).", "show me all kings of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the kings of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's king?", "What ([A-Za-z0-9_-]*) is the king of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the king of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's king?", "What ([A-Za-z0-9_-]*) was the king of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the king of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the kings of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the king of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the kings of the ([A-Za-z0-9_-]*)?", "Who are the kings of ([A-Za-z0-9_-]*)?", "Who are the kings of the ([A-Za-z0-9_-]*)?", "Who is the king of ([A-Za-z0-9_-]*)?", "Who is the king of the ([A-Za-z0-9_-]*)?", "Who was the king of ([A-Za-z0-9_-]*)?", "Who was the king of the ([A-Za-z0-9_-]*)?", "Who were the kings of ([A-Za-z0-9_-]*)?", "Who were the kings of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1441",
    "lexicalEntryUri" : "http://localhost:8080#king-of_281",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ([A-Za-z0-9_-]*)?", "the kings of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/title> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1442",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) first person to climb.", "List all the agents with first person to climb of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's first person to climb?", "What ([A-Za-z0-9_-]*) is the first person to climb of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the first person to climb of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's first person to climb?", "What ([A-Za-z0-9_-]*) was the first person to climb of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the first person to climb of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first person to climb of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first person to climb of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first person to climb of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first person to climb of the ([A-Za-z0-9_-]*)?", "Who is the first person to climb of ([A-Za-z0-9_-]*)?", "Who is the first person to climb of the ([A-Za-z0-9_-]*)?", "Who was the first person to climb of ([A-Za-z0-9_-]*)?", "Who was the first person to climb of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1445",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first person to climb of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1446",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ([A-Za-z0-9_-]*) first person to climb.", "List all the agents with first person to climb of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's first person to climb?", "What ([A-Za-z0-9_-]*) is the first person to climb of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the first person to climb of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's first person to climb?", "What ([A-Za-z0-9_-]*) was the first person to climb of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the first person to climb of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first person to climb of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the first person to climb of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first person to climb of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the first person to climb of the ([A-Za-z0-9_-]*)?", "Who is the first person to climb of ([A-Za-z0-9_-]*)?", "Who is the first person to climb of the ([A-Za-z0-9_-]*)?", "Who was the first person to climb of ([A-Za-z0-9_-]*)?", "Who was the first person to climb of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1449",
    "lexicalEntryUri" : "http://localhost:8080#first-person-to-climb_of_362",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first person to climb of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1450",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) roots.", "Give me all roots of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) root.", "Give me the ([A-Za-z0-9_-]*) roots.", "List all roots of ([A-Za-z0-9_-]*).", "List all the languages with root of ([A-Za-z0-9_-]*).", "List all the roots of ([A-Za-z0-9_-]*).", "show me all roots of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the roots of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's root?", "What ([A-Za-z0-9_-]*) is the root of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the root of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's root?", "What ([A-Za-z0-9_-]*) was the root of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the root of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the roots of the ([A-Za-z0-9_-]*)?", "What are the roots of ([A-Za-z0-9_-]*)?", "What are the roots of the ([A-Za-z0-9_-]*)?", "What is the root of ([A-Za-z0-9_-]*)?", "What is the root of the ([A-Za-z0-9_-]*)?", "What was the root of ([A-Za-z0-9_-]*)?", "What was the root of the ([A-Za-z0-9_-]*)?", "What were the roots of ([A-Za-z0-9_-]*)?", "What were the roots of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the roots of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the roots of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the root of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the root of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the root of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the root of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the roots of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the roots of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1454",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the root of ([A-Za-z0-9_-]*)?", "the roots of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1455",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) roots.", "Give me all roots of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) root.", "Give me the ([A-Za-z0-9_-]*) roots.", "List all roots of ([A-Za-z0-9_-]*).", "List all the languages with root of ([A-Za-z0-9_-]*).", "List all the roots of ([A-Za-z0-9_-]*).", "show me all roots of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the roots of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's root?", "What ([A-Za-z0-9_-]*) is the root of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the root of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's root?", "What ([A-Za-z0-9_-]*) was the root of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the root of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the roots of the ([A-Za-z0-9_-]*)?", "What are the roots of ([A-Za-z0-9_-]*)?", "What are the roots of the ([A-Za-z0-9_-]*)?", "What is the root of ([A-Za-z0-9_-]*)?", "What is the root of the ([A-Za-z0-9_-]*)?", "What was the root of ([A-Za-z0-9_-]*)?", "What was the root of the ([A-Za-z0-9_-]*)?", "What were the roots of ([A-Za-z0-9_-]*)?", "What were the roots of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the roots of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the roots of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the root of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the root of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the root of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the root of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the roots of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the roots of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1459",
    "lexicalEntryUri" : "http://localhost:8080#root-of_371",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the root of ([A-Za-z0-9_-]*)?", "the roots of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/languageFamily> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1460",
    "lexicalEntryUri" : "http://localhost:8080#loyalty_246",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Color" ],
    "returnType" : [ "Loyalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) loyalties.", "Give me all loyalties  ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) loyalties.", "Give me the ([A-Za-z0-9_-]*) loyalty.", "List all loyalties  ([A-Za-z0-9_-]*).", "List all the colors with loyalty  ([A-Za-z0-9_-]*).", "List all the loyalties  ([A-Za-z0-9_-]*).", "show me all loyalties  ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the loyalties  the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's loyalty?", "What ([A-Za-z0-9_-]*) is the loyalty  ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the loyalty  the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's loyalty?", "What ([A-Za-z0-9_-]*) was the loyalty  ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the loyalty  the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the loyalties  the ([A-Za-z0-9_-]*)?", "What are the loyalties  ([A-Za-z0-9_-]*)?", "What are the loyalties  the ([A-Za-z0-9_-]*)?", "What is the loyalty  ([A-Za-z0-9_-]*)?", "What is the loyalty  the ([A-Za-z0-9_-]*)?", "What was the loyalty  ([A-Za-z0-9_-]*)?", "What was the loyalty  the ([A-Za-z0-9_-]*)?", "What were the loyalties  ([A-Za-z0-9_-]*)?", "What were the loyalties  the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the loyalties  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the loyalties  the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the loyalty  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the loyalty  the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the loyalty  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the loyalty  the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the loyalties  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the loyalties  the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1464",
    "lexicalEntryUri" : "http://localhost:8080#loyalty_246",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Color" ],
    "returnType" : [ "Loyalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the loyalties  ([A-Za-z0-9_-]*)?", "the loyalty  ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1465",
    "lexicalEntryUri" : "http://localhost:8080#album-of_317",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) albums.", "Give me all albums of ([A-Za-z0-9_-]*).", "Give me the ([A-Za-z0-9_-]*) album.", "Give me the ([A-Za-z0-9_-]*) albums.", "List all albums of ([A-Za-z0-9_-]*).", "List all the albums of ([A-Za-z0-9_-]*).", "List all the albums with album of ([A-Za-z0-9_-]*).", "show me all albums of ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are the albums of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) 's album?", "What ([A-Za-z0-9_-]*) is the album of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the album of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) 's album?", "What ([A-Za-z0-9_-]*) was the album of ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the album of the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were the albums of the ([A-Za-z0-9_-]*)?", "What are the albums of ([A-Za-z0-9_-]*)?", "What are the albums of the ([A-Za-z0-9_-]*)?", "What is the album of ([A-Za-z0-9_-]*)?", "What is the album of the ([A-Za-z0-9_-]*)?", "What was the album of ([A-Za-z0-9_-]*)?", "What was the album of the ([A-Za-z0-9_-]*)?", "What were the albums of ([A-Za-z0-9_-]*)?", "What were the albums of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the albums of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are the albums of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the album of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is the album of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the album of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was the album of the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the albums of ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were the albums of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/album> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1469",
    "lexicalEntryUri" : "http://localhost:8080#album-of_317",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the album of ([A-Za-z0-9_-]*)?", "the albums of ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/album> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1470",
    "lexicalEntryUri" : "http://localhost:8080#to_attend_1_58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who attended ([A-Za-z0-9_-]*)?", "Who attends ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that attended ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) attend?", "Whom was ([A-Za-z0-9_-]*) attend?", "which ([A-Za-z0-9_-]*) attended ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) attends ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1471",
    "lexicalEntryUri" : "http://localhost:8080#to_attend_1_58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) attended by?", "Who was attended by ([A-Za-z0-9_-]*)?", "Who were attended by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) attend?", "which ([A-Za-z0-9_-]*) was attended by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were attended by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/almaMater> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1472",
    "lexicalEntryUri" : "http://localhost:8080#to_attend_1_58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are attended by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) attend?", "How often did ([A-Za-z0-9_-]*) attend?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/almaMater> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1473",
    "lexicalEntryUri" : "http://localhost:8080#to_cost_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "How much did ([A-Za-z0-9_-]*) cost?", "How much does ([A-Za-z0-9_-]*) cost?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1474",
    "lexicalEntryUri" : "http://localhost:8080#to_cost_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "which ([A-Za-z0-9_-]*) costed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1475",
    "lexicalEntryUri" : "http://localhost:8080#to_cost_1_91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are costed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) cost?", "How often did ([A-Za-z0-9_-]*) cost?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1476",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4_66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed ([A-Za-z0-9_-]*)?", "Who follows ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that followed ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) follow?", "Whom was ([A-Za-z0-9_-]*) follow?", "which ([A-Za-z0-9_-]*) followed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) follows ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1477",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4_66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) followed by?", "Who was followed by ([A-Za-z0-9_-]*)?", "Who were followed by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) follow?", "which ([A-Za-z0-9_-]*) was followed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were followed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1478",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4_66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are followed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) follow?", "How often did ([A-Za-z0-9_-]*) follow?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1479",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) manage ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that managed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that managed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) manage ([A-Za-z0-9_-]*)?", "Who managed ([A-Za-z0-9_-]*)?", "Who managed the ([A-Za-z0-9_-]*)?", "Who manages ([A-Za-z0-9_-]*)?", "Who manages the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that managed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) manage ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) managed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) manages ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1480",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) managed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) managed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was managed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were managed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) manage?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) managed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) managed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) manage?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) manage?", "which ([A-Za-z0-9_-]*) manage the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) manages the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was managed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were managed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1481",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are managed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) manage?", "How often did ([A-Za-z0-9_-]*) manage?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1482",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) cover ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that covered ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that covered the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) cover ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) covered ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) covered the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) covers ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) covers the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that covered ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) cover ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) covered ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) covers ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1483",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) covered by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) covered by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was covered by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were covered by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) cover?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) covered", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) covered", "which ([A-Za-z0-9_-]*) cover the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) covers the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) cover?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) cover?", "which ([A-Za-z0-9_-]*) was covered by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were covered by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1484",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are covered by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) cover?", "How often did ([A-Za-z0-9_-]*) cover?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1485",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) precede ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that preceded ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that preceded the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) precede ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) preceded ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) preceded the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) precedes ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) precedes the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that preceded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) precede ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) preceded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) precedes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/prevTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1486",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) preceded by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) preceded by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was preceded by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were preceded by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) precede?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) preceded", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) preceded", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) precede?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) precede?", "which ([A-Za-z0-9_-]*) precede the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) precedes the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was preceded by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were preceded by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1487",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are preceded by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) precede?", "How often did ([A-Za-z0-9_-]*) precede?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1488",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3_37",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that created ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that created the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "Who created ([A-Za-z0-9_-]*)?", "Who created the ([A-Za-z0-9_-]*)?", "Who creates ([A-Za-z0-9_-]*)?", "Who creates the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that created ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) created ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) creates ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1489",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3_37",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) created by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) created by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was created by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were created by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) created", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) created", "which ([A-Za-z0-9_-]*) create the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) creates the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) create?", "which ([A-Za-z0-9_-]*) was created by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were created by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1490",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3_37",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are created by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "How often did ([A-Za-z0-9_-]*) create?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1491",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3_87",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that wrote the ([A-Za-z0-9_-]*)", "Give me all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Who writes ([A-Za-z0-9_-]*)?", "Who writes the ([A-Za-z0-9_-]*)?", "Who wrote ([A-Za-z0-9_-]*)?", "Who wrote the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wrote ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1492",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3_87",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1493",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3_87",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are written by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "How often did ([A-Za-z0-9_-]*) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1494",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1_67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Who produced ([A-Za-z0-9_-]*)?", "Who produced the ([A-Za-z0-9_-]*)?", "Who produces ([A-Za-z0-9_-]*)?", "Who produces the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1495",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1_67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) produce the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1496",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1_67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are produced by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "How often did ([A-Za-z0-9_-]*) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1497",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1_40",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) control ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that controlled ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that controlled the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) control ([A-Za-z0-9_-]*)?", "Who controlled ([A-Za-z0-9_-]*)?", "Who controlled the ([A-Za-z0-9_-]*)?", "Who controls ([A-Za-z0-9_-]*)?", "Who controls the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that controlled ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) control ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) controlled ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) controls ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/controlledby> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1498",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1_40",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) controlled by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) controlled by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was controlled by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were controlled by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) control?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) controlled", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) controlled", "which ([A-Za-z0-9_-]*) control the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) controls the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) control?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) control?", "which ([A-Za-z0-9_-]*) was controlled by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were controlled by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1499",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1_40",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are controlled by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) control?", "How often did ([A-Za-z0-9_-]*) control?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1500",
    "lexicalEntryUri" : "http://localhost:8080#to_first_to_climb_19",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) first to climb ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that   ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that   the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) first to climb ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*)   ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*)   the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that   ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*)   ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) first to climb ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1501",
    "lexicalEntryUri" : "http://localhost:8080#to_first_to_climb_19",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) born by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) born by ([A-Za-z0-9_-]*)?", "Who kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) first to climb?", "Who was born by ([A-Za-z0-9_-]*)?", "Who were born by ([A-Za-z0-9_-]*)?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*)", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*)", "which ([A-Za-z0-9_-]*)   the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) first to climb?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) first to climb?", "which ([A-Za-z0-9_-]*) first to climb the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was born by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were born by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1502",
    "lexicalEntryUri" : "http://localhost:8080#to_first_to_climb_19",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are born by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) first to climb?", "How often did ([A-Za-z0-9_-]*) first to climb?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1503",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1_28",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) paint ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that painted ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that painted the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) paint ([A-Za-z0-9_-]*)?", "Who painted ([A-Za-z0-9_-]*)?", "Who painted the ([A-Za-z0-9_-]*)?", "Who paints ([A-Za-z0-9_-]*)?", "Who paints the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that painted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) paint ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) painted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) paints ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1504",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1_28",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) painted by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) painted by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was painted by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were painted by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) paint?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) painted", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) painted", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) paint?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) paint?", "which ([A-Za-z0-9_-]*) paint the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) paints the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was painted by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were painted by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1505",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1_28",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are painted by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) paint?", "How often did ([A-Za-z0-9_-]*) paint?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1506",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) support ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that supported ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that supported the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) support ([A-Za-z0-9_-]*)?", "Who supported ([A-Za-z0-9_-]*)?", "Who supported the ([A-Za-z0-9_-]*)?", "Who supports ([A-Za-z0-9_-]*)?", "Who supports the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that supported ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) support ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) supported ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) supports ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ideology> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1507",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) supported by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) supported by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was supported by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were supported by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) support?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) supported", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) supported", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) support?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) support?", "which ([A-Za-z0-9_-]*) support the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) supports the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was supported by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were supported by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1508",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are supported by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) support?", "How often did ([A-Za-z0-9_-]*) support?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1509",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_23",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who played ([A-Za-z0-9_-]*)?", "Who plays ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) play?", "Whom was ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/instrument> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1510",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_23",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) played by?", "Who was played by ([A-Za-z0-9_-]*)?", "Who were played by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/instrument> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1511",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_23",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "How often did ([A-Za-z0-9_-]*) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/instrument> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1512",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) develop ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that developed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that developed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) develop ([A-Za-z0-9_-]*)?", "Who developed ([A-Za-z0-9_-]*)?", "Who developed the ([A-Za-z0-9_-]*)?", "Who develops ([A-Za-z0-9_-]*)?", "Who develops the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that developed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) develop ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) developed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) develops ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1513",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) developed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) developed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was developed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were developed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) develop?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) developed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) developed", "which ([A-Za-z0-9_-]*) develop the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) develops the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) develop?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) develop?", "which ([A-Za-z0-9_-]*) was developed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were developed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1514",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are developed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) develop?", "How often did ([A-Za-z0-9_-]*) develop?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1515",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) develop ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that developed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that developed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) develop ([A-Za-z0-9_-]*)?", "Who developed ([A-Za-z0-9_-]*)?", "Who developed the ([A-Za-z0-9_-]*)?", "Who develops ([A-Za-z0-9_-]*)?", "Who develops the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that developed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) develop ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) developed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) develops ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1516",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) developed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) developed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was developed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were developed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) develop?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) developed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) developed", "which ([A-Za-z0-9_-]*) develop the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) develops the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) develop?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) develop?", "which ([A-Za-z0-9_-]*) was developed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were developed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1517",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_2_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are developed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) develop?", "How often did ([A-Za-z0-9_-]*) develop?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1518",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that won ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that won the ([A-Za-z0-9_-]*)", "Give me all ([A-Za-z0-9_-]*) win ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) win ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that won ([A-Za-z0-9_-]*)?", "Who wins ([A-Za-z0-9_-]*)?", "Who wins the ([A-Za-z0-9_-]*)?", "Who won ([A-Za-z0-9_-]*)?", "Who won the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) win ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wins ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) won ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1519",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) won by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) won by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was won by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were won by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) win?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) won", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) won", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) win?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) win?", "which ([A-Za-z0-9_-]*) was won by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were won by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) win the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wins the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1520",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are won by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) win?", "How often did ([A-Za-z0-9_-]*) win?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1521",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that won ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that won the ([A-Za-z0-9_-]*)", "Give me all ([A-Za-z0-9_-]*) win ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) win ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that won ([A-Za-z0-9_-]*)?", "Who wins ([A-Za-z0-9_-]*)?", "Who wins the ([A-Za-z0-9_-]*)?", "Who won ([A-Za-z0-9_-]*)?", "Who won the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) win ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wins ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) won ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1522",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) won by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) won by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was won by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were won by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) win?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) won", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) won", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) win?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) win?", "which ([A-Za-z0-9_-]*) was won by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were won by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) win the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wins the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1523",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1_35",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are won by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) win?", "How often did ([A-Za-z0-9_-]*) win?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1524",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6_82",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that wrote the ([A-Za-z0-9_-]*)", "Give me all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Who writes ([A-Za-z0-9_-]*)?", "Who writes the ([A-Za-z0-9_-]*)?", "Who wrote ([A-Za-z0-9_-]*)?", "Who wrote the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wrote ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1525",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6_82",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1526",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6_82",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are written by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "How often did ([A-Za-z0-9_-]*) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1527",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1_22",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) leave ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that left ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that left the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) leave ([A-Za-z0-9_-]*)?", "Who leaves ([A-Za-z0-9_-]*)?", "Who leaves the ([A-Za-z0-9_-]*)?", "Who left ([A-Za-z0-9_-]*)?", "Who left the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that left ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) leave ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) leaves ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) left ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1528",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1_22",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) left by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) left by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was left by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were left by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) leave?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) left", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) left", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) leave?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) leave?", "which ([A-Za-z0-9_-]*) leave the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) leaves the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was left by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were left by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1529",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1_22",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are left by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) leave?", "How often did ([A-Za-z0-9_-]*) leave?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1530",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt_39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) adopted by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) adopted by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was adopted by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were adopted by ([A-Za-z0-9_-]*)?", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) adopted", "which ([A-Za-z0-9_-]*) adopt ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) adopted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) adopt?", "which ([A-Za-z0-9_-]*) was adopted by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were adopted by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1531",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt_39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) adopt ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) adopted ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) adopted the ([A-Za-z0-9_-]*) ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) adopted the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) adopts ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) adopts the ([A-Za-z0-9_-]*) ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) adopts the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that adopted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) adopt ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) adopted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) adopts ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) adopt?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) adopt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1532",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt_39",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are adopted by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) adopt?", "How often did ([A-Za-z0-9_-]*) adopt?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1533",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4_65",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Who produced ([A-Za-z0-9_-]*)?", "Who produced the ([A-Za-z0-9_-]*)?", "Who produces ([A-Za-z0-9_-]*)?", "Who produces the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1534",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4_65",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) produce the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1535",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4_65",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are produced by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "How often did ([A-Za-z0-9_-]*) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1536",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2_68",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Who produced ([A-Za-z0-9_-]*)?", "Who produced the ([A-Za-z0-9_-]*)?", "Who produces ([A-Za-z0-9_-]*)?", "Who produces the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1537",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2_68",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) produce the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1538",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2_68",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are produced by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "How often did ([A-Za-z0-9_-]*) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1539",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) direct ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that directed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that directed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) direct ([A-Za-z0-9_-]*)?", "Who directed ([A-Za-z0-9_-]*)?", "Who directed the ([A-Za-z0-9_-]*)?", "Who directs ([A-Za-z0-9_-]*)?", "Who directs the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that directed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) direct ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) directed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) directs ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1540",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) directed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) directed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was directed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were directed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) direct?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) directed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) directed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) direct?", "which ([A-Za-z0-9_-]*) direct the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) directs the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) direct?", "which ([A-Za-z0-9_-]*) was directed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were directed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1541",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1_79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are directed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) direct?", "How often did ([A-Za-z0-9_-]*) direct?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1542",
    "lexicalEntryUri" : "http://localhost:8080#to_border_20",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) border ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that bordered ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that bordered the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) border ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) bordered ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) bordered the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) borders ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) borders the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that bordered ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) border ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) bordered ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) borders ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1543",
    "lexicalEntryUri" : "http://localhost:8080#to_border_20",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) bordered by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) bordered by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was bordered by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were bordered by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) border?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) bordered", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) bordered", "which ([A-Za-z0-9_-]*) border the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) borders the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) border?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) border?", "which ([A-Za-z0-9_-]*) was bordered by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were bordered by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1544",
    "lexicalEntryUri" : "http://localhost:8080#to_border_20",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are bordered by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) border?", "How often did ([A-Za-z0-9_-]*) border?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1545",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who succeeded ([A-Za-z0-9_-]*)?", "Who succeeds ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that succeeded ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) succeed?", "Whom was ([A-Za-z0-9_-]*) succeed?", "which ([A-Za-z0-9_-]*) succeeded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) succeeds ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1546",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) succeeded by?", "Who was succeeded by ([A-Za-z0-9_-]*)?", "Who were succeeded by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) succeed?", "which ([A-Za-z0-9_-]*) was succeeded by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were succeeded by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1547",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are succeeded by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) succeed?", "How often did ([A-Za-z0-9_-]*) succeed?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1548",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who succeeded ([A-Za-z0-9_-]*)?", "Who succeeds ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that succeeded ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) succeed?", "Whom was ([A-Za-z0-9_-]*) succeed?", "which ([A-Za-z0-9_-]*) succeeded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) succeeds ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1549",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) succeeded by?", "Who was succeeded by ([A-Za-z0-9_-]*)?", "Who were succeeded by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) succeed?", "which ([A-Za-z0-9_-]*) was succeeded by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were succeeded by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1550",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1_26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are succeeded by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) succeed?", "How often did ([A-Za-z0-9_-]*) succeed?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1551",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded ([A-Za-z0-9_-]*)?", "Who precedes ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that preceded ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) precede?", "Whom was ([A-Za-z0-9_-]*) precede?", "which ([A-Za-z0-9_-]*) preceded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) precedes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/after> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1552",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) preceded by?", "Who was preceded by ([A-Za-z0-9_-]*)?", "Who were preceded by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) precede?", "which ([A-Za-z0-9_-]*) was preceded by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were preceded by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1553",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are preceded by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) precede?", "How often did ([A-Za-z0-9_-]*) precede?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1554",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3_57",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed ([A-Za-z0-9_-]*)?", "Who follows ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that followed ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) follow?", "Whom was ([A-Za-z0-9_-]*) follow?", "which ([A-Za-z0-9_-]*) followed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) follows ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/before> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1555",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3_57",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) followed by?", "Who was followed by ([A-Za-z0-9_-]*)?", "Who were followed by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) follow?", "which ([A-Za-z0-9_-]*) was followed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were followed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1556",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3_57",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are followed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) follow?", "How often did ([A-Za-z0-9_-]*) follow?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1557",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2_89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ([A-Za-z0-9_-]*)?", "Who founds ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that founded ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) found?", "Whom was ([A-Za-z0-9_-]*) found?", "which ([A-Za-z0-9_-]*) founded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) founds ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1558",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2_89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) founded by?", "Who was founded by ([A-Za-z0-9_-]*)?", "Who were founded by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) found?", "which ([A-Za-z0-9_-]*) was founded by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were founded by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1559",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2_89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are founded by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) found?", "How often did ([A-Za-z0-9_-]*) found?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1560",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1_36",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) edit ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that edited ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that edited the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) edit ([A-Za-z0-9_-]*)?", "Who edited ([A-Za-z0-9_-]*)?", "Who edited the ([A-Za-z0-9_-]*)?", "Who edits ([A-Za-z0-9_-]*)?", "Who edits the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that edited ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) edit ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) edited ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) edits ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1561",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1_36",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) edited by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) edited by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was edited by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were edited by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) edit?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) edited", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) edited", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) edit?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) edit?", "which ([A-Za-z0-9_-]*) edit the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) edits the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was edited by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were edited by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1562",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1_36",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are edited by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) edit?", "How often did ([A-Za-z0-9_-]*) edit?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1563",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2_25",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) paint ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that painted ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that painted the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) paint ([A-Za-z0-9_-]*)?", "Who painted ([A-Za-z0-9_-]*)?", "Who painted the ([A-Za-z0-9_-]*)?", "Who paints ([A-Za-z0-9_-]*)?", "Who paints the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that painted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) paint ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) painted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) paints ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1564",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2_25",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) painted by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) painted by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was painted by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were painted by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) paint?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) painted", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) painted", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) paint?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) paint?", "which ([A-Za-z0-9_-]*) paint the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) paints the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was painted by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were painted by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1565",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2_25",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are painted by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) paint?", "How often did ([A-Za-z0-9_-]*) paint?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1566",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1_70",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) rent ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that rented ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that rented the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) rent ([A-Za-z0-9_-]*)?", "Who rented ([A-Za-z0-9_-]*)?", "Who rented the ([A-Za-z0-9_-]*)?", "Who rents ([A-Za-z0-9_-]*)?", "Who rents the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that rented ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) rent ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) rented ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) rents ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/tenant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1567",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1_70",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) rented by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) rented by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was rented by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were rented by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) rent?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) rented", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) rented", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) rent?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) rent?", "which ([A-Za-z0-9_-]*) rent the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) rents the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was rented by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were rented by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1568",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1_70",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are rented by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) rent?", "How often did ([A-Za-z0-9_-]*) rent?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1569",
    "lexicalEntryUri" : "http://localhost:8080#to_pay_1_34",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) payed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) payed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was payed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were payed by ([A-Za-z0-9_-]*)?", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) payed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) pay?", "which ([A-Za-z0-9_-]*) pay ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) payed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was payed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were payed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1570",
    "lexicalEntryUri" : "http://localhost:8080#to_pay_1_34",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) pay ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) payed ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) payed the ([A-Za-z0-9_-]*) ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) payed the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) pays ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) pays the ([A-Za-z0-9_-]*) ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) pays the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that payed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) pay?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) pay?", "which ([A-Za-z0-9_-]*) pay ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) payed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) pays ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1571",
    "lexicalEntryUri" : "http://localhost:8080#to_pay_1_34",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are payed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) pay?", "How often did ([A-Za-z0-9_-]*) pay?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1572",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1_53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) drain ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that drained ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that drained the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) drain ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) drained ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) drained the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) drains ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) drains the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that drained ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) drain ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) drained ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) drains ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/outflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1573",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1_53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) drained by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) drained by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was drained by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were drained by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) drain?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) drained", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) drained", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) drain?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) drain?", "which ([A-Za-z0-9_-]*) drain the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) drains the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was drained by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were drained by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1574",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1_53",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are drained by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) drain?", "How often did ([A-Za-z0-9_-]*) drain?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1575",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1_33",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that created ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that created the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "Who created ([A-Za-z0-9_-]*)?", "Who created the ([A-Za-z0-9_-]*)?", "Who creates ([A-Za-z0-9_-]*)?", "Who creates the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that created ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) created ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) creates ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1576",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1_33",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) created by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) created by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was created by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were created by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) created", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) created", "which ([A-Za-z0-9_-]*) create the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) creates the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) create?", "which ([A-Za-z0-9_-]*) was created by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were created by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1577",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1_33",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are created by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "How often did ([A-Za-z0-9_-]*) create?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1578",
    "lexicalEntryUri" : "http://localhost:8080#to_play_3_29",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "Who played ([A-Za-z0-9_-]*)?", "Who played the ([A-Za-z0-9_-]*)?", "Who plays ([A-Za-z0-9_-]*)?", "Who plays the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1579",
    "lexicalEntryUri" : "http://localhost:8080#to_play_3_29",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1580",
    "lexicalEntryUri" : "http://localhost:8080#to_play_3_29",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "How often did ([A-Za-z0-9_-]*) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1581",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that called ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that called the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) called ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) called the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) calls ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) calls the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that called ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) called ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) calls ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/shipNamesake> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1582",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) called by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) called by ([A-Za-z0-9_-]*)?", "Who kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "Who was called by ([A-Za-z0-9_-]*)?", "Who were called by ([A-Za-z0-9_-]*)?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) called", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) called", "which ([A-Za-z0-9_-]*) call the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) calls the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) call?", "which ([A-Za-z0-9_-]*) was called by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were called by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/shipNamesake> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1583",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are called by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "How often did ([A-Za-z0-9_-]*) call?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/shipNamesake> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1584",
    "lexicalEntryUri" : "http://localhost:8080#to_graduated_1_16",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who graduated ([A-Za-z0-9_-]*)?", "Who graduates ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that graduated ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) graduate?", "Whom was ([A-Za-z0-9_-]*) graduate?", "which ([A-Za-z0-9_-]*) graduated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) graduates ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/almaMater> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1585",
    "lexicalEntryUri" : "http://localhost:8080#to_graduated_1_16",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) graduated by?", "Who was graduated by ([A-Za-z0-9_-]*)?", "Who were graduated by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) graduate?", "which ([A-Za-z0-9_-]*) was graduated by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were graduated by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1586",
    "lexicalEntryUri" : "http://localhost:8080#to_graduated_1_16",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are graduated by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) graduate?", "How often did ([A-Za-z0-9_-]*) graduate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1587",
    "lexicalEntryUri" : "http://localhost:8080#to_cross_71",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) cross ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that crossed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that crossed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) cross ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) crossed ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) crossed the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) crosses ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) crosses the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that crossed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) cross ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) crossed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) crosses ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1588",
    "lexicalEntryUri" : "http://localhost:8080#to_cross_71",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) crossed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) crossed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was crossed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were crossed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) cross?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) crossed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) crossed", "which ([A-Za-z0-9_-]*) cross the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) crosses the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) cross?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) cross?", "which ([A-Za-z0-9_-]*) was crossed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were crossed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1589",
    "lexicalEntryUri" : "http://localhost:8080#to_cross_71",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are crossed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) cross?", "How often did ([A-Za-z0-9_-]*) cross?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1590",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5_56",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) produced ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) produced the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) produces ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) produces the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1591",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5_56",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "Who kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "Who was produced by ([A-Za-z0-9_-]*)?", "Who were produced by ([A-Za-z0-9_-]*)?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) produce the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1592",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5_56",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are produced by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "How often did ([A-Za-z0-9_-]*) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1593",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) compose ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that composed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that composed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) compose ([A-Za-z0-9_-]*)?", "Who composed ([A-Za-z0-9_-]*)?", "Who composed the ([A-Za-z0-9_-]*)?", "Who composes ([A-Za-z0-9_-]*)?", "Who composes the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that composed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) compose ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1594",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) composed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) composed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was composed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were composed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) compose?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) composed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) composed", "which ([A-Za-z0-9_-]*) compose the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composes the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) compose?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) compose?", "which ([A-Za-z0-9_-]*) was composed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were composed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1595",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2_52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are composed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) compose?", "How often did ([A-Za-z0-9_-]*) compose?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1596",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that operated ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that operated the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "Who operated ([A-Za-z0-9_-]*)?", "Who operated the ([A-Za-z0-9_-]*)?", "Who operates ([A-Za-z0-9_-]*)?", "Who operates the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that operated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operates ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1597",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) operated by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) operated by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was operated by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were operated by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) operated", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) operated", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) operate?", "which ([A-Za-z0-9_-]*) operate the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operates the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was operated by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were operated by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1598",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are operated by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "How often did ([A-Za-z0-9_-]*) operate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1599",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that operated ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that operated the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) operated ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) operated the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) operates ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) operates the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that operated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operates ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1600",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) operated by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) operated by ([A-Za-z0-9_-]*)?", "Who kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "Who was operated by ([A-Za-z0-9_-]*)?", "Who were operated by ([A-Za-z0-9_-]*)?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) operated", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) operated", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) operate?", "which ([A-Za-z0-9_-]*) operate the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operates the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was operated by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were operated by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1601",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1_30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are operated by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "How often did ([A-Za-z0-9_-]*) operate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1602",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1_90",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ([A-Za-z0-9_-]*)?", "Who founds ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that founded ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) found?", "Whom was ([A-Za-z0-9_-]*) found?", "which ([A-Za-z0-9_-]*) founded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) founds ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1603",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1_90",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) founded by?", "Who was founded by ([A-Za-z0-9_-]*)?", "Who were founded by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) found?", "which ([A-Za-z0-9_-]*) was founded by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were founded by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1604",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1_90",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are founded by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) found?", "How often did ([A-Za-z0-9_-]*) found?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1605",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) precede ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that preceded ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that preceded the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) precede ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) preceded ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) preceded the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) precedes ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) precedes the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that preceded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) precede ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) preceded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) precedes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1606",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) preceded by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) preceded by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was preceded by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were preceded by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) precede?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) preceded", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) preceded", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) precede?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) precede?", "which ([A-Za-z0-9_-]*) precede the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) precedes the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was preceded by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were preceded by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1607",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are preceded by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) precede?", "How often did ([A-Za-z0-9_-]*) precede?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1608",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) lead ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that led ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that led the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) lead ([A-Za-z0-9_-]*)?", "Who leads ([A-Za-z0-9_-]*)?", "Who leads the ([A-Za-z0-9_-]*)?", "Who led ([A-Za-z0-9_-]*)?", "Who led the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that led ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) lead ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) leads ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) led ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1609",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) led by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) led by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was led by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were led by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) lead?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) led", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) led", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) lead?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) lead?", "which ([A-Za-z0-9_-]*) lead the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) leads the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was led by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were led by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1610",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are led by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) lead?", "How often did ([A-Za-z0-9_-]*) lead?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1611",
    "lexicalEntryUri" : "http://localhost:8080#to_possess_1_75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) poss ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that possessed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that possessed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) poss ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) possess ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) possess the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) possessed ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) possessed the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that possessed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) poss ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) possess ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) possessed ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/mineral> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1612",
    "lexicalEntryUri" : "http://localhost:8080#to_possess_1_75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) possessed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) possessed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was possessed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were possessed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) poss?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) possessed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) possessed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) poss?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) poss?", "which ([A-Za-z0-9_-]*) poss the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) possess the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was possessed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were possessed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/mineral> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1613",
    "lexicalEntryUri" : "http://localhost:8080#to_possess_1_75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are possessed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) poss?", "How often did ([A-Za-z0-9_-]*) poss?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/mineral> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1614",
    "lexicalEntryUri" : "http://localhost:8080#to_express_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) express ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that expressed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that expressed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) express ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) expressed ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) expressed the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) expresses ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) expresses the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that expressed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) express ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) expressed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) expresses ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1615",
    "lexicalEntryUri" : "http://localhost:8080#to_express_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) expressed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) expressed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was expressed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were expressed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) express?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) expressed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) expressed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) express?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) express?", "which ([A-Za-z0-9_-]*) express the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) expresses the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was expressed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were expressed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1616",
    "lexicalEntryUri" : "http://localhost:8080#to_express_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are expressed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) express?", "How often did ([A-Za-z0-9_-]*) express?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1617",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2_61",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) follow ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that followed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that followed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) follow ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) followed ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) followed the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) follows ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) follows the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that followed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) follow ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) followed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) follows ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1618",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2_61",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) followed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) followed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was followed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were followed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) follow?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) followed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) followed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) follow?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) follow?", "which ([A-Za-z0-9_-]*) follow the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) follows the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was followed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were followed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1619",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2_61",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are followed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) follow?", "How often did ([A-Za-z0-9_-]*) follow?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1620",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who played ([A-Za-z0-9_-]*)?", "Who plays ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) play?", "Whom was ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1621",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) played by?", "Who was played by ([A-Za-z0-9_-]*)?", "Who were played by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1622",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_55",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "How often did ([A-Za-z0-9_-]*) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1623",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) played the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) plays the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1624",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "Who kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "Who was played by ([A-Za-z0-9_-]*)?", "Who were played by ([A-Za-z0-9_-]*)?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1625",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "How often did ([A-Za-z0-9_-]*) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1626",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) played the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) plays the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1627",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "Who kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "Who was played by ([A-Za-z0-9_-]*)?", "Who were played by ([A-Za-z0-9_-]*)?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1628",
    "lexicalEntryUri" : "http://localhost:8080#to_play_4_27",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "How often did ([A-Za-z0-9_-]*) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1629",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1_62",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that wrote the ([A-Za-z0-9_-]*)", "Give me all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Who writes ([A-Za-z0-9_-]*)?", "Who writes the ([A-Za-z0-9_-]*)?", "Who wrote ([A-Za-z0-9_-]*)?", "Who wrote the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wrote ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1630",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1_62",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1631",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1_62",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are written by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "How often did ([A-Za-z0-9_-]*) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1632",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1_21",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) present ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that presented ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that presented the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) present ([A-Za-z0-9_-]*)?", "Who presented ([A-Za-z0-9_-]*)?", "Who presented the ([A-Za-z0-9_-]*)?", "Who presents ([A-Za-z0-9_-]*)?", "Who presents the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that presented ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) present ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) presented ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) presents ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1633",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1_21",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) presented by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) presented by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was presented by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were presented by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) present?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) presented", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) presented", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) present?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) present?", "which ([A-Za-z0-9_-]*) present the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) presents the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was presented by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were presented by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1634",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1_21",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are presented by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) present?", "How often did ([A-Za-z0-9_-]*) present?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1635",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_72",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that called ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that called the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) called ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) called the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) calls ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) calls the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that called ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) called ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) calls ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1636",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_72",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) called by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) called by ([A-Za-z0-9_-]*)?", "Who kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "Who was called by ([A-Za-z0-9_-]*)?", "Who were called by ([A-Za-z0-9_-]*)?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) called", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) called", "which ([A-Za-z0-9_-]*) call the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) calls the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) call?", "which ([A-Za-z0-9_-]*) was called by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were called by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1637",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1_72",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are called by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "How often did ([A-Za-z0-9_-]*) call?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1638",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) air ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that aired ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that aired the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) air ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) aired ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) aired the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) airs ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) airs the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that aired ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) air ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) aired ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) airs ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/network> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1639",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) aired by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) aired by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was aired by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were aired by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) air?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) aired", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) aired", "which ([A-Za-z0-9_-]*) air the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) airs the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) air?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) air?", "which ([A-Za-z0-9_-]*) was aired by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were aired by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1640",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1_84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are aired by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) air?", "How often did ([A-Za-z0-9_-]*) air?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1641",
    "lexicalEntryUri" : "http://localhost:8080#to_influence_3_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who Influenced ([A-Za-z0-9_-]*)?", "Who Influences ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that Influenced ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) Influence?", "Whom was ([A-Za-z0-9_-]*) Influence?", "which ([A-Za-z0-9_-]*) Influenced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) Influences ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1642",
    "lexicalEntryUri" : "http://localhost:8080#to_influence_3_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) Influenced by?", "Who was Influenced by ([A-Za-z0-9_-]*)?", "Who were Influenced by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) Influence?", "which ([A-Za-z0-9_-]*) was Influenced by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were Influenced by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influencedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1643",
    "lexicalEntryUri" : "http://localhost:8080#to_influence_3_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are Influenced by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) Influence?", "How often did ([A-Za-z0-9_-]*) Influence?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/influencedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1644",
    "lexicalEntryUri" : "http://localhost:8080#to_join_2_73",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) join ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that joined ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that joined the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) join ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) joined ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) joined the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) joins ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) joins the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that joined ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) join ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) joined ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) joins ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/accessioneudate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1645",
    "lexicalEntryUri" : "http://localhost:8080#to_join_2_73",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "date" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) joined by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) joined by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was joined by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were joined by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) join?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) joined", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) joined", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) join?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) join?", "which ([A-Za-z0-9_-]*) join the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) joins the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was joined by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were joined by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/accessioneudate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1646",
    "lexicalEntryUri" : "http://localhost:8080#to_join_2_73",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "date" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are joined by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) join?", "How often did ([A-Za-z0-9_-]*) join?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/accessioneudate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1647",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2_86",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that wrote the ([A-Za-z0-9_-]*)", "Give me all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Who writes ([A-Za-z0-9_-]*)?", "Who writes the ([A-Za-z0-9_-]*)?", "Who wrote ([A-Za-z0-9_-]*)?", "Who wrote the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wrote ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1648",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2_86",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1649",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2_86",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are written by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "How often did ([A-Za-z0-9_-]*) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1650",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1_38",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) illustrate ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that illustrated ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that illustrated the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) illustrate ([A-Za-z0-9_-]*)?", "Who illustrated ([A-Za-z0-9_-]*)?", "Who illustrated the ([A-Za-z0-9_-]*)?", "Who illustrates ([A-Za-z0-9_-]*)?", "Who illustrates the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that illustrated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) illustrate ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) illustrated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) illustrates ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1651",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1_38",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) illustrated by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) illustrated by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was illustrated by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were illustrated by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) illustrate?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) illustrated", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) illustrated", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) illustrate?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) illustrate?", "which ([A-Za-z0-9_-]*) illustrate the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) illustrates the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was illustrated by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were illustrated by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1652",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1_38",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are illustrated by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) illustrate?", "How often did ([A-Za-z0-9_-]*) illustrate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1653",
    "lexicalEntryUri" : "http://localhost:8080#to_erupt_1_44",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) erupt ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that erupted ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that erupted the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) erupt ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) erupted ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) erupted the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) erupts ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) erupts the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that erupted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) erupt ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) erupted ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) erupts ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/eruptionYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1654",
    "lexicalEntryUri" : "http://localhost:8080#to_erupt_1_44",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) erupted by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) erupted by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was erupted by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were erupted by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) erupt?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) erupted", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) erupted", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) erupt?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) erupt?", "which ([A-Za-z0-9_-]*) erupt the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) erupts the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was erupted by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were erupted by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/eruptionYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1655",
    "lexicalEntryUri" : "http://localhost:8080#to_erupt_1_44",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are erupted by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) erupt?", "How often did ([A-Za-z0-9_-]*) erupt?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/eruptionYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1656",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) distribute ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that distributed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that distributed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) distribute ([A-Za-z0-9_-]*)?", "Who distributed ([A-Za-z0-9_-]*)?", "Who distributed the ([A-Za-z0-9_-]*)?", "Who distributes ([A-Za-z0-9_-]*)?", "Who distributes the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that distributed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) distribute ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) distributed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) distributes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1657",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) distributed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) distributed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was distributed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were distributed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) distribute?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) distributed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) distributed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) distribute?", "which ([A-Za-z0-9_-]*) distribute the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) distributes the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) distribute?", "which ([A-Za-z0-9_-]*) was distributed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were distributed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1658",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are distributed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) distribute?", "How often did ([A-Za-z0-9_-]*) distribute?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1659",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2_80",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) design ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that designed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that designed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) design ([A-Za-z0-9_-]*)?", "Who designed ([A-Za-z0-9_-]*)?", "Who designed the ([A-Za-z0-9_-]*)?", "Who designs ([A-Za-z0-9_-]*)?", "Who designs the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that designed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) design ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designs ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1660",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2_80",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) designed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) designed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was designed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were designed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) design?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) designed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) designed", "which ([A-Za-z0-9_-]*) design the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designs the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) design?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) design?", "which ([A-Za-z0-9_-]*) was designed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were designed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1661",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2_80",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are designed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) design?", "How often did ([A-Za-z0-9_-]*) design?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1662",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4_78",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that wrote the ([A-Za-z0-9_-]*)", "Give me all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Who writes ([A-Za-z0-9_-]*)?", "Who writes the ([A-Za-z0-9_-]*)?", "Who wrote ([A-Za-z0-9_-]*)?", "Who wrote the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wrote ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1663",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4_78",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1664",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4_78",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are written by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "How often did ([A-Za-z0-9_-]*) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1665",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1_69",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) follow ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that followed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that followed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) follow ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) followed ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) followed the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) follows ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) follows the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that followed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) follow ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) followed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) follows ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nextTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1666",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1_69",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) followed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) followed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was followed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were followed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) follow?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) followed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) followed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) follow?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) follow?", "which ([A-Za-z0-9_-]*) follow the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) follows the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was followed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were followed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1667",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1_69",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are followed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) follow?", "How often did ([A-Za-z0-9_-]*) follow?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1668",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5_81",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that wrote the ([A-Za-z0-9_-]*)", "Give me all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that wrote ([A-Za-z0-9_-]*)?", "Who writes ([A-Za-z0-9_-]*)?", "Who writes the ([A-Za-z0-9_-]*)?", "Who wrote ([A-Za-z0-9_-]*)?", "Who wrote the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wrote ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/allLyrics> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1669",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5_81",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) wrote", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) was written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were written by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1670",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5_81",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are written by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write?", "How often did ([A-Za-z0-9_-]*) write?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1671",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2_46",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that published ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that published the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "Who published ([A-Za-z0-9_-]*)?", "Who published the ([A-Za-z0-9_-]*)?", "Who publishes ([A-Za-z0-9_-]*)?", "Who publishes the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that published ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) published ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publishes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1672",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2_46",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) published by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) published by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was published by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were published by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) published", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) published", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) publish?", "which ([A-Za-z0-9_-]*) publish the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publishes the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was published by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were published by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1673",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2_46",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are published by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "How often did ([A-Za-z0-9_-]*) publish?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1674",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4_41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that published ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that published the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "Who published ([A-Za-z0-9_-]*)?", "Who published the ([A-Za-z0-9_-]*)?", "Who publishes ([A-Za-z0-9_-]*)?", "Who publishes the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that published ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) published ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publishes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1675",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4_41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) published by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) published by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was published by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were published by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) published", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) published", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) publish?", "which ([A-Za-z0-9_-]*) publish the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publishes the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was published by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were published by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1676",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4_41",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are published by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "How often did ([A-Za-z0-9_-]*) publish?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1677",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2_32",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that created ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that created the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "Who created ([A-Za-z0-9_-]*)?", "Who created the ([A-Za-z0-9_-]*)?", "Who creates ([A-Za-z0-9_-]*)?", "Who creates the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that created ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) create ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) created ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) creates ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1678",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2_32",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) created by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) created by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was created by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were created by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) created", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) created", "which ([A-Za-z0-9_-]*) create the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) creates the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) create?", "which ([A-Za-z0-9_-]*) was created by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were created by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1679",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2_32",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are created by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) create?", "How often did ([A-Za-z0-9_-]*) create?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1680",
    "lexicalEntryUri" : "http://localhost:8080#to_kill_1_45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) kill ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that killed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that killed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) kill ([A-Za-z0-9_-]*)?", "Who killed ([A-Za-z0-9_-]*)?", "Who killed the ([A-Za-z0-9_-]*)?", "Who kills ([A-Za-z0-9_-]*)?", "Who kills the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that killed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) kill ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) killed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) kills ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/conviction> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1681",
    "lexicalEntryUri" : "http://localhost:8080#to_kill_1_45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) killed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) killed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was killed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were killed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) kill?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) killed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) killed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) kill?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) kill?", "which ([A-Za-z0-9_-]*) kill the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) kills the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was killed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were killed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/conviction> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1682",
    "lexicalEntryUri" : "http://localhost:8080#to_kill_1_45",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are killed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) kill?", "How often did ([A-Za-z0-9_-]*) kill?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/conviction> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1683",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire_1_54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who inspired ([A-Za-z0-9_-]*)?", "Who inspires ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that inspired ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) inspire?", "Whom was ([A-Za-z0-9_-]*) inspire?", "which ([A-Za-z0-9_-]*) inspired ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) inspires ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1684",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire_1_54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) inspired by?", "Who was inspired by ([A-Za-z0-9_-]*)?", "Who were inspired by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) inspire?", "which ([A-Za-z0-9_-]*) was inspired by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were inspired by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1685",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire_1_54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are inspired by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) inspire?", "How often did ([A-Za-z0-9_-]*) inspire?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1686",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3_47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) star ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that starred ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that starred the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) star ([A-Za-z0-9_-]*)?", "Who starred ([A-Za-z0-9_-]*)?", "Who starred the ([A-Za-z0-9_-]*)?", "Who stars ([A-Za-z0-9_-]*)?", "Who stars the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that starred ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) star ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) starred ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) stars ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1687",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3_47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) starred by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) starred by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was starred by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were starred by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) star?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) starred", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) starred", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) star?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) star?", "which ([A-Za-z0-9_-]*) star the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) stars the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was starred by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were starred by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1688",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3_47",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are starred by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) star?", "How often did ([A-Za-z0-9_-]*) star?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1689",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1_77",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) design ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that designed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that designed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) design ([A-Za-z0-9_-]*)?", "Who designed ([A-Za-z0-9_-]*)?", "Who designed the ([A-Za-z0-9_-]*)?", "Who designs ([A-Za-z0-9_-]*)?", "Who designs the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that designed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) design ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designs ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1690",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1_77",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) designed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) designed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was designed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were designed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) design?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) designed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) designed", "which ([A-Za-z0-9_-]*) design the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designs the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) design?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) design?", "which ([A-Za-z0-9_-]*) was designed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were designed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1691",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1_77",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are designed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) design?", "How often did ([A-Za-z0-9_-]*) design?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1692",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1_88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) program ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that programmed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that programmed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) program ([A-Za-z0-9_-]*)?", "Who programmed ([A-Za-z0-9_-]*)?", "Who programmed the ([A-Za-z0-9_-]*)?", "Who programs ([A-Za-z0-9_-]*)?", "Who programs the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that programmed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) program ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) programmed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) programs ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/programmer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1693",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1_88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) programmed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) programmed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was programmed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were programmed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) program?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) programmed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) programmed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) program?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) program?", "which ([A-Za-z0-9_-]*) program the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) programs the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was programmed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were programmed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1694",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1_88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are programmed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) program?", "How often did ([A-Za-z0-9_-]*) program?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1695",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2_85",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) direct ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that directed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that directed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) direct ([A-Za-z0-9_-]*)?", "Who directed ([A-Za-z0-9_-]*)?", "Who directed the ([A-Za-z0-9_-]*)?", "Who directs ([A-Za-z0-9_-]*)?", "Who directs the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that directed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) direct ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) directed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) directs ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1696",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2_85",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) directed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) directed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was directed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were directed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) direct?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) directed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) directed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) direct?", "which ([A-Za-z0-9_-]*) direct the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) directs the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) direct?", "which ([A-Za-z0-9_-]*) was directed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were directed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1697",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2_85",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are directed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) direct?", "How often did ([A-Za-z0-9_-]*) direct?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1698",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1_83",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) join ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that joined ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that joined the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) join ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) joined ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) joined the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) joins ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) joins the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that joined ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) join ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) joined ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) joins ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1699",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1_83",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) joined by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) joined by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was joined by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were joined by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) join?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) joined", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) joined", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) join?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) join?", "which ([A-Za-z0-9_-]*) join the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) joins the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was joined by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were joined by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1700",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1_83",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are joined by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) join?", "How often did ([A-Za-z0-9_-]*) join?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1701",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1_42",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) serve ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that served ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that served the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) serve ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) served ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) served the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) serves ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) serves the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that served ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) serve ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) served ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) serves ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1702",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1_42",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) served by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) served by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was served by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were served by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) serve?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) served", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) served", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) serve?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) serve?", "which ([A-Za-z0-9_-]*) serve the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) serves the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was served by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were served by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1703",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1_42",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are served by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) serve?", "How often did ([A-Za-z0-9_-]*) serve?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1704",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) maintain ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that maintained ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that maintained the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) maintain ([A-Za-z0-9_-]*)?", "Who maintained ([A-Za-z0-9_-]*)?", "Who maintained the ([A-Za-z0-9_-]*)?", "Who maintains ([A-Za-z0-9_-]*)?", "Who maintains the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that maintained ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) maintain ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) maintained ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) maintains ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1705",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) maintained by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) maintained by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was maintained by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were maintained by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) maintain?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) maintained", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) maintained", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) maintain?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) maintain?", "which ([A-Za-z0-9_-]*) maintain the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) maintains the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was maintained by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were maintained by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1706",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are maintained by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) maintain?", "How often did ([A-Za-z0-9_-]*) maintain?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1707",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1_92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) perform ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that performed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that performed the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) perform ([A-Za-z0-9_-]*)?", "Who performed ([A-Za-z0-9_-]*)?", "Who performed the ([A-Za-z0-9_-]*)?", "Who performs ([A-Za-z0-9_-]*)?", "Who performs the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that performed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) perform ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) performed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) performs ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1708",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1_92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) performed by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) performed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was performed by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were performed by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) perform?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) performed", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) performed", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) perform?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) perform?", "which ([A-Za-z0-9_-]*) perform the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) performs the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was performed by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were performed by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1709",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1_92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are performed by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) perform?", "How often did ([A-Za-z0-9_-]*) perform?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1710",
    "lexicalEntryUri" : "http://localhost:8080#to_marry_1_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who married ([A-Za-z0-9_-]*)?", "Who marries ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that married ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) marry?", "Whom was ([A-Za-z0-9_-]*) marry?", "which ([A-Za-z0-9_-]*) married ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) marries ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1711",
    "lexicalEntryUri" : "http://localhost:8080#to_marry_1_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) married to?", "Who was married to ([A-Za-z0-9_-]*)?", "Who were married to ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) marry?", "which ([A-Za-z0-9_-]*) was married to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were married to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1712",
    "lexicalEntryUri" : "http://localhost:8080#to_marry_1_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are married to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) marry?", "How often did ([A-Za-z0-9_-]*) marry?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1713",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_59",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "Who played ([A-Za-z0-9_-]*)?", "Who played the ([A-Za-z0-9_-]*)?", "Who plays ([A-Za-z0-9_-]*)?", "Who plays the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1714",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_59",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1715",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2_59",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "How often did ([A-Za-z0-9_-]*) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1716",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1_60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who trained ([A-Za-z0-9_-]*)?", "Who trains ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that trained ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) train?", "Whom was ([A-Za-z0-9_-]*) train?", "which ([A-Za-z0-9_-]*) trained ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) trains ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/trainer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1717",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1_60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) trained by?", "Who was trained by ([A-Za-z0-9_-]*)?", "Who were trained by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) train?", "which ([A-Za-z0-9_-]*) was trained by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were trained by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1718",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1_60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are trained by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) train?", "How often did ([A-Za-z0-9_-]*) train?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1719",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1_43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that published ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that published the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) published ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) published the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) publishes ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) publishes the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that published ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) published ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publishes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1720",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1_43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) published by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) published by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was published by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were published by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) published", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) published", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) publish?", "which ([A-Za-z0-9_-]*) publish the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publishes the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was published by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were published by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1721",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1_43",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are published by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "How often did ([A-Za-z0-9_-]*) publish?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1722",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3_63",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that produced the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "Who produced ([A-Za-z0-9_-]*)?", "Who produced the ([A-Za-z0-9_-]*)?", "Who produces ([A-Za-z0-9_-]*)?", "Who produces the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produce ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produced ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1723",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3_63",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) produced by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) produced", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) produce the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) produces the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was produced by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were produced by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1724",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3_63",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are produced by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "How often did ([A-Za-z0-9_-]*) produce?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1725",
    "lexicalEntryUri" : "http://localhost:8080#to_called_1_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that called ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that called the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) called ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) called the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) calls ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) calls the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that called ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) call ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) called ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) calls ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://www.w3.org/2000/01/rdf-schema#label> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1726",
    "lexicalEntryUri" : "http://localhost:8080#to_called_1_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) called by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) called by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was called by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were called by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) called", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) called", "which ([A-Za-z0-9_-]*) call the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) calls the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) call?", "which ([A-Za-z0-9_-]*) was called by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were called by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://www.w3.org/2000/01/rdf-schema#label> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1727",
    "lexicalEntryUri" : "http://localhost:8080#to_called_1_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are called by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) call?", "How often did ([A-Za-z0-9_-]*) call?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://www.w3.org/2000/01/rdf-schema#label> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1728",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) exhibit ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that exhibited ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that exhibited the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) exhibit ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) exhibited ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) exhibited the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) exhibits ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) exhibits the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that exhibited ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) exhibit ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) exhibited ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) exhibits ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/museum> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1729",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) exhibited by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) exhibited by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was exhibited by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were exhibited by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) exhibit?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) exhibited", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) exhibited", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) exhibit?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) exhibit?", "which ([A-Za-z0-9_-]*) exhibit the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) exhibits the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was exhibited by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were exhibited by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1730",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are exhibited by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) exhibit?", "How often did ([A-Za-z0-9_-]*) exhibit?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1731",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1_50",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) discover ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that discovered ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that discovered the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) discover ([A-Za-z0-9_-]*)?", "Who discovered ([A-Za-z0-9_-]*)?", "Who discovered the ([A-Za-z0-9_-]*)?", "Who discovers ([A-Za-z0-9_-]*)?", "Who discovers the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that discovered ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) discover ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) discovered ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) discovers ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1732",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1_50",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) discovered by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) discovered by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was discovered by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were discovered by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) discover?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) discovered", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) discovered", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) discover?", "which ([A-Za-z0-9_-]*) discover the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) discovers the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) discover?", "which ([A-Za-z0-9_-]*) was discovered by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were discovered by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1733",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1_50",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are discovered by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) discover?", "How often did ([A-Za-z0-9_-]*) discover?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1734",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2_31",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that operated ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that operated the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "Who operated ([A-Za-z0-9_-]*)?", "Who operated the ([A-Za-z0-9_-]*)?", "Who operates ([A-Za-z0-9_-]*)?", "Who operates the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that operated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operate ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operated ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operates ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1735",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2_31",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) operated by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) operated by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was operated by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were operated by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) operated", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) operated", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) operate?", "which ([A-Za-z0-9_-]*) operate the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) operates the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was operated by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were operated by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1736",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2_31",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are operated by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) operate?", "How often did ([A-Za-z0-9_-]*) operate?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1737",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3_51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that published ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that published the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "Who published ([A-Za-z0-9_-]*)?", "Who published the ([A-Za-z0-9_-]*)?", "Who publishes ([A-Za-z0-9_-]*)?", "Who publishes the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that published ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publish ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) published ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publishes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1738",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3_51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) published by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) published by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was published by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were published by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) published", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) published", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) publish?", "which ([A-Za-z0-9_-]*) publish the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) publishes the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was published by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were published by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1739",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3_51",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are published by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) publish?", "How often did ([A-Za-z0-9_-]*) publish?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1740",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded ([A-Za-z0-9_-]*)?", "Who precedes ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that preceded ([A-Za-z0-9_-]*)?", "Whom is ([A-Za-z0-9_-]*) precede?", "Whom was ([A-Za-z0-9_-]*) precede?", "which ([A-Za-z0-9_-]*) preceded ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) precedes ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/predecessor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1741",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ([A-Za-z0-9_-]*) preceded by?", "Who was preceded by ([A-Za-z0-9_-]*)?", "Who were preceded by ([A-Za-z0-9_-]*)?", "Whom did ([A-Za-z0-9_-]*) precede?", "which ([A-Za-z0-9_-]*) was preceded by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were preceded by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1742",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are preceded by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) precede?", "How often did ([A-Za-z0-9_-]*) precede?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1743",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_24",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that played the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "Who played ([A-Za-z0-9_-]*)?", "Who played the ([A-Za-z0-9_-]*)?", "Who plays ([A-Za-z0-9_-]*)?", "Who plays the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) play ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1744",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_24",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) played by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) played", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1745",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1_24",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play?", "How often did ([A-Za-z0-9_-]*) play?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1746",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1_64",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) starring in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that starred in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that starred in the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) starring in ([A-Za-z0-9_-]*)?", "Who starred in ([A-Za-z0-9_-]*)?", "Who starred in the ([A-Za-z0-9_-]*)?", "Who starring in ([A-Za-z0-9_-]*)?", "Who starring in the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that starred in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) starred in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) starring in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1747",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1_64",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) starred_in by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) starred_in by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was starred_in by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were starred_in by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) starring in?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) starred in", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) starred in", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) starring in?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) starring in?", "which ([A-Za-z0-9_-]*) starring in the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was starred_in by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were starred_in by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1748",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1_64",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are starred_in by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) starring in?", "How often did ([A-Za-z0-9_-]*) starring in?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1749",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1_49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) breed ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that bred ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that bred the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) breed ([A-Za-z0-9_-]*)?", "Who bred ([A-Za-z0-9_-]*)?", "Who bred the ([A-Za-z0-9_-]*)?", "Who breeds ([A-Za-z0-9_-]*)?", "Who breeds the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that bred ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) bred ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) breed ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) breeds ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/breeder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1750",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1_49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) bred by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) bred by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was bred by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were bred by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) breed?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) bred", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) bred", "which ([A-Za-z0-9_-]*) breed the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) breeds the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) breed?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) breed?", "which ([A-Za-z0-9_-]*) was bred by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were bred by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1751",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1_49",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are bred by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) breed?", "How often did ([A-Za-z0-9_-]*) breed?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1752",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) speak ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that spoken ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that spoken the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) speak ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) speaks ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) speaks the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) spoken ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) spoken the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was the ([A-Za-z0-9_-]*) that spoken ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) speak ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) speaks ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) spoken ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1753",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) spoken by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) spoken by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was spoken by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were spoken by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) spoken", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) spoken", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak?", "which ([A-Za-z0-9_-]*) speak the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) speaks the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was spoken by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were spoken by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1754",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2_48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are spoken by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak?", "How often did ([A-Za-z0-9_-]*) speak?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1755",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1_74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) own ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that owned ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) that owned the ([A-Za-z0-9_-]*)", "List all ([A-Za-z0-9_-]*) own ([A-Za-z0-9_-]*)?", "Who owned ([A-Za-z0-9_-]*)?", "Who owned the ([A-Za-z0-9_-]*)?", "Who owns ([A-Za-z0-9_-]*)?", "Who owns the ([A-Za-z0-9_-]*)?", "Who was the ([A-Za-z0-9_-]*) that owned ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) own ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) owned ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) owns ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1756",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1_74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) owned by ([A-Za-z0-9_-]*)?", "List all ([A-Za-z0-9_-]*) owned by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was owned by ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) were owned by ([A-Za-z0-9_-]*)?", "What kind of ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) own?", "show me all ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) owned", "show me the ([A-Za-z0-9_-]*) that ([A-Za-z0-9_-]*) owned", "which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) own?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) own?", "which ([A-Za-z0-9_-]*) own the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) owns the ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was owned by ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were owned by ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1757",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1_74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are owned by ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) own?", "How often did ([A-Za-z0-9_-]*) own?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1758",
    "lexicalEntryUri" : "http://localhost:8080#german_390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss", "What ([A-Za-z0-9_-]*) are swiss" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#german_390_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1759",
    "lexicalEntryUri" : "http://localhost:8080#german_390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are swiss ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1760",
    "lexicalEntryUri" : "http://localhost:8080#afghan_406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all afghan", "What ([A-Za-z0-9_-]*) are afghan" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_406_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1761",
    "lexicalEntryUri" : "http://localhost:8080#afghan_406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all afghan ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are afghan ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Afghanistan> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1762",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bulgarian", "What ([A-Za-z0-9_-]*) are bulgarian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_415_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1763",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bulgarian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bulgarian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bulgaria> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1764",
    "lexicalEntryUri" : "http://localhost:8080#bengali_400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bengali", "What ([A-Za-z0-9_-]*) are bengali" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bengali_400_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1765",
    "lexicalEntryUri" : "http://localhost:8080#bengali_400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bengali ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bengali ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bangladesh> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1766",
    "lexicalEntryUri" : "http://localhost:8080#swiss_409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss", "What ([A-Za-z0-9_-]*) are swiss" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#swiss_409_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1767",
    "lexicalEntryUri" : "http://localhost:8080#swiss_409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are swiss ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1768",
    "lexicalEntryUri" : "http://localhost:8080#botswana_396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all botswana", "What ([A-Za-z0-9_-]*) are botswana" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#botswana_396_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1769",
    "lexicalEntryUri" : "http://localhost:8080#botswana_396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all botswana ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are botswana ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Botswana> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1770",
    "lexicalEntryUri" : "http://localhost:8080#belizean_395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belizean", "What ([A-Za-z0-9_-]*) are belizean" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_395_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1771",
    "lexicalEntryUri" : "http://localhost:8080#belizean_395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belizean ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are belizean ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belize> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1772",
    "lexicalEntryUri" : "http://localhost:8080#algerian_399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all algerian", "What ([A-Za-z0-9_-]*) are algerian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_399_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1773",
    "lexicalEntryUri" : "http://localhost:8080#algerian_399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all algerian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are algerian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Algeria> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1774",
    "lexicalEntryUri" : "http://localhost:8080#albanian_410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all albanian", "What ([A-Za-z0-9_-]*) are albanian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#albanian_410_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1775",
    "lexicalEntryUri" : "http://localhost:8080#albanian_410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all albanian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are albanian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Albania> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1776",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bolivian", "What ([A-Za-z0-9_-]*) are bolivian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_416_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1777",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bolivian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bolivian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bolivia> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1778",
    "lexicalEntryUri" : "http://localhost:8080#barbadian_397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all barbadian", "What ([A-Za-z0-9_-]*) are barbadian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#barbadian_397_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1779",
    "lexicalEntryUri" : "http://localhost:8080#barbadian_397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all barbadian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are barbadian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Barbados> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1780",
    "lexicalEntryUri" : "http://localhost:8080#methodist_402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all methodist", "What ([A-Za-z0-9_-]*) are methodist" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#methodist_402_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1781",
    "lexicalEntryUri" : "http://localhost:8080#methodist_402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all methodist ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are methodist ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1782",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bahamian", "What ([A-Za-z0-9_-]*) are bahamian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bahamian_411_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1783",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bahamian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bahamian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/The_Bahamas> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1784",
    "lexicalEntryUri" : "http://localhost:8080#australian_394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all australian", "What ([A-Za-z0-9_-]*) are australian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_394_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1785",
    "lexicalEntryUri" : "http://localhost:8080#australian_394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all australian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are australian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1786",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all azerbaijani", "What ([A-Za-z0-9_-]*) are azerbaijani" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_401_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1787",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all azerbaijani ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are azerbaijani ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Azerbaijan> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1788",
    "lexicalEntryUri" : "http://localhost:8080#danish_393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all danish", "What ([A-Za-z0-9_-]*) are danish" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#danish_393_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1789",
    "lexicalEntryUri" : "http://localhost:8080#danish_393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all danish ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are danish ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1790",
    "lexicalEntryUri" : "http://localhost:8080#colombian_389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all colombian", "What ([A-Za-z0-9_-]*) are colombian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_389_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1791",
    "lexicalEntryUri" : "http://localhost:8080#colombian_389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all colombian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are colombian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1792",
    "lexicalEntryUri" : "http://localhost:8080#aruban_408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all aruban", "What ([A-Za-z0-9_-]*) are aruban" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_408_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1793",
    "lexicalEntryUri" : "http://localhost:8080#aruban_408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all aruban ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are aruban ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Aruba> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1794",
    "lexicalEntryUri" : "http://localhost:8080#czech_404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all czech", "What ([A-Za-z0-9_-]*) are czech" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_404_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1795",
    "lexicalEntryUri" : "http://localhost:8080#czech_404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all czech ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are czech ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1796",
    "lexicalEntryUri" : "http://localhost:8080#andorran_398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all andorran", "What ([A-Za-z0-9_-]*) are andorran" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_398_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1797",
    "lexicalEntryUri" : "http://localhost:8080#andorran_398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all andorran ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are andorran ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Andorra> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1798",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bermudian", "What ([A-Za-z0-9_-]*) are bermudian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_392_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1799",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bermudian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bermudian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bermuda> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1800",
    "lexicalEntryUri" : "http://localhost:8080#greek_405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all greek", "What ([A-Za-z0-9_-]*) are greek" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_405_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1801",
    "lexicalEntryUri" : "http://localhost:8080#greek_405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all greek ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are greek ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1802",
    "lexicalEntryUri" : "http://localhost:8080#benin_407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all benin", "What ([A-Za-z0-9_-]*) are benin" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#benin_407_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1803",
    "lexicalEntryUri" : "http://localhost:8080#benin_407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all benin ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are benin ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Benin> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1804",
    "lexicalEntryUri" : "http://localhost:8080#belgian_391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belgian", "What ([A-Za-z0-9_-]*) are belgian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belgian_391_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1805",
    "lexicalEntryUri" : "http://localhost:8080#belgian_391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belgian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are belgian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belgium> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1806",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all brazilian", "What ([A-Za-z0-9_-]*) are brazilian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_412_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1807",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all brazilian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are brazilian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1808",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belarusian", "What ([A-Za-z0-9_-]*) are belarusian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_414_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1809",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belarusian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are belarusian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belarus> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1810",
    "lexicalEntryUri" : "http://localhost:8080#angolan_413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all angolan", "What ([A-Za-z0-9_-]*) are angolan" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_413_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1811",
    "lexicalEntryUri" : "http://localhost:8080#angolan_413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all angolan ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are angolan ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Angola> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1812",
    "lexicalEntryUri" : "http://localhost:8080#female_403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all female", "What ([A-Za-z0-9_-]*) are female" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#female_403_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1813",
    "lexicalEntryUri" : "http://localhost:8080#female_403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all female ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are female ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1814",
    "lexicalEntryUri" : "http://localhost:8080#german_390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss", "What ([A-Za-z0-9_-]*) are swiss" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#german_390_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1815",
    "lexicalEntryUri" : "http://localhost:8080#german_390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are swiss ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1816",
    "lexicalEntryUri" : "http://localhost:8080#afghan_406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all afghan", "What ([A-Za-z0-9_-]*) are afghan" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_406_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1817",
    "lexicalEntryUri" : "http://localhost:8080#afghan_406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all afghan ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are afghan ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Afghanistan> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1818",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bulgarian", "What ([A-Za-z0-9_-]*) are bulgarian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_415_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1819",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bulgarian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bulgarian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bulgaria> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1820",
    "lexicalEntryUri" : "http://localhost:8080#bengali_400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bengali", "What ([A-Za-z0-9_-]*) are bengali" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bengali_400_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1821",
    "lexicalEntryUri" : "http://localhost:8080#bengali_400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bengali ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bengali ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bangladesh> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1822",
    "lexicalEntryUri" : "http://localhost:8080#swiss_409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss", "What ([A-Za-z0-9_-]*) are swiss" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#swiss_409_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1823",
    "lexicalEntryUri" : "http://localhost:8080#swiss_409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all swiss ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are swiss ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1824",
    "lexicalEntryUri" : "http://localhost:8080#botswana_396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all botswana", "What ([A-Za-z0-9_-]*) are botswana" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#botswana_396_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1825",
    "lexicalEntryUri" : "http://localhost:8080#botswana_396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all botswana ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are botswana ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Botswana> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1826",
    "lexicalEntryUri" : "http://localhost:8080#belizean_395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belizean", "What ([A-Za-z0-9_-]*) are belizean" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_395_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1827",
    "lexicalEntryUri" : "http://localhost:8080#belizean_395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belizean ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are belizean ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belize> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1828",
    "lexicalEntryUri" : "http://localhost:8080#algerian_399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all algerian", "What ([A-Za-z0-9_-]*) are algerian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_399_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1829",
    "lexicalEntryUri" : "http://localhost:8080#algerian_399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all algerian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are algerian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Algeria> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1830",
    "lexicalEntryUri" : "http://localhost:8080#albanian_410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all albanian", "What ([A-Za-z0-9_-]*) are albanian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#albanian_410_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1831",
    "lexicalEntryUri" : "http://localhost:8080#albanian_410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all albanian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are albanian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Albania> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1832",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bolivian", "What ([A-Za-z0-9_-]*) are bolivian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_416_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1833",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bolivian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bolivian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bolivia> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1834",
    "lexicalEntryUri" : "http://localhost:8080#barbadian_397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all barbadian", "What ([A-Za-z0-9_-]*) are barbadian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#barbadian_397_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1835",
    "lexicalEntryUri" : "http://localhost:8080#barbadian_397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all barbadian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are barbadian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Barbados> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1836",
    "lexicalEntryUri" : "http://localhost:8080#methodist_402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all methodist", "What ([A-Za-z0-9_-]*) are methodist" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#methodist_402_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1837",
    "lexicalEntryUri" : "http://localhost:8080#methodist_402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all methodist ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are methodist ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1838",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bahamian", "What ([A-Za-z0-9_-]*) are bahamian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bahamian_411_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1839",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bahamian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bahamian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/The_Bahamas> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1840",
    "lexicalEntryUri" : "http://localhost:8080#australian_394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all australian", "What ([A-Za-z0-9_-]*) are australian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_394_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1841",
    "lexicalEntryUri" : "http://localhost:8080#australian_394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all australian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are australian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1842",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all azerbaijani", "What ([A-Za-z0-9_-]*) are azerbaijani" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_401_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1843",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all azerbaijani ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are azerbaijani ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Azerbaijan> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1844",
    "lexicalEntryUri" : "http://localhost:8080#danish_393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all danish", "What ([A-Za-z0-9_-]*) are danish" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#danish_393_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1845",
    "lexicalEntryUri" : "http://localhost:8080#danish_393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all danish ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are danish ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1846",
    "lexicalEntryUri" : "http://localhost:8080#colombian_389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all colombian", "What ([A-Za-z0-9_-]*) are colombian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_389_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1847",
    "lexicalEntryUri" : "http://localhost:8080#colombian_389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all colombian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are colombian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1848",
    "lexicalEntryUri" : "http://localhost:8080#aruban_408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all aruban", "What ([A-Za-z0-9_-]*) are aruban" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_408_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1849",
    "lexicalEntryUri" : "http://localhost:8080#aruban_408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all aruban ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are aruban ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Aruba> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1850",
    "lexicalEntryUri" : "http://localhost:8080#czech_404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all czech", "What ([A-Za-z0-9_-]*) are czech" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_404_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1851",
    "lexicalEntryUri" : "http://localhost:8080#czech_404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all czech ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are czech ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1852",
    "lexicalEntryUri" : "http://localhost:8080#andorran_398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all andorran", "What ([A-Za-z0-9_-]*) are andorran" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_398_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1853",
    "lexicalEntryUri" : "http://localhost:8080#andorran_398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all andorran ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are andorran ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Andorra> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1854",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bermudian", "What ([A-Za-z0-9_-]*) are bermudian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_392_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1855",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all bermudian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are bermudian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Bermuda> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1856",
    "lexicalEntryUri" : "http://localhost:8080#greek_405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all greek", "What ([A-Za-z0-9_-]*) are greek" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_405_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1857",
    "lexicalEntryUri" : "http://localhost:8080#greek_405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all greek ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are greek ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1858",
    "lexicalEntryUri" : "http://localhost:8080#benin_407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all benin", "What ([A-Za-z0-9_-]*) are benin" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#benin_407_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1859",
    "lexicalEntryUri" : "http://localhost:8080#benin_407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all benin ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are benin ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Benin> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1860",
    "lexicalEntryUri" : "http://localhost:8080#belgian_391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belgian", "What ([A-Za-z0-9_-]*) are belgian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belgian_391_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1861",
    "lexicalEntryUri" : "http://localhost:8080#belgian_391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belgian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are belgian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belgium> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1862",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all brazilian", "What ([A-Za-z0-9_-]*) are brazilian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_412_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1863",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all brazilian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are brazilian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1864",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belarusian", "What ([A-Za-z0-9_-]*) are belarusian" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_414_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1865",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all belarusian ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are belarusian ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Belarus> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1866",
    "lexicalEntryUri" : "http://localhost:8080#angolan_413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all angolan", "What ([A-Za-z0-9_-]*) are angolan" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_413_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1867",
    "lexicalEntryUri" : "http://localhost:8080#angolan_413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all angolan ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are angolan ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Angola> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1868",
    "lexicalEntryUri" : "http://localhost:8080#female_403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all female", "What ([A-Za-z0-9_-]*) are female" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#female_403_sense_1_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1869",
    "lexicalEntryUri" : "http://localhost:8080#female_403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ "Give me all female ([A-Za-z0-9_-]*).", "What ([A-Za-z0-9_-]*) are female ([A-Za-z0-9_-]*)." ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "1870",
    "lexicalEntryUri" : "http://localhost:8080#high_3_422",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1871",
    "lexicalEntryUri" : "http://localhost:8080#high_3_422",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ([A-Za-z0-9_-]*)?", "How high is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1872",
    "lexicalEntryUri" : "http://localhost:8080#high_3_422",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are higher than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1873",
    "lexicalEntryUri" : "http://localhost:8080#short_434",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the shortest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the shortest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the shortest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the shortest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?num WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1874",
    "lexicalEntryUri" : "http://localhost:8080#short_434",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How short is ([A-Za-z0-9_-]*)?", "How short is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1875",
    "lexicalEntryUri" : "http://localhost:8080#short_434",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are shorter than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/length> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1876",
    "lexicalEntryUri" : "http://localhost:8080#large_1_429",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the largest ([A-Za-z0-9_-]*) in the world?", "What ([A-Za-z0-9_-]*) is the largest ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1877",
    "lexicalEntryUri" : "http://localhost:8080#large_1_429",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How large is ([A-Za-z0-9_-]*)?", "How large is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1878",
    "lexicalEntryUri" : "http://localhost:8080#large_1_429",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are larger than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1879",
    "lexicalEntryUri" : "http://localhost:8080#big_1_420",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the biggest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the biggest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the biggest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the biggest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1880",
    "lexicalEntryUri" : "http://localhost:8080#big_1_420",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How big is ([A-Za-z0-9_-]*)?", "How big is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1881",
    "lexicalEntryUri" : "http://localhost:8080#big_1_420",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are bigger than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seatingCapacity> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1882",
    "lexicalEntryUri" : "http://localhost:8080#young_2_431",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the youngest ([A-Za-z0-9_-]*) in the world?", "Who is the youngest ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1883",
    "lexicalEntryUri" : "http://localhost:8080#young_2_431",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How young is ([A-Za-z0-9_-]*)?", "How young is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1884",
    "lexicalEntryUri" : "http://localhost:8080#young_2_431",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are younger than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1885",
    "lexicalEntryUri" : "http://localhost:8080#tall_4_435",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "VolleyballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeTeamPlayer",
    "sentences" : [ "Who is the tallest ([A-Za-z0-9_-]*) of ([A-Za-z0-9_-]*)?", "Who is the tallest ([A-Za-z0-9_-]*) of the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1886",
    "lexicalEntryUri" : "http://localhost:8080#tall_4_435",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VolleyballPlayer" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ([A-Za-z0-9_-]*)?", "How tall is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1887",
    "lexicalEntryUri" : "http://localhost:8080#tall_4_435",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VolleyballPlayer" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are taller than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1888",
    "lexicalEntryUri" : "http://localhost:8080#high_1_418",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1889",
    "lexicalEntryUri" : "http://localhost:8080#high_1_418",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ([A-Za-z0-9_-]*)?", "How high is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1890",
    "lexicalEntryUri" : "http://localhost:8080#high_1_418",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are higher than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1891",
    "lexicalEntryUri" : "http://localhost:8080#high_2_421",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lighthouse" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lighthouse> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1892",
    "lexicalEntryUri" : "http://localhost:8080#high_2_421",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ([A-Za-z0-9_-]*)?", "How high is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1893",
    "lexicalEntryUri" : "http://localhost:8080#high_2_421",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are higher than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1894",
    "lexicalEntryUri" : "http://localhost:8080#tall_2_436",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Model" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the tallest ([A-Za-z0-9_-]*) in the world?", "Who is the tallest ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1895",
    "lexicalEntryUri" : "http://localhost:8080#tall_2_436",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ([A-Za-z0-9_-]*)?", "How tall is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1896",
    "lexicalEntryUri" : "http://localhost:8080#tall_2_436",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are taller than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1897",
    "lexicalEntryUri" : "http://localhost:8080#populated_1_433",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the most populated ([A-Za-z0-9_-]*) in the world?", "What ([A-Za-z0-9_-]*) is the most populated ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1898",
    "lexicalEntryUri" : "http://localhost:8080#populated_1_433",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How populated is ([A-Za-z0-9_-]*)?", "How populated is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1899",
    "lexicalEntryUri" : "http://localhost:8080#populated_1_433",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are more populated than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1900",
    "lexicalEntryUri" : "http://localhost:8080#high_4_424",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Building" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1901",
    "lexicalEntryUri" : "http://localhost:8080#high_4_424",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ([A-Za-z0-9_-]*)?", "How high is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1902",
    "lexicalEntryUri" : "http://localhost:8080#high_4_424",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are higher than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1903",
    "lexicalEntryUri" : "http://localhost:8080#long_427",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the longest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the longest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the longest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the longest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1904",
    "lexicalEntryUri" : "http://localhost:8080#long_427",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How long is ([A-Za-z0-9_-]*)?", "How long is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1905",
    "lexicalEntryUri" : "http://localhost:8080#long_427",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are longer than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/length> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1906",
    "lexicalEntryUri" : "http://localhost:8080#old_423",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativePerson",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?VARIABLE <http://dbpedia.org/ontology/child> ?Answer . ?Answer <http://dbpedia.org/ontology/birthYear> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1907",
    "lexicalEntryUri" : "http://localhost:8080#old_423",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How old is ([A-Za-z0-9_-]*)?", "How old is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1908",
    "lexicalEntryUri" : "http://localhost:8080#old_423",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are older than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1909",
    "lexicalEntryUri" : "http://localhost:8080#small_1_428",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the smallest ([A-Za-z0-9_-]*) in the world?", "What ([A-Za-z0-9_-]*) is the smallest ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1910",
    "lexicalEntryUri" : "http://localhost:8080#small_1_428",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How small is ([A-Za-z0-9_-]*)?", "How small is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1911",
    "lexicalEntryUri" : "http://localhost:8080#small_1_428",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are smaller than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1912",
    "lexicalEntryUri" : "http://localhost:8080#deep_417",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the deepest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the deepest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the deepest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the deepest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lake> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/maximumDepth> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1913",
    "lexicalEntryUri" : "http://localhost:8080#deep_417",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How deep is ([A-Za-z0-9_-]*)?", "How deep is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maximumDepth> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1914",
    "lexicalEntryUri" : "http://localhost:8080#deep_417",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are deeper than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/maximumDepth> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1915",
    "lexicalEntryUri" : "http://localhost:8080#high_6_426",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BasketballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "Who is the highest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "Who is the highest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "Who is the highest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "Who is the highest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1916",
    "lexicalEntryUri" : "http://localhost:8080#high_6_426",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ([A-Za-z0-9_-]*)?", "How high is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1917",
    "lexicalEntryUri" : "http://localhost:8080#high_6_426",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are higher than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1918",
    "lexicalEntryUri" : "http://localhost:8080#tall_1_419",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "BasketballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the tallest ([A-Za-z0-9_-]*) in the world?", "Who is the tallest ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1919",
    "lexicalEntryUri" : "http://localhost:8080#tall_1_419",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ([A-Za-z0-9_-]*)?", "How tall is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1920",
    "lexicalEntryUri" : "http://localhost:8080#tall_1_419",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are taller than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1921",
    "lexicalEntryUri" : "http://localhost:8080#young_1_430",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "DartsPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the youngest ([A-Za-z0-9_-]*) in the world?", "Who is the youngest ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/DartsPlayer> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1922",
    "lexicalEntryUri" : "http://localhost:8080#young_1_430",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "DartsPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How young is ([A-Za-z0-9_-]*)?", "How young is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1923",
    "lexicalEntryUri" : "http://localhost:8080#young_1_430",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "DartsPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are younger than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1924",
    "lexicalEntryUri" : "http://localhost:8080#high_5_425",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) is the highest the ([A-Za-z0-9_-]*) in the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1925",
    "lexicalEntryUri" : "http://localhost:8080#high_5_425",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ([A-Za-z0-9_-]*)?", "How high is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1926",
    "lexicalEntryUri" : "http://localhost:8080#high_5_425",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are higher than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1927",
    "lexicalEntryUri" : "http://localhost:8080#populated_2_432",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is the least populated ([A-Za-z0-9_-]*) in the world?", "What ([A-Za-z0-9_-]*) is the least populated ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1928",
    "lexicalEntryUri" : "http://localhost:8080#populated_2_432",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How populated is ([A-Za-z0-9_-]*)?", "How populated is the ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1929",
    "lexicalEntryUri" : "http://localhost:8080#populated_2_432",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ([A-Za-z0-9_-]*) that are less populated than ([A-Za-z0-9_-]*)" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1930",
    "lexicalEntryUri" : "http://localhost:8080#run_through_1_170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ([A-Za-z0-9_-]*) run?", "through which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) run?", "through which ([A-Za-z0-9_-]*) are the ([A-Za-z0-9_-]*)?", "through which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) run?", "through which ([A-Za-z0-9_-]*) is the ([A-Za-z0-9_-]*)?", "what ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) through?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1931",
    "lexicalEntryUri" : "http://localhost:8080#run_through_1_170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ([A-Za-z0-9_-]*) runs through?", "What run through ([A-Za-z0-9_-]*)?", "What runs through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) runs through ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1932",
    "lexicalEntryUri" : "http://localhost:8080#run_through_1_170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1933",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1_215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) form?", "When did the ([A-Za-z0-9_-]*) form?", "When was ([A-Za-z0-9_-]*) formed?", "When was the ([A-Za-z0-9_-]*) formed?", "When were ([A-Za-z0-9_-]*) formed?", "When were the ([A-Za-z0-9_-]*) formed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1934",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1_215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) formed in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1935",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1_215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1936",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1_226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were produced in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were produced in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was produced in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was produced in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were produced in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1937",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1_226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) produce?", "Where is ([A-Za-z0-9_-]*) produced?", "Where was ([A-Za-z0-9_-]*) produced?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) produce?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) produce in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) produce in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1938",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1_226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1939",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6_137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) are the ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) is the ([A-Za-z0-9_-]*)?", "what ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1940",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6_137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ([A-Za-z0-9_-]*) locate in?", "What locate in ([A-Za-z0-9_-]*)?", "What located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1941",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6_137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1942",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2_125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that locate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate in?", "Where is ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) locate?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate?", "in which ([A-Za-z0-9_-]*) does locate ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) located?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) locate in?", "which ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) located in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1943",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2_125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that locate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) locate in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate in?", "What located in ([A-Za-z0-9_-]*)?", "What locates in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) locate?", "which ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) locates in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were located in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1944",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2_125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are located in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) locate in?", "How many ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1945",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1_204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) die?", "When was ([A-Za-z0-9_-]*) died?", "in which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1946",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1_204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was died in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was died in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were died in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1947",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1_204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1948",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1_180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) born?", "When was ([A-Za-z0-9_-]*) born?", "in which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1949",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1_180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were born in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1950",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1_180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1951",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3_189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that associate with ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) associated?", "Who does ([A-Za-z0-9_-]*) associate with?", "which ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate with?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) associate with?", "with which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) associate?", "with which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) associated?", "with which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate?", "with which ([A-Za-z0-9_-]*) does associate ([A-Za-z0-9_-]*)?", "with which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1952",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3_189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that associate with ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) associate with?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate with?", "What associated with ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) associate?", "which ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were associated with ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1953",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3_189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are associated with ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) associate with?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1954",
    "lexicalEntryUri" : "http://localhost:8080#start_at_3_200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) start?", "When did the ([A-Za-z0-9_-]*) start?", "When was ([A-Za-z0-9_-]*) started?", "When was the ([A-Za-z0-9_-]*) started?", "When were ([A-Za-z0-9_-]*) started?", "When were the ([A-Za-z0-9_-]*) started?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1955",
    "lexicalEntryUri" : "http://localhost:8080#start_at_3_200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) started at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1956",
    "lexicalEntryUri" : "http://localhost:8080#start_at_3_200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1957",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1_184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that initially use for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) initially use for?", "Where is ([A-Za-z0-9_-]*) initially used?", "for which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) initially use?", "for which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) initially used?", "for which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) initially use?", "for which ([A-Za-z0-9_-]*) does initially use ([A-Za-z0-9_-]*)?", "for which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) initially used?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) initially use for?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) initially use for?", "which ([A-Za-z0-9_-]*) initially use for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) initially used for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1958",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1_184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that initially use for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) initially use for?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) initially use for?", "What initially used for ([A-Za-z0-9_-]*)?", "What initially uses for ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) initially use?", "which ([A-Za-z0-9_-]*) initially use for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) initially used for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) initially uses for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was initially used for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were initially used for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1959",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1_184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are initially used for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) initially use for?", "How many ([A-Za-z0-9_-]*) initially use for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1960",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8_173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "President" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) born?", "When was ([A-Za-z0-9_-]*) born?", "in which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1961",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8_173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "President" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were born in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1962",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8_173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "President" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1963",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1_128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were buried in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were buried in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was buried in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was buried in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were buried in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1964",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1_128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) bury?", "Where is ([A-Za-z0-9_-]*) buried?", "Where was ([A-Za-z0-9_-]*) buried?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) bury?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) bury in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1965",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1_128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1966",
    "lexicalEntryUri" : "http://localhost:8080#come_from_207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were come from ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were come from ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was came from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was come from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were come from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1967",
    "lexicalEntryUri" : "http://localhost:8080#come_from_207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) come?", "Where is ([A-Za-z0-9_-]*) come?", "Where was ([A-Za-z0-9_-]*) come?", "from which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) come?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) come from?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) come from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1968",
    "lexicalEntryUri" : "http://localhost:8080#come_from_207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1969",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4_199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play in?", "Where is ([A-Za-z0-9_-]*) played?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) play?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) played?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "in which ([A-Za-z0-9_-]*) does play ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) played?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) play in?", "which ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1970",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4_199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) play?", "Who did ([A-Za-z0-9_-]*) play in?", "Who does ([A-Za-z0-9_-]*) play in?", "Who played in ([A-Za-z0-9_-]*)?", "Who plays in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1971",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4_199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play in?", "How many ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1972",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3_126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) are the ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) is the ([A-Za-z0-9_-]*)?", "what ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1973",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3_126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ([A-Za-z0-9_-]*) locate in?", "What locate in ([A-Za-z0-9_-]*)?", "What located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1974",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3_126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1975",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2_181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were born in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were born in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were born in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1976",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2_181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) born?", "Where is ([A-Za-z0-9_-]*) born?", "Where was ([A-Za-z0-9_-]*) born?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) born?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) born in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1977",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2_181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1978",
    "lexicalEntryUri" : "http://localhost:8080#extend_to_1_222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ([A-Za-z0-9_-]*) extended?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) extended?", "in which ([A-Za-z0-9_-]*) are the ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) extended?", "in which ([A-Za-z0-9_-]*) is the ([A-Za-z0-9_-]*)?", "what ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1979",
    "lexicalEntryUri" : "http://localhost:8080#extend_to_1_222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ([A-Za-z0-9_-]*) extend in?", "What extend in ([A-Za-z0-9_-]*)?", "What extended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) extend in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1980",
    "lexicalEntryUri" : "http://localhost:8080#extend_to_1_222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1981",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10_168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) belonged?", "Who does ([A-Za-z0-9_-]*) belong to?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1982",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10_168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1983",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10_168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1984",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8_138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MountainRange" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mountainRange> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1985",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8_138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "MountainRange" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1986",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8_138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "MountainRange" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1987",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that relate to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) relate to?", "Where is ([A-Za-z0-9_-]*) related?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) relate?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) related?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) relate?", "to which ([A-Za-z0-9_-]*) does relate ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) related?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) relate to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) relate to?", "which ([A-Za-z0-9_-]*) relate to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) related to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/related> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1988",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that relate to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) relate to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) relate to?", "What is related to ([A-Za-z0-9_-]*)?", "What related to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) relate?", "which ([A-Za-z0-9_-]*) is related to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) relate to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) related to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was related to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were related to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/related> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1989",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1_160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are related to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) relate to?", "How many ([A-Za-z0-9_-]*) relate to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/related> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1990",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1_99",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) die?", "When was ([A-Za-z0-9_-]*) died?", "on which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1991",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1_99",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was died on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was died on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were died on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1992",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1_99",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1993",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1_94",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) split?", "When did the ([A-Za-z0-9_-]*) split?", "When was ([A-Za-z0-9_-]*) splited?", "When was the ([A-Za-z0-9_-]*) splited?", "When were ([A-Za-z0-9_-]*) splited?", "When were the ([A-Za-z0-9_-]*) splited?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1994",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1_94",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) splited up ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1995",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1_94",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1996",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1_217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) publish?", "When did the ([A-Za-z0-9_-]*) publish?", "When was ([A-Za-z0-9_-]*) published?", "When was the ([A-Za-z0-9_-]*) published?", "When were ([A-Za-z0-9_-]*) published?", "When were the ([A-Za-z0-9_-]*) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1997",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1_217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) published in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1998",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1_217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1999",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "Where is ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) does end ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) ended?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2000",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "What ended in ([A-Za-z0-9_-]*)?", "What ends in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) end?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ends in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2001",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are ended in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "How many ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2002",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "Where is ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) does end ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) ended?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2003",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "What ended in ([A-Za-z0-9_-]*)?", "What ends in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) end?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ends in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2004",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1_176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are ended in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "How many ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2005",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2006",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2007",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12_169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2008",
    "lexicalEntryUri" : "http://localhost:8080#draft_in_1_205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "AmericanFootballPlayer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) draft?", "When was ([A-Za-z0-9_-]*) drafted?", "in which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) drafted?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/draftYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2009",
    "lexicalEntryUri" : "http://localhost:8080#draft_in_1_205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AmericanFootballPlayer" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "What ([A-Za-z0-9_-]*) was drafted in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was drafted in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were drafted in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2010",
    "lexicalEntryUri" : "http://localhost:8080#draft_in_1_205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AmericanFootballPlayer" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2011",
    "lexicalEntryUri" : "http://localhost:8080#shot_in_1_198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) shot?", "When was ([A-Za-z0-9_-]*) shot?", "in which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) shot?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2012",
    "lexicalEntryUri" : "http://localhost:8080#shot_in_1_198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was shot in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was shot in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were shot in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2013",
    "lexicalEntryUri" : "http://localhost:8080#shot_in_1_198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2014",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) belonged?", "Who does ([A-Za-z0-9_-]*) belong to?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2015",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2016",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18_164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2017",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1_142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that start in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "Where is ([A-Za-z0-9_-]*) started?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) start?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) started?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start?", "in which ([A-Za-z0-9_-]*) does start ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) started?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) start in?", "which ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) started in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeStart> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2018",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1_142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that start in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) start in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "What started in ([A-Za-z0-9_-]*)?", "What starts in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) start?", "which ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) started in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) starts in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was started in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were started in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2019",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1_142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are started in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) start in?", "How many ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2020",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2_203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) complete?", "When did the ([A-Za-z0-9_-]*) complete?", "When was ([A-Za-z0-9_-]*) completed?", "When was the ([A-Za-z0-9_-]*) completed?", "When were ([A-Za-z0-9_-]*) completed?", "When were the ([A-Za-z0-9_-]*) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2021",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2_203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) completed in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2022",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2_203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2023",
    "lexicalEntryUri" : "http://localhost:8080#record_for_2_116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that record for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) record for?", "Where is ([A-Za-z0-9_-]*) recorded?", "for which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) record?", "for which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) recorded?", "for which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) record?", "for which ([A-Za-z0-9_-]*) does record ([A-Za-z0-9_-]*)?", "for which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) recorded?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) record for?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) record for?", "which ([A-Za-z0-9_-]*) record for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) recored for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/recordLabel> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2024",
    "lexicalEntryUri" : "http://localhost:8080#record_for_2_116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that record for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) record for?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) record for?", "What records for ([A-Za-z0-9_-]*)?", "What recored for ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) record?", "which ([A-Za-z0-9_-]*) record for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) records for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) recored for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was recorded for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were recorded for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordLabel> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2025",
    "lexicalEntryUri" : "http://localhost:8080#record_for_2_116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are recorded for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) record for?", "How many ([A-Za-z0-9_-]*) record for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordLabel> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2026",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) open?", "When did the ([A-Za-z0-9_-]*) open?", "When was ([A-Za-z0-9_-]*) opened?", "When was the ([A-Za-z0-9_-]*) opened?", "When were ([A-Za-z0-9_-]*) opened?", "When were the ([A-Za-z0-9_-]*) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2027",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) opened in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2028",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1_122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/openingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2029",
    "lexicalEntryUri" : "http://localhost:8080#call_1_213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did ([A-Za-z0-9_-]*) call ?", "Who does ([A-Za-z0-9_-]*) call ?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2030",
    "lexicalEntryUri" : "http://localhost:8080#call_1_213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is called  ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was called  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are called  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is called  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was called  ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were called  ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2031",
    "lexicalEntryUri" : "http://localhost:8080#call_1_213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2032",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2_194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play in ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) played?", "Who does ([A-Za-z0-9_-]*) play in?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) play?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) played?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "in which ([A-Za-z0-9_-]*) does play ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) played?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) play in?", "which ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/position> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2033",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2_194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play in?", "What played in ([A-Za-z0-9_-]*)?", "What plays in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/position> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2034",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2_194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play in?", "How many ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/position> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2035",
    "lexicalEntryUri" : "http://localhost:8080#record_for_1_114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) record?", "When did the ([A-Za-z0-9_-]*) record?", "When was ([A-Za-z0-9_-]*) recored?", "When was the ([A-Za-z0-9_-]*) recored?", "When were ([A-Za-z0-9_-]*) recored?", "When were the ([A-Za-z0-9_-]*) recored?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2036",
    "lexicalEntryUri" : "http://localhost:8080#record_for_1_114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) recored for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2037",
    "lexicalEntryUri" : "http://localhost:8080#record_for_1_114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2038",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2_186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that begin at ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) begin at?", "Where is ([A-Za-z0-9_-]*) began?", "at which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) begin?", "at which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) began?", "at which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) begin?", "at which ([A-Za-z0-9_-]*) does begin ([A-Za-z0-9_-]*)?", "at which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) began?", "which ([A-Za-z0-9_-]*) began at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) begin at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) begin at?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/source2Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2039",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2_186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that begin at ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) begin at?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) begin at?", "What began at ([A-Za-z0-9_-]*)?", "What begins at ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) begin?", "which ([A-Za-z0-9_-]*) began at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) begin at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) begins at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was began at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were began at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source2Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2040",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2_186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are began at ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) begin at ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) begin at?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/source2Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2041",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that start in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "Where is ([A-Za-z0-9_-]*) started?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) start?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) started?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start?", "in which ([A-Za-z0-9_-]*) does start ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) started?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) start in?", "which ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) started in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/mouthLocation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2042",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that start in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) start in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "What started in ([A-Za-z0-9_-]*)?", "What starts in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) start?", "which ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) started in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) starts in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was started in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were started in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2043",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are started in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) start in?", "How many ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2044",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that start in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "Where is ([A-Za-z0-9_-]*) started?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) start?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) started?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start?", "in which ([A-Za-z0-9_-]*) does start ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) started?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) start in?", "which ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) started in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/sourceCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2045",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that start in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) start in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) start in?", "What started in ([A-Za-z0-9_-]*)?", "What starts in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) start?", "which ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) started in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) starts in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was started in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were started in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2046",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2_144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are started in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) start in?", "How many ([A-Za-z0-9_-]*) start in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2047",
    "lexicalEntryUri" : "http://localhost:8080#launch_from_223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceStation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that launch from ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) launch from?", "Where is ([A-Za-z0-9_-]*) launched?", "from which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) launch?", "from which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) launched?", "from which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) launch?", "from which ([A-Za-z0-9_-]*) does launch ([A-Za-z0-9_-]*)?", "from which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) launched?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) launch from?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) launch from?", "which ([A-Za-z0-9_-]*) launch from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) launched from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/launchPad> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2048",
    "lexicalEntryUri" : "http://localhost:8080#launch_from_223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "SpaceStation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that launch from ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) launch from?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) launch from?", "What launched from ([A-Za-z0-9_-]*)?", "What launches from ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) launch?", "which ([A-Za-z0-9_-]*) launch from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) launched from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) launches from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was launched from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were launched from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/launchPad> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2049",
    "lexicalEntryUri" : "http://localhost:8080#launch_from_223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "SpaceStation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are launched from ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) launch from?", "How many ([A-Za-z0-9_-]*) launch from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/launchPad> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2050",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2_179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/keyPeople> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2051",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2_179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/keyPeople> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2052",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2_179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/keyPeople> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2053",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1_131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that border in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) border in?", "Where is ([A-Za-z0-9_-]*) bordered?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) border?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) bordered?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) border?", "in which ([A-Za-z0-9_-]*) does border ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) bordered?", "which ([A-Za-z0-9_-]*) border in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) bordered in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) border in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) border in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2054",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1_131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that border in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) border in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) border in?", "What bordered in ([A-Za-z0-9_-]*)?", "What borders in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) border?", "which ([A-Za-z0-9_-]*) border in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) bordered in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) borders in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was bordered in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were bordered in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2055",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1_131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are bordered in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) border in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) border in?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2056",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3_167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that compose for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) compose for?", "Where is ([A-Za-z0-9_-]*) composed?", "for which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) compose?", "for which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) composed?", "for which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) compose?", "for which ([A-Za-z0-9_-]*) does compose ([A-Za-z0-9_-]*)?", "for which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) composed?", "which ([A-Za-z0-9_-]*) compose for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composed for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) compose for?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/music> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2057",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3_167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that compose for ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) compose?", "Who composed for ([A-Za-z0-9_-]*)?", "Who composes for ([A-Za-z0-9_-]*)?", "Who did ([A-Za-z0-9_-]*) compose for?", "Who does ([A-Za-z0-9_-]*) compose for?", "which ([A-Za-z0-9_-]*) compose for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composed for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composes for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was composed for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were composed for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/music> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2058",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3_167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are composed for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) compose for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) compose for?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/music> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2059",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2_134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What ([A-Za-z0-9_-]*) grew in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) grow in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) grew in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) grow in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) grows in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2060",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2_134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) grown?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) grow?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) grown?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2061",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2_134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2062",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1_156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2063",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1_156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_ACTIVITY",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2064",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1_156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2065",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What ([A-Za-z0-9_-]*) grew in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) grow in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) grew in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) grow in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) grows in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2066",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) grown?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) grow?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) grown?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2067",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2068",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did ([A-Za-z0-9_-]*) die from?", "Who does ([A-Za-z0-9_-]*) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2069",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is died from ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were died from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2070",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2071",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did ([A-Za-z0-9_-]*) die from?", "Who does ([A-Za-z0-9_-]*) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2072",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is died from ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were died from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2073",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1_214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2074",
    "lexicalEntryUri" : "http://localhost:8080#knownfor_1_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who did ([A-Za-z0-9_-]*) known for?", "Who does ([A-Za-z0-9_-]*) known for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2075",
    "lexicalEntryUri" : "http://localhost:8080#knownfor_1_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What ([A-Za-z0-9_-]*) is known for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was known for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) are known for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) is known for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was known for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were known for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2076",
    "lexicalEntryUri" : "http://localhost:8080#knownfor_1_161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2077",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1_191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that associate with ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate with?", "Where is ([A-Za-z0-9_-]*) associated?", "which ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate with?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) associate with?", "with which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) associate?", "with which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) associated?", "with which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate?", "with which ([A-Za-z0-9_-]*) does associate ([A-Za-z0-9_-]*)?", "with which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedBand> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2078",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1_191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that associate with ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) associate with?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate with?", "What associated with ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) associate?", "which ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were associated with ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2079",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1_191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are associated with ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) associate with?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2080",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play for ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) played?", "Who does ([A-Za-z0-9_-]*) play for?", "for which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) play?", "for which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) played?", "for which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "for which ([A-Za-z0-9_-]*) does play ([A-Za-z0-9_-]*)?", "for which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) played?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play for?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) play for?", "which ([A-Za-z0-9_-]*) play for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/team> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2081",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play for?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play for?", "What played for ([A-Za-z0-9_-]*)?", "What plays for ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2082",
    "lexicalEntryUri" : "http://localhost:8080#play_for_2_145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsClub" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play for?", "How many ([A-Za-z0-9_-]*) play for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2083",
    "lexicalEntryUri" : "http://localhost:8080#assassinate_in_187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were assassinated in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were assassinated in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was assassinated in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was assassinated in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were assassinated in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2084",
    "lexicalEntryUri" : "http://localhost:8080#assassinate_in_187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) assassinate?", "Where is ([A-Za-z0-9_-]*) assassinated?", "Where was ([A-Za-z0-9_-]*) assassinated?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) assassinate?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) assassinate in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) assassinate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2085",
    "lexicalEntryUri" : "http://localhost:8080#assassinate_in_187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2086",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1_97",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were lived in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were lived in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was lived in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was lived in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were lived in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2087",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1_97",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) live?", "Where is ([A-Za-z0-9_-]*) lived?", "Where was ([A-Za-z0-9_-]*) lived?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) live?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) live in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) live in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2088",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1_97",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2089",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1_185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that begin at ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) begin at?", "Where is ([A-Za-z0-9_-]*) began?", "at which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) begin?", "at which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) began?", "at which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) begin?", "at which ([A-Za-z0-9_-]*) does begin ([A-Za-z0-9_-]*)?", "at which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) began?", "which ([A-Za-z0-9_-]*) began at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) begin at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) begin at?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/source1Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2090",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1_185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that begin at ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) begin at?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) begin at?", "What began at ([A-Za-z0-9_-]*)?", "What begins at ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) begin?", "which ([A-Za-z0-9_-]*) began at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) begin at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) begins at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was began at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were began at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source1Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2091",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1_185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are began at ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) begin at ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) begin at?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/source1Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2092",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1_143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play for ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) played?", "Who does ([A-Za-z0-9_-]*) play for?", "for which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) play?", "for which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) played?", "for which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "for which ([A-Za-z0-9_-]*) does play ([A-Za-z0-9_-]*)?", "for which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) played?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play for?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) play for?", "which ([A-Za-z0-9_-]*) play for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/debutTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2093",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1_143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play for?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play for?", "What played for ([A-Za-z0-9_-]*)?", "What plays for ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2094",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1_143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play for?", "How many ([A-Za-z0-9_-]*) play for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2095",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4_208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) found?", "When did the ([A-Za-z0-9_-]*) found?", "When was ([A-Za-z0-9_-]*) founded?", "When was the ([A-Za-z0-9_-]*) founded?", "When were ([A-Za-z0-9_-]*) founded?", "When were the ([A-Za-z0-9_-]*) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2096",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4_208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2097",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4_208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2098",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that study at ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) studied?", "Who does ([A-Za-z0-9_-]*) study at?", "at which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) study?", "at which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) studied?", "at which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study?", "at which ([A-Za-z0-9_-]*) does study ([A-Za-z0-9_-]*)?", "at which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) studied?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study at?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) study at?", "which ([A-Za-z0-9_-]*) studied at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) study at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2099",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that study at ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) study at?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study at?", "What studied at ([A-Za-z0-9_-]*)?", "What studies at ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) study?", "which ([A-Za-z0-9_-]*) studied at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) studies at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) study at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was studied at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were studied at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2100",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are studied at ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) study at?", "How many ([A-Za-z0-9_-]*) study at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2101",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that study at ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) studied?", "Who does ([A-Za-z0-9_-]*) study at?", "at which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) study?", "at which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) studied?", "at which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study?", "at which ([A-Za-z0-9_-]*) does study ([A-Za-z0-9_-]*)?", "at which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) studied?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study at?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) study at?", "which ([A-Za-z0-9_-]*) studied at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) study at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2102",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that study at ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) study at?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study at?", "What studied at ([A-Za-z0-9_-]*)?", "What studies at ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) study?", "which ([A-Za-z0-9_-]*) studied at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) studies at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) study at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was studied at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were studied at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2103",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1_140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are studied at ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) study at?", "How many ([A-Za-z0-9_-]*) study at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2104",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1_124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) are the ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) is the ([A-Za-z0-9_-]*)?", "what ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2105",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1_124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ([A-Za-z0-9_-]*) locate in?", "What locate in ([A-Za-z0-9_-]*)?", "What located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2106",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1_124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2107",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2_154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) rebuild?", "When did the ([A-Za-z0-9_-]*) rebuild?", "When was ([A-Za-z0-9_-]*) rebuilt?", "When was the ([A-Za-z0-9_-]*) rebuilt?", "When were ([A-Za-z0-9_-]*) rebuilt?", "When were the ([A-Za-z0-9_-]*) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2108",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2_154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) rebuilt in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2109",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2_154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2110",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2_188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that associate with ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate with?", "Where is ([A-Za-z0-9_-]*) associated?", "which ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate with?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) associate with?", "with which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) associate?", "with which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) associated?", "with which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) associate?", "with which ([A-Za-z0-9_-]*) does associate ([A-Za-z0-9_-]*)?", "with which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2111",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2_188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that associate with ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) associate?", "Who associated with ([A-Za-z0-9_-]*)?", "Who did ([A-Za-z0-9_-]*) associate with?", "Who does ([A-Za-z0-9_-]*) associate with?", "which ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was associated with ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were associated with ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2112",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2_188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are associated with ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) associate with ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) associate with?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2113",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2_103",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) publish?", "When did the ([A-Za-z0-9_-]*) publish?", "When was ([A-Za-z0-9_-]*) published?", "When was the ([A-Za-z0-9_-]*) published?", "When were ([A-Za-z0-9_-]*) published?", "When were the ([A-Za-z0-9_-]*) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2114",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2_103",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) published on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2115",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2_103",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2116",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2_106",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that flow through ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow through?", "Where is ([A-Za-z0-9_-]*) flown?", "through which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) flow?", "through which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) flown?", "through which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow?", "through which ([A-Za-z0-9_-]*) does flow ([A-Za-z0-9_-]*)?", "through which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) flown?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow through?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) flow through?", "which ([A-Za-z0-9_-]*) flow through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flowed through ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2117",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2_106",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that flow through ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) flow through?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow through?", "What flowed through ([A-Za-z0-9_-]*)?", "What flows through ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) flow?", "which ([A-Za-z0-9_-]*) flow through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flowed through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flows through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was flown through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were flown through ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2118",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2_106",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are flown through ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) flow through?", "How many ([A-Za-z0-9_-]*) flow through ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2119",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1_111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) build?", "When did the ([A-Za-z0-9_-]*) build?", "When was ([A-Za-z0-9_-]*) built?", "When was the ([A-Za-z0-9_-]*) built?", "When were ([A-Za-z0-9_-]*) built?", "When were the ([A-Za-z0-9_-]*) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2120",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1_111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) built in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2121",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1_111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2122",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1_172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that currently use for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) currently use for?", "Where is ([A-Za-z0-9_-]*) currently used?", "for which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) currently use?", "for which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) currently used?", "for which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) currently use?", "for which ([A-Za-z0-9_-]*) does currently use ([A-Za-z0-9_-]*)?", "for which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) currently used?", "which ([A-Za-z0-9_-]*) currently use for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) currently used for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) currently use for?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) currently use for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2123",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1_172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that currently use for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) currently use for?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) currently use for?", "What currently used for ([A-Za-z0-9_-]*)?", "What currently uses for ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) currently use?", "which ([A-Za-z0-9_-]*) currently use for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) currently used for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) currently uses for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was currently used for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were currently used for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2124",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1_172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are currently used for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) currently use for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) currently use for?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2125",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1_225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) establish?", "When did the ([A-Za-z0-9_-]*) establish?", "When was ([A-Za-z0-9_-]*) established?", "When was the ([A-Za-z0-9_-]*) established?", "When were ([A-Za-z0-9_-]*) established?", "When were the ([A-Za-z0-9_-]*) established?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstPublicationYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2126",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1_225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) established in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2127",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1_225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2128",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2_148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) reopen?", "When did the ([A-Za-z0-9_-]*) reopen?", "When was ([A-Za-z0-9_-]*) reopened?", "When was the ([A-Za-z0-9_-]*) reopened?", "When were ([A-Za-z0-9_-]*) reopened?", "When were the ([A-Za-z0-9_-]*) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2129",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2_148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) reopened in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2130",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2_148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2131",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1_190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) discontinue?", "When did the ([A-Za-z0-9_-]*) discontinue?", "When was ([A-Za-z0-9_-]*) discontinued?", "When was the ([A-Za-z0-9_-]*) discontinued?", "When were ([A-Za-z0-9_-]*) discontinued?", "When were the ([A-Za-z0-9_-]*) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2132",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1_190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) discontinued in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2133",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1_190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2134",
    "lexicalEntryUri" : "http://localhost:8080#designate_at_1_112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that designate at ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) designate at?", "Where is ([A-Za-z0-9_-]*) designated?", "at which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) designate?", "at which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) designated?", "at which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) designate?", "at which ([A-Za-z0-9_-]*) does designate ([A-Za-z0-9_-]*)?", "at which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) designated?", "which ([A-Za-z0-9_-]*) designate at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designated at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) designate at?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) designate at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/year> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2135",
    "lexicalEntryUri" : "http://localhost:8080#designate_at_1_112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that designate at ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) designate at?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) designate at?", "What designated at ([A-Za-z0-9_-]*)?", "What designates at ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) designate?", "which ([A-Za-z0-9_-]*) designate at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designated at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) designates at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was designated at ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were designated at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/year> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2136",
    "lexicalEntryUri" : "http://localhost:8080#designate_at_1_112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are designated at ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) designate at ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) designate at?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/year> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2137",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1_159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryPerson" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that participate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) participate in?", "Where is ([A-Za-z0-9_-]*) participated?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) participate?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) participated?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) participate?", "in which ([A-Za-z0-9_-]*) does participate ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) participated?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) participate in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) participate in?", "which ([A-Za-z0-9_-]*) participate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) participated in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/battle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2138",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1_159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "MilitaryPerson" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that participate in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) participate?", "Who did ([A-Za-z0-9_-]*) participate in?", "Who does ([A-Za-z0-9_-]*) participate in?", "Who participated in ([A-Za-z0-9_-]*)?", "Who participates in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) participate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) participated in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) participates in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was participated in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were participated in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2139",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1_159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "MilitaryPerson" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are participated in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) participate in?", "How many ([A-Za-z0-9_-]*) participate in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2140",
    "lexicalEntryUri" : "http://localhost:8080#admitted_as_175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that admit as ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) admit as?", "Where is ([A-Za-z0-9_-]*) admitted?", "as which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) admit?", "as which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) admitted?", "as which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) admit?", "as which ([A-Za-z0-9_-]*) does admit ([A-Za-z0-9_-]*)?", "as which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) admitted?", "which ([A-Za-z0-9_-]*) admit as ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) admitted as ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) admit as?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) admit as?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/admittancedate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2141",
    "lexicalEntryUri" : "http://localhost:8080#admitted_as_175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that admit as ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) admit as?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) admit as?", "What admits as ([A-Za-z0-9_-]*)?", "What admitted as ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) admit?", "which ([A-Za-z0-9_-]*) admit as ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) admits as ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) admitted as ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was admitted as ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were admitted as ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/admittancedate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2142",
    "lexicalEntryUri" : "http://localhost:8080#admitted_as_175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) admit as ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) are admitted as ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) admit as?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/admittancedate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2143",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2_218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Disease" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that die from ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) died?", "Who does ([A-Za-z0-9_-]*) die from?", "from which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) die?", "from which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) died?", "from which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) die?", "from which ([A-Za-z0-9_-]*) does die ([A-Za-z0-9_-]*)?", "from which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) died?", "which ([A-Za-z0-9_-]*) die from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) die from?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2144",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2_218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Disease" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that die from ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) die from?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) die from?", "What died from ([A-Za-z0-9_-]*)?", "What dies from ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) die?", "which ([A-Za-z0-9_-]*) die from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) dies from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was died from ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were died from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2145",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2_218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Disease" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are died from ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) die from?", "How many ([A-Za-z0-9_-]*) die from ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2146",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2_100",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that stand for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) stand for?", "Where is ([A-Za-z0-9_-]*) stood?", "for which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) stand?", "for which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) stood?", "for which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) stand?", "for which ([A-Za-z0-9_-]*) does stand ([A-Za-z0-9_-]*)?", "for which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) stood?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) stand for?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) stand for?", "which ([A-Za-z0-9_-]*) stand for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) stood for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2147",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2_100",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that stand for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) stand for?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) stand for?", "What stands for ([A-Za-z0-9_-]*)?", "What stood for ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) stand?", "which ([A-Za-z0-9_-]*) stand for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) stands for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) stood for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was stood for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were stood for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2148",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2_100",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are stood for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) stand for?", "How many ([A-Za-z0-9_-]*) stand for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2149",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2_96",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) live?", "How many live in ([A-Za-z0-9_-]*)?", "How many lived in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2150",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2_96",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2151",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2_96",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2152",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2_152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that release on ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) release on?", "Where is ([A-Za-z0-9_-]*) released?", "on which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) release?", "on which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) released?", "on which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) release?", "on which ([A-Za-z0-9_-]*) does release ([A-Za-z0-9_-]*)?", "on which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) released?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) release on?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) release on?", "which ([A-Za-z0-9_-]*) release on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) released on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/computingPlatform> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2153",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2_152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that release on ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) release on?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) release on?", "What released on ([A-Za-z0-9_-]*)?", "What releases on ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) release?", "which ([A-Za-z0-9_-]*) release on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) released on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) releases on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was released on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were released on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2154",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2_152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are released on ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) release on?", "How many ([A-Za-z0-9_-]*) release on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2155",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_2_209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that speak in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "Where is ([A-Za-z0-9_-]*) spoken?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) speak?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) spoken?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak?", "in which ([A-Za-z0-9_-]*) does speak ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) spoken?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) speak in?", "which ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) spoken in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2156",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_2_209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that speak in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "What speaks in ([A-Za-z0-9_-]*)?", "What spoken in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) speak?", "which ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) speaks in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) spoken in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was spoken in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were spoken in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2157",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_2_209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are spoken in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak in?", "How many ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2158",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1_109",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) discontinue?", "When did the ([A-Za-z0-9_-]*) discontinue?", "When was ([A-Za-z0-9_-]*) discontinued?", "When was the ([A-Za-z0-9_-]*) discontinued?", "When were ([A-Za-z0-9_-]*) discontinued?", "When were the ([A-Za-z0-9_-]*) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2159",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1_109",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) discontinued on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2160",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1_109",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2161",
    "lexicalEntryUri" : "http://localhost:8080#written_in_123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that write in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write in?", "Where is ([A-Za-z0-9_-]*) written?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) write?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) written?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write?", "in which ([A-Za-z0-9_-]*) does write ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) written?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) write in?", "which ([A-Za-z0-9_-]*) write in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wrote in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2162",
    "lexicalEntryUri" : "http://localhost:8080#written_in_123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that write in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) write in?", "What writes in ([A-Za-z0-9_-]*)?", "What wrote in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) write?", "which ([A-Za-z0-9_-]*) was written in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were written in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) write in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) writes in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) wrote in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2163",
    "lexicalEntryUri" : "http://localhost:8080#written_in_123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are written in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) write in?", "How many ([A-Za-z0-9_-]*) write in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2164",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1_147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) found?", "When was ([A-Za-z0-9_-]*) founded?", "on which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2165",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1_147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was founded on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were founded on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2166",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1_147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2167",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2_157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that compose for ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) compose for?", "Where is ([A-Za-z0-9_-]*) composed?", "for which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) compose?", "for which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) composed?", "for which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) compose?", "for which ([A-Za-z0-9_-]*) does compose ([A-Za-z0-9_-]*)?", "for which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) composed?", "which ([A-Za-z0-9_-]*) compose for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composed for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) compose for?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2168",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2_157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that compose for ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) compose?", "Who composed for ([A-Za-z0-9_-]*)?", "Who composes for ([A-Za-z0-9_-]*)?", "Who did ([A-Za-z0-9_-]*) compose for?", "Who does ([A-Za-z0-9_-]*) compose for?", "which ([A-Za-z0-9_-]*) compose for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composed for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) composes for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was composed for ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were composed for ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2169",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2_157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are composed for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) compose for ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) compose for?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2170",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2_219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) publish?", "When did the ([A-Za-z0-9_-]*) publish?", "When was ([A-Za-z0-9_-]*) published?", "When was the ([A-Za-z0-9_-]*) published?", "When were ([A-Za-z0-9_-]*) published?", "When were the ([A-Za-z0-9_-]*) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2171",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2_219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) published in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2172",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2_219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2173",
    "lexicalEntryUri" : "http://localhost:8080#born_on_3_151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) born?", "When was ([A-Za-z0-9_-]*) born?", "on which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2174",
    "lexicalEntryUri" : "http://localhost:8080#born_on_3_151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was born on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were born on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2175",
    "lexicalEntryUri" : "http://localhost:8080#born_on_3_151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2176",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1_121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) introduce?", "When did the ([A-Za-z0-9_-]*) introduce?", "When was ([A-Za-z0-9_-]*) introduced?", "When was the ([A-Za-z0-9_-]*) introduced?", "When were ([A-Za-z0-9_-]*) introduced?", "When were the ([A-Za-z0-9_-]*) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2177",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1_121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) introduced on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2178",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1_121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2179",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "Where is ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) does end ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) ended?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2180",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "What ended in ([A-Za-z0-9_-]*)?", "What ends in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) end?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ends in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2181",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are ended in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "How many ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2182",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "Where is ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) does end ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) ended?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2183",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "What ended in ([A-Za-z0-9_-]*)?", "What ends in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) end?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ends in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2184",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2_171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are ended in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "How many ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2185",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1_102",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) produce?", "When did the ([A-Za-z0-9_-]*) produce?", "When was ([A-Za-z0-9_-]*) produced?", "When was the ([A-Za-z0-9_-]*) produced?", "When were ([A-Za-z0-9_-]*) produced?", "When were the ([A-Za-z0-9_-]*) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2186",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1_102",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) produced on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2187",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1_102",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2188",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1_182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/keyPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2189",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1_182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2190",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1_182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2191",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1_192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) commence?", "When did the ([A-Za-z0-9_-]*) commence?", "When was ([A-Za-z0-9_-]*) commenced?", "When was the ([A-Za-z0-9_-]*) commenced?", "When were ([A-Za-z0-9_-]*) commenced?", "When were the ([A-Za-z0-9_-]*) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2192",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1_192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) commenced on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2193",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1_192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2194",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3_120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2195",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3_120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2196",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3_120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2197",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1_201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) complete?", "When did the ([A-Za-z0-9_-]*) complete?", "When was ([A-Za-z0-9_-]*) completed?", "When was the ([A-Za-z0-9_-]*) completed?", "When were ([A-Za-z0-9_-]*) completed?", "When were the ([A-Za-z0-9_-]*) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2198",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1_201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) completed in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2199",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1_201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2200",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17_165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2201",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17_165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2202",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17_165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2203",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1_146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) start acting?", "When was ([A-Za-z0-9_-]*) started acting?", "on which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) started acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2204",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1_146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was started acting on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was started acting on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were started acting on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2205",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1_146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2206",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) fight?", "When did the ([A-Za-z0-9_-]*) fight?", "When was ([A-Za-z0-9_-]*) fought?", "When was the ([A-Za-z0-9_-]*) fought?", "When were ([A-Za-z0-9_-]*) fought?", "When were the ([A-Za-z0-9_-]*) fought?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2207",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) fought in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2208",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2209",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that fight in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) fight in?", "Where is ([A-Za-z0-9_-]*) fought?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) fight?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) fought?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) fight?", "in which ([A-Za-z0-9_-]*) does fight ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) fought?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) fight in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) fight in?", "which ([A-Za-z0-9_-]*) fight in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) fought in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/combatant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2210",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that fight in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) fight in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) fight in?", "What fights in ([A-Za-z0-9_-]*)?", "What fought in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) fight?", "which ([A-Za-z0-9_-]*) fight in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) fights in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) fought in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was fought in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were fought in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/combatant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2211",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1_183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are fought in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) fight in?", "How many ([A-Za-z0-9_-]*) fight in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/combatant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2212",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that flow into ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow into?", "Where is ([A-Za-z0-9_-]*) flown?", "into which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) flow?", "into which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) flown?", "into which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow?", "into which ([A-Za-z0-9_-]*) does flow ([A-Za-z0-9_-]*)?", "into which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) flown?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow into?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) flow into?", "which ([A-Za-z0-9_-]*) flow into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flowed into ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2213",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that flow into ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) flow into?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow into?", "What flowed into ([A-Za-z0-9_-]*)?", "What flows into ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) flow?", "which ([A-Za-z0-9_-]*) flow into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flowed into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flows into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was flown into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were flown into ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2214",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are flown into ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) flow into?", "How many ([A-Za-z0-9_-]*) flow into ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2215",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2_93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) stop acting?", "When was ([A-Za-z0-9_-]*) stopped acting?", "on which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) stopped acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2216",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2_93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was stopped acting on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was stopped acting on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were stopped acting on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2217",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2_93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2218",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2_153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) found?", "When did the ([A-Za-z0-9_-]*) found?", "When was ([A-Za-z0-9_-]*) founded?", "When was the ([A-Za-z0-9_-]*) founded?", "When were ([A-Za-z0-9_-]*) founded?", "When were the ([A-Za-z0-9_-]*) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2219",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2_153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) founded on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2220",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2_153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2221",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15_163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subdivision> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2222",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15_163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2223",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15_163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2224",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7_133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2225",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7_133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2226",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7_133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2227",
    "lexicalEntryUri" : "http://localhost:8080#found_in_7_216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that found in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) found in?", "Where is ([A-Za-z0-9_-]*) founded?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) found?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) founded?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) found?", "in which ([A-Za-z0-9_-]*) does found ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) founded?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) found in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) found in?", "which ([A-Za-z0-9_-]*) found in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/govermentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2228",
    "lexicalEntryUri" : "http://localhost:8080#found_in_7_216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that found in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) found?", "Who did ([A-Za-z0-9_-]*) found in?", "Who does ([A-Za-z0-9_-]*) found in?", "Who founded in ([A-Za-z0-9_-]*)?", "Who founds in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) found in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) founds in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/govermentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2229",
    "lexicalEntryUri" : "http://localhost:8080#found_in_7_216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are founded in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) found in?", "How many ([A-Za-z0-9_-]*) found in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/govermentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2230",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7_139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "University" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were located in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were located in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were located in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/state> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2231",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7_139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "University" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) locate?", "Where is ([A-Za-z0-9_-]*) located?", "Where was ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) locate?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/state> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2232",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7_139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "University" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/state> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2233",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_19_166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) are the ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) is the ([A-Za-z0-9_-]*)?", "what ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2234",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_19_166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What belong to ([A-Za-z0-9_-]*)?", "What belonged to ([A-Za-z0-9_-]*)?", "What does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2235",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_19_166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2236",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1_149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) release?", "When did the ([A-Za-z0-9_-]*) release?", "When was ([A-Za-z0-9_-]*) released?", "When was the ([A-Za-z0-9_-]*) released?", "When were ([A-Za-z0-9_-]*) released?", "When were the ([A-Za-z0-9_-]*) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2237",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1_149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) released at ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2238",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1_149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2239",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1_113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) rebuild?", "When did the ([A-Za-z0-9_-]*) rebuild?", "When was ([A-Za-z0-9_-]*) rebuilt?", "When was the ([A-Za-z0-9_-]*) rebuilt?", "When were ([A-Za-z0-9_-]*) rebuilt?", "When were the ([A-Za-z0-9_-]*) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2240",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1_113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) rebuilt on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2241",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1_113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2242",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7_178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Swimmer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were born in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were born in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were born in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2243",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7_178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Swimmer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) born?", "Where is ([A-Za-z0-9_-]*) born?", "Where was ([A-Za-z0-9_-]*) born?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) born?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) born in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2244",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7_178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Swimmer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2245",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2_202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were died in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were died in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was died in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was died in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were died in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2246",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2_202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) die?", "Where is ([A-Za-z0-9_-]*) died?", "Where was ([A-Za-z0-9_-]*) died?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) die?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) die in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2247",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2_202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2248",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1_150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that name after ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) name after?", "Where is ([A-Za-z0-9_-]*) named?", "after which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) name?", "after which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) named?", "after which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) name?", "after which ([A-Za-z0-9_-]*) does name ([A-Za-z0-9_-]*)?", "after which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) named?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) name after?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) name after?", "which ([A-Za-z0-9_-]*) name after ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) named after ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/namedAfter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2249",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1_150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that name after ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) name?", "Who did ([A-Za-z0-9_-]*) name after?", "Who does ([A-Za-z0-9_-]*) name after?", "Who named after ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) name after ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) named after ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was named after ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were named after ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2250",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1_150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are named after ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) name after?", "How many ([A-Za-z0-9_-]*) name after ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2251",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4_132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2252",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4_132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2253",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4_132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2254",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3_174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "Where is ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) ended?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end?", "in which ([A-Za-z0-9_-]*) does end ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) ended?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) end in?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2255",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3_174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that end in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) end in?", "What ended in ([A-Za-z0-9_-]*)?", "What ends in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) end?", "which ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) ends in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was ended in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were ended in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2256",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3_174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are ended in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) end in?", "How many ([A-Za-z0-9_-]*) end in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2257",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_3_211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that speak in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "Where is ([A-Za-z0-9_-]*) spoken?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) speak?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) spoken?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak?", "in which ([A-Za-z0-9_-]*) does speak ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) spoken?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) speak in?", "which ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) spoken in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2258",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_3_211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that speak in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "What speaks in ([A-Za-z0-9_-]*)?", "What spoken in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) speak?", "which ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) speaks in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) spoken in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was spoken in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were spoken in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2259",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_3_211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are spoken in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak in?", "How many ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2260",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4_127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were located in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were located in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were located in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2261",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4_127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) locate?", "Where is ([A-Za-z0-9_-]*) located?", "Where was ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) locate?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2262",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4_127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2263",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1_108",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) inaugurate?", "When did the ([A-Za-z0-9_-]*) inaugurate?", "When was ([A-Za-z0-9_-]*) inaugurated?", "When was the ([A-Za-z0-9_-]*) inaugurated?", "When were ([A-Za-z0-9_-]*) inaugurated?", "When were the ([A-Za-z0-9_-]*) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2264",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1_108",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) inaugurated in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2265",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1_108",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2266",
    "lexicalEntryUri" : "http://localhost:8080#study_in_155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that study in ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) studied?", "Who does ([A-Za-z0-9_-]*) study in?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) study?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) studied?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study?", "in which ([A-Za-z0-9_-]*) does study ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) studied?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) study in?", "which ([A-Za-z0-9_-]*) studied in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) study in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2267",
    "lexicalEntryUri" : "http://localhost:8080#study_in_155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that study in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) study in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) study in?", "What studied in ([A-Za-z0-9_-]*)?", "What studies in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) study?", "which ([A-Za-z0-9_-]*) studied in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) studies in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) study in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was studied in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were studied in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2268",
    "lexicalEntryUri" : "http://localhost:8080#study_in_155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are studied in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) study in?", "How many ([A-Za-z0-9_-]*) study in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2269",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2_130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were buried in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were buried in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was buried in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was buried in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were buried in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/burialPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2270",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2_130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) bury?", "Where is ([A-Za-z0-9_-]*) buried?", "Where was ([A-Za-z0-9_-]*) buried?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) bury?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) bury in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/burialPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2271",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2_130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/burialPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2272",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2_119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) introduce?", "When did the ([A-Za-z0-9_-]*) introduce?", "When was ([A-Za-z0-9_-]*) introduced?", "When was the ([A-Za-z0-9_-]*) introduced?", "When were ([A-Za-z0-9_-]*) introduced?", "When were the ([A-Za-z0-9_-]*) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2273",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2_119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) introduced in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2274",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2_119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2275",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2_195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) commence?", "When did the ([A-Za-z0-9_-]*) commence?", "When was ([A-Za-z0-9_-]*) commenced?", "When was the ([A-Za-z0-9_-]*) commenced?", "When were ([A-Za-z0-9_-]*) commenced?", "When were the ([A-Za-z0-9_-]*) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2276",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2_195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) commenced on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2277",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2_195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2278",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1_98",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that flow into ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow into?", "Where is ([A-Za-z0-9_-]*) flown?", "into which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) flow?", "into which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) flown?", "into which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow?", "into which ([A-Za-z0-9_-]*) does flow ([A-Za-z0-9_-]*)?", "into which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) flown?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow into?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) flow into?", "which ([A-Za-z0-9_-]*) flow into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flowed into ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2279",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1_98",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that flow into ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) flow into?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow into?", "What flowed into ([A-Za-z0-9_-]*)?", "What flows into ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) flow?", "which ([A-Za-z0-9_-]*) flow into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flowed into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flows into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was flown into ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were flown into ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2280",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1_98",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are flown into ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) flow into?", "How many ([A-Za-z0-9_-]*) flow into ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2281",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5_220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) found?", "When did the ([A-Za-z0-9_-]*) found?", "When was ([A-Za-z0-9_-]*) founded?", "When was the ([A-Za-z0-9_-]*) founded?", "When were ([A-Za-z0-9_-]*) founded?", "When were the ([A-Za-z0-9_-]*) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2282",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5_220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2283",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5_220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2284",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3_196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that star in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) star in?", "Where is ([A-Za-z0-9_-]*) starred?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) star?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) starred?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) star?", "in which ([A-Za-z0-9_-]*) does star ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) starred?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) star in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) star in?", "which ([A-Za-z0-9_-]*) star in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) starred in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2285",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3_196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that star in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) star?", "Who did ([A-Za-z0-9_-]*) star in?", "Who does ([A-Za-z0-9_-]*) star in?", "Who starred in ([A-Za-z0-9_-]*)?", "Who stars in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) star in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) starred in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) stars in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was starred in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were starred in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2286",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3_196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are starred in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) star in?", "How many ([A-Za-z0-9_-]*) star in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2287",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_1_206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that speak in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "Where is ([A-Za-z0-9_-]*) spoken?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) speak?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) spoken?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak?", "in which ([A-Za-z0-9_-]*) does speak ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) spoken?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) speak in?", "which ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) spoken in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spokenIn> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2288",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_1_206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that speak in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) speak in?", "What speaks in ([A-Za-z0-9_-]*)?", "What spoken in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) speak?", "which ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) speaks in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) spoken in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was spoken in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were spoken in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spokenIn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2289",
    "lexicalEntryUri" : "http://localhost:8080#speak_in_1_206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are spoken in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) speak in?", "How many ([A-Za-z0-9_-]*) speak in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/spokenIn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2290",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1_193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play in ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) played?", "Who does ([A-Za-z0-9_-]*) play in?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) play?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) played?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play?", "in which ([A-Za-z0-9_-]*) does play ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) played?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) play in?", "which ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2291",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1_193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that play in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) play in?", "What played in ([A-Za-z0-9_-]*)?", "What plays in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) play?", "which ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) played in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) plays in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was played in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were played in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2292",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1_193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are played in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) play in?", "How many ([A-Za-z0-9_-]*) play in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2293",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) end his active career?", "When was ([A-Za-z0-9_-]*) ended his active career?", "on which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2294",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was ended his active career on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was ended his active career on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were ended his active career on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2295",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2296",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) end his active career?", "When was ([A-Za-z0-9_-]*) ended his active career?", "on which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2297",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was ended his active career on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was ended his active career on ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were ended his active career on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2298",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on_197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2299",
    "lexicalEntryUri" : "http://localhost:8080#end_his_active_career_1_141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) end his active career?", "When was ([A-Za-z0-9_-]*) ended his active career?", "in which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2300",
    "lexicalEntryUri" : "http://localhost:8080#end_his_active_career_1_141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was born in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were born in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2301",
    "lexicalEntryUri" : "http://localhost:8080#end_his_active_career_1_141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2302",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5_136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that locate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate in?", "Where is ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) locate?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) located?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate?", "in which ([A-Za-z0-9_-]*) does locate ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) located?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) locate in?", "which ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) located in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2303",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5_136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that locate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) locate in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) locate in?", "What located in ([A-Za-z0-9_-]*)?", "What locates in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) locate?", "which ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) locates in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was located in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were located in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2304",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5_136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are located in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) locate in?", "How many ([A-Za-z0-9_-]*) locate in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2305",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6_221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) found?", "When was ([A-Za-z0-9_-]*) founded?", "in which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/founded> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2306",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6_221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/founded> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2307",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6_221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/founded> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2308",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1_158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) dissolve?", "When did the ([A-Za-z0-9_-]*) dissolve?", "When was ([A-Za-z0-9_-]*) dissolved?", "When was the ([A-Za-z0-9_-]*) dissolved?", "When were ([A-Za-z0-9_-]*) dissolved?", "When were the ([A-Za-z0-9_-]*) dissolved?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2309",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1_158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) dissolved on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2310",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1_158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2311",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3_95",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that live in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) live in?", "Where is ([A-Za-z0-9_-]*) lived?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) live?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) lived?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) live?", "in which ([A-Za-z0-9_-]*) does live ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) lived?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) live in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) live in?", "which ([A-Za-z0-9_-]*) live in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) lived in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2312",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3_95",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that live in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) live in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) live in?", "What lived in ([A-Za-z0-9_-]*)?", "What lives in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) live?", "which ([A-Za-z0-9_-]*) live in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) lived in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) lives in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was lived in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were lived in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2313",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3_95",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are lived in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) live in?", "How many ([A-Za-z0-9_-]*) live in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2314",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1_129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) destroy?", "When did the ([A-Za-z0-9_-]*) destroy?", "When was ([A-Za-z0-9_-]*) destroyed?", "When was the ([A-Za-z0-9_-]*) destroyed?", "When were ([A-Za-z0-9_-]*) destroyed?", "When were the ([A-Za-z0-9_-]*) destroyed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2315",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1_129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) destroyed on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2316",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1_129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2317",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) reopen?", "When did the ([A-Za-z0-9_-]*) reopen?", "When was ([A-Za-z0-9_-]*) reopened?", "When was the ([A-Za-z0-9_-]*) reopened?", "When were ([A-Za-z0-9_-]*) reopened?", "When were the ([A-Za-z0-9_-]*) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2318",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) reopened on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2319",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1_105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2320",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1_162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) open?", "When did the ([A-Za-z0-9_-]*) open?", "When was ([A-Za-z0-9_-]*) opened?", "When was the ([A-Za-z0-9_-]*) opened?", "When were ([A-Za-z0-9_-]*) opened?", "When were the ([A-Za-z0-9_-]*) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2321",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1_162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) opened on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2322",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1_162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2323",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6_135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) belonged?", "Who does ([A-Za-z0-9_-]*) belong to?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2324",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6_135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2325",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6_135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2326",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "Where is ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) belonged?", "to which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong?", "to which ([A-Za-z0-9_-]*) does belong ([A-Za-z0-9_-]*)?", "to which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) belonged?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/album> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2327",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that belong to ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) belong to?", "What belonged to ([A-Za-z0-9_-]*)?", "What belongs to ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) belong?", "which ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) belongs to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was belonged to ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were belonged to ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2328",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1_118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are belonged to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) belong to ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) belong to?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2329",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2_212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give all ([A-Za-z0-9_-]*) that were founded in ([A-Za-z0-9_-]*)?", "Give me all ([A-Za-z0-9_-]*) Who were founded in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) was founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2330",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2_212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Where did ([A-Za-z0-9_-]*) found?", "Where is ([A-Za-z0-9_-]*) founded?", "Where was ([A-Za-z0-9_-]*) founded?", "in which ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) found?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) found in?", "which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) found in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2331",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2_212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2332",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) found?", "When was ([A-Za-z0-9_-]*) founded?", "in which ([A-Za-z0-9_-]*) was ([A-Za-z0-9_-]*) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2333",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2334",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2335",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that found in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) found in?", "Where is ([A-Za-z0-9_-]*) founded?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) found?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) founded?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) found?", "in which ([A-Za-z0-9_-]*) does found ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) founded?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) found in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) found in?", "which ([A-Za-z0-9_-]*) found in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/govermentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2336",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that found in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) found?", "Who did ([A-Za-z0-9_-]*) found in?", "Who does ([A-Za-z0-9_-]*) found in?", "Who founded in ([A-Za-z0-9_-]*)?", "Who founds in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) found in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) founds in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was founded in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were founded in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/govermentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2337",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1_210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are founded in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) found in?", "How many ([A-Za-z0-9_-]*) found in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/govermentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2338",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_2_224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that establish in ([A-Za-z0-9_-]*)?", "Where is ([A-Za-z0-9_-]*) established?", "Who does ([A-Za-z0-9_-]*) establish in?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) establish?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) established?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) establish?", "in which ([A-Za-z0-9_-]*) does establish ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) established?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) establish in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) establish in?", "which ([A-Za-z0-9_-]*) establish in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) established in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/established> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2339",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_2_224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that establish in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) establish in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) establish in?", "What established in ([A-Za-z0-9_-]*)?", "What establishes in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) establish?", "which ([A-Za-z0-9_-]*) establish in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) established in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) establishes in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was established in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were established in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/established> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2340",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_2_224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are established in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) establish in?", "How many ([A-Za-z0-9_-]*) establish in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/property/established> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2341",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that originate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) originate in?", "Where is ([A-Za-z0-9_-]*) originated?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) originate?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) originated?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) originate?", "in which ([A-Za-z0-9_-]*) does originate ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) originated?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) originate in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) originate in?", "which ([A-Za-z0-9_-]*) originate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) originated in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/origin> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2342",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that originate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) originate in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) originate in?", "What originated in ([A-Za-z0-9_-]*)?", "What originates in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) originate?", "which ([A-Za-z0-9_-]*) originate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) originated in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) originates in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was originated in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were originated in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/origin> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2343",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are originated in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) originate in?", "How many ([A-Za-z0-9_-]*) originate in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/origin> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2344",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that originate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) originate in?", "Where is ([A-Za-z0-9_-]*) originated?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) originate?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) originated?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) originate?", "in which ([A-Za-z0-9_-]*) does originate ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) originated?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) originate in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) originate in?", "which ([A-Za-z0-9_-]*) originate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) originated in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/sourceCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2345",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that originate in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) originate in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) originate in?", "What originated in ([A-Za-z0-9_-]*)?", "What originates in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) originate?", "which ([A-Za-z0-9_-]*) originate in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) originated in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) originates in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was originated in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were originated in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2346",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1_101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are originated in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) originate in?", "How many ([A-Za-z0-9_-]*) originate in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2347",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1_107",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that flow through ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow through?", "Where is ([A-Za-z0-9_-]*) flown?", "through which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) flow?", "through which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) flown?", "through which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow?", "through which ([A-Za-z0-9_-]*) does flow ([A-Za-z0-9_-]*)?", "through which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) flown?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow through?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) flow through?", "which ([A-Za-z0-9_-]*) flow through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flowed through ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2348",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1_107",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that flow through ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) flow through?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) flow through?", "What flowed through ([A-Za-z0-9_-]*)?", "What flows through ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) flow?", "which ([A-Za-z0-9_-]*) flow through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flowed through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) flows through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was flown through ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were flown through ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2349",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1_107",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are flown through ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) flow through?", "How many ([A-Za-z0-9_-]*) flow through ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2350",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1_117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that record in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) record in?", "Where is ([A-Za-z0-9_-]*) recored?", "in which ([A-Za-z0-9_-]*)  ([A-Za-z0-9_-]*) record?", "in which ([A-Za-z0-9_-]*) are ([A-Za-z0-9_-]*) recored?", "in which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) record?", "in which ([A-Za-z0-9_-]*) does record ([A-Za-z0-9_-]*)?", "in which ([A-Za-z0-9_-]*) is ([A-Za-z0-9_-]*) recored?", "which ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) record in?", "which ([A-Za-z0-9_-]*) does the ([A-Za-z0-9_-]*) record in?", "which ([A-Za-z0-9_-]*) record in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) recored in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/recordedIn> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2351",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1_117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Give me all ([A-Za-z0-9_-]*) that record in ([A-Za-z0-9_-]*)?", "What ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) record in?", "What ([A-Za-z0-9_-]*) does ([A-Za-z0-9_-]*) record in?", "What records in ([A-Za-z0-9_-]*)?", "What recored in ([A-Za-z0-9_-]*)?", "Where does ([A-Za-z0-9_-]*) record?", "which ([A-Za-z0-9_-]*) record in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) records in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) recored in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) was recored in ([A-Za-z0-9_-]*)?", "which ([A-Za-z0-9_-]*) were recored in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2352",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1_117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ([A-Za-z0-9_-]*) are recored in ([A-Za-z0-9_-]*)?", "How many ([A-Za-z0-9_-]*) did ([A-Za-z0-9_-]*) record in?", "How many ([A-Za-z0-9_-]*) record in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2353",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2_110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) build?", "When did the ([A-Za-z0-9_-]*) build?", "When was ([A-Za-z0-9_-]*) built?", "When was the ([A-Za-z0-9_-]*) built?", "When were ([A-Za-z0-9_-]*) built?", "When were the ([A-Za-z0-9_-]*) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/beginningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2354",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2_110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) built in ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/beginningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2355",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2_110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/beginningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2356",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1_104",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ([A-Za-z0-9_-]*) publish?", "When did the ([A-Za-z0-9_-]*) publish?", "When was ([A-Za-z0-9_-]*) published?", "When was the ([A-Za-z0-9_-]*) published?", "When were ([A-Za-z0-9_-]*) published?", "When were the ([A-Za-z0-9_-]*) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2357",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1_104",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ([A-Za-z0-9_-]*) published on ([A-Za-z0-9_-]*)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2358",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1_104",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "2359",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "returnVariable" : null,
    "combination" : false
  } ]
}
