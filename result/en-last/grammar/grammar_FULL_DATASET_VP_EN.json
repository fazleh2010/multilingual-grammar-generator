{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents create (X)?", "Give me all agents that created (X)?", "Give me all agents that created the (X)", "List all agents create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the television show (X)?", "Who created the television shows (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the television show (X)?", "Who creates the television shows (X)?", "Who was the agent that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows created by (X)?", "Give me all television shows that created (X)?", "List all television shows created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of television show did (X) create?", "show me all television show that (X) created", "show me the television show that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create (X)?", "Give me all persons that created (X)?", "Give me all persons that created the (X)", "List all persons create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the book (X)?", "Who created the books (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the book (X)?", "Who creates the books (X)?", "Who was the person that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books created by (X)?", "Give me all books that created (X)?", "List all books created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of book did (X) create?", "show me all book that (X) created", "show me the book that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons leave (X)?", "Give me all persons that left (X)?", "Give me all persons that left the (X)", "List all persons leave (X)?", "Who leaves (X)?", "Who leaves the (X)?", "Who leaves the band (X)?", "Who leaves the bands (X)?", "Who left (X)?", "Who left the (X)?", "Who left the band (X)?", "Who left the bands (X)?", "Who was the person that left (X)?", "which (X) did (X) leave?", "which (X) does (X) leave?", "which (X) leave (X)?", "which (X) leaves (X)?", "which (X) left (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all bands left by (X)?", "Give me all bands that left (X)?", "List all bands left by (X)?", "What (X) was left by (X)?", "What (X) were left by (X)?", "What kind of band did (X) leave?", "show me all band that (X) left", "show me the band that (X) left", "which (X) did (X) leave?", "which (X) leave the (X)?", "which (X) leaves the (X)?", "which (X) was left by (X)?", "which (X) were left by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are left by (X)?", "How often did (X) leave?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons breed (X)?", "Give me all persons that bred (X)?", "Give me all persons that bred the (X)", "List all persons breed (X)?", "Who bred (X)?", "Who bred the (X)?", "Who bred the animal (X)?", "Who bred the animals (X)?", "Who breeds (X)?", "Who breeds the (X)?", "Who breeds the animal (X)?", "Who breeds the animals (X)?", "Who was the person that bred (X)?", "which (X) bred (X)?", "which (X) breed (X)?", "which (X) breeds (X)?", "which (X) did (X) breed?", "which (X) does (X) breed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/breeder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all animals bred by (X)?", "Give me all animals that bred (X)?", "List all animals bred by (X)?", "What (X) was bred by (X)?", "What (X) were bred by (X)?", "What kind of animal did (X) breed?", "show me all animal that (X) bred", "show me the animal that (X) bred", "which (X) breed the (X)?", "which (X) breeds the (X)?", "which (X) did (X) breed?", "which (X) was bred by (X)?", "which (X) were bred by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are bred by (X)?", "How often did (X) breed?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares develop (X)?", "Give me all softwares that developed (X)?", "Give me all softwares that developed the (X)", "List all softwares develop (X)?", "What (X) developed (X)?", "What (X) developed the (X)?", "What (X) developed the company (X)?", "What (X) develops (X)?", "What (X) develops the (X)?", "What (X) develops the company (X)?", "What (X) was the software that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all company developed by (X)?", "Give me all company that developed (X)?", "List all company developed by (X)?", "Who kind of company did (X) develop?", "Who was developed by (X)?", "Who were developed by (X)?", "show me all company that (X) developed", "show me the company that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents develop (X)?", "Give me all agents that developed (X)?", "Give me all agents that developed the (X)", "List all agents develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who developed the video game (X)?", "Who developed the video games (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the video game (X)?", "Who develops the video games (X)?", "Who was the agent that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games developed by (X)?", "Give me all video games that developed (X)?", "List all video games developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of video game did (X) develop?", "show me all video game that (X) developed", "show me the video game that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create (X)?", "Give me all persons that created (X)?", "Give me all persons that created the (X)", "List all persons create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the Website (X)?", "Who created the Websites (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the Website (X)?", "Who creates the Websites (X)?", "Who was the person that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all Websites created by (X)?", "Give me all Websites that created (X)?", "List all Websites created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of Website did (X) create?", "show me all Website that (X) created", "show me the Website that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded (X)?", "Who precedes (X)?", "Who was the politician that preceded (X)?", "Whom is (X) precede?", "Whom was (X) precede?", "which (X) preceded (X)?", "which (X) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/after> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) preceded by?", "Who was preceded by (X)?", "Who were preceded by (X)?", "Whom did (X) precede?", "which (X) was preceded by (X)?", "which (X) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are preceded by (X)?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons lead (X)?", "Give me all persons that led (X)?", "Give me all persons that led the (X)", "List all persons lead (X)?", "Who leads (X)?", "Who leads the (X)?", "Who leads the place (X)?", "Who leads the places (X)?", "Who led (X)?", "Who led the (X)?", "Who led the place (X)?", "Who led the places (X)?", "Who was the person that led (X)?", "which (X) did (X) lead?", "which (X) does (X) lead?", "which (X) lead (X)?", "which (X) leads (X)?", "which (X) led (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places led by (X)?", "Give me all places that led (X)?", "List all places led by (X)?", "What (X) was led by (X)?", "What (X) were led by (X)?", "What kind of place did (X) lead?", "show me all place that (X) led", "show me the place that (X) led", "which (X) did (X) lead?", "which (X) lead the (X)?", "which (X) leads the (X)?", "which (X) was led by (X)?", "which (X) were led by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are led by (X)?", "How often did (X) lead?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose the music for (X)?", "Give me all persons that compose the music for (X)?", "Give me all persons that compose the music for the (X)", "List all persons compose the music for (X)?", "Who compose the music for (X)?", "Who compose the music for the (X)?", "Who compose the music for the film (X)?", "Who compose the music for the films (X)?", "Who was the person that compose the music for (X)?", "which (X) compose the music for (X)?", "which (X) did (X) compose the music for?", "which (X) does (X) compose the music for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films compose the music for by (X)?", "Give me all films that compose the music for (X)?", "List all films compose the music for by (X)?", "What (X) was compose the music for by (X)?", "What (X) were compose the music for by (X)?", "What kind of film did (X) compose the music for?", "show me all film that (X) compose the music for", "show me the film that (X) compose the music for", "which (X) compose the music for the (X)?", "which (X) did (X) compose the music for?", "which (X) was compose the music for by (X)?", "which (X) were compose the music for by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are compose the music for by (X)?", "How often did (X) compose the music for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (X) called (X)?", "What (X) called the (X)?", "What (X) called the person (X)?", "What (X) called the persons (X)?", "What (X) calls (X)?", "What (X) calls the (X)?", "What (X) calls the person (X)?", "What (X) calls the persons (X)?", "which (X) call (X)?", "which (X) called (X)?", "which (X) calls (X)?", "which (X) did (X) call?", "which (X) does (X) call?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons called by (X)?", "Give me all persons that called (X)?", "List all persons called by (X)?", "Who kind of person did (X) call?", "Who was called by (X)?", "Who were called by (X)?", "show me all person that (X) called", "show me the person that (X) called", "which (X) call the (X)?", "which (X) calls the (X)?", "which (X) did (X) call?", "which (X) was called by (X)?", "which (X) were called by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are called by (X)?", "How often did (X) call?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all softwares develop (X)?", "Give me all softwares that developed the (X)", "Who developed (X)?", "Who developed the (X)?", "Who developed the company (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the company (X)?", "Who was the software that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company developed by (X)?", "Give me all company that developed (X)?", "List all company developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of company did (X) develop?", "show me all company that (X) developed", "show me the company that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all softwares develop (X)?", "Give me all softwares that developed the (X)", "Who developed (X)?", "Who developed the (X)?", "Who developed the company (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the company (X)?", "Who was the software that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company developed by (X)?", "Give me all company that developed (X)?", "List all company developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of company did (X) develop?", "show me all company that (X) developed", "show me the company that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce (X)?", "Give me all persons that produced (X)?", "Give me all persons that produced the (X)", "List all persons produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produced the work (X)?", "Who produced the works (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the work (X)?", "Who produces the works (X)?", "Who was the person that produced (X)?", "which (X) did (X) produce?", "which (X) does (X) produce?", "which (X) produce (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works produced by (X)?", "Give me all works that produced (X)?", "List all works produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of work did (X) produce?", "show me all work that (X) produced", "show me the work that (X) produced", "which (X) did (X) produce?", "which (X) produce the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create (X)?", "Give me all persons that created (X)?", "Give me all persons that created the (X)", "List all persons create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the work (X)?", "Who created the works (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the work (X)?", "Who creates the works (X)?", "Who was the person that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works created by (X)?", "Give me all works that created (X)?", "List all works created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of work did (X) create?", "show me all work that (X) created", "show me the work that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded (X)?", "Who founds (X)?", "Who was the person that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (X) founded (X)?", "which (X) founds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (X) was founded by (X)?", "which (X) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are founded by (X)?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors play (X)?", "Give me all actors that played (X)?", "Give me all actors that played the (X)", "List all actors play (X)?", "Who played (X)?", "Who played the (X)?", "Who played the work (X)?", "Who played the works (X)?", "Who plays (X)?", "Who plays the (X)?", "Who plays the work (X)?", "Who plays the works (X)?", "Who was the actor that played (X)?", "which (X) did (X) play?", "which (X) does (X) play?", "which (X) play (X)?", "which (X) played (X)?", "which (X) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works played by (X)?", "Give me all works that played (X)?", "List all works played by (X)?", "What (X) was played by (X)?", "What (X) were played by (X)?", "What kind of work did (X) play?", "show me all work that (X) played", "show me the work that (X) played", "which (X) did (X) play?", "which (X) play the (X)?", "which (X) plays the (X)?", "which (X) was played by (X)?", "which (X) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are played by (X)?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce (X)?", "Give me all persons that produced (X)?", "Give me all persons that produced the (X)", "List all persons produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produced the film (X)?", "Who produced the films (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the film (X)?", "Who produces the films (X)?", "Who was the person that produced (X)?", "which (X) did (X) produce?", "which (X) does (X) produce?", "which (X) produce (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films produced by (X)?", "Give me all films that produced (X)?", "List all films produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of film did (X) produce?", "show me all film that (X) produced", "show me the film that (X) produced", "which (X) did (X) produce?", "which (X) produce the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents own (X)?", "Give me all agents that owned (X)?", "Give me all agents that owned the (X)", "List all agents own (X)?", "Who owned (X)?", "Who owned the (X)?", "Who owned the airport (X)?", "Who owned the airports (X)?", "Who owns (X)?", "Who owns the (X)?", "Who owns the airport (X)?", "Who owns the airports (X)?", "Who was the agent that owned (X)?", "which (X) did (X) own?", "which (X) does (X) own?", "which (X) own (X)?", "which (X) owned (X)?", "which (X) owns (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports owned by (X)?", "Give me all airports that owned (X)?", "List all airports owned by (X)?", "What (X) was owned by (X)?", "What (X) were owned by (X)?", "What kind of airport did (X) own?", "show me all airport that (X) owned", "show me the airport that (X) owned", "which (X) did (X) own?", "which (X) own the (X)?", "which (X) owns the (X)?", "which (X) was owned by (X)?", "which (X) were owned by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are owned by (X)?", "How often did (X) own?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents own (X)?", "Give me all agents that owned (X)?", "Give me all agents that owned the (X)", "List all agents own (X)?", "Who owned (X)?", "Who owned the (X)?", "Who owned the animal (X)?", "Who owned the animals (X)?", "Who owns (X)?", "Who owns the (X)?", "Who owns the animal (X)?", "Who owns the animals (X)?", "Who was the agent that owned (X)?", "which (X) did (X) own?", "which (X) does (X) own?", "which (X) own (X)?", "which (X) owned (X)?", "which (X) owns (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all animals owned by (X)?", "Give me all animals that owned (X)?", "List all animals owned by (X)?", "What (X) was owned by (X)?", "What (X) were owned by (X)?", "What kind of animal did (X) own?", "show me all animal that (X) owned", "show me the animal that (X) owned", "which (X) did (X) own?", "which (X) own the (X)?", "which (X) owns the (X)?", "which (X) was owned by (X)?", "which (X) were owned by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are owned by (X)?", "How often did (X) own?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all athlete manage (X)?", "Give me all athlete that managed (X)?", "Give me all athlete that managed the (X)", "List all athlete manage (X)?", "Who managed (X)?", "Who managed the (X)?", "Who managed the sports team (X)?", "Who managed the sports teams (X)?", "Who manages (X)?", "Who manages the (X)?", "Who manages the sports team (X)?", "Who manages the sports teams (X)?", "Who was the athlete that managed (X)?", "which (X) did (X) manage?", "which (X) does (X) manage?", "which (X) manage (X)?", "which (X) managed (X)?", "which (X) manages (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all sports teams managed by (X)?", "Give me all sports teams that managed (X)?", "List all sports teams managed by (X)?", "What (X) was managed by (X)?", "What (X) were managed by (X)?", "What kind of sports team did (X) manage?", "show me all sports team that (X) managed", "show me the sports team that (X) managed", "which (X) did (X) manage?", "which (X) manage the (X)?", "which (X) manages the (X)?", "which (X) was managed by (X)?", "which (X) were managed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are managed by (X)?", "How often did (X) manage?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents create (X)?", "Give me all agents that created (X)?", "Give me all agents that created the (X)", "List all agents create (X)?", "Who created (X)?", "Who created the (X)?", "Who created the television show (X)?", "Who created the television shows (X)?", "Who creates (X)?", "Who creates the (X)?", "Who creates the television show (X)?", "Who creates the television shows (X)?", "Who was the agent that created (X)?", "which (X) create (X)?", "which (X) created (X)?", "which (X) creates (X)?", "which (X) did (X) create?", "which (X) does (X) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows created by (X)?", "Give me all television shows that created (X)?", "List all television shows created by (X)?", "What (X) was created by (X)?", "What (X) were created by (X)?", "What kind of television show did (X) create?", "show me all television show that (X) created", "show me the television show that (X) created", "which (X) create the (X)?", "which (X) creates the (X)?", "which (X) did (X) create?", "which (X) was created by (X)?", "which (X) were created by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are created by (X)?", "How often did (X) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all works marry to (X)?", "Give me all works that produced the (X)", "Who produced (X)?", "Who produced the (X)?", "Who produced the company (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the company (X)?", "Who was the work that produced (X)?", "which (X) did (X) marry to?", "which (X) does (X) marry to?", "which (X) marry to (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company produced by (X)?", "Give me all company that produced (X)?", "List all company produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of company did (X) marry to?", "show me all company that (X) produced", "show me the company that (X) produced", "which (X) did (X) marry to?", "which (X) marry to the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) marry to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded (X)?", "Who precedes (X)?", "Who was the politician that preceded (X)?", "Whom is (X) precede?", "Whom was (X) precede?", "which (X) preceded (X)?", "which (X) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/predecessor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) preceded by?", "Who was preceded by (X)?", "Who were preceded by (X)?", "Whom did (X) precede?", "which (X) was preceded by (X)?", "which (X) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are preceded by (X)?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded (X)?", "Who founds (X)?", "Who was the person that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (X) founded (X)?", "which (X) founds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (X) was founded by (X)?", "which (X) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are founded by (X)?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that won (X)?", "Give me all persons that won the (X)", "Give me all persons win (X)?", "List all persons win (X)?", "Who was the person that won (X)?", "Who wins (X)?", "Who wins the (X)?", "Who wins the work (X)?", "Who wins the works (X)?", "Who won (X)?", "Who won the (X)?", "Who won the work (X)?", "Who won the works (X)?", "which (X) did (X) win?", "which (X) does (X) win?", "which (X) win (X)?", "which (X) wins (X)?", "which (X) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that won (X)?", "Give me all works won by (X)?", "List all works won by (X)?", "What (X) was won by (X)?", "What (X) were won by (X)?", "What kind of work did (X) win?", "show me all work that (X) won", "show me the work that (X) won", "which (X) did (X) win?", "which (X) was won by (X)?", "which (X) were won by (X)?", "which (X) win the (X)?", "which (X) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are won by (X)?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all states border (X)?", "Give me all states that bordered (X)?", "Give me all states that bordered the (X)", "List all states border (X)?", "What (X) bordered (X)?", "What (X) bordered the (X)?", "What (X) bordered the state (X)?", "What (X) bordered the states (X)?", "What (X) borders (X)?", "What (X) borders the (X)?", "What (X) borders the state (X)?", "What (X) borders the states (X)?", "What (X) was the state that bordered (X)?", "which (X) border (X)?", "which (X) bordered (X)?", "which (X) borders (X)?", "which (X) did (X) border?", "which (X) does (X) border?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all states bordered by (X)?", "Give me all states that bordered (X)?", "List all states bordered by (X)?", "What (X) was bordered by (X)?", "What (X) were bordered by (X)?", "What kind of state did (X) border?", "show me all state that (X) bordered", "show me the state that (X) bordered", "which (X) border the (X)?", "which (X) borders the (X)?", "which (X) did (X) border?", "which (X) was bordered by (X)?", "which (X) were bordered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are bordered by (X)?", "How often did (X) border?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all academic journals cover (X)?", "Give me all academic journals that covered (X)?", "Give me all academic journals that covered the (X)", "List all academic journals cover (X)?", "What (X) covered (X)?", "What (X) covered the (X)?", "What (X) covers (X)?", "What (X) covers the (X)?", "What (X) was the academic journal that covered (X)?", "which (X) cover (X)?", "which (X) covered (X)?", "which (X) covers (X)?", "which (X) did (X) cover?", "which (X) does (X) cover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What (X) was covered by (X)?", "What (X) were covered by (X)?", "which (X) cover the (X)?", "which (X) covers the (X)?", "which (X) did (X) cover?", "which (X) was covered by (X)?", "which (X) were covered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are covered by (X)?", "How often did (X) cover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all awards that won (X)?", "Give me all awards that won the (X)", "Give me all awards win (X)?", "List all awards win (X)?", "What (X) was the award that won (X)?", "What (X) wins (X)?", "What (X) wins the (X)?", "What (X) wins the person (X)?", "What (X) wins the persons (X)?", "What (X) won (X)?", "What (X) won the (X)?", "What (X) won the person (X)?", "What (X) won the persons (X)?", "which (X) did (X) win?", "which (X) does (X) win?", "which (X) win (X)?", "which (X) wins (X)?", "which (X) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that won (X)?", "Give me all persons won by (X)?", "List all persons won by (X)?", "Who kind of person did (X) win?", "Who was won by (X)?", "Who were won by (X)?", "show me all person that (X) won", "show me the person that (X) won", "which (X) did (X) win?", "which (X) was won by (X)?", "which (X) were won by (X)?", "which (X) win the (X)?", "which (X) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are won by (X)?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers join (X)?", "Give me all rivers that joined (X)?", "Give me all rivers that joined the (X)", "List all rivers join (X)?", "What (X) joined (X)?", "What (X) joined the (X)?", "What (X) joined the river (X)?", "What (X) joined the rivers (X)?", "What (X) joins (X)?", "What (X) joins the (X)?", "What (X) joins the river (X)?", "What (X) joins the rivers (X)?", "What (X) was the river that joined (X)?", "which (X) did (X) join?", "which (X) does (X) join?", "which (X) join (X)?", "which (X) joined (X)?", "which (X) joins (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "89",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers joined by (X)?", "Give me all rivers that joined (X)?", "List all rivers joined by (X)?", "What (X) was joined by (X)?", "What (X) were joined by (X)?", "What kind of river did (X) join?", "show me all river that (X) joined", "show me the river that (X) joined", "which (X) did (X) join?", "which (X) join the (X)?", "which (X) joins the (X)?", "which (X) was joined by (X)?", "which (X) were joined by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are joined by (X)?", "How often did (X) join?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons direct (X)?", "Give me all persons that directed (X)?", "Give me all persons that directed the (X)", "List all persons direct (X)?", "Who directed (X)?", "Who directed the (X)?", "Who directed the film (X)?", "Who directed the films (X)?", "Who directs (X)?", "Who directs the (X)?", "Who directs the film (X)?", "Who directs the films (X)?", "Who was the person that directed (X)?", "which (X) did (X) direct?", "which (X) direct (X)?", "which (X) directed (X)?", "which (X) directs (X)?", "which (X) does (X) direct?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films directed by (X)?", "Give me all films that directed (X)?", "List all films directed by (X)?", "What (X) was directed by (X)?", "What (X) were directed by (X)?", "What kind of film did (X) direct?", "show me all film that (X) directed", "show me the film that (X) directed", "which (X) did (X) direct?", "which (X) direct the (X)?", "which (X) directs the (X)?", "which (X) was directed by (X)?", "which (X) were directed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are directed by (X)?", "How often did (X) direct?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded (X)?", "Who founds (X)?", "Who was the pope that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (X) founded (X)?", "which (X) founds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (X) was founded by (X)?", "which (X) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are founded by (X)?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations control (X)?", "Give me all organizations that controlled (X)?", "Give me all organizations that controlled the (X)", "List all organizations control (X)?", "Who controlled (X)?", "Who controlled the (X)?", "Who controlled the airport (X)?", "Who controlled the airports (X)?", "Who controls (X)?", "Who controls the (X)?", "Who controls the airport (X)?", "Who controls the airports (X)?", "Who was the organization that controlled (X)?", "which (X) control (X)?", "which (X) controlled (X)?", "which (X) controls (X)?", "which (X) did (X) control?", "which (X) does (X) control?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/controlledby> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports controlled by (X)?", "Give me all airports that controlled (X)?", "List all airports controlled by (X)?", "What (X) was controlled by (X)?", "What (X) were controlled by (X)?", "What kind of airport did (X) control?", "show me all airport that (X) controlled", "show me the airport that (X) controlled", "which (X) control the (X)?", "which (X) controls the (X)?", "which (X) did (X) control?", "which (X) was controlled by (X)?", "which (X) were controlled by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are controlled by (X)?", "How often did (X) control?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who succeeded (X)?", "Who succeeds (X)?", "Who was the person that succeeded (X)?", "Whom is (X) succeed?", "Whom was (X) succeed?", "which (X) succeeded (X)?", "which (X) succeeds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) succeeded by?", "Who was succeeded by (X)?", "Who were succeeded by (X)?", "Whom did (X) succeed?", "which (X) was succeeded by (X)?", "which (X) were succeeded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are succeeded by (X)?", "How often did (X) succeed?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the work (X)?", "Who writes the works (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the work (X)?", "Who wrote the works (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "104",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that wrote (X)?", "Give me all works wrote by (X)?", "List all works wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of work did (X) write?", "show me all work that (X) wrote", "show me the work that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "What (X) expressed (X)?", "What (X) expressed the (X)?", "What (X) expressed the color (X)?", "What (X) expressed the colors (X)?", "What (X) expresses (X)?", "What (X) expresses the (X)?", "What (X) expresses the color (X)?", "What (X) expresses the colors (X)?", "What expressed (X)?", "What expresses (X)?", "which (X) did (X) express?", "which (X) does (X) express?", "which (X) express (X)?", "which (X) expressed (X)?", "which (X) expresses (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all colors expressed by (X)?", "Give me all colors that expressed (X)?", "List all colors expressed by (X)?", "What (X) was expressed by (X)?", "What (X) were expressed by (X)?", "What kind of color did (X) express?", "show me all color that (X) expressed", "show me the color that (X) expressed", "which (X) did (X) express?", "which (X) express the (X)?", "which (X) expresses the (X)?", "which (X) was expressed by (X)?", "which (X) were expressed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are expressed by (X)?", "How often did (X) express?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons play (X)?", "Give me all persons that played (X)?", "Give me all persons that played the (X)", "List all persons play (X)?", "Who played (X)?", "Who played the (X)?", "Who played the film (X)?", "Who played the films (X)?", "Who plays (X)?", "Who plays the (X)?", "Who plays the film (X)?", "Who plays the films (X)?", "Who was the person that played (X)?", "which (X) did (X) play?", "which (X) does (X) play?", "which (X) play (X)?", "which (X) played (X)?", "which (X) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films played by (X)?", "Give me all films that played (X)?", "List all films played by (X)?", "What (X) was played by (X)?", "What (X) were played by (X)?", "What kind of film did (X) play?", "show me all film that (X) played", "show me the film that (X) played", "which (X) did (X) play?", "which (X) play the (X)?", "which (X) plays the (X)?", "which (X) was played by (X)?", "which (X) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are played by (X)?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who married (X)?", "Who marries (X)?", "Who was the person that married (X)?", "Whom is (X) marry?", "Whom was (X) marry?", "which (X) married (X)?", "which (X) marries (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) married to?", "Who was married to (X)?", "Who were married to (X)?", "Whom did (X) marry?", "which (X) was married to (X)?", "which (X) were married to (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are married to (X)?", "How often did (X) marry?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons discover (X)?", "Give me all persons that discovered (X)?", "Give me all persons that discovered the (X)", "List all persons discover (X)?", "Who discovered (X)?", "Who discovered the (X)?", "Who discovered the place (X)?", "Who discovered the places (X)?", "Who discovers (X)?", "Who discovers the (X)?", "Who discovers the place (X)?", "Who discovers the places (X)?", "Who was the person that discovered (X)?", "which (X) did (X) discover?", "which (X) discover (X)?", "which (X) discovered (X)?", "which (X) discovers (X)?", "which (X) does (X) discover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "116",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places discovered by (X)?", "Give me all places that discovered (X)?", "List all places discovered by (X)?", "What (X) was discovered by (X)?", "What (X) were discovered by (X)?", "What kind of place did (X) discover?", "show me all place that (X) discovered", "show me the place that (X) discovered", "which (X) did (X) discover?", "which (X) discover the (X)?", "which (X) discovers the (X)?", "which (X) was discovered by (X)?", "which (X) were discovered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are discovered by (X)?", "How often did (X) discover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who played (X)?", "Who plays (X)?", "Who was the person that played (X)?", "Whom is (X) play?", "Whom was (X) play?", "which (X) played (X)?", "which (X) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) played by?", "Who was played by (X)?", "Who were played by (X)?", "Whom did (X) play?", "which (X) was played by (X)?", "which (X) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are played by (X)?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports serve (X)?", "Give me all airports that served (X)?", "Give me all airports that served the (X)", "List all airports serve (X)?", "What (X) served (X)?", "What (X) served the (X)?", "What (X) served the airline (X)?", "What (X) served the airlines (X)?", "What (X) serves (X)?", "What (X) serves the (X)?", "What (X) serves the airline (X)?", "What (X) serves the airlines (X)?", "What (X) was the airport that served (X)?", "which (X) did (X) serve?", "which (X) does (X) serve?", "which (X) serve (X)?", "which (X) served (X)?", "which (X) serves (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airlines served by (X)?", "Give me all airlines that served (X)?", "List all airlines served by (X)?", "What (X) was served by (X)?", "What (X) were served by (X)?", "What kind of airline did (X) serve?", "show me all airline that (X) served", "show me the airline that (X) served", "which (X) did (X) serve?", "which (X) serve the (X)?", "which (X) serves the (X)?", "which (X) was served by (X)?", "which (X) were served by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are served by (X)?", "How often did (X) serve?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons program (X)?", "Give me all persons that programmed (X)?", "Give me all persons that programmed the (X)", "List all persons program (X)?", "Who programmed (X)?", "Who programmed the (X)?", "Who programmed the software (X)?", "Who programmed the softwares (X)?", "Who programs (X)?", "Who programs the (X)?", "Who programs the software (X)?", "Who programs the softwares (X)?", "Who was the person that programmed (X)?", "which (X) did (X) program?", "which (X) does (X) program?", "which (X) program (X)?", "which (X) programmed (X)?", "which (X) programs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/programmer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares programmed by (X)?", "Give me all softwares that programmed (X)?", "List all softwares programmed by (X)?", "What (X) was programmed by (X)?", "What (X) were programmed by (X)?", "What kind of software did (X) program?", "show me all software that (X) programmed", "show me the software that (X) programmed", "which (X) did (X) program?", "which (X) program the (X)?", "which (X) programs the (X)?", "which (X) was programmed by (X)?", "which (X) were programmed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are programmed by (X)?", "How often did (X) program?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons starring in (X)?", "Give me all persons that starred in (X)?", "Give me all persons that starred in the (X)", "List all persons starring in (X)?", "Who starred in (X)?", "Who starred in the (X)?", "Who starred in the film (X)?", "Who starred in the films (X)?", "Who starring in (X)?", "Who starring in the (X)?", "Who starring in the film (X)?", "Who starring in the films (X)?", "Who was the person that starred in (X)?", "which (X) did (X) starring in?", "which (X) does (X) starring in?", "which (X) starred in (X)?", "which (X) starring in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "128",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films starred_in by (X)?", "Give me all films that starred in (X)?", "List all films starred_in by (X)?", "What (X) was starred_in by (X)?", "What (X) were starred_in by (X)?", "What kind of film did (X) starring in?", "show me all film that (X) starred in", "show me the film that (X) starred in", "which (X) did (X) starring in?", "which (X) starring in the (X)?", "which (X) was starred_in by (X)?", "which (X) were starred_in by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are starred_in by (X)?", "How often did (X) starring in?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the album (X)?", "Who writes the albums (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the album (X)?", "Who wrote the albums (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/allLyrics> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums that wrote (X)?", "Give me all albums wrote by (X)?", "List all albums wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of album did (X) write?", "show me all album that (X) wrote", "show me the album that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "133",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors star (X)?", "Give me all actors that starred (X)?", "Give me all actors that starred the (X)", "List all actors star (X)?", "Who starred (X)?", "Who starred the (X)?", "Who starred the work (X)?", "Who starred the works (X)?", "Who stars (X)?", "Who stars the (X)?", "Who stars the work (X)?", "Who stars the works (X)?", "Who was the actor that starred (X)?", "which (X) did (X) star?", "which (X) does (X) star?", "which (X) star (X)?", "which (X) starred (X)?", "which (X) stars (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works starred by (X)?", "Give me all works that starred (X)?", "List all works starred by (X)?", "What (X) was starred by (X)?", "What (X) were starred by (X)?", "What kind of work did (X) star?", "show me all work that (X) starred", "show me the work that (X) starred", "which (X) did (X) star?", "which (X) star the (X)?", "which (X) stars the (X)?", "which (X) was starred by (X)?", "which (X) were starred by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are starred by (X)?", "How often did (X) star?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the music (X)?", "Who writes the musics (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the music (X)?", "Who wrote the musics (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics that wrote (X)?", "Give me all musics wrote by (X)?", "List all musics wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of music did (X) write?", "show me all music that (X) wrote", "show me the music that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "138",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all countries speak (X)?", "Give me all countries that spoke (X)?", "Give me all countries that spoke the (X)", "List all countries speak (X)?", "What (X) speaks (X)?", "What (X) speaks the (X)?", "What (X) speaks the language (X)?", "What (X) speaks the languages (X)?", "What (X) spoke (X)?", "What (X) spoke the (X)?", "What (X) spoke the language (X)?", "What (X) spoke the languages (X)?", "What (X) was the country that spoke (X)?", "which (X) did (X) speak?", "which (X) does (X) speak?", "which (X) speak (X)?", "which (X) speaks (X)?", "which (X) spoke (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken in (X)?", "Give me all languages that spoke (X)?", "List all languages spoken in (X)?", "What (X) was spoken in (X)?", "What (X) were spoken in (X)?", "What kind of language did (X) speak?", "show me all language that (X) spoke", "show me the language that (X) spoke", "which (X) did (X) speak?", "which (X) speak the (X)?", "which (X) speaks the (X)?", "which (X) was spoken in (X)?", "which (X) were spoken in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are spoken in (X)?", "How often did (X) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the television show (X)?", "Who writes the television shows (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the television show (X)?", "Who wrote the television shows (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "143",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows that wrote (X)?", "Give me all television shows wrote by (X)?", "List all television shows wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of television show did (X) write?", "show me all television show that (X) wrote", "show me the television show that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works precede (X)?", "Give me all works that preceded (X)?", "Give me all works that preceded the (X)", "List all works precede (X)?", "What (X) preceded (X)?", "What (X) preceded the (X)?", "What (X) preceded the work (X)?", "What (X) preceded the works (X)?", "What (X) precedes (X)?", "What (X) precedes the (X)?", "What (X) precedes the work (X)?", "What (X) precedes the works (X)?", "What (X) was the work that preceded (X)?", "which (X) did (X) precede?", "which (X) does (X) precede?", "which (X) precede (X)?", "which (X) preceded (X)?", "which (X) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works preceded by (X)?", "Give me all works that preceded (X)?", "List all works preceded by (X)?", "What (X) was preceded by (X)?", "What (X) were preceded by (X)?", "What kind of work did (X) precede?", "show me all work that (X) preceded", "show me the work that (X) preceded", "which (X) did (X) precede?", "which (X) precede the (X)?", "which (X) precedes the (X)?", "which (X) was preceded by (X)?", "which (X) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are preceded by (X)?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "148",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations produce (X)?", "Give me all organizations that produced (X)?", "Give me all organizations that produced the (X)", "List all organizations produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produced the beverage (X)?", "Who produced the beverages (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the beverage (X)?", "Who produces the beverages (X)?", "Who was the organization that produced (X)?", "which (X) did (X) produce?", "which (X) does (X) produce?", "which (X) produce (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all beverages produced by (X)?", "Give me all beverages that produced (X)?", "List all beverages produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of beverage did (X) produce?", "show me all beverage that (X) produced", "show me the beverage that (X) produced", "which (X) did (X) produce?", "which (X) produce the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose (X)?", "Give me all persons that composed (X)?", "Give me all persons that composed the (X)", "List all persons compose (X)?", "Who composed (X)?", "Who composed the (X)?", "Who composed the work (X)?", "Who composed the works (X)?", "Who composes (X)?", "Who composes the (X)?", "Who composes the work (X)?", "Who composes the works (X)?", "Who was the person that composed (X)?", "which (X) compose (X)?", "which (X) composed (X)?", "which (X) composes (X)?", "which (X) did (X) compose?", "which (X) does (X) compose?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works  by (X)?", "Give me all works that composed (X)?", "List all works  by (X)?", "What (X) was  by (X)?", "What (X) were  by (X)?", "What kind of work did (X) compose?", "show me all work that (X) composed", "show me the work that (X) composed", "which (X) compose the (X)?", "which (X) composes the (X)?", "which (X) did (X) compose?", "which (X) was  by (X)?", "which (X) were  by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "153",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are  by (X)?", "How often did (X) compose?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents publish (X)?", "Give me all agents that published (X)?", "Give me all agents that published the (X)", "List all agents publish (X)?", "Who published (X)?", "Who published the (X)?", "Who published the work (X)?", "Who published the works (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who publishes the work (X)?", "Who publishes the works (X)?", "Who was the agent that published (X)?", "which (X) did (X) publish?", "which (X) does (X) publish?", "which (X) publish (X)?", "which (X) published (X)?", "which (X) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works published by (X)?", "Give me all works that published (X)?", "List all works published by (X)?", "What (X) was published by (X)?", "What (X) were published by (X)?", "What kind of work did (X) publish?", "show me all work that (X) published", "show me the work that (X) published", "which (X) did (X) publish?", "which (X) publish the (X)?", "which (X) publishes the (X)?", "which (X) was published by (X)?", "which (X) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are published by (X)?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons illustrate (X)?", "Give me all persons that illustrated (X)?", "Give me all persons that illustrated the (X)", "List all persons illustrate (X)?", "Who illustrated (X)?", "Who illustrated the (X)?", "Who illustrated the written work (X)?", "Who illustrates (X)?", "Who illustrates the (X)?", "Who illustrates the written work (X)?", "Who was the person that illustrated (X)?", "which (X) did (X) illustrate?", "which (X) does (X) illustrate?", "which (X) illustrate (X)?", "which (X) illustrated (X)?", "which (X) illustrates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "158",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all written work illustrated by (X)?", "Give me all written work that illustrated (X)?", "List all written work illustrated by (X)?", "What (X) was illustrated by (X)?", "What (X) were illustrated by (X)?", "What kind of written work did (X) illustrate?", "show me all written work that (X) illustrated", "show me the written work that (X) illustrated", "which (X) did (X) illustrate?", "which (X) illustrate the (X)?", "which (X) illustrates the (X)?", "which (X) was illustrated by (X)?", "which (X) were illustrated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are illustrated by (X)?", "How often did (X) illustrate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all broadcasters air (X)?", "Give me all broadcasters that aired (X)?", "Give me all broadcasters that aired the (X)", "List all broadcasters air (X)?", "What (X) aired (X)?", "What (X) aired the (X)?", "What (X) aired the film (X)?", "What (X) aired the films (X)?", "What (X) airs (X)?", "What (X) airs the (X)?", "What (X) airs the film (X)?", "What (X) airs the films (X)?", "What (X) was the broadcaster that aired (X)?", "which (X) air (X)?", "which (X) aired (X)?", "which (X) airs (X)?", "which (X) did (X) air?", "which (X) does (X) air?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/network> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films aired by (X)?", "Give me all films that aired (X)?", "List all films aired by (X)?", "What (X) was aired by (X)?", "What (X) were aired by (X)?", "What kind of film did (X) air?", "show me all film that (X) aired", "show me the film that (X) aired", "which (X) air the (X)?", "which (X) airs the (X)?", "which (X) did (X) air?", "which (X) was aired by (X)?", "which (X) were aired by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are aired by (X)?", "How often did (X) air?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "163",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all publishers publish (X)?", "Give me all publishers that published (X)?", "Give me all publishers that published the (X)", "List all publishers publish (X)?", "What (X) published (X)?", "What (X) published the (X)?", "What (X) published the book (X)?", "What (X) published the books (X)?", "What (X) publishes (X)?", "What (X) publishes the (X)?", "What (X) publishes the book (X)?", "What (X) publishes the books (X)?", "What (X) was the publisher that published (X)?", "which (X) did (X) publish?", "which (X) does (X) publish?", "which (X) publish (X)?", "which (X) published (X)?", "which (X) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books published by (X)?", "Give me all books that published (X)?", "List all books published by (X)?", "What (X) was published by (X)?", "What (X) were published by (X)?", "What kind of book did (X) publish?", "show me all book that (X) published", "show me the book that (X) published", "which (X) did (X) publish?", "which (X) publish the (X)?", "which (X) publishes the (X)?", "which (X) was published by (X)?", "which (X) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are published by (X)?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works follow (X)?", "Give me all works that followed (X)?", "Give me all works that followed the (X)", "List all works follow (X)?", "What (X) followed (X)?", "What (X) followed the (X)?", "What (X) followed the work (X)?", "What (X) followed the works (X)?", "What (X) follows (X)?", "What (X) follows the (X)?", "What (X) follows the work (X)?", "What (X) follows the works (X)?", "What (X) was the work that followed (X)?", "which (X) did (X) follow?", "which (X) does (X) follow?", "which (X) follow (X)?", "which (X) followed (X)?", "which (X) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "167",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works followed by (X)?", "Give me all works that followed (X)?", "List all works followed by (X)?", "What (X) was followed by (X)?", "What (X) were followed by (X)?", "What kind of work did (X) follow?", "show me all work that (X) followed", "show me the work that (X) followed", "which (X) did (X) follow?", "which (X) follow the (X)?", "which (X) follows the (X)?", "which (X) was followed by (X)?", "which (X) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are followed by (X)?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums follow (X)?", "Give me all albums that followed (X)?", "Give me all albums that followed the (X)", "List all albums follow (X)?", "What (X) followed (X)?", "What (X) followed the (X)?", "What (X) followed the album (X)?", "What (X) followed the albums (X)?", "What (X) follows (X)?", "What (X) follows the (X)?", "What (X) follows the album (X)?", "What (X) follows the albums (X)?", "What (X) was the album that followed (X)?", "which (X) did (X) follow?", "which (X) does (X) follow?", "which (X) follow (X)?", "which (X) followed (X)?", "which (X) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nextTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums followed by (X)?", "Give me all albums that followed (X)?", "List all albums followed by (X)?", "What (X) was followed by (X)?", "What (X) were followed by (X)?", "What kind of album did (X) follow?", "show me all album that (X) followed", "show me the album that (X) followed", "which (X) did (X) follow?", "which (X) follow the (X)?", "which (X) follows the (X)?", "which (X) was followed by (X)?", "which (X) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are followed by (X)?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers drain (X)?", "Give me all rivers that drained (X)?", "Give me all rivers that drained the (X)", "List all rivers drain (X)?", "What (X) drained (X)?", "What (X) drained the (X)?", "What (X) drained the river (X)?", "What (X) drained the rivers (X)?", "What (X) drains (X)?", "What (X) drains the (X)?", "What (X) drains the river (X)?", "What (X) drains the rivers (X)?", "What (X) was the river that drained (X)?", "which (X) did (X) drain?", "which (X) does (X) drain?", "which (X) drain (X)?", "which (X) drained (X)?", "which (X) drains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/outflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers drained by (X)?", "Give me all rivers that drained (X)?", "List all rivers drained by (X)?", "What (X) was drained by (X)?", "What (X) were drained by (X)?", "What kind of river did (X) drain?", "show me all river that (X) drained", "show me the river that (X) drained", "which (X) did (X) drain?", "which (X) drain the (X)?", "which (X) drains the (X)?", "which (X) was drained by (X)?", "which (X) were drained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "174",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are drained by (X)?", "How often did (X) drain?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents publish (X)?", "Give me all agents that published (X)?", "Give me all agents that published the (X)", "List all agents publish (X)?", "Who published (X)?", "Who published the (X)?", "Who published the publisher (X)?", "Who published the publishers (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who publishes the publisher (X)?", "Who publishes the publishers (X)?", "Who was the agent that published (X)?", "which (X) did (X) publish?", "which (X) does (X) publish?", "which (X) publish (X)?", "which (X) published (X)?", "which (X) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all publishers published by (X)?", "Give me all publishers that published (X)?", "List all publishers published by (X)?", "What (X) was published by (X)?", "What (X) were published by (X)?", "What kind of publisher did (X) publish?", "show me all publisher that (X) published", "show me the publisher that (X) published", "which (X) did (X) publish?", "which (X) publish the (X)?", "which (X) publishes the (X)?", "which (X) was published by (X)?", "which (X) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are published by (X)?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "178",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all countries adopted by (X)?", "List all countries adopted by (X)?", "What (X) was adopted by (X)?", "What (X) were adopted by (X)?", "show me the country that (X) adopted", "which (X) adopt (X)?", "which (X) adopted (X)?", "which (X) did (X) adopt?", "which (X) was adopted by (X)?", "which (X) were adopted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all currencies adopt (X)?", "What (X) adopted (X)?", "What (X) adopted the (X)?", "What (X) adopted the countries (X)?", "What (X) adopts (X)?", "What (X) adopts the (X)?", "What (X) adopts the countries (X)?", "What (X) adopts the country (X)?", "What (X) was the currency that adopted (X)?", "which (X) adopt (X)?", "which (X) adopted (X)?", "which (X) adopts (X)?", "which (X) did (X) adopt?", "which (X) does (X) adopt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are adopted by (X)?", "How often did (X) adopt?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the song (X)?", "Who writes the songs (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the song (X)?", "Who wrote the songs (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "182",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all songs that wrote (X)?", "Give me all songs wrote by (X)?", "List all songs wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of song did (X) write?", "show me all song that (X) wrote", "show me the song that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "183",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#to_Win_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that won (X)?", "Give me all works that won the (X)", "Give me all works win (X)?", "List all works win (X)?", "What (X) was the work that won (X)?", "What (X) wins (X)?", "What (X) wins the (X)?", "What (X) wins the writer (X)?", "What (X) wins the writers (X)?", "What (X) won (X)?", "What (X) won the (X)?", "What (X) won the writer (X)?", "What (X) won the writers (X)?", "which (X) did (X) win?", "which (X) does (X) win?", "which (X) win (X)?", "which (X) wins (X)?", "which (X) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#to_Win_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Writer" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all writers that won (X)?", "Give me all writers won by (X)?", "List all writers won by (X)?", "Who kind of writer did (X) win?", "Who was won by (X)?", "Who were won by (X)?", "show me all writer that (X) won", "show me the writer that (X) won", "which (X) did (X) win?", "which (X) was won by (X)?", "which (X) were won by (X)?", "which (X) win the (X)?", "which (X) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#to_Win_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Writer" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are won by (X)?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "187",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed (X)?", "Who follows (X)?", "Who was the politician that followed (X)?", "Whom is (X) follow?", "Whom was (X) follow?", "which (X) followed (X)?", "which (X) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "188",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) followed by?", "Who was followed by (X)?", "Who were followed by (X)?", "Whom did (X) follow?", "which (X) was followed by (X)?", "which (X) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are followed by (X)?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations rent (X)?", "Give me all organizations that rented (X)?", "Give me all organizations that rented the (X)", "List all organizations rent (X)?", "Who rented (X)?", "Who rented the (X)?", "Who rented the ArchitecturalStructure (X)?", "Who rented the ArchitecturalStructures (X)?", "Who rents (X)?", "Who rents the (X)?", "Who rents the ArchitecturalStructure (X)?", "Who rents the ArchitecturalStructures (X)?", "Who was the organization that rented (X)?", "which (X) did (X) rent?", "which (X) does (X) rent?", "which (X) rent (X)?", "which (X) rented (X)?", "which (X) rents (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/tenant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures rented by (X)?", "Give me all ArchitecturalStructures that rented (X)?", "List all ArchitecturalStructures rented by (X)?", "What (X) was rented by (X)?", "What (X) were rented by (X)?", "What kind of ArchitecturalStructure did (X) rent?", "show me all ArchitecturalStructure that (X) rented", "show me the ArchitecturalStructure that (X) rented", "which (X) did (X) rent?", "which (X) rent the (X)?", "which (X) rents the (X)?", "which (X) was rented by (X)?", "which (X) were rented by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "192",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are rented by (X)?", "How often did (X) rent?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "193",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons design (X)?", "Give me all persons that designed (X)?", "Give me all persons that designed the (X)", "List all persons design (X)?", "Who designed (X)?", "Who designed the (X)?", "Who designed the software (X)?", "Who designed the softwares (X)?", "Who designs (X)?", "Who designs the (X)?", "Who designs the software (X)?", "Who designs the softwares (X)?", "Who was the person that designed (X)?", "which (X) design (X)?", "which (X) designed (X)?", "which (X) designs (X)?", "which (X) did (X) design?", "which (X) does (X) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares designed by (X)?", "Give me all softwares that designed (X)?", "List all softwares designed by (X)?", "What (X) was designed by (X)?", "What (X) were designed by (X)?", "What kind of software did (X) design?", "show me all software that (X) designed", "show me the software that (X) designed", "which (X) design the (X)?", "which (X) designs the (X)?", "which (X) did (X) design?", "which (X) was designed by (X)?", "which (X) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are designed by (X)?", "How often did (X) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who inspired (X)?", "Who inspires (X)?", "Who was the person that inspired (X)?", "Whom is (X) inspire?", "Whom was (X) inspire?", "which (X) inspired (X)?", "which (X) inspires (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "197",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) inspired by?", "Who was inspired by (X)?", "Who were inspired by (X)?", "Whom did (X) inspire?", "which (X) was inspired by (X)?", "which (X) were inspired by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "198",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are inspired by (X)?", "How often did (X) inspire?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons paint (X)?", "Give me all persons that painted (X)?", "Give me all persons that painted the (X)", "List all persons paint (X)?", "Who painted (X)?", "Who painted the (X)?", "Who painted the work (X)?", "Who painted the works (X)?", "Who paints (X)?", "Who paints the (X)?", "Who paints the work (X)?", "Who paints the works (X)?", "Who was the person that painted (X)?", "which (X) did (X) paint?", "which (X) does (X) paint?", "which (X) paint (X)?", "which (X) painted (X)?", "which (X) paints (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works painted by (X)?", "Give me all works that painted (X)?", "List all works painted by (X)?", "What (X) was painted by (X)?", "What (X) were painted by (X)?", "What kind of work did (X) paint?", "show me all work that (X) painted", "show me the work that (X) painted", "which (X) did (X) paint?", "which (X) paint the (X)?", "which (X) paints the (X)?", "which (X) was painted by (X)?", "which (X) were painted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are painted by (X)?", "How often did (X) paint?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "202",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operate (X)?", "Give me all organizations that operated (X)?", "Give me all organizations that operated the (X)", "List all organizations operate (X)?", "Who operated (X)?", "Who operated the (X)?", "Who operated the airport (X)?", "Who operated the airports (X)?", "Who operates (X)?", "Who operates the (X)?", "Who operates the airport (X)?", "Who operates the airports (X)?", "Who was the organization that operated (X)?", "which (X) did (X) operate?", "which (X) does (X) operate?", "which (X) operate (X)?", "which (X) operated (X)?", "which (X) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "203",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports designed by (X)?", "Give me all airports that operated (X)?", "List all airports designed by (X)?", "What (X) was designed by (X)?", "What (X) were designed by (X)?", "What kind of airport did (X) operate?", "show me all airport that (X) operated", "show me the airport that (X) operated", "which (X) did (X) operate?", "which (X) operate the (X)?", "which (X) operates the (X)?", "which (X) was designed by (X)?", "which (X) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are designed by (X)?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all launch pads operate (X)?", "Give me all launch pads that operated (X)?", "Give me all launch pads that operated the (X)", "List all launch pads operate (X)?", "What (X) operated (X)?", "What (X) operated the (X)?", "What (X) operated the organization (X)?", "What (X) operated the organizations (X)?", "What (X) operates (X)?", "What (X) operates the (X)?", "What (X) operates the organization (X)?", "What (X) operates the organizations (X)?", "What (X) was the launch pad that operated (X)?", "which (X) did (X) operate?", "which (X) does (X) operate?", "which (X) operate (X)?", "which (X) operated (X)?", "which (X) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations designed by (X)?", "Give me all organizations that operated (X)?", "List all organizations designed by (X)?", "Who kind of organization did (X) operate?", "Who was designed by (X)?", "Who were designed by (X)?", "show me all organization that (X) operated", "show me the organization that (X) operated", "which (X) did (X) operate?", "which (X) operate the (X)?", "which (X) operates the (X)?", "which (X) was designed by (X)?", "which (X) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "207",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are designed by (X)?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "How much did (X) cost?", "How much does (X) cost?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "which (X) costed by (X)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are costed by (X)?", "How often did (X) cost?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons paint (X)?", "Give me all persons that painted (X)?", "Give me all persons that painted the (X)", "List all persons paint (X)?", "Who painted (X)?", "Who painted the (X)?", "Who painted the work (X)?", "Who painted the works (X)?", "Who paints (X)?", "Who paints the (X)?", "Who paints the work (X)?", "Who paints the works (X)?", "Who was the person that painted (X)?", "which (X) did (X) paint?", "which (X) does (X) paint?", "which (X) paint (X)?", "which (X) painted (X)?", "which (X) paints (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works painted by (X)?", "Give me all works that painted (X)?", "List all works painted by (X)?", "What (X) was painted by (X)?", "What (X) were painted by (X)?", "What kind of work did (X) paint?", "show me all work that (X) painted", "show me the work that (X) painted", "which (X) did (X) paint?", "which (X) paint the (X)?", "which (X) paints the (X)?", "which (X) was painted by (X)?", "which (X) were painted by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are painted by (X)?", "How often did (X) paint?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all architects design (X)?", "Give me all architects that designed (X)?", "Give me all architects that designed the (X)", "List all architects design (X)?", "Who designed (X)?", "Who designed the (X)?", "Who designed the ArchitecturalStructure (X)?", "Who designed the ArchitecturalStructures (X)?", "Who designs (X)?", "Who designs the (X)?", "Who designs the ArchitecturalStructure (X)?", "Who designs the ArchitecturalStructures (X)?", "Who was the architect that designed (X)?", "which (X) design (X)?", "which (X) designed (X)?", "which (X) designs (X)?", "which (X) did (X) design?", "which (X) does (X) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures designed by (X)?", "Give me all ArchitecturalStructures that designed (X)?", "List all ArchitecturalStructures designed by (X)?", "What (X) was designed by (X)?", "What (X) were designed by (X)?", "What kind of ArchitecturalStructure did (X) design?", "show me all ArchitecturalStructure that (X) designed", "show me the ArchitecturalStructure that (X) designed", "which (X) design the (X)?", "which (X) designs the (X)?", "which (X) did (X) design?", "which (X) was designed by (X)?", "which (X) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are designed by (X)?", "How often did (X) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operate (X)?", "Give me all organizations that operated (X)?", "Give me all organizations that operated the (X)", "List all organizations operate (X)?", "Who operated (X)?", "Who operated the (X)?", "Who operated the airport (X)?", "Who operated the airports (X)?", "Who operates (X)?", "Who operates the (X)?", "Who operates the airport (X)?", "Who operates the airports (X)?", "Who was the organization that operated (X)?", "which (X) did (X) operate?", "which (X) does (X) operate?", "which (X) operate (X)?", "which (X) operated (X)?", "which (X) operates (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports operated by (X)?", "Give me all airports that operated (X)?", "List all airports operated by (X)?", "What (X) was operated by (X)?", "What (X) were operated by (X)?", "What kind of airport did (X) operate?", "show me all airport that (X) operated", "show me the airport that (X) operated", "which (X) did (X) operate?", "which (X) operate the (X)?", "which (X) operates the (X)?", "which (X) was operated by (X)?", "which (X) were operated by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are operated by (X)?", "How often did (X) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents that wrote (X)?", "Give me all agents that wrote the (X)", "Give me all agents write (X)?", "List all agents write (X)?", "Who was the agent that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the book (X)?", "Who writes the books (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the book (X)?", "Who wrote the books (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books that wrote (X)?", "Give me all books wrote by (X)?", "List all books wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of book did (X) write?", "show me all book that (X) wrote", "show me the book that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons design (X)?", "Give me all persons that designed (X)?", "Give me all persons that designed the (X)", "List all persons design (X)?", "Who designed (X)?", "Who designed the (X)?", "Who designed the Building (X)?", "Who designed the dbo:Buildings (X)?", "Who designs (X)?", "Who designs the (X)?", "Who designs the Building (X)?", "Who designs the dbo:Buildings (X)?", "Who was the person that designed (X)?", "which (X) design (X)?", "which (X) designed (X)?", "which (X) designs (X)?", "which (X) did (X) design?", "which (X) does (X) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all dbo:Buildings designed by (X)?", "Give me all dbo:Buildings that designed (X)?", "List all dbo:Buildings designed by (X)?", "What (X) was designed by (X)?", "What (X) were designed by (X)?", "What kind of Building did (X) design?", "show me all Building that (X) designed", "show me the Building that (X) designed", "which (X) design the (X)?", "which (X) designs the (X)?", "which (X) did (X) design?", "which (X) was designed by (X)?", "which (X) were designed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are designed by (X)?", "How often did (X) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations distribute (X)?", "Give me all organizations that distributed (X)?", "Give me all organizations that distributed the (X)", "List all organizations distribute (X)?", "Who distributed (X)?", "Who distributed the (X)?", "Who distributed the film (X)?", "Who distributed the films (X)?", "Who distributes (X)?", "Who distributes the (X)?", "Who distributes the film (X)?", "Who distributes the films (X)?", "Who was the organization that distributed (X)?", "which (X) did (X) distribute?", "which (X) distribute (X)?", "which (X) distributed (X)?", "which (X) distributes (X)?", "which (X) does (X) distribute?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films distributed by (X)?", "Give me all films that distributed (X)?", "List all films distributed by (X)?", "What (X) was distributed by (X)?", "What (X) were distributed by (X)?", "What kind of film did (X) distribute?", "show me all film that (X) distributed", "show me the film that (X) distributed", "which (X) did (X) distribute?", "which (X) distribute the (X)?", "which (X) distributes the (X)?", "which (X) was distributed by (X)?", "which (X) were distributed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are distributed by (X)?", "How often did (X) distribute?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "229",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations distribute (X)?", "Give me all organizations that distributed (X)?", "Give me all organizations that distributed the (X)", "List all organizations distribute (X)?", "Who distributed (X)?", "Who distributed the (X)?", "Who distributed the television show (X)?", "Who distributed the television shows (X)?", "Who distributes (X)?", "Who distributes the (X)?", "Who distributes the television show (X)?", "Who distributes the television shows (X)?", "Who was the organization that distributed (X)?", "which (X) did (X) distribute?", "which (X) distribute (X)?", "which (X) distributed (X)?", "which (X) distributes (X)?", "which (X) does (X) distribute?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows distributed by (X)?", "Give me all television shows that distributed (X)?", "List all television shows distributed by (X)?", "What (X) was distributed by (X)?", "What (X) were distributed by (X)?", "What kind of television show did (X) distribute?", "show me all television show that (X) distributed", "show me the television show that (X) distributed", "which (X) did (X) distribute?", "which (X) distribute the (X)?", "which (X) distributes the (X)?", "which (X) was distributed by (X)?", "which (X) were distributed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are distributed by (X)?", "How often did (X) distribute?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the work (X)?", "Who writes the works (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the work (X)?", "Who wrote the works (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "233",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that wrote (X)?", "Give me all works wrote by (X)?", "List all works wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of work did (X) write?", "show me all work that (X) wrote", "show me the work that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "234",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents maintain (X)?", "Give me all agents that maintained (X)?", "Give me all agents that maintained the (X)", "List all agents maintain (X)?", "Who maintained (X)?", "Who maintained the (X)?", "Who maintained the ArchitecturalStructure (X)?", "Who maintained the ArchitecturalStructures (X)?", "Who maintains (X)?", "Who maintains the (X)?", "Who maintains the ArchitecturalStructure (X)?", "Who maintains the ArchitecturalStructures (X)?", "Who was the agent that maintained (X)?", "which (X) did (X) maintain?", "which (X) does (X) maintain?", "which (X) maintain (X)?", "which (X) maintained (X)?", "which (X) maintains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures maintained by (X)?", "Give me all ArchitecturalStructures that maintained (X)?", "List all ArchitecturalStructures maintained by (X)?", "What (X) was maintained by (X)?", "What (X) were maintained by (X)?", "What kind of ArchitecturalStructure did (X) maintain?", "show me all ArchitecturalStructure that (X) maintained", "show me the ArchitecturalStructure that (X) maintained", "which (X) did (X) maintain?", "which (X) maintain the (X)?", "which (X) maintains the (X)?", "which (X) was maintained by (X)?", "which (X) were maintained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are maintained by (X)?", "How often did (X) maintain?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "238",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose the soundtrack for (X)?", "Give me all persons that compose the soundtrack for (X)?", "Give me all persons that compose the soundtrack for the (X)", "List all persons compose the soundtrack for (X)?", "Who compose the soundtrack for (X)?", "Who compose the soundtrack for the (X)?", "Who compose the soundtrack for the film (X)?", "Who compose the soundtrack for the films (X)?", "Who was the person that compose the soundtrack for (X)?", "which (X) compose the soundtrack for (X)?", "which (X) did (X) compose the soundtrack for?", "which (X) does (X) compose the soundtrack for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films compose the soundtrack for by (X)?", "Give me all films that compose the soundtrack for (X)?", "List all films compose the soundtrack for by (X)?", "What (X) was compose the soundtrack for by (X)?", "What (X) were compose the soundtrack for by (X)?", "What kind of film did (X) compose the soundtrack for?", "show me all film that (X) compose the soundtrack for", "show me the film that (X) compose the soundtrack for", "which (X) compose the soundtrack for the (X)?", "which (X) did (X) compose the soundtrack for?", "which (X) was compose the soundtrack for by (X)?", "which (X) were compose the soundtrack for by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are compose the soundtrack for by (X)?", "How often did (X) compose the soundtrack for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons discover (X)?", "Give me all persons that discovered (X)?", "Give me all persons that discovered the (X)", "List all persons discover (X)?", "Who discovered (X)?", "Who discovered the (X)?", "Who discovered the planets (X)?", "Who discovered the plant (X)?", "Who discovers (X)?", "Who discovers the (X)?", "Who discovers the planets (X)?", "Who discovers the plant (X)?", "Who was the person that discovered (X)?", "which (X) did (X) discover?", "which (X) discover (X)?", "which (X) discovered (X)?", "which (X) discovers (X)?", "which (X) does (X) discover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all planets discovered by (X)?", "Give me all planets that discovered (X)?", "List all planets discovered by (X)?", "What (X) was discovered by (X)?", "What (X) were discovered by (X)?", "What kind of plant did (X) discover?", "show me all plant that (X) discovered", "show me the plant that (X) discovered", "which (X) did (X) discover?", "which (X) discover the (X)?", "which (X) discovers the (X)?", "which (X) was discovered by (X)?", "which (X) were discovered by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "243",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are discovered by (X)?", "How often did (X) discover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who trained (X)?", "Who trains (X)?", "Who was the person that trained (X)?", "Whom is (X) train?", "Whom was (X) train?", "which (X) trained (X)?", "which (X) trains (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/trainer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) trained by?", "Who was trained by (X)?", "Who were trained by (X)?", "Whom did (X) train?", "which (X) was trained by (X)?", "which (X) were trained by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are trained by (X)?", "How often did (X) train?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "247",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EthnicGroup" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all countries live (X)?", "Give me all countries that lived (X)?", "Give me all countries that lived the (X)", "List all countries live (X)?", "What (X) lived (X)?", "What (X) lived the (X)?", "What (X) lived the ethnic group (X)?", "What (X) lived the ethnic groups (X)?", "What (X) lives (X)?", "What (X) lives the (X)?", "What (X) lives the ethnic group (X)?", "What (X) lives the ethnic groups (X)?", "What (X) was the country that lived (X)?", "which (X) did (X) live?", "which (X) does (X) live?", "which (X) live (X)?", "which (X) lived (X)?", "which (X) lives (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "EthnicGroup" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ethnic groups lived in (X)?", "Give me all ethnic groups that lived (X)?", "List all ethnic groups lived in (X)?", "What (X) was lived in (X)?", "What (X) were lived in (X)?", "What kind of ethnic group did (X) live?", "show me all ethnic group that (X) lived", "show me the ethnic group that (X) lived", "which (X) did (X) live?", "which (X) live the (X)?", "which (X) lives the (X)?", "which (X) was lived in (X)?", "which (X) were lived in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "EthnicGroup" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are lived in (X)?", "How often did (X) live?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the work (X)?", "Who writes the works (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the work (X)?", "Who wrote the works (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works that wrote (X)?", "Give me all works wrote by (X)?", "List all works wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of work did (X) write?", "show me all work that (X) wrote", "show me the work that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "252",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons present (X)?", "Give me all persons that presented (X)?", "Give me all persons that presented the (X)", "List all persons present (X)?", "Who presented (X)?", "Who presented the (X)?", "Who presented the television show (X)?", "Who presented the television shows (X)?", "Who presents (X)?", "Who presents the (X)?", "Who presents the television show (X)?", "Who presents the television shows (X)?", "Who was the person that presented (X)?", "which (X) did (X) present?", "which (X) does (X) present?", "which (X) present (X)?", "which (X) presented (X)?", "which (X) presents (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows presented by (X)?", "Give me all television shows that presented (X)?", "List all television shows presented by (X)?", "What (X) was presented by (X)?", "What (X) were presented by (X)?", "What kind of television show did (X) present?", "show me all television show that (X) presented", "show me the television show that (X) presented", "which (X) did (X) present?", "which (X) present the (X)?", "which (X) presents the (X)?", "which (X) was presented by (X)?", "which (X) were presented by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are presented by (X)?", "How often did (X) present?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents support (X)?", "Give me all agents that supported (X)?", "Give me all agents that supported the (X)", "List all agents support (X)?", "Who supported (X)?", "Who supported the (X)?", "Who supported the ideologies (X)?", "Who supported the ideology (X)?", "Who supports (X)?", "Who supports the (X)?", "Who supports the ideologies (X)?", "Who supports the ideology (X)?", "Who was the agent that supported (X)?", "which (X) did (X) support?", "which (X) does (X) support?", "which (X) support (X)?", "which (X) supported (X)?", "which (X) supports (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ideology> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "257",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ideologies supported by (X)?", "Give me all ideologies that supported (X)?", "List all ideologies supported by (X)?", "What (X) was supported by (X)?", "What (X) were supported by (X)?", "What kind of ideology did (X) support?", "show me all ideology that (X) supported", "show me the ideology that (X) supported", "which (X) did (X) support?", "which (X) support the (X)?", "which (X) supports the (X)?", "which (X) was supported by (X)?", "which (X) were supported by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are supported by (X)?", "How often did (X) support?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "259",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons play (X)?", "Give me all persons that played (X)?", "Give me all persons that played the (X)", "List all persons play (X)?", "Who played (X)?", "Who played the (X)?", "Who played the music (X)?", "Who played the musics (X)?", "Who plays (X)?", "Who plays the (X)?", "Who plays the music (X)?", "Who plays the musics (X)?", "Who was the person that played (X)?", "which (X) did (X) play?", "which (X) does (X) play?", "which (X) play (X)?", "which (X) played (X)?", "which (X) plays (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "260",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics played by (X)?", "Give me all musics that played (X)?", "List all musics played by (X)?", "What (X) was played by (X)?", "What (X) were played by (X)?", "What kind of music did (X) play?", "show me all music that (X) played", "show me the music that (X) played", "which (X) did (X) play?", "which (X) play the (X)?", "which (X) plays the (X)?", "which (X) was played by (X)?", "which (X) were played by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "261",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are played by (X)?", "How often did (X) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "262",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all awards that won (X)?", "Give me all awards that won the (X)", "Give me all awards win (X)?", "List all awards win (X)?", "What (X) was the award that won (X)?", "What (X) wins (X)?", "What (X) wins the (X)?", "What (X) wins the scientist (X)?", "What (X) wins the scientists (X)?", "What (X) won (X)?", "What (X) won the (X)?", "What (X) won the scientist (X)?", "What (X) won the scientists (X)?", "which (X) did (X) win?", "which (X) does (X) win?", "which (X) win (X)?", "which (X) wins (X)?", "which (X) won (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "263",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all scientists that won (X)?", "Give me all scientists won by (X)?", "List all scientists won by (X)?", "Who kind of scientist did (X) win?", "Who was won by (X)?", "Who were won by (X)?", "show me all scientist that (X) won", "show me the scientist that (X) won", "which (X) did (X) win?", "which (X) was won by (X)?", "which (X) were won by (X)?", "which (X) win the (X)?", "which (X) wins the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are won by (X)?", "How often did (X) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "265",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents perform (X)?", "Give me all agents that performed (X)?", "Give me all agents that performed the (X)", "List all agents perform (X)?", "Who performed (X)?", "Who performed the (X)?", "Who performed the music (X)?", "Who performed the musics (X)?", "Who performs (X)?", "Who performs the (X)?", "Who performs the music (X)?", "Who performs the musics (X)?", "Who was the agent that performed (X)?", "which (X) did (X) perform?", "which (X) does (X) perform?", "which (X) perform (X)?", "which (X) performed (X)?", "which (X) performs (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "266",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics performed by (X)?", "Give me all musics that performed (X)?", "List all musics performed by (X)?", "What (X) was performed by (X)?", "What (X) were performed by (X)?", "What kind of music did (X) perform?", "show me all music that (X) performed", "show me the music that (X) performed", "which (X) did (X) perform?", "which (X) perform the (X)?", "which (X) performs the (X)?", "which (X) was performed by (X)?", "which (X) were performed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "267",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are performed by (X)?", "How often did (X) perform?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded (X)?", "Who founds (X)?", "Who was the pope that founded (X)?", "Whom is (X) found?", "Whom was (X) found?", "which (X) founded (X)?", "which (X) founds (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) founded by?", "Who was founded by (X)?", "Who were founded by (X)?", "Whom did (X) found?", "which (X) was founded by (X)?", "which (X) were founded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "270",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are founded by (X)?", "How often did (X) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "271",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers cross (X)?", "Give me all rivers that crossed (X)?", "Give me all rivers that crossed the (X)", "List all rivers cross (X)?", "What (X) crossed (X)?", "What (X) crossed the (X)?", "What (X) crossed the Bridge (X)?", "What (X) crossed the Bridges (X)?", "What (X) crosses (X)?", "What (X) crosses the (X)?", "What (X) crosses the Bridge (X)?", "What (X) crosses the Bridges (X)?", "What (X) was the river that crossed (X)?", "which (X) cross (X)?", "which (X) crossed (X)?", "which (X) crosses (X)?", "which (X) did (X) cross?", "which (X) does (X) cross?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "272",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all Bridges crossed by (X)?", "Give me all Bridges that crossed (X)?", "List all Bridges crossed by (X)?", "What (X) was crossed by (X)?", "What (X) were crossed by (X)?", "What kind of Bridge did (X) cross?", "show me all Bridge that (X) crossed", "show me the Bridge that (X) crossed", "which (X) cross the (X)?", "which (X) crosses the (X)?", "which (X) did (X) cross?", "which (X) was crossed by (X)?", "which (X) were crossed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are crossed by (X)?", "How often did (X) cross?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "274",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all company publish (X)?", "Give me all company that published (X)?", "Give me all company that published the (X)", "List all company publish (X)?", "Who published (X)?", "Who published the (X)?", "Who published the video game (X)?", "Who published the video games (X)?", "Who publishes (X)?", "Who publishes the (X)?", "Who publishes the video game (X)?", "Who publishes the video games (X)?", "Who was the company that published (X)?", "which (X) did (X) publish?", "which (X) does (X) publish?", "which (X) publish (X)?", "which (X) published (X)?", "which (X) publishes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "275",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games published by (X)?", "Give me all video games that published (X)?", "List all video games published by (X)?", "What (X) was published by (X)?", "What (X) were published by (X)?", "What kind of video game did (X) publish?", "show me all video game that (X) published", "show me the video game that (X) published", "which (X) did (X) publish?", "which (X) publish the (X)?", "which (X) publishes the (X)?", "which (X) was published by (X)?", "which (X) were published by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "276",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are published by (X)?", "How often did (X) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "277",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons direct (X)?", "Give me all persons that directed (X)?", "Give me all persons that directed the (X)", "List all persons direct (X)?", "Who directed (X)?", "Who directed the (X)?", "Who directed the software (X)?", "Who directed the softwares (X)?", "Who directs (X)?", "Who directs the (X)?", "Who directs the software (X)?", "Who directs the softwares (X)?", "Who was the person that directed (X)?", "which (X) did (X) direct?", "which (X) direct (X)?", "which (X) directed (X)?", "which (X) directs (X)?", "which (X) does (X) direct?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares directed by (X)?", "Give me all softwares that directed (X)?", "List all softwares directed by (X)?", "What (X) was directed by (X)?", "What (X) were directed by (X)?", "What kind of software did (X) direct?", "show me all software that (X) directed", "show me the software that (X) directed", "which (X) did (X) direct?", "which (X) direct the (X)?", "which (X) directs the (X)?", "which (X) was directed by (X)?", "which (X) were directed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "279",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are directed by (X)?", "How often did (X) direct?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "280",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote (X)?", "Give me all persons that wrote the (X)", "Give me all persons write (X)?", "List all persons write (X)?", "Who was the person that wrote (X)?", "Who writes (X)?", "Who writes the (X)?", "Who writes the book (X)?", "Who writes the books (X)?", "Who wrote (X)?", "Who wrote the (X)?", "Who wrote the book (X)?", "Who wrote the books (X)?", "which (X) did (X) write?", "which (X) does (X) write?", "which (X) write (X)?", "which (X) writes (X)?", "which (X) wrote (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "281",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books that wrote (X)?", "Give me all books wrote by (X)?", "List all books wrote by (X)?", "What (X) was wrote by (X)?", "What (X) were wrote by (X)?", "What kind of book did (X) write?", "show me all book that (X) wrote", "show me the book that (X) wrote", "which (X) did (X) write?", "which (X) was wrote by (X)?", "which (X) were wrote by (X)?", "which (X) write the (X)?", "which (X) writes the (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "282",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are wrote by (X)?", "How often did (X) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "283",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce (X)?", "Give me all persons that produced (X)?", "Give me all persons that produced the (X)", "List all persons produce (X)?", "Who produced (X)?", "Who produced the (X)?", "Who produced the television show (X)?", "Who produced the television shows (X)?", "Who produces (X)?", "Who produces the (X)?", "Who produces the television show (X)?", "Who produces the television shows (X)?", "Who was the person that produced (X)?", "which (X) did (X) produce?", "which (X) does (X) produce?", "which (X) produce (X)?", "which (X) produced (X)?", "which (X) produces (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "284",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows produced by (X)?", "Give me all television shows that produced (X)?", "List all television shows produced by (X)?", "What (X) was produced by (X)?", "What (X) were produced by (X)?", "What kind of television show did (X) produce?", "show me all television show that (X) produced", "show me the television show that (X) produced", "which (X) did (X) produce?", "which (X) produce the (X)?", "which (X) produces the (X)?", "which (X) was produced by (X)?", "which (X) were produced by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are produced by (X)?", "How often did (X) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "286",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors starring in (X)?", "Give me all actors that starred in (X)?", "Give me all actors that starred in the (X)", "List all actors starring in (X)?", "Who starred in (X)?", "Who starred in the (X)?", "Who starred in the film (X)?", "Who starred in the films (X)?", "Who starring in (X)?", "Who starring in the (X)?", "Who starring in the film (X)?", "Who starring in the films (X)?", "Who was the actor that starred in (X)?", "which (X) did (X) starring in?", "which (X) does (X) starring in?", "which (X) starred in (X)?", "which (X) starring in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "287",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films starred_in by (X)?", "Give me all films that starred in (X)?", "List all films starred_in by (X)?", "What (X) was starred_in by (X)?", "What (X) were starred_in by (X)?", "What kind of film did (X) starring in?", "show me all film that (X) starred in", "show me the film that (X) starred in", "which (X) did (X) starring in?", "which (X) starring in the (X)?", "which (X) was starred_in by (X)?", "which (X) were starred_in by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "288",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are starred_in by (X)?", "How often did (X) starring in?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums precede (X)?", "Give me all albums that preceded (X)?", "Give me all albums that preceded the (X)", "List all albums precede (X)?", "What (X) preceded (X)?", "What (X) preceded the (X)?", "What (X) preceded the album (X)?", "What (X) preceded the albums (X)?", "What (X) precedes (X)?", "What (X) precedes the (X)?", "What (X) precedes the album (X)?", "What (X) precedes the albums (X)?", "What (X) was the album that preceded (X)?", "which (X) did (X) precede?", "which (X) does (X) precede?", "which (X) precede (X)?", "which (X) preceded (X)?", "which (X) precedes (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/prevTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums preceded by (X)?", "Give me all albums that preceded (X)?", "List all albums preceded by (X)?", "What (X) was preceded by (X)?", "What (X) were preceded by (X)?", "What kind of album did (X) precede?", "show me all album that (X) preceded", "show me the album that (X) preceded", "which (X) did (X) precede?", "which (X) precede the (X)?", "which (X) precedes the (X)?", "which (X) was preceded by (X)?", "which (X) were preceded by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "291",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are preceded by (X)?", "How often did (X) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "292",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents edit (X)?", "Give me all agents that edited (X)?", "Give me all agents that edited the (X)", "List all agents edit (X)?", "Who edited (X)?", "Who edited the (X)?", "Who edited the academic journal (X)?", "Who edited the academic journals (X)?", "Who edits (X)?", "Who edits the (X)?", "Who edits the academic journal (X)?", "Who edits the academic journals (X)?", "Who was the agent that edited (X)?", "which (X) did (X) edit?", "which (X) does (X) edit?", "which (X) edit (X)?", "which (X) edited (X)?", "which (X) edits (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all academic journals edited by (X)?", "Give me all academic journals that edited (X)?", "List all academic journals edited by (X)?", "What (X) was edited by (X)?", "What (X) were edited by (X)?", "What kind of academic journal did (X) edit?", "show me all academic journal that (X) edited", "show me the academic journal that (X) edited", "which (X) did (X) edit?", "which (X) edit the (X)?", "which (X) edits the (X)?", "which (X) was edited by (X)?", "which (X) were edited by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are edited by (X)?", "How often did (X) edit?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "295",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all museums exhibit (X)?", "Give me all museums that exhibited (X)?", "Give me all museums that exhibited the (X)", "List all museums exhibit (X)?", "What (X) exhibited (X)?", "What (X) exhibited the (X)?", "What (X) exhibited the artwork (X)?", "What (X) exhibited the artworks (X)?", "What (X) exhibits (X)?", "What (X) exhibits the (X)?", "What (X) exhibits the artwork (X)?", "What (X) exhibits the artworks (X)?", "What (X) was the museum that exhibited (X)?", "which (X) did (X) exhibit?", "which (X) does (X) exhibit?", "which (X) exhibit (X)?", "which (X) exhibited (X)?", "which (X) exhibits (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/museum> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "296",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all artworks exhibited by (X)?", "Give me all artworks that exhibited (X)?", "List all artworks exhibited by (X)?", "What (X) was exhibited by (X)?", "What (X) were exhibited by (X)?", "What kind of artwork did (X) exhibit?", "show me all artwork that (X) exhibited", "show me the artwork that (X) exhibited", "which (X) did (X) exhibit?", "which (X) exhibit the (X)?", "which (X) exhibits the (X)?", "which (X) was exhibited by (X)?", "which (X) were exhibited by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "297",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are exhibited by (X)?", "How often did (X) exhibit?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents develop (X)?", "Give me all agents that developed (X)?", "Give me all agents that developed the (X)", "List all agents develop (X)?", "Who developed (X)?", "Who developed the (X)?", "Who developed the video game (X)?", "Who developed the video games (X)?", "Who develops (X)?", "Who develops the (X)?", "Who develops the video game (X)?", "Who develops the video games (X)?", "Who was the agent that developed (X)?", "which (X) develop (X)?", "which (X) developed (X)?", "which (X) develops (X)?", "which (X) did (X) develop?", "which (X) does (X) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games developed by (X)?", "Give me all video games that developed (X)?", "List all video games developed by (X)?", "What (X) was developed by (X)?", "What (X) were developed by (X)?", "What kind of video game did (X) develop?", "show me all video game that (X) developed", "show me the video game that (X) developed", "which (X) develop the (X)?", "which (X) develops the (X)?", "which (X) did (X) develop?", "which (X) was developed by (X)?", "which (X) were developed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "300",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are developed by (X)?", "How often did (X) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "301",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed (X)?", "Who follows (X)?", "Who was the politician that followed (X)?", "Whom is (X) follow?", "Whom was (X) follow?", "which (X) followed (X)?", "which (X) follows (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/before> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "302",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was (X) followed by?", "Who was followed by (X)?", "Who were followed by (X)?", "Whom did (X) follow?", "which (X) was followed by (X)?", "which (X) were followed by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are followed by (X)?", "How often did (X) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all populated places speak (X)?", "Give me all populated places that spoke (X)?", "Give me all populated places that spoke the (X)", "List all populated places speak (X)?", "What (X) speaks (X)?", "What (X) speaks the (X)?", "What (X) speaks the language (X)?", "What (X) speaks the languages (X)?", "What (X) spoke (X)?", "What (X) spoke the (X)?", "What (X) spoke the language (X)?", "What (X) spoke the languages (X)?", "What (X) was the populated place that spoke (X)?", "which (X) did (X) speak?", "which (X) does (X) speak?", "which (X) speak (X)?", "which (X) speaks (X)?", "which (X) spoke (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "305",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken by (X)?", "Give me all languages that spoke (X)?", "List all languages spoken by (X)?", "What (X) was spoken by (X)?", "What (X) were spoken by (X)?", "What kind of language did (X) speak?", "show me all language that (X) spoke", "show me the language that (X) spoke", "which (X) did (X) speak?", "which (X) speak the (X)?", "which (X) speaks the (X)?", "which (X) was spoken by (X)?", "which (X) were spoken by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "306",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are spoken by (X)?", "How often did (X) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "307",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all populated places speak (X)?", "Give me all populated places that spoke (X)?", "Give me all populated places that spoke the (X)", "List all populated places speak (X)?", "What (X) speaks (X)?", "What (X) speaks the (X)?", "What (X) speaks the language (X)?", "What (X) speaks the languages (X)?", "What (X) spoke (X)?", "What (X) spoke the (X)?", "What (X) spoke the language (X)?", "What (X) spoke the languages (X)?", "What (X) was the populated place that spoke (X)?", "which (X) did (X) speak?", "which (X) does (X) speak?", "which (X) speak (X)?", "which (X) speaks (X)?", "which (X) spoke (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken by (X)?", "Give me all languages that spoke (X)?", "List all languages spoken by (X)?", "What (X) was spoken by (X)?", "What (X) were spoken by (X)?", "What kind of language did (X) speak?", "show me all language that (X) spoke", "show me the language that (X) spoke", "which (X) did (X) speak?", "which (X) speak the (X)?", "which (X) speaks the (X)?", "which (X) was spoken by (X)?", "which (X) were spoken by (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many (X) are spoken by (X)?", "How often did (X) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "310",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "returnVariable" : null,
    "combination" : false
  } ]
}