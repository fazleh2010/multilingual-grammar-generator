{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Politician_NP) death place.", "List all the places with death place of ($x | Politician_NP).", "What is ($x | Politician_NP) 's death place?", "What is the death place of ($x | Politician_NP)?", "What is the death place of the ($x | Politician_NP)?", "What was ($x | Politician_NP) 's death place?", "What was the death place of ($x | Politician_NP)?", "What was the death place of the ($x | Politician_NP)?", "which place is the death place of ($x | Politician_NP)?", "which place is the death place of the ($x | Politician_NP)?", "which place was the death place of ($x | Politician_NP)?", "which place was the death place of the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death place of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MeanOfTransportation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all delivery Dates of ($x | MeanOfTransportation_NP).", "Give me the ($x | MeanOfTransportation_NP) delivery Date.", "Give me the ($x | MeanOfTransportation_NP) delivery Dates.", "List all delivery Dates of ($x | MeanOfTransportation_NP).", "List all the delivery Dates of ($x | MeanOfTransportation_NP).", "show me all delivery Dates of ($x | MeanOfTransportation_NP).", "What are the delivery Dates of ($x | MeanOfTransportation_NP)?", "What are the delivery Dates of the ($x | MeanOfTransportation_NP)?", "What is ($x | MeanOfTransportation_NP) 's delivery Date?", "What is the delivery Date of ($x | MeanOfTransportation_NP)?", "What is the delivery Date of the ($x | MeanOfTransportation_NP)?", "What was ($x | MeanOfTransportation_NP) 's delivery Date?", "What was the delivery Date of ($x | MeanOfTransportation_NP)?", "What was the delivery Date of the ($x | MeanOfTransportation_NP)?", "What were the delivery Dates of ($x | MeanOfTransportation_NP)?", "What were the delivery Dates of the ($x | MeanOfTransportation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MeanOfTransportation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the delivery Date of ($x | MeanOfTransportation_NP)?", "the delivery Dates of ($x | MeanOfTransportation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all number Of Seasons of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) number Of Season.", "Give me the ($x | TelevisionShow_NP) number Of Seasons.", "List all number Of Seasons of ($x | TelevisionShow_NP).", "List all the number Of Seasons of ($x | TelevisionShow_NP).", "show me all number Of Seasons of ($x | TelevisionShow_NP).", "What are the number Of Seasons of ($x | TelevisionShow_NP)?", "What are the number Of Seasons of the ($x | TelevisionShow_NP)?", "What is ($x | TelevisionShow_NP) 's number Of Season?", "What is the number Of Season of ($x | TelevisionShow_NP)?", "What is the number Of Season of the ($x | TelevisionShow_NP)?", "What was ($x | TelevisionShow_NP) 's number Of Season?", "What was the number Of Season of ($x | TelevisionShow_NP)?", "What was the number Of Season of the ($x | TelevisionShow_NP)?", "What were the number Of Seasons of ($x | TelevisionShow_NP)?", "What were the number Of Seasons of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Season of ($x | TelevisionShow_NP)?", "the number Of Seasons of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Place_NP) location.", "List all the places with location of ($x | Place_NP).", "What is ($x | Place_NP) 's location?", "What is the location of ($x | Place_NP)?", "What is the location of the ($x | Place_NP)?", "What was ($x | Place_NP) 's location?", "What was the location of ($x | Place_NP)?", "What was the location of the ($x | Place_NP)?", "which place is the location of ($x | Place_NP)?", "which place is the location of the ($x | Place_NP)?", "which place was the location of ($x | Place_NP)?", "which place was the location of the ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all editors of ($x | Work_NP).", "Give me the ($x | Work_NP) editor.", "Give me the ($x | Work_NP) editors.", "List all editors of ($x | Work_NP).", "List all the editors of ($x | Work_NP).", "List all the persons with editor of ($x | Work_NP).", "show me all editors of ($x | Work_NP).", "which person is the editor of ($x | Work_NP)?", "which person is the editor of the ($x | Work_NP)?", "which person was the editor of ($x | Work_NP)?", "which person was the editor of the ($x | Work_NP)?", "which persons are the editors of ($x | Work_NP)?", "which persons are the editors of the ($x | Work_NP)?", "which persons were the editors of ($x | Work_NP)?", "which persons were the editors of the ($x | Work_NP)?", "Who are the editors of ($x | Work_NP)?", "Who are the editors of the ($x | Work_NP)?", "Who is ($x | Work_NP) 's editor?", "Who is the editor of ($x | Work_NP)?", "Who is the editor of the ($x | Work_NP)?", "Who was ($x | Work_NP) 's editor?", "Who was the editor of ($x | Work_NP)?", "Who was the editor of the ($x | Work_NP)?", "Who were the editors of ($x | Work_NP)?", "Who were the editors of the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of ($x | Work_NP)?", "the editors of ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all loyalties  ($x | Loyalty_NP).", "Give me the ($x | Loyalty_NP) loyalties.", "Give me the ($x | Loyalty_NP) loyalty.", "List all loyalties  ($x | Loyalty_NP).", "List all the colors with loyalty  ($x | Loyalty_NP).", "List all the loyalties  ($x | Loyalty_NP).", "show me all loyalties  ($x | Loyalty_NP).", "What are the loyalties  ($x | Loyalty_NP)?", "What are the loyalties  the ($x | Loyalty_NP)?", "What is ($x | Loyalty_NP) 's loyalty?", "What is the loyalty  ($x | Loyalty_NP)?", "What is the loyalty  the ($x | Loyalty_NP)?", "What was ($x | Loyalty_NP) 's loyalty?", "What was the loyalty  ($x | Loyalty_NP)?", "What was the loyalty  the ($x | Loyalty_NP)?", "What were the loyalties  ($x | Loyalty_NP)?", "What were the loyalties  the ($x | Loyalty_NP)?", "which color is the loyalty  ($x | Loyalty_NP)?", "which color is the loyalty  the ($x | Loyalty_NP)?", "which color was the loyalty  ($x | Loyalty_NP)?", "which color was the loyalty  the ($x | Loyalty_NP)?", "which colors are the loyalties  ($x | Loyalty_NP)?", "which colors are the loyalties  the ($x | Loyalty_NP)?", "which colors were the loyalties  ($x | Loyalty_NP)?", "which colors were the loyalties  the ($x | Loyalty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the loyalties  ($x | Loyalty_NP)?", "the loyalty  ($x | Loyalty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ComicsCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | ComicsCharacter_NP) alter ego.", "List all the persons with alter ego of ($x | ComicsCharacter_NP).", "which person is the alter ego of ($x | ComicsCharacter_NP)?", "which person is the alter ego of the ($x | ComicsCharacter_NP)?", "which person was the alter ego of ($x | ComicsCharacter_NP)?", "which person was the alter ego of the ($x | ComicsCharacter_NP)?", "Who is ($x | ComicsCharacter_NP) 's alter ego?", "Who is the alter ego of ($x | ComicsCharacter_NP)?", "Who is the alter ego of the ($x | ComicsCharacter_NP)?", "Who was ($x | ComicsCharacter_NP) 's alter ego?", "Who was the alter ego of ($x | ComicsCharacter_NP)?", "Who was the alter ego of the ($x | ComicsCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ComicsCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alter ego of ($x | ComicsCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Ascent Persons of ($x | Mountain_NP).", "Give me the ($x | Mountain_NP) first Ascent Person.", "Give me the ($x | Mountain_NP) first Ascent Persons.", "List all first Ascent Persons of ($x | Mountain_NP).", "List all the first Ascent Persons of ($x | Mountain_NP).", "List all the places with first Ascent Person of ($x | Mountain_NP).", "show me all first Ascent Persons of ($x | Mountain_NP).", "What are the first Ascent Persons of ($x | Mountain_NP)?", "What are the first Ascent Persons of the ($x | Mountain_NP)?", "What is ($x | Mountain_NP) 's first Ascent Person?", "What is the first Ascent Person of ($x | Mountain_NP)?", "What is the first Ascent Person of the ($x | Mountain_NP)?", "What was ($x | Mountain_NP) 's first Ascent Person?", "What was the first Ascent Person of ($x | Mountain_NP)?", "What was the first Ascent Person of the ($x | Mountain_NP)?", "What were the first Ascent Persons of ($x | Mountain_NP)?", "What were the first Ascent Persons of the ($x | Mountain_NP)?", "which place is the first Ascent Person of ($x | Mountain_NP)?", "which place is the first Ascent Person of the ($x | Mountain_NP)?", "which place was the first Ascent Person of ($x | Mountain_NP)?", "which place was the first Ascent Person of the ($x | Mountain_NP)?", "which places are the first Ascent Persons of ($x | Mountain_NP)?", "which places are the first Ascent Persons of the ($x | Mountain_NP)?", "which places were the first Ascent Persons of ($x | Mountain_NP)?", "which places were the first Ascent Persons of the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Ascent Person of ($x | Mountain_NP)?", "the first Ascent Persons of ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all isbns of ($x | Book_NP).", "Give me the ($x | Book_NP) isbn.", "Give me the ($x | Book_NP) isbns.", "List all isbns of ($x | Book_NP).", "List all the isbns of ($x | Book_NP).", "show me all isbns of ($x | Book_NP).", "What are the isbns of ($x | Book_NP)?", "What are the isbns of the ($x | Book_NP)?", "What is ($x | Book_NP) 's isbn?", "What is the isbn of ($x | Book_NP)?", "What is the isbn of the ($x | Book_NP)?", "What was ($x | Book_NP) 's isbn?", "What was the isbn of ($x | Book_NP)?", "What was the isbn of the ($x | Book_NP)?", "What were the isbns of ($x | Book_NP)?", "What were the isbns of the ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isbn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the isbn of ($x | Book_NP)?", "the isbns of ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isbn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of ($x | City_NP).", "Give me the ($x | City_NP) mayor.", "Give me the ($x | City_NP) mayors.", "List all mayors of ($x | City_NP).", "List all the mayors of ($x | City_NP).", "List all the persons with mayor of ($x | City_NP).", "show me all mayors of ($x | City_NP).", "which person is the mayor of ($x | City_NP)?", "which person is the mayor of the ($x | City_NP)?", "which person was the mayor of ($x | City_NP)?", "which person was the mayor of the ($x | City_NP)?", "which persons are the mayors of ($x | City_NP)?", "which persons are the mayors of the ($x | City_NP)?", "which persons were the mayors of ($x | City_NP)?", "which persons were the mayors of the ($x | City_NP)?", "Who are the mayors of ($x | City_NP)?", "Who are the mayors of the ($x | City_NP)?", "Who is ($x | City_NP) 's mayor?", "Who is the mayor of ($x | City_NP)?", "Who is the mayor of the ($x | City_NP)?", "Who was ($x | City_NP) 's mayor?", "Who was the mayor of ($x | City_NP)?", "Who was the mayor of the ($x | City_NP)?", "Who were the mayors of ($x | City_NP)?", "Who were the mayors of the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ($x | City_NP)?", "the mayors of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of ($x | Country_NP).", "Give me the ($x | Country_NP) official language.", "Give me the ($x | Country_NP) official languages.", "List all official languages of ($x | Country_NP).", "List all the languages with official language of ($x | Country_NP).", "List all the official languages of ($x | Country_NP).", "show me all official languages of ($x | Country_NP).", "What are the official languages of ($x | Country_NP)?", "What are the official languages of the ($x | Country_NP)?", "What is ($x | Country_NP) 's official language?", "What is the official language of ($x | Country_NP)?", "What is the official language of the ($x | Country_NP)?", "What was ($x | Country_NP) 's official language?", "What was the official language of ($x | Country_NP)?", "What was the official language of the ($x | Country_NP)?", "What were the official languages of ($x | Country_NP)?", "What were the official languages of the ($x | Country_NP)?", "which language is the official language of ($x | Country_NP)?", "which language is the official language of the ($x | Country_NP)?", "which language was the official language of ($x | Country_NP)?", "which language was the official language of the ($x | Country_NP)?", "which languages are the official languages of ($x | Country_NP)?", "which languages are the official languages of the ($x | Country_NP)?", "which languages were the official languages of ($x | Country_NP)?", "which languages were the official languages of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ($x | Country_NP)?", "the official languages of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all leaders of ($x | Legislature_NP).", "Give me the ($x | Legislature_NP) leader.", "Give me the ($x | Legislature_NP) leaders.", "List all leaders of ($x | Legislature_NP).", "List all the leaders of ($x | Legislature_NP).", "List all the organizations with leader of ($x | Legislature_NP).", "show me all leaders of ($x | Legislature_NP).", "which organization is the leader of ($x | Legislature_NP)?", "which organization is the leader of the ($x | Legislature_NP)?", "which organization was the leader of ($x | Legislature_NP)?", "which organization was the leader of the ($x | Legislature_NP)?", "which organizations are the leaders of ($x | Legislature_NP)?", "which organizations are the leaders of the ($x | Legislature_NP)?", "which organizations were the leaders of ($x | Legislature_NP)?", "which organizations were the leaders of the ($x | Legislature_NP)?", "Who are the leaders of ($x | Legislature_NP)?", "Who are the leaders of the ($x | Legislature_NP)?", "Who is ($x | Legislature_NP) 's leader?", "Who is the leader of ($x | Legislature_NP)?", "Who is the leader of the ($x | Legislature_NP)?", "Who was ($x | Legislature_NP) 's leader?", "Who was the leader of ($x | Legislature_NP)?", "Who was the leader of the ($x | Legislature_NP)?", "Who were the leaders of ($x | Legislature_NP)?", "Who were the leaders of the ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the leader of ($x | Legislature_NP)?", "the leaders of ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "ProgrammingLanguage" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all programming languages of ($x | Work_NP).", "Give me the ($x | Work_NP) programming language.", "Give me the ($x | Work_NP) programming languages.", "List all programming languages of ($x | Work_NP).", "List all the programming languages of ($x | Work_NP).", "List all the programming languages with programming language of ($x | Work_NP).", "show me all programming languages of ($x | Work_NP).", "What are the programming languages of ($x | Work_NP)?", "What are the programming languages of the ($x | Work_NP)?", "What is ($x | Work_NP) 's programming language?", "What is the programming language of ($x | Work_NP)?", "What is the programming language of the ($x | Work_NP)?", "What was ($x | Work_NP) 's programming language?", "What was the programming language of ($x | Work_NP)?", "What was the programming language of the ($x | Work_NP)?", "What were the programming languages of ($x | Work_NP)?", "What were the programming languages of the ($x | Work_NP)?", "which programming language is the programming language of ($x | Work_NP)?", "which programming language is the programming language of the ($x | Work_NP)?", "which programming language was the programming language of ($x | Work_NP)?", "which programming language was the programming language of the ($x | Work_NP)?", "which programming languages are the programming languages of ($x | Work_NP)?", "which programming languages are the programming languages of the ($x | Work_NP)?", "which programming languages were the programming languages of ($x | Work_NP)?", "which programming languages were the programming languages of the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "ProgrammingLanguage" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the programming language of ($x | Work_NP)?", "the programming languages of ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Person_NP) resting place.", "What is ($x | Person_NP) 's resting place?", "What is the resting place of ($x | Person_NP)?", "What is the resting place of the ($x | Person_NP)?", "What was ($x | Person_NP) 's resting place?", "What was the resting place of ($x | Person_NP)?", "What was the resting place of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of ($x | Person_NP).", "Give me the ($x | Person_NP) employer.", "Give me the ($x | Person_NP) employers.", "List all employers of ($x | Person_NP).", "List all the employers of ($x | Person_NP).", "List all the places with employer of ($x | Person_NP).", "show me all employers of ($x | Person_NP).", "What are the employers of ($x | Person_NP)?", "What are the employers of the ($x | Person_NP)?", "What is ($x | Person_NP) 's employer?", "What is the employer of ($x | Person_NP)?", "What is the employer of the ($x | Person_NP)?", "What was ($x | Person_NP) 's employer?", "What was the employer of ($x | Person_NP)?", "What was the employer of the ($x | Person_NP)?", "What were the employers of ($x | Person_NP)?", "What were the employers of the ($x | Person_NP)?", "which place is the employer of ($x | Person_NP)?", "which place is the employer of the ($x | Person_NP)?", "which place was the employer of ($x | Person_NP)?", "which place was the employer of the ($x | Person_NP)?", "which places are the employers of ($x | Person_NP)?", "which places are the employers of the ($x | Person_NP)?", "which places were the employers of ($x | Person_NP)?", "which places were the employers of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/employer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employer of ($x | Person_NP)?", "the employers of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/employer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all doctoral supervisors of ($x | Scientist_NP).", "Give me the ($x | Scientist_NP) doctoral supervisor.", "Give me the ($x | Scientist_NP) doctoral supervisors.", "List all doctoral supervisors of ($x | Scientist_NP).", "List all the doctoral supervisors of ($x | Scientist_NP).", "List all the persons with doctoral supervisor of ($x | Scientist_NP).", "show me all doctoral supervisors of ($x | Scientist_NP).", "which person is the doctoral supervisor of ($x | Scientist_NP)?", "which person is the doctoral supervisor of the ($x | Scientist_NP)?", "which person was the doctoral supervisor of ($x | Scientist_NP)?", "which person was the doctoral supervisor of the ($x | Scientist_NP)?", "which persons are the doctoral supervisors of ($x | Scientist_NP)?", "which persons are the doctoral supervisors of the ($x | Scientist_NP)?", "which persons were the doctoral supervisors of ($x | Scientist_NP)?", "which persons were the doctoral supervisors of the ($x | Scientist_NP)?", "Who are the doctoral supervisors of ($x | Scientist_NP)?", "Who are the doctoral supervisors of the ($x | Scientist_NP)?", "Who is ($x | Scientist_NP) 's doctoral supervisor?", "Who is the doctoral supervisor of ($x | Scientist_NP)?", "Who is the doctoral supervisor of the ($x | Scientist_NP)?", "Who was ($x | Scientist_NP) 's doctoral supervisor?", "Who was the doctoral supervisor of ($x | Scientist_NP)?", "Who was the doctoral supervisor of the ($x | Scientist_NP)?", "Who were the doctoral supervisors of ($x | Scientist_NP)?", "Who were the doctoral supervisors of the ($x | Scientist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of ($x | Scientist_NP)?", "the doctoral supervisors of ($x | Scientist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all producers of ($x | Film_NP).", "Give me the ($x | Film_NP) producer.", "Give me the ($x | Film_NP) producers.", "List all producers of ($x | Film_NP).", "List all the company with producer of ($x | Film_NP).", "List all the producers of ($x | Film_NP).", "show me all producers of ($x | Film_NP).", "which company are the producers of ($x | Film_NP)?", "which company are the producers of the ($x | Film_NP)?", "which company is the producer of ($x | Film_NP)?", "which company is the producer of the ($x | Film_NP)?", "which company was the producer of ($x | Film_NP)?", "which company was the producer of the ($x | Film_NP)?", "which company were the producers of ($x | Film_NP)?", "which company were the producers of the ($x | Film_NP)?", "Who are the producers of ($x | Film_NP)?", "Who are the producers of the ($x | Film_NP)?", "Who is ($x | Film_NP) 's producer?", "Who is the producer of ($x | Film_NP)?", "Who is the producer of the ($x | Film_NP)?", "Who was ($x | Film_NP) 's producer?", "Who was the producer of ($x | Film_NP)?", "Who was the producer of the ($x | Film_NP)?", "Who were the producers of ($x | Film_NP)?", "Who were the producers of the ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the producer of ($x | Film_NP)?", "the producers of ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all hosts of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) host.", "Give me the ($x | TelevisionShow_NP) hosts.", "List all hosts of ($x | TelevisionShow_NP).", "List all the hosts of ($x | TelevisionShow_NP).", "List all the persons with host of ($x | TelevisionShow_NP).", "show me all hosts of ($x | TelevisionShow_NP).", "which person is the host of ($x | TelevisionShow_NP)?", "which person is the host of the ($x | TelevisionShow_NP)?", "which person was the host of ($x | TelevisionShow_NP)?", "which person was the host of the ($x | TelevisionShow_NP)?", "which persons are the hosts of ($x | TelevisionShow_NP)?", "which persons are the hosts of the ($x | TelevisionShow_NP)?", "which persons were the hosts of ($x | TelevisionShow_NP)?", "which persons were the hosts of the ($x | TelevisionShow_NP)?", "Who are the hosts of ($x | TelevisionShow_NP)?", "Who are the hosts of the ($x | TelevisionShow_NP)?", "Who is ($x | TelevisionShow_NP) 's host?", "Who is the host of ($x | TelevisionShow_NP)?", "Who is the host of the ($x | TelevisionShow_NP)?", "Who was ($x | TelevisionShow_NP) 's host?", "Who was the host of ($x | TelevisionShow_NP)?", "Who was the host of the ($x | TelevisionShow_NP)?", "Who were the hosts of ($x | TelevisionShow_NP)?", "Who were the hosts of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of ($x | TelevisionShow_NP)?", "the hosts of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all owners of ($x | Company_NP).", "Give me the ($x | Company_NP) owner.", "Give me the ($x | Company_NP) owners.", "List all owners of ($x | Company_NP).", "List all the owners of ($x | Company_NP).", "List all the persons with owner of ($x | Company_NP).", "show me all owners of ($x | Company_NP).", "which person is the owner of ($x | Company_NP)?", "which person is the owner of the ($x | Company_NP)?", "which person was the owner of ($x | Company_NP)?", "which person was the owner of the ($x | Company_NP)?", "which persons are the owners of ($x | Company_NP)?", "which persons are the owners of the ($x | Company_NP)?", "which persons were the owners of ($x | Company_NP)?", "which persons were the owners of the ($x | Company_NP)?", "Who are the owners of ($x | Company_NP)?", "Who are the owners of the ($x | Company_NP)?", "Who is ($x | Company_NP) 's owner?", "Who is the owner of ($x | Company_NP)?", "Who is the owner of the ($x | Company_NP)?", "Who was ($x | Company_NP) 's owner?", "Who was the owner of ($x | Company_NP)?", "Who was the owner of the ($x | Company_NP)?", "Who were the owners of ($x | Company_NP)?", "Who were the owners of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the owner of ($x | Company_NP)?", "the owners of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of ($x | Place_NP).", "Give me the ($x | Place_NP) residence.", "Give me the ($x | Place_NP) residences.", "List all residences of ($x | Place_NP).", "List all the persons with residence of ($x | Place_NP).", "List all the residences of ($x | Place_NP).", "show me all residences of ($x | Place_NP).", "which person is the residence of ($x | Place_NP)?", "which person is the residence of the ($x | Place_NP)?", "which person was the residence of ($x | Place_NP)?", "which person was the residence of the ($x | Place_NP)?", "which persons are the residences of ($x | Place_NP)?", "which persons are the residences of the ($x | Place_NP)?", "which persons were the residences of ($x | Place_NP)?", "which persons were the residences of the ($x | Place_NP)?", "Who are the residences of ($x | Place_NP)?", "Who are the residences of the ($x | Place_NP)?", "Who is ($x | Place_NP) 's residence?", "Who is the residence of ($x | Place_NP)?", "Who is the residence of the ($x | Place_NP)?", "Who was ($x | Place_NP) 's residence?", "Who was the residence of ($x | Place_NP)?", "Who was the residence of the ($x | Place_NP)?", "Who were the residences of ($x | Place_NP)?", "Who were the residences of the ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ($x | Place_NP)?", "the residences of ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all closing Dates of ($x | Company_NP).", "Give me the ($x | Company_NP) closing Date.", "Give me the ($x | Company_NP) closing Dates.", "List all closing Dates of ($x | Company_NP).", "List all the closing Dates of ($x | Company_NP).", "show me all closing Dates of ($x | Company_NP).", "What are the closing Dates of ($x | Company_NP)?", "What are the closing Dates of the ($x | Company_NP)?", "What is ($x | Company_NP) 's closing Date?", "What is the closing Date of ($x | Company_NP)?", "What is the closing Date of the ($x | Company_NP)?", "What was ($x | Company_NP) 's closing Date?", "What was the closing Date of ($x | Company_NP)?", "What was the closing Date of the ($x | Company_NP)?", "What were the closing Dates of ($x | Company_NP)?", "What were the closing Dates of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the closing Date of ($x | Company_NP)?", "the closing Dates of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of ($x | Person_NP).", "Give me the ($x | Person_NP) residence.", "Give me the ($x | Person_NP) residences.", "List all residences of ($x | Person_NP).", "List all the cities with residence of ($x | Person_NP).", "List all the residences of ($x | Person_NP).", "show me all residences of ($x | Person_NP).", "What are the residences of ($x | Person_NP)?", "What are the residences of the ($x | Person_NP)?", "What is ($x | Person_NP) 's residence?", "What is the residence of ($x | Person_NP)?", "What is the residence of the ($x | Person_NP)?", "What was ($x | Person_NP) 's residence?", "What was the residence of ($x | Person_NP)?", "What was the residence of the ($x | Person_NP)?", "What were the residences of ($x | Person_NP)?", "What were the residences of the ($x | Person_NP)?", "which cities are the residences of ($x | Person_NP)?", "which cities are the residences of the ($x | Person_NP)?", "which cities were the residences of ($x | Person_NP)?", "which cities were the residences of the ($x | Person_NP)?", "which city is the residence of ($x | Person_NP)?", "which city is the residence of the ($x | Person_NP)?", "which city was the residence of ($x | Person_NP)?", "which city was the residence of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ($x | Person_NP)?", "the residences of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Building_NP) headquarter.", "List all the cities with headquarter of ($x | Building_NP).", "What is ($x | Building_NP) 's headquarter?", "What is the headquarter of ($x | Building_NP)?", "What is the headquarter of the ($x | Building_NP)?", "What was ($x | Building_NP) 's headquarter?", "What was the headquarter of ($x | Building_NP)?", "What was the headquarter of the ($x | Building_NP)?", "which city is the headquarter of ($x | Building_NP)?", "which city is the headquarter of the ($x | Building_NP)?", "which city was the headquarter of ($x | Building_NP)?", "which city was the headquarter of the ($x | Building_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Building" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ($x | Building_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Organisation_NP) headquarter.", "List all the populated places with headquarter of ($x | Organisation_NP).", "What is ($x | Organisation_NP) 's headquarter?", "What is the headquarter of ($x | Organisation_NP)?", "What is the headquarter of the ($x | Organisation_NP)?", "What was ($x | Organisation_NP) 's headquarter?", "What was the headquarter of ($x | Organisation_NP)?", "What was the headquarter of the ($x | Organisation_NP)?", "which populated place is the headquarter of ($x | Organisation_NP)?", "which populated place is the headquarter of the ($x | Organisation_NP)?", "which populated place was the headquarter of ($x | Organisation_NP)?", "which populated place was the headquarter of the ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | City_NP) area code.", "What is ($x | City_NP) 's area code?", "What is the area code of ($x | City_NP)?", "What is the area code of the ($x | City_NP)?", "What was ($x | City_NP) 's area code?", "What was the area code of ($x | City_NP)?", "What was the area code of the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the area code of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of ($x | Country_NP).", "Give me the ($x | Country_NP) president.", "Give me the ($x | Country_NP) presidents.", "List all presidents of ($x | Country_NP).", "List all the persons with president of ($x | Country_NP).", "List all the presidents of ($x | Country_NP).", "show me all presidents of ($x | Country_NP).", "which person is the president of ($x | Country_NP)?", "which person is the president of the ($x | Country_NP)?", "which person was the president of ($x | Country_NP)?", "which person was the president of the ($x | Country_NP)?", "which persons are the presidents of ($x | Country_NP)?", "which persons are the presidents of the ($x | Country_NP)?", "which persons were the presidents of ($x | Country_NP)?", "which persons were the presidents of the ($x | Country_NP)?", "Who are the presidents of ($x | Country_NP)?", "Who are the presidents of the ($x | Country_NP)?", "Who is ($x | Country_NP) 's president?", "Who is the president of ($x | Country_NP)?", "Who is the president of the ($x | Country_NP)?", "Who was ($x | Country_NP) 's president?", "Who was the president of ($x | Country_NP)?", "Who was the president of the ($x | Country_NP)?", "Who were the presidents of ($x | Country_NP)?", "Who were the presidents of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#president_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ($x | Country_NP)?", "the presidents of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Company_NP) number of locations.", "What is ($x | Company_NP) 's number of locations?", "What is the number of locations of ($x | Company_NP)?", "What is the number of locations of the ($x | Company_NP)?", "What was ($x | Company_NP) 's number of locations?", "What was the number of locations of ($x | Company_NP)?", "What was the number of locations of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of locations of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all music composers of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) music composer.", "Give me the ($x | TelevisionShow_NP) music composers.", "List all music composers of ($x | TelevisionShow_NP).", "List all the music composers of ($x | TelevisionShow_NP).", "List all the persons with music composer of ($x | TelevisionShow_NP).", "show me all music composers of ($x | TelevisionShow_NP).", "which person is the music composer of ($x | TelevisionShow_NP)?", "which person is the music composer of the ($x | TelevisionShow_NP)?", "which person was the music composer of ($x | TelevisionShow_NP)?", "which person was the music composer of the ($x | TelevisionShow_NP)?", "which persons are the music composers of ($x | TelevisionShow_NP)?", "which persons are the music composers of the ($x | TelevisionShow_NP)?", "which persons were the music composers of ($x | TelevisionShow_NP)?", "which persons were the music composers of the ($x | TelevisionShow_NP)?", "Who are the music composers of ($x | TelevisionShow_NP)?", "Who are the music composers of the ($x | TelevisionShow_NP)?", "Who is ($x | TelevisionShow_NP) 's music composer?", "Who is the music composer of ($x | TelevisionShow_NP)?", "Who is the music composer of the ($x | TelevisionShow_NP)?", "Who was ($x | TelevisionShow_NP) 's music composer?", "Who was the music composer of ($x | TelevisionShow_NP)?", "Who was the music composer of the ($x | TelevisionShow_NP)?", "Who were the music composers of ($x | TelevisionShow_NP)?", "Who were the music composers of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ($x | TelevisionShow_NP)?", "the music composers of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Mountain_NP) first to climb.", "List all the persons with first to climb  ($x | Mountain_NP).", "which person is the first to climb  ($x | Mountain_NP)?", "which person is the first to climb  the ($x | Mountain_NP)?", "which person was the first to climb  ($x | Mountain_NP)?", "which person was the first to climb  the ($x | Mountain_NP)?", "Who is ($x | Mountain_NP) 's first to climb?", "Who is the first to climb  ($x | Mountain_NP)?", "Who is the first to climb  the ($x | Mountain_NP)?", "Who was ($x | Mountain_NP) 's first to climb?", "Who was the first to climb  ($x | Mountain_NP)?", "Who was the first to climb  the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first to climb  ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all ingredients of ($x | Food_NP).", "Give me the ($x | Food_NP) ingredient.", "Give me the ($x | Food_NP) ingredients.", "List all ingredients of ($x | Food_NP).", "List all the ingredients of ($x | Food_NP).", "show me all ingredients of ($x | Food_NP).", "What are the ingredients of ($x | Food_NP)?", "What are the ingredients of the ($x | Food_NP)?", "What is ($x | Food_NP) 's ingredient?", "What is the ingredient of ($x | Food_NP)?", "What is the ingredient of the ($x | Food_NP)?", "What was ($x | Food_NP) 's ingredient?", "What was the ingredient of ($x | Food_NP)?", "What was the ingredient of the ($x | Food_NP)?", "What were the ingredients of ($x | Food_NP)?", "What were the ingredients of the ($x | Food_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ($x | Food_NP)?", "the ingredients of ($x | Food_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all ingredients of ($x | Food_NP).", "Give me the ($x | Food_NP) ingredient.", "Give me the ($x | Food_NP) ingredients.", "List all ingredients of ($x | Food_NP).", "List all the ingredients of ($x | Food_NP).", "show me all ingredients of ($x | Food_NP).", "What are the ingredients of ($x | Food_NP)?", "What are the ingredients of the ($x | Food_NP)?", "What is ($x | Food_NP) 's ingredient?", "What is the ingredient of ($x | Food_NP)?", "What is the ingredient of the ($x | Food_NP)?", "What was ($x | Food_NP) 's ingredient?", "What was the ingredient of ($x | Food_NP)?", "What was the ingredient of the ($x | Food_NP)?", "What were the ingredients of ($x | Food_NP)?", "What were the ingredients of the ($x | Food_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ($x | Food_NP)?", "the ingredients of ($x | Food_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all cities of ($x | AdministrativeRegion_NP).", "Give me the ($x | AdministrativeRegion_NP) cities.", "Give me the ($x | AdministrativeRegion_NP) city.", "List all cities of ($x | AdministrativeRegion_NP).", "List all the cities of ($x | AdministrativeRegion_NP).", "List all the cities with city of ($x | AdministrativeRegion_NP).", "show me all cities of ($x | AdministrativeRegion_NP).", "What are the cities of ($x | AdministrativeRegion_NP)?", "What are the cities of the ($x | AdministrativeRegion_NP)?", "What is ($x | AdministrativeRegion_NP) 's city?", "What is the city of ($x | AdministrativeRegion_NP)?", "What is the city of the ($x | AdministrativeRegion_NP)?", "What was ($x | AdministrativeRegion_NP) 's city?", "What was the city of ($x | AdministrativeRegion_NP)?", "What was the city of the ($x | AdministrativeRegion_NP)?", "What were the cities of ($x | AdministrativeRegion_NP)?", "What were the cities of the ($x | AdministrativeRegion_NP)?", "which cities are the cities of ($x | AdministrativeRegion_NP)?", "which cities are the cities of the ($x | AdministrativeRegion_NP)?", "which cities were the cities of ($x | AdministrativeRegion_NP)?", "which cities were the cities of the ($x | AdministrativeRegion_NP)?", "which city is the city of ($x | AdministrativeRegion_NP)?", "which city is the city of the ($x | AdministrativeRegion_NP)?", "which city was the city of ($x | AdministrativeRegion_NP)?", "which city was the city of the ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities of ($x | AdministrativeRegion_NP)?", "the city of ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of ($x | Place_NP).", "Give me the ($x | Place_NP) flag.", "Give me the ($x | Place_NP) flags.", "List all flags of ($x | Place_NP).", "List all the flags of ($x | Place_NP).", "show me all flags of ($x | Place_NP).", "What are the flags of ($x | Place_NP)?", "What are the flags of the ($x | Place_NP)?", "What is ($x | Place_NP) 's flag?", "What is the flag of ($x | Place_NP)?", "What is the flag of the ($x | Place_NP)?", "What was ($x | Place_NP) 's flag?", "What was the flag of ($x | Place_NP)?", "What was the flag of the ($x | Place_NP)?", "What were the flags of ($x | Place_NP)?", "What were the flags of the ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/flag> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the flag of ($x | Place_NP)?", "the flags of ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/flag> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of ($x | Person_NP).", "Give me the ($x | Person_NP) son.", "Give me the ($x | Person_NP) sons.", "List all sons of ($x | Person_NP).", "List all the persons with son of ($x | Person_NP).", "List all the sons of ($x | Person_NP).", "show me all sons of ($x | Person_NP).", "which person is the son of ($x | Person_NP)?", "which person is the son of the ($x | Person_NP)?", "which person was the son of ($x | Person_NP)?", "which person was the son of the ($x | Person_NP)?", "which persons are the sons of ($x | Person_NP)?", "which persons are the sons of the ($x | Person_NP)?", "which persons were the sons of ($x | Person_NP)?", "which persons were the sons of the ($x | Person_NP)?", "Who are the sons of ($x | Person_NP)?", "Who are the sons of the ($x | Person_NP)?", "Who is ($x | Person_NP) 's son?", "Who is the son of ($x | Person_NP)?", "Who is the son of the ($x | Person_NP)?", "Who was ($x | Person_NP) 's son?", "Who was the son of ($x | Person_NP)?", "Who was the son of the ($x | Person_NP)?", "Who were the sons of ($x | Person_NP)?", "Who were the sons of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ($x | Person_NP)?", "the sons of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of ($x | Person_NP).", "Give me the ($x | Person_NP) son.", "Give me the ($x | Person_NP) sons.", "List all sons of ($x | Person_NP).", "List all the persons with son of ($x | Person_NP).", "List all the sons of ($x | Person_NP).", "show me all sons of ($x | Person_NP).", "which person is the son of ($x | Person_NP)?", "which person is the son of the ($x | Person_NP)?", "which person was the son of ($x | Person_NP)?", "which person was the son of the ($x | Person_NP)?", "which persons are the sons of ($x | Person_NP)?", "which persons are the sons of the ($x | Person_NP)?", "which persons were the sons of ($x | Person_NP)?", "which persons were the sons of the ($x | Person_NP)?", "Who are the sons of ($x | Person_NP)?", "Who are the sons of the ($x | Person_NP)?", "Who is ($x | Person_NP) 's son?", "Who is the son of ($x | Person_NP)?", "Who is the son of the ($x | Person_NP)?", "Who was ($x | Person_NP) 's son?", "Who was the son of ($x | Person_NP)?", "Who was the son of the ($x | Person_NP)?", "Who were the sons of ($x | Person_NP)?", "Who were the sons of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ($x | Person_NP)?", "the sons of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all boardgames by ($x | Work_NP).", "Give me the ($x | Work_NP) boardgame.", "Give me the ($x | Work_NP) boardgames.", "List all boardgames by ($x | Work_NP).", "List all the agents with boardgame by ($x | Work_NP).", "List all the boardgames by ($x | Work_NP).", "show me all boardgames by ($x | Work_NP).", "which agent is the boardgame by ($x | Work_NP)?", "which agent is the boardgame by the ($x | Work_NP)?", "which agent was the boardgame by ($x | Work_NP)?", "which agent was the boardgame by the ($x | Work_NP)?", "which agents are the boardgames by ($x | Work_NP)?", "which agents are the boardgames by the ($x | Work_NP)?", "which agents were the boardgames by ($x | Work_NP)?", "which agents were the boardgames by the ($x | Work_NP)?", "Who are the boardgames by ($x | Work_NP)?", "Who are the boardgames by the ($x | Work_NP)?", "Who is ($x | Work_NP) 's boardgame?", "Who is the boardgame by ($x | Work_NP)?", "Who is the boardgame by the ($x | Work_NP)?", "Who was ($x | Work_NP) 's boardgame?", "Who was the boardgame by ($x | Work_NP)?", "Who was the boardgame by the ($x | Work_NP)?", "Who were the boardgames by ($x | Work_NP)?", "Who were the boardgames by the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the boardgame by ($x | Work_NP)?", "the boardgames by ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all kings of ($x | Legislature_NP).", "Give me the ($x | Legislature_NP) king.", "Give me the ($x | Legislature_NP) kings.", "List all kings of ($x | Legislature_NP).", "List all the kings of ($x | Legislature_NP).", "List all the persons with king of ($x | Legislature_NP).", "show me all kings of ($x | Legislature_NP).", "which person is the king of ($x | Legislature_NP)?", "which person is the king of the ($x | Legislature_NP)?", "which person was the king of ($x | Legislature_NP)?", "which person was the king of the ($x | Legislature_NP)?", "which persons are the kings of ($x | Legislature_NP)?", "which persons are the kings of the ($x | Legislature_NP)?", "which persons were the kings of ($x | Legislature_NP)?", "which persons were the kings of the ($x | Legislature_NP)?", "Who are the kings of ($x | Legislature_NP)?", "Who are the kings of the ($x | Legislature_NP)?", "Who is ($x | Legislature_NP) 's king?", "Who is the king of ($x | Legislature_NP)?", "Who is the king of the ($x | Legislature_NP)?", "Who was ($x | Legislature_NP) 's king?", "Who was the king of ($x | Legislature_NP)?", "Who was the king of the ($x | Legislature_NP)?", "Who were the kings of ($x | Legislature_NP)?", "Who were the kings of the ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ($x | Legislature_NP)?", "the kings of ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Mountain_NP) location.", "List all the countries with location of ($x | Mountain_NP).", "What is ($x | Mountain_NP) 's location?", "What is the location of ($x | Mountain_NP)?", "What is the location of the ($x | Mountain_NP)?", "What was ($x | Mountain_NP) 's location?", "What was the location of ($x | Mountain_NP)?", "What was the location of the ($x | Mountain_NP)?", "which country is the location of ($x | Mountain_NP)?", "which country is the location of the ($x | Mountain_NP)?", "which country was the location of ($x | Mountain_NP)?", "which country was the location of the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all games by ($x | Company_NP).", "Give me the ($x | Company_NP) game.", "Give me the ($x | Company_NP) games.", "List all games by ($x | Company_NP).", "List all the company with game by ($x | Company_NP).", "List all the games by ($x | Company_NP).", "show me all games by ($x | Company_NP).", "What are the games by ($x | Company_NP)?", "What are the games by the ($x | Company_NP)?", "What is ($x | Company_NP) 's game?", "What is the game by ($x | Company_NP)?", "What is the game by the ($x | Company_NP)?", "What was ($x | Company_NP) 's game?", "What was the game by ($x | Company_NP)?", "What was the game by the ($x | Company_NP)?", "What were the games by ($x | Company_NP)?", "What were the games by the ($x | Company_NP)?", "which company are the games by ($x | Company_NP)?", "which company are the games by the ($x | Company_NP)?", "which company is the game by ($x | Company_NP)?", "which company is the game by the ($x | Company_NP)?", "which company was the game by ($x | Company_NP)?", "which company was the game by the ($x | Company_NP)?", "which company were the games by ($x | Company_NP)?", "which company were the games by the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by ($x | Company_NP)?", "the games by ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of ($x | Thing_NP).", "Give me the ($x | Thing_NP) borough.", "List all borough of ($x | Thing_NP).", "List all the borough of ($x | Thing_NP).", "show me all borough of ($x | Thing_NP).", "What are the borough of ($x | Thing_NP)?", "What are the borough of the ($x | Thing_NP)?", "What is ($x | Thing_NP) 's borough?", "What is the borough of ($x | Thing_NP)?", "What is the borough of the ($x | Thing_NP)?", "What was ($x | Thing_NP) 's borough?", "What was the borough of ($x | Thing_NP)?", "What was the borough of the ($x | Thing_NP)?", "What were the borough of ($x | Thing_NP)?", "What were the borough of the ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all musics by ($x | Musical_NP).", "Give me the ($x | Musical_NP) music.", "Give me the ($x | Musical_NP) musics.", "List all musics by ($x | Musical_NP).", "List all the musicals with music by ($x | Musical_NP).", "List all the musics by ($x | Musical_NP).", "show me all musics by ($x | Musical_NP).", "which musical is the music by ($x | Musical_NP)?", "which musical is the music by the ($x | Musical_NP)?", "which musical was the music by ($x | Musical_NP)?", "which musical was the music by the ($x | Musical_NP)?", "which musicals are the musics by ($x | Musical_NP)?", "which musicals are the musics by the ($x | Musical_NP)?", "which musicals were the musics by ($x | Musical_NP)?", "which musicals were the musics by the ($x | Musical_NP)?", "Who are the musics by ($x | Musical_NP)?", "Who are the musics by the ($x | Musical_NP)?", "Who is ($x | Musical_NP) 's music?", "Who is the music by ($x | Musical_NP)?", "Who is the music by the ($x | Musical_NP)?", "Who was ($x | Musical_NP) 's music?", "Who was the music by ($x | Musical_NP)?", "Who was the music by the ($x | Musical_NP)?", "Who were the musics by ($x | Musical_NP)?", "Who were the musics by the ($x | Musical_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by ($x | Musical_NP)?", "the musics by ($x | Musical_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all foundation series of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) foundation series.", "List all foundation series of ($x | TelevisionShow_NP).", "List all the foundation series of ($x | TelevisionShow_NP).", "List all the persons with foundation series of ($x | TelevisionShow_NP).", "show me all foundation series of ($x | TelevisionShow_NP).", "which person is the foundation series of ($x | TelevisionShow_NP)?", "which person is the foundation series of the ($x | TelevisionShow_NP)?", "which person was the foundation series of ($x | TelevisionShow_NP)?", "which person was the foundation series of the ($x | TelevisionShow_NP)?", "which persons are the foundation series of ($x | TelevisionShow_NP)?", "which persons are the foundation series of the ($x | TelevisionShow_NP)?", "which persons were the foundation series of ($x | TelevisionShow_NP)?", "which persons were the foundation series of the ($x | TelevisionShow_NP)?", "Who are the foundation series of ($x | TelevisionShow_NP)?", "Who are the foundation series of the ($x | TelevisionShow_NP)?", "Who is ($x | TelevisionShow_NP) 's foundation series?", "Who is the foundation series of ($x | TelevisionShow_NP)?", "Who is the foundation series of the ($x | TelevisionShow_NP)?", "Who was ($x | TelevisionShow_NP) 's foundation series?", "Who was the foundation series of ($x | TelevisionShow_NP)?", "Who was the foundation series of the ($x | TelevisionShow_NP)?", "Who were the foundation series of ($x | TelevisionShow_NP)?", "Who were the foundation series of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation series of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of ($x | Person_NP).", "Give me the ($x | Person_NP) president.", "Give me the ($x | Person_NP) presidents.", "List all presidents of ($x | Person_NP).", "List all the presidents of ($x | Person_NP).", "show me all presidents of ($x | Person_NP).", "What are the presidents of ($x | Person_NP)?", "What are the presidents of the ($x | Person_NP)?", "What is ($x | Person_NP) 's president?", "What is the president of ($x | Person_NP)?", "What is the president of the ($x | Person_NP)?", "What was ($x | Person_NP) 's president?", "What was the president of ($x | Person_NP)?", "What was the president of the ($x | Person_NP)?", "What were the presidents of ($x | Person_NP)?", "What were the presidents of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/office> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ($x | Person_NP)?", "the presidents of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/office> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parties of ($x | Politician_NP).", "Give me the ($x | Politician_NP) parties.", "Give me the ($x | Politician_NP) party.", "List all parties of ($x | Politician_NP).", "List all the parties of ($x | Politician_NP).", "show me all parties of ($x | Politician_NP).", "What are the parties of ($x | Politician_NP)?", "What are the parties of the ($x | Politician_NP)?", "What is ($x | Politician_NP) 's party?", "What is the party of ($x | Politician_NP)?", "What is the party of the ($x | Politician_NP)?", "What was ($x | Politician_NP) 's party?", "What was the party of ($x | Politician_NP)?", "What was the party of the ($x | Politician_NP)?", "What were the parties of ($x | Politician_NP)?", "What were the parties of the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ($x | Politician_NP)?", "the party of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parties of ($x | Politician_NP).", "Give me the ($x | Politician_NP) parties.", "Give me the ($x | Politician_NP) party.", "List all parties of ($x | Politician_NP).", "List all the parties of ($x | Politician_NP).", "show me all parties of ($x | Politician_NP).", "What are the parties of ($x | Politician_NP)?", "What are the parties of the ($x | Politician_NP)?", "What is ($x | Politician_NP) 's party?", "What is the party of ($x | Politician_NP)?", "What is the party of the ($x | Politician_NP)?", "What was ($x | Politician_NP) 's party?", "What was the party of ($x | Politician_NP)?", "What was the party of the ($x | Politician_NP)?", "What were the parties of ($x | Politician_NP)?", "What were the parties of the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ($x | Politician_NP)?", "the party of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | PopulatedPlace_NP) population.", "What is ($x | PopulatedPlace_NP) 's population?", "What is the population of ($x | PopulatedPlace_NP)?", "What is the population of the ($x | PopulatedPlace_NP)?", "What was ($x | PopulatedPlace_NP) 's population?", "What was the population of ($x | PopulatedPlace_NP)?", "What was the population of the ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of ($x | Country_NP).", "Give me the ($x | Country_NP) official language.", "Give me the ($x | Country_NP) official languages.", "List all official languages of ($x | Country_NP).", "List all the languages with official language of ($x | Country_NP).", "List all the official languages of ($x | Country_NP).", "show me all official languages of ($x | Country_NP).", "What are the official languages of ($x | Country_NP)?", "What are the official languages of the ($x | Country_NP)?", "What is ($x | Country_NP) 's official language?", "What is the official language of ($x | Country_NP)?", "What is the official language of the ($x | Country_NP)?", "What was ($x | Country_NP) 's official language?", "What was the official language of ($x | Country_NP)?", "What was the official language of the ($x | Country_NP)?", "What were the official languages of ($x | Country_NP)?", "What were the official languages of the ($x | Country_NP)?", "which language is the official language of ($x | Country_NP)?", "which language is the official language of the ($x | Country_NP)?", "which language was the official language of ($x | Country_NP)?", "which language was the official language of the ($x | Country_NP)?", "which languages are the official languages of ($x | Country_NP)?", "which languages are the official languages of the ($x | Country_NP)?", "which languages were the official languages of ($x | Country_NP)?", "which languages were the official languages of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ($x | Country_NP)?", "the official languages of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Country_NP) form of government.", "List all the countries with form of government of ($x | Country_NP).", "What is ($x | Country_NP) 's form of government?", "What is the form of government of ($x | Country_NP)?", "What is the form of government of the ($x | Country_NP)?", "What was ($x | Country_NP) 's form of government?", "What was the form of government of ($x | Country_NP)?", "What was the form of government of the ($x | Country_NP)?", "which country is the form of government of ($x | Country_NP)?", "which country is the form of government of the ($x | Country_NP)?", "which country was the form of government of ($x | Country_NP)?", "which country was the form of government of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | AdministrativeRegion_NP) dissolution date.", "What is ($x | AdministrativeRegion_NP) 's dissolution date?", "What is the dissolution date of ($x | AdministrativeRegion_NP)?", "What is the dissolution date of the ($x | AdministrativeRegion_NP)?", "What was ($x | AdministrativeRegion_NP) 's dissolution date?", "What was the dissolution date of ($x | AdministrativeRegion_NP)?", "What was the dissolution date of the ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the dissolution date of ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of ($x | Country_NP).", "Give me the ($x | Country_NP) currencies.", "Give me the ($x | Country_NP) currency.", "List all currencies of ($x | Country_NP).", "List all the currencies of ($x | Country_NP).", "List all the currencies with currency of ($x | Country_NP).", "show me all currencies of ($x | Country_NP).", "What are the currencies of ($x | Country_NP)?", "What are the currencies of the ($x | Country_NP)?", "What is ($x | Country_NP) 's currency?", "What is the currency of ($x | Country_NP)?", "What is the currency of the ($x | Country_NP)?", "What was ($x | Country_NP) 's currency?", "What was the currency of ($x | Country_NP)?", "What was the currency of the ($x | Country_NP)?", "What were the currencies of ($x | Country_NP)?", "What were the currencies of the ($x | Country_NP)?", "which currencies are the currencies of ($x | Country_NP)?", "which currencies are the currencies of the ($x | Country_NP)?", "which currencies were the currencies of ($x | Country_NP)?", "which currencies were the currencies of the ($x | Country_NP)?", "which currency is the currency of ($x | Country_NP)?", "which currency is the currency of the ($x | Country_NP)?", "which currency was the currency of ($x | Country_NP)?", "which currency was the currency of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ($x | Country_NP)?", "the currency of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of ($x | Country_NP).", "Give me the ($x | Country_NP) currencies.", "Give me the ($x | Country_NP) currency.", "List all currencies of ($x | Country_NP).", "List all the currencies of ($x | Country_NP).", "List all the currencies with currency of ($x | Country_NP).", "show me all currencies of ($x | Country_NP).", "What are the currencies of ($x | Country_NP)?", "What are the currencies of the ($x | Country_NP)?", "What is ($x | Country_NP) 's currency?", "What is the currency of ($x | Country_NP)?", "What is the currency of the ($x | Country_NP)?", "What was ($x | Country_NP) 's currency?", "What was the currency of ($x | Country_NP)?", "What was the currency of the ($x | Country_NP)?", "What were the currencies of ($x | Country_NP)?", "What were the currencies of the ($x | Country_NP)?", "which currencies are the currencies of ($x | Country_NP)?", "which currencies are the currencies of the ($x | Country_NP)?", "which currencies were the currencies of ($x | Country_NP)?", "which currencies were the currencies of the ($x | Country_NP)?", "which currency is the currency of ($x | Country_NP)?", "which currency is the currency of the ($x | Country_NP)?", "which currency was the currency of ($x | Country_NP)?", "which currency was the currency of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ($x | Country_NP)?", "the currency of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Person_NP) religion.", "What is ($x | Person_NP) 's religion?", "What is the religion of ($x | Person_NP)?", "What is the religion of the ($x | Person_NP)?", "What was ($x | Person_NP) 's religion?", "What was the religion of ($x | Person_NP)?", "What was the religion of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/religion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the religion of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/religion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Thing_NP).", "Give me the ($x | Thing_NP) founder.", "Give me the ($x | Thing_NP) founders.", "List all founders of ($x | Thing_NP).", "List all the company with founder of ($x | Thing_NP).", "List all the founders of ($x | Thing_NP).", "show me all founders of ($x | Thing_NP).", "which company are the founders of ($x | Thing_NP)?", "which company are the founders of the ($x | Thing_NP)?", "which company is the founder of ($x | Thing_NP)?", "which company is the founder of the ($x | Thing_NP)?", "which company was the founder of ($x | Thing_NP)?", "which company was the founder of the ($x | Thing_NP)?", "which company were the founders of ($x | Thing_NP)?", "which company were the founders of the ($x | Thing_NP)?", "Who are the founders of ($x | Thing_NP)?", "Who are the founders of the ($x | Thing_NP)?", "Who is ($x | Thing_NP) 's founder?", "Who is the founder of ($x | Thing_NP)?", "Who is the founder of the ($x | Thing_NP)?", "Who was ($x | Thing_NP) 's founder?", "Who was the founder of ($x | Thing_NP)?", "Who was the founder of the ($x | Thing_NP)?", "Who were the founders of ($x | Thing_NP)?", "Who were the founders of the ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Thing_NP)?", "the founders of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of ($x | Person_NP).", "Give me the ($x | Person_NP) child.", "Give me the ($x | Person_NP) children.", "List all children of ($x | Person_NP).", "List all the children of ($x | Person_NP).", "List all the persons with child of ($x | Person_NP).", "show me all children of ($x | Person_NP).", "which person is the child of ($x | Person_NP)?", "which person is the child of the ($x | Person_NP)?", "which person was the child of ($x | Person_NP)?", "which person was the child of the ($x | Person_NP)?", "which persons are the children of ($x | Person_NP)?", "which persons are the children of the ($x | Person_NP)?", "which persons were the children of ($x | Person_NP)?", "which persons were the children of the ($x | Person_NP)?", "Who are the children of ($x | Person_NP)?", "Who are the children of the ($x | Person_NP)?", "Who is ($x | Person_NP) 's child?", "Who is the child of ($x | Person_NP)?", "Who is the child of the ($x | Person_NP)?", "Who was ($x | Person_NP) 's child?", "Who was the child of ($x | Person_NP)?", "Who was the child of the ($x | Person_NP)?", "Who were the children of ($x | Person_NP)?", "Who were the children of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of ($x | Person_NP)?", "the children of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Publisher_NP).", "Give me the ($x | Publisher_NP) founder.", "Give me the ($x | Publisher_NP) founders.", "List all founders of ($x | Publisher_NP).", "List all the agents with founder of ($x | Publisher_NP).", "List all the founders of ($x | Publisher_NP).", "show me all founders of ($x | Publisher_NP).", "which agent is the founder of ($x | Publisher_NP)?", "which agent is the founder of the ($x | Publisher_NP)?", "which agent was the founder of ($x | Publisher_NP)?", "which agent was the founder of the ($x | Publisher_NP)?", "which agents are the founders of ($x | Publisher_NP)?", "which agents are the founders of the ($x | Publisher_NP)?", "which agents were the founders of ($x | Publisher_NP)?", "which agents were the founders of the ($x | Publisher_NP)?", "Who are the founders of ($x | Publisher_NP)?", "Who are the founders of the ($x | Publisher_NP)?", "Who is ($x | Publisher_NP) 's founder?", "Who is the founder of ($x | Publisher_NP)?", "Who is the founder of the ($x | Publisher_NP)?", "Who was ($x | Publisher_NP) 's founder?", "Who was the founder of ($x | Publisher_NP)?", "Who was the founder of the ($x | Publisher_NP)?", "Who were the founders of ($x | Publisher_NP)?", "Who were the founders of the ($x | Publisher_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "260",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Publisher_NP)?", "the founders of ($x | Publisher_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "261",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Company_NP) foundation place.", "List all the cities with foundation place of ($x | Company_NP).", "What is ($x | Company_NP) 's foundation place?", "What is the foundation place of ($x | Company_NP)?", "What is the foundation place of the ($x | Company_NP)?", "What was ($x | Company_NP) 's foundation place?", "What was the foundation place of ($x | Company_NP)?", "What was the foundation place of the ($x | Company_NP)?", "which city is the foundation place of ($x | Company_NP)?", "which city is the foundation place of the ($x | Company_NP)?", "which city was the foundation place of ($x | Company_NP)?", "which city was the foundation place of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation place of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "265",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Person_NP) nationality.", "List all the countries with nationality of ($x | Person_NP).", "What is ($x | Person_NP) 's nationality?", "What is the nationality of ($x | Person_NP)?", "What is the nationality of the ($x | Person_NP)?", "What was ($x | Person_NP) 's nationality?", "What was the nationality of ($x | Person_NP)?", "What was the nationality of the ($x | Person_NP)?", "which country is the nationality of ($x | Person_NP)?", "which country is the nationality of the ($x | Person_NP)?", "which country was the nationality of ($x | Person_NP)?", "which country was the nationality of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Royalty_NP) father.", "List all the persons with father of ($x | Royalty_NP).", "which person is the father of ($x | Royalty_NP)?", "which person is the father of the ($x | Royalty_NP)?", "which person was the father of ($x | Royalty_NP)?", "which person was the father of the ($x | Royalty_NP)?", "Who is ($x | Royalty_NP) 's father?", "Who is the father of ($x | Royalty_NP)?", "Who is the father of the ($x | Royalty_NP)?", "Who was ($x | Royalty_NP) 's father?", "Who was the father of ($x | Royalty_NP)?", "Who was the father of the ($x | Royalty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "272",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of ($x | Royalty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all music composers of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) music composer.", "Give me the ($x | TelevisionShow_NP) music composers.", "List all music composers of ($x | TelevisionShow_NP).", "List all the music composers of ($x | TelevisionShow_NP).", "List all the persons with music composer of ($x | TelevisionShow_NP).", "show me all music composers of ($x | TelevisionShow_NP).", "which person is the music composer of ($x | TelevisionShow_NP)?", "which person is the music composer of the ($x | TelevisionShow_NP)?", "which person was the music composer of ($x | TelevisionShow_NP)?", "which person was the music composer of the ($x | TelevisionShow_NP)?", "which persons are the music composers of ($x | TelevisionShow_NP)?", "which persons are the music composers of the ($x | TelevisionShow_NP)?", "which persons were the music composers of ($x | TelevisionShow_NP)?", "which persons were the music composers of the ($x | TelevisionShow_NP)?", "Who are the music composers of ($x | TelevisionShow_NP)?", "Who are the music composers of the ($x | TelevisionShow_NP)?", "Who is ($x | TelevisionShow_NP) 's music composer?", "Who is the music composer of ($x | TelevisionShow_NP)?", "Who is the music composer of the ($x | TelevisionShow_NP)?", "Who was ($x | TelevisionShow_NP) 's music composer?", "Who was the music composer of ($x | TelevisionShow_NP)?", "Who was the music composer of the ($x | TelevisionShow_NP)?", "Who were the music composers of ($x | TelevisionShow_NP)?", "Who were the music composers of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "277",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ($x | TelevisionShow_NP)?", "the music composers of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Country_NP) largest city.", "List all the cities with largest city of ($x | Country_NP).", "What is ($x | Country_NP) 's largest city?", "What is the largest city of ($x | Country_NP)?", "What is the largest city of the ($x | Country_NP)?", "What was ($x | Country_NP) 's largest city?", "What was the largest city of ($x | Country_NP)?", "What was the largest city of the ($x | Country_NP)?", "which city is the largest city of ($x | Country_NP)?", "which city is the largest city of the ($x | Country_NP)?", "which city was the largest city of ($x | Country_NP)?", "which city was the largest city of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "281",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "282",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Person_NP) birth year.", "What is ($x | Person_NP) 's birth year?", "What is the birth year of ($x | Person_NP)?", "What is the birth year of the ($x | Person_NP)?", "What was ($x | Person_NP) 's birth year?", "What was the birth year of ($x | Person_NP)?", "What was the birth year of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth year of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "286",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | TelevisionShow_NP) first season.", "What is ($x | TelevisionShow_NP) 's first season?", "What is the first season of ($x | TelevisionShow_NP)?", "What is the first season of the ($x | TelevisionShow_NP)?", "What was ($x | TelevisionShow_NP) 's first season?", "What was the first season of ($x | TelevisionShow_NP)?", "What was the first season of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first season of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Company_NP) founding year.", "What is ($x | Company_NP) 's founding year?", "What is the founding year of ($x | Company_NP)?", "What is the founding year of the ($x | Company_NP)?", "What was ($x | Company_NP) 's founding year?", "What was the founding year of ($x | Company_NP)?", "What was the founding year of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding year of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of ($x | Person_NP).", "Give me the ($x | Person_NP) parent.", "Give me the ($x | Person_NP) parents.", "List all parents of ($x | Person_NP).", "List all the parents of ($x | Person_NP).", "List all the persons with parent of ($x | Person_NP).", "show me all parents of ($x | Person_NP).", "which person is the parent of ($x | Person_NP)?", "which person is the parent of the ($x | Person_NP)?", "which person was the parent of ($x | Person_NP)?", "which person was the parent of the ($x | Person_NP)?", "which persons are the parents of ($x | Person_NP)?", "which persons are the parents of the ($x | Person_NP)?", "which persons were the parents of ($x | Person_NP)?", "which persons were the parents of the ($x | Person_NP)?", "Who are the parents of ($x | Person_NP)?", "Who are the parents of the ($x | Person_NP)?", "Who is ($x | Person_NP) 's parent?", "Who is the parent of ($x | Person_NP)?", "Who is the parent of the ($x | Person_NP)?", "Who was ($x | Person_NP) 's parent?", "Who was the parent of ($x | Person_NP)?", "Who was the parent of the ($x | Person_NP)?", "Who were the parents of ($x | Person_NP)?", "Who were the parents of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parent of ($x | Person_NP)?", "the parents of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all books by ($x | Writer_NP).", "Give me the ($x | Writer_NP) book.", "Give me the ($x | Writer_NP) books.", "List all books by ($x | Writer_NP).", "List all the books by ($x | Writer_NP).", "List all the writers with book by ($x | Writer_NP).", "show me all books by ($x | Writer_NP).", "What are the books by ($x | Writer_NP)?", "What are the books by the ($x | Writer_NP)?", "What is ($x | Writer_NP) 's book?", "What is the book by ($x | Writer_NP)?", "What is the book by the ($x | Writer_NP)?", "What was ($x | Writer_NP) 's book?", "What was the book by ($x | Writer_NP)?", "What was the book by the ($x | Writer_NP)?", "What were the books by ($x | Writer_NP)?", "What were the books by the ($x | Writer_NP)?", "which writer is the book by ($x | Writer_NP)?", "which writer is the book by the ($x | Writer_NP)?", "which writer was the book by ($x | Writer_NP)?", "which writer was the book by the ($x | Writer_NP)?", "which writers are the books by ($x | Writer_NP)?", "which writers are the books by the ($x | Writer_NP)?", "which writers were the books by ($x | Writer_NP)?", "which writers were the books by the ($x | Writer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by ($x | Writer_NP)?", "the books by ($x | Writer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all coaches of ($x | IceHockeyLeague_NP).", "Give me the ($x | IceHockeyLeague_NP) coach.", "Give me the ($x | IceHockeyLeague_NP) coaches.", "List all coaches of ($x | IceHockeyLeague_NP).", "List all the coaches of ($x | IceHockeyLeague_NP).", "List all the persons with coach of ($x | IceHockeyLeague_NP).", "show me all coaches of ($x | IceHockeyLeague_NP).", "which person is the coach of ($x | IceHockeyLeague_NP)?", "which person is the coach of the ($x | IceHockeyLeague_NP)?", "which person was the coach of ($x | IceHockeyLeague_NP)?", "which person was the coach of the ($x | IceHockeyLeague_NP)?", "which persons are the coaches of ($x | IceHockeyLeague_NP)?", "which persons are the coaches of the ($x | IceHockeyLeague_NP)?", "which persons were the coaches of ($x | IceHockeyLeague_NP)?", "which persons were the coaches of the ($x | IceHockeyLeague_NP)?", "Who are the coaches of ($x | IceHockeyLeague_NP)?", "Who are the coaches of the ($x | IceHockeyLeague_NP)?", "Who is ($x | IceHockeyLeague_NP) 's coach?", "Who is the coach of ($x | IceHockeyLeague_NP)?", "Who is the coach of the ($x | IceHockeyLeague_NP)?", "Who was ($x | IceHockeyLeague_NP) 's coach?", "Who was the coach of ($x | IceHockeyLeague_NP)?", "Who was the coach of the ($x | IceHockeyLeague_NP)?", "Who were the coaches of ($x | IceHockeyLeague_NP)?", "Who were the coaches of the ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ($x | IceHockeyLeague_NP)?", "the coaches of ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all coaches of ($x | HockeyTeam_NP).", "Give me the ($x | HockeyTeam_NP) coach.", "Give me the ($x | HockeyTeam_NP) coaches.", "List all coaches of ($x | HockeyTeam_NP).", "List all the coaches of ($x | HockeyTeam_NP).", "List all the persons with coach of ($x | HockeyTeam_NP).", "show me all coaches of ($x | HockeyTeam_NP).", "which person is the coach of ($x | HockeyTeam_NP)?", "which person is the coach of the ($x | HockeyTeam_NP)?", "which person was the coach of ($x | HockeyTeam_NP)?", "which person was the coach of the ($x | HockeyTeam_NP)?", "which persons are the coaches of ($x | HockeyTeam_NP)?", "which persons are the coaches of the ($x | HockeyTeam_NP)?", "which persons were the coaches of ($x | HockeyTeam_NP)?", "which persons were the coaches of the ($x | HockeyTeam_NP)?", "Who are the coaches of ($x | HockeyTeam_NP)?", "Who are the coaches of the ($x | HockeyTeam_NP)?", "Who is ($x | HockeyTeam_NP) 's coach?", "Who is the coach of ($x | HockeyTeam_NP)?", "Who is the coach of the ($x | HockeyTeam_NP)?", "Who was ($x | HockeyTeam_NP) 's coach?", "Who was the coach of ($x | HockeyTeam_NP)?", "Who was the coach of the ($x | HockeyTeam_NP)?", "Who were the coaches of ($x | HockeyTeam_NP)?", "Who were the coaches of the ($x | HockeyTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "313",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ($x | HockeyTeam_NP)?", "the coaches of ($x | HockeyTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all albums of ($x | Song_NP).", "Give me the ($x | Song_NP) album.", "Give me the ($x | Song_NP) albums.", "List all albums of ($x | Song_NP).", "List all the albums of ($x | Song_NP).", "List all the albums with album of ($x | Song_NP).", "show me all albums of ($x | Song_NP).", "What are the albums of ($x | Song_NP)?", "What are the albums of the ($x | Song_NP)?", "What is ($x | Song_NP) 's album?", "What is the album of ($x | Song_NP)?", "What is the album of the ($x | Song_NP)?", "What was ($x | Song_NP) 's album?", "What was the album of ($x | Song_NP)?", "What was the album of the ($x | Song_NP)?", "What were the albums of ($x | Song_NP)?", "What were the albums of the ($x | Song_NP)?", "which album is the album of ($x | Song_NP)?", "which album is the album of the ($x | Song_NP)?", "which album was the album of ($x | Song_NP)?", "which album was the album of the ($x | Song_NP)?", "which albums are the albums of ($x | Song_NP)?", "which albums are the albums of the ($x | Song_NP)?", "which albums were the albums of ($x | Song_NP)?", "which albums were the albums of the ($x | Song_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "318",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the album of ($x | Song_NP)?", "the albums of ($x | Song_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all members of ($x | Band_NP).", "Give me the ($x | Band_NP) member.", "Give me the ($x | Band_NP) members.", "List all members of ($x | Band_NP).", "List all the members of ($x | Band_NP).", "List all the musical artists with member of ($x | Band_NP).", "show me all members of ($x | Band_NP).", "which musical artist is the member of ($x | Band_NP)?", "which musical artist is the member of the ($x | Band_NP)?", "which musical artist was the member of ($x | Band_NP)?", "which musical artist was the member of the ($x | Band_NP)?", "which musical artists are the members of ($x | Band_NP)?", "which musical artists are the members of the ($x | Band_NP)?", "which musical artists were the members of ($x | Band_NP)?", "which musical artists were the members of the ($x | Band_NP)?", "Who are the members of ($x | Band_NP)?", "Who are the members of the ($x | Band_NP)?", "Who is ($x | Band_NP) 's member?", "Who is the member of ($x | Band_NP)?", "Who is the member of the ($x | Band_NP)?", "Who was ($x | Band_NP) 's member?", "Who was the member of ($x | Band_NP)?", "Who was the member of the ($x | Band_NP)?", "Who were the members of ($x | Band_NP)?", "Who were the members of the ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "323",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ($x | Band_NP)?", "the members of ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all last Election Dates of ($x | Organisation_NP).", "Give me the ($x | Organisation_NP) last Election Date.", "Give me the ($x | Organisation_NP) last Election Dates.", "List all last Election Dates of ($x | Organisation_NP).", "List all the last Election Dates of ($x | Organisation_NP).", "show me all last Election Dates of ($x | Organisation_NP).", "What are the last Election Dates of ($x | Organisation_NP)?", "What are the last Election Dates of the ($x | Organisation_NP)?", "What is ($x | Organisation_NP) 's last Election Date?", "What is the last Election Date of ($x | Organisation_NP)?", "What is the last Election Date of the ($x | Organisation_NP)?", "What was ($x | Organisation_NP) 's last Election Date?", "What was the last Election Date of ($x | Organisation_NP)?", "What was the last Election Date of the ($x | Organisation_NP)?", "What were the last Election Dates of ($x | Organisation_NP)?", "What were the last Election Dates of the ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "328",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the last Election Date of ($x | Organisation_NP)?", "the last Election Dates of ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all opening Dates of ($x | ArchitecturalStructure_NP).", "Give me the ($x | ArchitecturalStructure_NP) opening Date.", "Give me the ($x | ArchitecturalStructure_NP) opening Dates.", "List all opening Dates of ($x | ArchitecturalStructure_NP).", "List all the opening Dates of ($x | ArchitecturalStructure_NP).", "show me all opening Dates of ($x | ArchitecturalStructure_NP).", "What are the opening Dates of ($x | ArchitecturalStructure_NP)?", "What are the opening Dates of the ($x | ArchitecturalStructure_NP)?", "What is ($x | ArchitecturalStructure_NP) 's opening Date?", "What is the opening Date of ($x | ArchitecturalStructure_NP)?", "What is the opening Date of the ($x | ArchitecturalStructure_NP)?", "What was ($x | ArchitecturalStructure_NP) 's opening Date?", "What was the opening Date of ($x | ArchitecturalStructure_NP)?", "What was the opening Date of the ($x | ArchitecturalStructure_NP)?", "What were the opening Dates of ($x | ArchitecturalStructure_NP)?", "What were the opening Dates of the ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "333",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the opening Date of ($x | ArchitecturalStructure_NP)?", "the opening Dates of ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "334",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all artistic movements of ($x | Artist_NP).", "Give me the ($x | Artist_NP) artistic movement.", "Give me the ($x | Artist_NP) artistic movements.", "List all artistic movements of ($x | Artist_NP).", "List all the artistic movements of ($x | Artist_NP).", "show me all artistic movements of ($x | Artist_NP).", "What are the artistic movements of ($x | Artist_NP)?", "What are the artistic movements of the ($x | Artist_NP)?", "What is ($x | Artist_NP) 's artistic movement?", "What is the artistic movement of ($x | Artist_NP)?", "What is the artistic movement of the ($x | Artist_NP)?", "What was ($x | Artist_NP) 's artistic movement?", "What was the artistic movement of ($x | Artist_NP)?", "What was the artistic movement of the ($x | Artist_NP)?", "What were the artistic movements of ($x | Artist_NP)?", "What were the artistic movements of the ($x | Artist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "338",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ($x | Artist_NP)?", "the artistic movements of ($x | Artist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "339",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all artistic movements of ($x | Artist_NP).", "Give me the ($x | Artist_NP) artistic movement.", "Give me the ($x | Artist_NP) artistic movements.", "List all artistic movements of ($x | Artist_NP).", "List all the artistic movements of ($x | Artist_NP).", "show me all artistic movements of ($x | Artist_NP).", "What are the artistic movements of ($x | Artist_NP)?", "What are the artistic movements of the ($x | Artist_NP)?", "What is ($x | Artist_NP) 's artistic movement?", "What is the artistic movement of ($x | Artist_NP)?", "What is the artistic movement of the ($x | Artist_NP)?", "What was ($x | Artist_NP) 's artistic movement?", "What was the artistic movement of ($x | Artist_NP)?", "What was the artistic movement of the ($x | Artist_NP)?", "What were the artistic movements of ($x | Artist_NP)?", "What were the artistic movements of the ($x | Artist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "343",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ($x | Artist_NP)?", "the artistic movements of ($x | Artist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "344",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "School" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all number Of Students of ($x | School_NP).", "Give me the ($x | School_NP) number Of Student.", "Give me the ($x | School_NP) number Of Students.", "List all number Of Students of ($x | School_NP).", "List all the number Of Students of ($x | School_NP).", "show me all number Of Students of ($x | School_NP).", "What are the number Of Students of ($x | School_NP)?", "What are the number Of Students of the ($x | School_NP)?", "What is ($x | School_NP) 's number Of Student?", "What is the number Of Student of ($x | School_NP)?", "What is the number Of Student of the ($x | School_NP)?", "What was ($x | School_NP) 's number Of Student?", "What was the number Of Student of ($x | School_NP)?", "What was the number Of Student of the ($x | School_NP)?", "What were the number Of Students of ($x | School_NP)?", "What were the number Of Students of the ($x | School_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "347",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "School" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Student of ($x | School_NP)?", "the number Of Students of ($x | School_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "348",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of ($x | Person_NP).", "Give me the ($x | Person_NP) influencer.", "Give me the ($x | Person_NP) influencers.", "List all influencers of ($x | Person_NP).", "List all the influencers of ($x | Person_NP).", "List all the persons with influencer of ($x | Person_NP).", "show me all influencers of ($x | Person_NP).", "which person is the influencer of ($x | Person_NP)?", "which person is the influencer of the ($x | Person_NP)?", "which person was the influencer of ($x | Person_NP)?", "which person was the influencer of the ($x | Person_NP)?", "which persons are the influencers of ($x | Person_NP)?", "which persons are the influencers of the ($x | Person_NP)?", "which persons were the influencers of ($x | Person_NP)?", "which persons were the influencers of the ($x | Person_NP)?", "Who are the influencers of ($x | Person_NP)?", "Who are the influencers of the ($x | Person_NP)?", "Who is ($x | Person_NP) 's influencer?", "Who is the influencer of ($x | Person_NP)?", "Who is the influencer of the ($x | Person_NP)?", "Who was ($x | Person_NP) 's influencer?", "Who was the influencer of ($x | Person_NP)?", "Who was the influencer of the ($x | Person_NP)?", "Who were the influencers of ($x | Person_NP)?", "Who were the influencers of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "352",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the influencer of ($x | Person_NP)?", "the influencers of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "353",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Organisation_NP).", "Give me the ($x | Organisation_NP) founder.", "Give me the ($x | Organisation_NP) founders.", "List all founders of ($x | Organisation_NP).", "List all the founders of ($x | Organisation_NP).", "List all the popes with founder of ($x | Organisation_NP).", "show me all founders of ($x | Organisation_NP).", "which pope is the founder of ($x | Organisation_NP)?", "which pope is the founder of the ($x | Organisation_NP)?", "which pope was the founder of ($x | Organisation_NP)?", "which pope was the founder of the ($x | Organisation_NP)?", "which popes are the founders of ($x | Organisation_NP)?", "which popes are the founders of the ($x | Organisation_NP)?", "which popes were the founders of ($x | Organisation_NP)?", "which popes were the founders of the ($x | Organisation_NP)?", "Who are the founders of ($x | Organisation_NP)?", "Who are the founders of the ($x | Organisation_NP)?", "Who is ($x | Organisation_NP) 's founder?", "Who is the founder of ($x | Organisation_NP)?", "Who is the founder of the ($x | Organisation_NP)?", "Who was ($x | Organisation_NP) 's founder?", "Who was the founder of ($x | Organisation_NP)?", "Who was the founder of the ($x | Organisation_NP)?", "Who were the founders of ($x | Organisation_NP)?", "Who were the founders of the ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "357",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Organisation_NP)?", "the founders of ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "358",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all record labels of ($x | Genre_NP).", "Give me the ($x | Genre_NP) record label.", "Give me the ($x | Genre_NP) record labels.", "List all record labels of ($x | Genre_NP).", "List all the record labels of ($x | Genre_NP).", "show me all record labels of ($x | Genre_NP).", "What are the record labels of ($x | Genre_NP)?", "What are the record labels of the ($x | Genre_NP)?", "What is ($x | Genre_NP) 's record label?", "What is the record label of ($x | Genre_NP)?", "What is the record label of the ($x | Genre_NP)?", "What was ($x | Genre_NP) 's record label?", "What was the record label of ($x | Genre_NP)?", "What was the record label of the ($x | Genre_NP)?", "What were the record labels of ($x | Genre_NP)?", "What were the record labels of the ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "362",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the record label of ($x | Genre_NP)?", "the record labels of ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "363",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Thing_NP) autobiography.", "List all the authors with autobiography of ($x | Thing_NP).", "What is ($x | Thing_NP) 's autobiography?", "What is the autobiography of ($x | Thing_NP)?", "What is the autobiography of the ($x | Thing_NP)?", "What was ($x | Thing_NP) 's autobiography?", "What was the autobiography of ($x | Thing_NP)?", "What was the autobiography of the ($x | Thing_NP)?", "which author is the autobiography of ($x | Thing_NP)?", "which author is the autobiography of the ($x | Thing_NP)?", "which author was the autobiography of ($x | Thing_NP)?", "which author was the autobiography of the ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "366",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "367",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of ($x | Person_NP).", "Give me the ($x | Person_NP) wife.", "Give me the ($x | Person_NP) wives.", "List all the persons with wife of ($x | Person_NP).", "List all the wives of ($x | Person_NP).", "List all wives of ($x | Person_NP).", "show me all wives of ($x | Person_NP).", "which person is the wife of ($x | Person_NP)?", "which person is the wife of the ($x | Person_NP)?", "which person was the wife of ($x | Person_NP)?", "which person was the wife of the ($x | Person_NP)?", "which persons are the wives of ($x | Person_NP)?", "which persons are the wives of the ($x | Person_NP)?", "which persons were the wives of ($x | Person_NP)?", "which persons were the wives of the ($x | Person_NP)?", "Who are the wives of ($x | Person_NP)?", "Who are the wives of the ($x | Person_NP)?", "Who is ($x | Person_NP) 's wife?", "Who is the wife of ($x | Person_NP)?", "Who is the wife of the ($x | Person_NP)?", "Who was ($x | Person_NP) 's wife?", "Who was the wife of ($x | Person_NP)?", "Who was the wife of the ($x | Person_NP)?", "Who were the wives of ($x | Person_NP)?", "Who were the wives of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "371",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of ($x | Person_NP)?", "the wives of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "372",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of ($x | Thing_NP).", "Give me the ($x | Thing_NP) first Air Date.", "Give me the ($x | Thing_NP) first Air Dates.", "List all first Air Dates of ($x | Thing_NP).", "List all the first Air Dates of ($x | Thing_NP).", "show me all first Air Dates of ($x | Thing_NP).", "What are the first Air Dates of ($x | Thing_NP)?", "What are the first Air Dates of the ($x | Thing_NP)?", "What is ($x | Thing_NP) 's first Air Date?", "What is the first Air Date of ($x | Thing_NP)?", "What is the first Air Date of the ($x | Thing_NP)?", "What was ($x | Thing_NP) 's first Air Date?", "What was the first Air Date of ($x | Thing_NP)?", "What was the first Air Date of the ($x | Thing_NP)?", "What were the first Air Dates of ($x | Thing_NP)?", "What were the first Air Dates of the ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "375",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Air Date of ($x | Thing_NP)?", "the first Air Dates of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "376",
    "lexicalEntryUri" : "http://localhost:8080#museum_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all museums in ($x | City_NP).", "Give me the ($x | City_NP) museum.", "Give me the ($x | City_NP) museums.", "List all museums in ($x | City_NP).", "List all the cities with museum in ($x | City_NP).", "List all the museums in ($x | City_NP).", "show me all museums in ($x | City_NP).", "What are the museums in ($x | City_NP)?", "What are the museums in the ($x | City_NP)?", "What is ($x | City_NP) 's museum?", "What is the museum in ($x | City_NP)?", "What is the museum in the ($x | City_NP)?", "What was ($x | City_NP) 's museum?", "What was the museum in ($x | City_NP)?", "What was the museum in the ($x | City_NP)?", "What were the museums in ($x | City_NP)?", "What were the museums in the ($x | City_NP)?", "which cities are the museums in ($x | City_NP)?", "which cities are the museums in the ($x | City_NP)?", "which cities were the museums in ($x | City_NP)?", "which cities were the museums in the ($x | City_NP)?", "which city is the museum in ($x | City_NP)?", "which city is the museum in the ($x | City_NP)?", "which city was the museum in ($x | City_NP)?", "which city was the museum in the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "380",
    "lexicalEntryUri" : "http://localhost:8080#museum_in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the museum in ($x | City_NP)?", "the museums in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "381",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all cities in ($x | AdministrativeRegion_NP).", "Give me the ($x | AdministrativeRegion_NP) cities.", "Give me the ($x | AdministrativeRegion_NP) city.", "List all cities in ($x | AdministrativeRegion_NP).", "List all the cities in ($x | AdministrativeRegion_NP).", "List all the cities with city in ($x | AdministrativeRegion_NP).", "show me all cities in ($x | AdministrativeRegion_NP).", "What are the cities in ($x | AdministrativeRegion_NP)?", "What are the cities in the ($x | AdministrativeRegion_NP)?", "What is ($x | AdministrativeRegion_NP) 's city?", "What is the city in ($x | AdministrativeRegion_NP)?", "What is the city in the ($x | AdministrativeRegion_NP)?", "What was ($x | AdministrativeRegion_NP) 's city?", "What was the city in ($x | AdministrativeRegion_NP)?", "What was the city in the ($x | AdministrativeRegion_NP)?", "What were the cities in ($x | AdministrativeRegion_NP)?", "What were the cities in the ($x | AdministrativeRegion_NP)?", "which cities are the cities in ($x | AdministrativeRegion_NP)?", "which cities are the cities in the ($x | AdministrativeRegion_NP)?", "which cities were the cities in ($x | AdministrativeRegion_NP)?", "which cities were the cities in the ($x | AdministrativeRegion_NP)?", "which city is the city in ($x | AdministrativeRegion_NP)?", "which city is the city in the ($x | AdministrativeRegion_NP)?", "which city was the city in ($x | AdministrativeRegion_NP)?", "which city was the city in the ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "385",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities in ($x | AdministrativeRegion_NP)?", "the city in ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "386",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wine productions of ($x | Company_NP).", "Give me the ($x | Company_NP) wine production.", "Give me the ($x | Company_NP) wine productions.", "List all the locations with wine production of ($x | Company_NP).", "List all the wine productions of ($x | Company_NP).", "List all wine productions of ($x | Company_NP).", "show me all wine productions of ($x | Company_NP).", "What are the wine productions of ($x | Company_NP)?", "What are the wine productions of the ($x | Company_NP)?", "What is ($x | Company_NP) 's wine production?", "What is the wine production of ($x | Company_NP)?", "What is the wine production of the ($x | Company_NP)?", "What was ($x | Company_NP) 's wine production?", "What was the wine production of ($x | Company_NP)?", "What was the wine production of the ($x | Company_NP)?", "What were the wine productions of ($x | Company_NP)?", "What were the wine productions of the ($x | Company_NP)?", "which location is the wine production of ($x | Company_NP)?", "which location is the wine production of the ($x | Company_NP)?", "which location was the wine production of ($x | Company_NP)?", "which location was the wine production of the ($x | Company_NP)?", "which locations are the wine productions of ($x | Company_NP)?", "which locations are the wine productions of the ($x | Company_NP)?", "which locations were the wine productions of ($x | Company_NP)?", "which locations were the wine productions of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "390",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine production of ($x | Company_NP)?", "the wine productions of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "391",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of ($x | Person_NP).", "Give me the ($x | Person_NP) daughter.", "Give me the ($x | Person_NP) daughters.", "List all daughters of ($x | Person_NP).", "List all the daughters of ($x | Person_NP).", "List all the persons with daughter of ($x | Person_NP).", "show me all daughters of ($x | Person_NP).", "which person is the daughter of ($x | Person_NP)?", "which person is the daughter of the ($x | Person_NP)?", "which person was the daughter of ($x | Person_NP)?", "which person was the daughter of the ($x | Person_NP)?", "which persons are the daughters of ($x | Person_NP)?", "which persons are the daughters of the ($x | Person_NP)?", "which persons were the daughters of ($x | Person_NP)?", "which persons were the daughters of the ($x | Person_NP)?", "Who are the daughters of ($x | Person_NP)?", "Who are the daughters of the ($x | Person_NP)?", "Who is ($x | Person_NP) 's daughter?", "Who is the daughter of ($x | Person_NP)?", "Who is the daughter of the ($x | Person_NP)?", "Who was ($x | Person_NP) 's daughter?", "Who was the daughter of ($x | Person_NP)?", "Who was the daughter of the ($x | Person_NP)?", "Who were the daughters of ($x | Person_NP)?", "Who were the daughters of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "395",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the daughter of ($x | Person_NP)?", "the daughters of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "396",
    "lexicalEntryUri" : "http://localhost:8080#mission-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all missions of ($x | Event_NP).", "Give me the ($x | Event_NP) mission.", "Give me the ($x | Event_NP) missions.", "List all missions of ($x | Event_NP).", "List all the missions of ($x | Event_NP).", "List all the television shows with mission of ($x | Event_NP).", "show me all missions of ($x | Event_NP).", "What are the missions of ($x | Event_NP)?", "What are the missions of the ($x | Event_NP)?", "What is ($x | Event_NP) 's mission?", "What is the mission of ($x | Event_NP)?", "What is the mission of the ($x | Event_NP)?", "What was ($x | Event_NP) 's mission?", "What was the mission of ($x | Event_NP)?", "What was the mission of the ($x | Event_NP)?", "What were the missions of ($x | Event_NP)?", "What were the missions of the ($x | Event_NP)?", "which television show is the mission of ($x | Event_NP)?", "which television show is the mission of the ($x | Event_NP)?", "which television show was the mission of ($x | Event_NP)?", "which television show was the mission of the ($x | Event_NP)?", "which television shows are the missions of ($x | Event_NP)?", "which television shows are the missions of the ($x | Event_NP)?", "which television shows were the missions of ($x | Event_NP)?", "which television shows were the missions of the ($x | Event_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programme> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "400",
    "lexicalEntryUri" : "http://localhost:8080#mission-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Event" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of ($x | Event_NP)?", "the missions of ($x | Event_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programme> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "401",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | WrittenWork_NP) number of pages.", "What is ($x | WrittenWork_NP) 's number of pages?", "What is the number of pages of ($x | WrittenWork_NP)?", "What is the number of pages of the ($x | WrittenWork_NP)?", "What was ($x | WrittenWork_NP) 's number of pages?", "What was the number of pages of ($x | WrittenWork_NP)?", "What was the number of pages of the ($x | WrittenWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "404",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of ($x | WrittenWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "405",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all net incomes of ($x | Company_NP).", "Give me the ($x | Company_NP) net income.", "Give me the ($x | Company_NP) net incomes.", "List all net incomes of ($x | Company_NP).", "List all the net incomes of ($x | Company_NP).", "show me all net incomes of ($x | Company_NP).", "What are the net incomes of ($x | Company_NP)?", "What are the net incomes of the ($x | Company_NP)?", "What is ($x | Company_NP) 's net income?", "What is the net income of ($x | Company_NP)?", "What is the net income of the ($x | Company_NP)?", "What was ($x | Company_NP) 's net income?", "What was the net income of ($x | Company_NP)?", "What was the net income of the ($x | Company_NP)?", "What were the net incomes of ($x | Company_NP)?", "What were the net incomes of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/netIncome> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "409",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of ($x | Company_NP)?", "the net incomes of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/netIncome> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "410",
    "lexicalEntryUri" : "http://localhost:8080#employee-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employees of ($x | Company_NP).", "Give me the ($x | Company_NP) employee.", "Give me the ($x | Company_NP) employees.", "List all employees of ($x | Company_NP).", "List all the employees of ($x | Company_NP).", "show me all employees of ($x | Company_NP).", "What are the employees of ($x | Company_NP)?", "What are the employees of the ($x | Company_NP)?", "What is ($x | Company_NP) 's employee?", "What is the employee of ($x | Company_NP)?", "What is the employee of the ($x | Company_NP)?", "What was ($x | Company_NP) 's employee?", "What was the employee of ($x | Company_NP)?", "What was the employee of the ($x | Company_NP)?", "What were the employees of ($x | Company_NP)?", "What were the employees of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfEmployees> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "414",
    "lexicalEntryUri" : "http://localhost:8080#employee-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of ($x | Company_NP)?", "the employees of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfEmployees> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "415",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all home stadiums of ($x | SportsClub_NP).", "Give me the ($x | SportsClub_NP) home stadium.", "Give me the ($x | SportsClub_NP) home stadiums.", "List all home stadiums of ($x | SportsClub_NP).", "List all the home stadiums of ($x | SportsClub_NP).", "List all the stadiums with home stadium of ($x | SportsClub_NP).", "show me all home stadiums of ($x | SportsClub_NP).", "What are the home stadiums of ($x | SportsClub_NP)?", "What are the home stadiums of the ($x | SportsClub_NP)?", "What is ($x | SportsClub_NP) 's home stadium?", "What is the home stadium of ($x | SportsClub_NP)?", "What is the home stadium of the ($x | SportsClub_NP)?", "What was ($x | SportsClub_NP) 's home stadium?", "What was the home stadium of ($x | SportsClub_NP)?", "What was the home stadium of the ($x | SportsClub_NP)?", "What were the home stadiums of ($x | SportsClub_NP)?", "What were the home stadiums of the ($x | SportsClub_NP)?", "which stadium is the home stadium of ($x | SportsClub_NP)?", "which stadium is the home stadium of the ($x | SportsClub_NP)?", "which stadium was the home stadium of ($x | SportsClub_NP)?", "which stadium was the home stadium of the ($x | SportsClub_NP)?", "which stadiums are the home stadiums of ($x | SportsClub_NP)?", "which stadiums are the home stadiums of the ($x | SportsClub_NP)?", "which stadiums were the home stadiums of ($x | SportsClub_NP)?", "which stadiums were the home stadiums of the ($x | SportsClub_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "419",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the home stadium of ($x | SportsClub_NP)?", "the home stadiums of ($x | SportsClub_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "420",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of ($x | City_NP).", "Give me the ($x | City_NP) mayor.", "Give me the ($x | City_NP) mayors.", "List all mayors of ($x | City_NP).", "List all the mayors of ($x | City_NP).", "List all the persons with mayor of ($x | City_NP).", "show me all mayors of ($x | City_NP).", "which person is the mayor of ($x | City_NP)?", "which person is the mayor of the ($x | City_NP)?", "which person was the mayor of ($x | City_NP)?", "which person was the mayor of the ($x | City_NP)?", "which persons are the mayors of ($x | City_NP)?", "which persons are the mayors of the ($x | City_NP)?", "which persons were the mayors of ($x | City_NP)?", "which persons were the mayors of the ($x | City_NP)?", "Who are the mayors of ($x | City_NP)?", "Who are the mayors of the ($x | City_NP)?", "Who is ($x | City_NP) 's mayor?", "Who is the mayor of ($x | City_NP)?", "Who is the mayor of the ($x | City_NP)?", "Who was ($x | City_NP) 's mayor?", "Who was the mayor of ($x | City_NP)?", "Who was the mayor of the ($x | City_NP)?", "Who were the mayors of ($x | City_NP)?", "Who were the mayors of the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "424",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ($x | City_NP)?", "the mayors of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "425",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Country_NP) largest country.", "List all the countries with largest country of ($x | Country_NP).", "What is ($x | Country_NP) 's largest country?", "What is the largest country of ($x | Country_NP)?", "What is the largest country of the ($x | Country_NP)?", "What was ($x | Country_NP) 's largest country?", "What was the largest country of ($x | Country_NP)?", "What was the largest country of the ($x | Country_NP)?", "which country is the largest country of ($x | Country_NP)?", "which country is the largest country of the ($x | Country_NP)?", "which country was the largest country of ($x | Country_NP)?", "which country was the largest country of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "428",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "429",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all teams of ($x | IceHockeyLeague_NP).", "Give me the ($x | IceHockeyLeague_NP) team.", "Give me the ($x | IceHockeyLeague_NP) teams.", "List all teams of ($x | IceHockeyLeague_NP).", "List all the Ice Hockey Leagues with team of ($x | IceHockeyLeague_NP).", "List all the teams of ($x | IceHockeyLeague_NP).", "show me all teams of ($x | IceHockeyLeague_NP).", "What are the teams of ($x | IceHockeyLeague_NP)?", "What are the teams of the ($x | IceHockeyLeague_NP)?", "What is ($x | IceHockeyLeague_NP) 's team?", "What is the team of ($x | IceHockeyLeague_NP)?", "What is the team of the ($x | IceHockeyLeague_NP)?", "What was ($x | IceHockeyLeague_NP) 's team?", "What was the team of ($x | IceHockeyLeague_NP)?", "What was the team of the ($x | IceHockeyLeague_NP)?", "What were the teams of ($x | IceHockeyLeague_NP)?", "What were the teams of the ($x | IceHockeyLeague_NP)?", "which Ice Hockey League is the team of ($x | IceHockeyLeague_NP)?", "which Ice Hockey League is the team of the ($x | IceHockeyLeague_NP)?", "which Ice Hockey League was the team of ($x | IceHockeyLeague_NP)?", "which Ice Hockey League was the team of the ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues are the teams of ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues are the teams of the ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues were the teams of ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues were the teams of the ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "433",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the team of ($x | IceHockeyLeague_NP)?", "the teams of ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "434",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Mountain_NP) elevation.", "What is ($x | Mountain_NP) 's elevation?", "What is the elevation of ($x | Mountain_NP)?", "What is the elevation of the ($x | Mountain_NP)?", "What was ($x | Mountain_NP) 's elevation?", "What was the elevation of ($x | Mountain_NP)?", "What was the elevation of the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "437",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the elevation of ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "438",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Person_NP) birth place.", "List all the countries with birth place of ($x | Person_NP).", "What is ($x | Person_NP) 's birth place?", "What is the birth place of ($x | Person_NP)?", "What is the birth place of the ($x | Person_NP)?", "What was ($x | Person_NP) 's birth place?", "What was the birth place of ($x | Person_NP)?", "What was the birth place of the ($x | Person_NP)?", "which country is the birth place of ($x | Person_NP)?", "which country is the birth place of the ($x | Person_NP)?", "which country was the birth place of ($x | Person_NP)?", "which country was the birth place of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "441",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "442",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Country_NP) capital.", "List all the cities with capital of ($x | Country_NP).", "What is ($x | Country_NP) 's capital?", "What is the capital of ($x | Country_NP)?", "What is the capital of the ($x | Country_NP)?", "What was ($x | Country_NP) 's capital?", "What was the capital of ($x | Country_NP)?", "What was the capital of the ($x | Country_NP)?", "which city is the capital of ($x | Country_NP)?", "which city is the capital of the ($x | Country_NP)?", "which city was the capital of ($x | Country_NP)?", "which city was the capital of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "445",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "446",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Person_NP) death date.", "What is ($x | Person_NP) 's death date?", "What is the death date of ($x | Person_NP)?", "What is the death date of the ($x | Person_NP)?", "What was ($x | Person_NP) 's death date?", "What was the death date of ($x | Person_NP)?", "What was the death date of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "449",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death date of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "450",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all costs of ($x | Film_NP).", "Give me the ($x | Film_NP) cost.", "Give me the ($x | Film_NP) costs.", "List all costs of ($x | Film_NP).", "List all the costs of ($x | Film_NP).", "show me all costs of ($x | Film_NP).", "What are the costs of ($x | Film_NP)?", "What are the costs of the ($x | Film_NP)?", "What is ($x | Film_NP) 's cost?", "What is the cost of ($x | Film_NP)?", "What is the cost of the ($x | Film_NP)?", "What was ($x | Film_NP) 's cost?", "What was the cost of ($x | Film_NP)?", "What was the cost of the ($x | Film_NP)?", "What were the costs of ($x | Film_NP)?", "What were the costs of the ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "454",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cost of ($x | Film_NP)?", "the costs of ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "455",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Ship_NP) completion date.", "What is ($x | Ship_NP) 's completion date?", "What is the completion date of ($x | Ship_NP)?", "What is the completion date of the ($x | Ship_NP)?", "What was ($x | Ship_NP) 's completion date?", "What was the completion date of ($x | Ship_NP)?", "What was the completion date of the ($x | Ship_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "458",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the completion date of ($x | Ship_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "459",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all authors of ($x | Work_NP).", "Give me the ($x | Work_NP) author.", "Give me the ($x | Work_NP) authors.", "List all authors of ($x | Work_NP).", "List all the authors of ($x | Work_NP).", "List all the persons with author of ($x | Work_NP).", "show me all authors of ($x | Work_NP).", "which person is the author of ($x | Work_NP)?", "which person is the author of the ($x | Work_NP)?", "which person was the author of ($x | Work_NP)?", "which person was the author of the ($x | Work_NP)?", "which persons are the authors of ($x | Work_NP)?", "which persons are the authors of the ($x | Work_NP)?", "which persons were the authors of ($x | Work_NP)?", "which persons were the authors of the ($x | Work_NP)?", "Who are the authors of ($x | Work_NP)?", "Who are the authors of the ($x | Work_NP)?", "Who is ($x | Work_NP) 's author?", "Who is the author of ($x | Work_NP)?", "Who is the author of the ($x | Work_NP)?", "Who was ($x | Work_NP) 's author?", "Who was the author of ($x | Work_NP)?", "Who was the author of the ($x | Work_NP)?", "Who were the authors of ($x | Work_NP)?", "Who were the authors of the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "463",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of ($x | Work_NP)?", "the authors of ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "464",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all books in ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) book.", "Give me the ($x | TelevisionShow_NP) books.", "List all books in ($x | TelevisionShow_NP).", "List all the books in ($x | TelevisionShow_NP).", "List all the television shows with book in ($x | TelevisionShow_NP).", "show me all books in ($x | TelevisionShow_NP).", "What are the books in ($x | TelevisionShow_NP)?", "What are the books in the ($x | TelevisionShow_NP)?", "What is ($x | TelevisionShow_NP) 's book?", "What is the book in ($x | TelevisionShow_NP)?", "What is the book in the ($x | TelevisionShow_NP)?", "What was ($x | TelevisionShow_NP) 's book?", "What was the book in ($x | TelevisionShow_NP)?", "What was the book in the ($x | TelevisionShow_NP)?", "What were the books in ($x | TelevisionShow_NP)?", "What were the books in the ($x | TelevisionShow_NP)?", "which television show is the book in ($x | TelevisionShow_NP)?", "which television show is the book in the ($x | TelevisionShow_NP)?", "which television show was the book in ($x | TelevisionShow_NP)?", "which television show was the book in the ($x | TelevisionShow_NP)?", "which television shows are the books in ($x | TelevisionShow_NP)?", "which television shows are the books in the ($x | TelevisionShow_NP)?", "which television shows were the books in ($x | TelevisionShow_NP)?", "which television shows were the books in the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "468",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in ($x | TelevisionShow_NP)?", "the books in ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "469",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Place_NP) post code.", "What is ($x | Place_NP) 's post code?", "What is the post code of ($x | Place_NP)?", "What is the post code of the ($x | Place_NP)?", "What was ($x | Place_NP) 's post code?", "What was the post code of ($x | Place_NP)?", "What was the post code of the ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "472",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the post code of ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "473",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Software_NP) release date.", "What is ($x | Software_NP) 's release date?", "What is the release date of ($x | Software_NP)?", "What is the release date of the ($x | Software_NP)?", "What was ($x | Software_NP) 's release date?", "What was the release date of ($x | Software_NP)?", "What was the release date of the ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "476",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the release date of ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "477",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all creators of ($x | FictionalCharacter_NP).", "Give me the ($x | FictionalCharacter_NP) creator.", "Give me the ($x | FictionalCharacter_NP) creators.", "List all creators of ($x | FictionalCharacter_NP).", "List all the creators of ($x | FictionalCharacter_NP).", "List all the persons with creator of ($x | FictionalCharacter_NP).", "show me all creators of ($x | FictionalCharacter_NP).", "which person is the creator of ($x | FictionalCharacter_NP)?", "which person is the creator of the ($x | FictionalCharacter_NP)?", "which person was the creator of ($x | FictionalCharacter_NP)?", "which person was the creator of the ($x | FictionalCharacter_NP)?", "which persons are the creators of ($x | FictionalCharacter_NP)?", "which persons are the creators of the ($x | FictionalCharacter_NP)?", "which persons were the creators of ($x | FictionalCharacter_NP)?", "which persons were the creators of the ($x | FictionalCharacter_NP)?", "Who are the creators of ($x | FictionalCharacter_NP)?", "Who are the creators of the ($x | FictionalCharacter_NP)?", "Who is ($x | FictionalCharacter_NP) 's creator?", "Who is the creator of ($x | FictionalCharacter_NP)?", "Who is the creator of the ($x | FictionalCharacter_NP)?", "Who was ($x | FictionalCharacter_NP) 's creator?", "Who was the creator of ($x | FictionalCharacter_NP)?", "Who was the creator of the ($x | FictionalCharacter_NP)?", "Who were the creators of ($x | FictionalCharacter_NP)?", "Who were the creators of the ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "481",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of ($x | FictionalCharacter_NP)?", "the creators of ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "482",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wine regions of ($x | Grape_NP).", "Give me the ($x | Grape_NP) wine region.", "Give me the ($x | Grape_NP) wine regions.", "List all the places with wine region of ($x | Grape_NP).", "List all the wine regions of ($x | Grape_NP).", "List all wine regions of ($x | Grape_NP).", "show me all wine regions of ($x | Grape_NP).", "What are the wine regions of ($x | Grape_NP)?", "What are the wine regions of the ($x | Grape_NP)?", "What is ($x | Grape_NP) 's wine region?", "What is the wine region of ($x | Grape_NP)?", "What is the wine region of the ($x | Grape_NP)?", "What was ($x | Grape_NP) 's wine region?", "What was the wine region of ($x | Grape_NP)?", "What was the wine region of the ($x | Grape_NP)?", "What were the wine regions of ($x | Grape_NP)?", "What were the wine regions of the ($x | Grape_NP)?", "which place is the wine region of ($x | Grape_NP)?", "which place is the wine region of the ($x | Grape_NP)?", "which place was the wine region of ($x | Grape_NP)?", "which place was the wine region of the ($x | Grape_NP)?", "which places are the wine regions of ($x | Grape_NP)?", "which places are the wine regions of the ($x | Grape_NP)?", "which places were the wine regions of ($x | Grape_NP)?", "which places were the wine regions of the ($x | Grape_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "486",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine region of ($x | Grape_NP)?", "the wine regions of ($x | Grape_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "487",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of ($x | City_NP).", "Give me the ($x | City_NP) time zone.", "Give me the ($x | City_NP) time zones.", "List all the time zones of ($x | City_NP).", "List all time zones of ($x | City_NP).", "show me all time zones of ($x | City_NP).", "What are the time zones of ($x | City_NP)?", "What are the time zones of the ($x | City_NP)?", "What is ($x | City_NP) 's time zone?", "What is the time zone of ($x | City_NP)?", "What is the time zone of the ($x | City_NP)?", "What was ($x | City_NP) 's time zone?", "What was the time zone of ($x | City_NP)?", "What was the time zone of the ($x | City_NP)?", "What were the time zones of ($x | City_NP)?", "What were the time zones of the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "491",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ($x | City_NP)?", "the time zones of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "492",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of ($x | City_NP).", "Give me the ($x | City_NP) time zone.", "Give me the ($x | City_NP) time zones.", "List all the time zones of ($x | City_NP).", "List all time zones of ($x | City_NP).", "show me all time zones of ($x | City_NP).", "What are the time zones of ($x | City_NP)?", "What are the time zones of the ($x | City_NP)?", "What is ($x | City_NP) 's time zone?", "What is the time zone of ($x | City_NP)?", "What is the time zone of the ($x | City_NP)?", "What was ($x | City_NP) 's time zone?", "What was the time zone of ($x | City_NP)?", "What was the time zone of the ($x | City_NP)?", "What were the time zones of ($x | City_NP)?", "What were the time zones of the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "496",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ($x | City_NP)?", "the time zones of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "497",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all minimum Temperatures of ($x | Planet_NP).", "Give me the ($x | Planet_NP) minimum Temperature.", "Give me the ($x | Planet_NP) minimum Temperatures.", "List all minimum Temperatures of ($x | Planet_NP).", "List all the minimum Temperatures of ($x | Planet_NP).", "show me all minimum Temperatures of ($x | Planet_NP).", "What are the minimum Temperatures of ($x | Planet_NP)?", "What are the minimum Temperatures of the ($x | Planet_NP)?", "What is ($x | Planet_NP) 's minimum Temperature?", "What is the minimum Temperature of ($x | Planet_NP)?", "What is the minimum Temperature of the ($x | Planet_NP)?", "What was ($x | Planet_NP) 's minimum Temperature?", "What was the minimum Temperature of ($x | Planet_NP)?", "What was the minimum Temperature of the ($x | Planet_NP)?", "What were the minimum Temperatures of ($x | Planet_NP)?", "What were the minimum Temperatures of the ($x | Planet_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "501",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the minimum Temperature of ($x | Planet_NP)?", "the minimum Temperatures of ($x | Planet_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "502",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Person_NP) nationality.", "List all the countries with nationality of ($x | Person_NP).", "What is ($x | Person_NP) 's nationality?", "What is the nationality of ($x | Person_NP)?", "What is the nationality of the ($x | Person_NP)?", "What was ($x | Person_NP) 's nationality?", "What was the nationality of ($x | Person_NP)?", "What was the nationality of the ($x | Person_NP)?", "which country is the nationality of ($x | Person_NP)?", "which country is the nationality of the ($x | Person_NP)?", "which country was the nationality of ($x | Person_NP)?", "which country was the nationality of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "505",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "506",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all developers of ($x | Work_NP).", "Give me the ($x | Work_NP) developer.", "Give me the ($x | Work_NP) developers.", "List all developers of ($x | Work_NP).", "List all the agents with developer of ($x | Work_NP).", "List all the developers of ($x | Work_NP).", "show me all developers of ($x | Work_NP).", "which agent is the developer of ($x | Work_NP)?", "which agent is the developer of the ($x | Work_NP)?", "which agent was the developer of ($x | Work_NP)?", "which agent was the developer of the ($x | Work_NP)?", "which agents are the developers of ($x | Work_NP)?", "which agents are the developers of the ($x | Work_NP)?", "which agents were the developers of ($x | Work_NP)?", "which agents were the developers of the ($x | Work_NP)?", "Who are the developers of ($x | Work_NP)?", "Who are the developers of the ($x | Work_NP)?", "Who is ($x | Work_NP) 's developer?", "Who is the developer of ($x | Work_NP)?", "Who is the developer of the ($x | Work_NP)?", "Who was ($x | Work_NP) 's developer?", "Who was the developer of ($x | Work_NP)?", "Who was the developer of the ($x | Work_NP)?", "Who were the developers of ($x | Work_NP)?", "Who were the developers of the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "510",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the developer of ($x | Work_NP)?", "the developers of ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "511",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of ($x | Person_NP).", "Give me the ($x | Person_NP) cause of death.", "Give me the ($x | Person_NP) causes of death.", "List all causes of death of ($x | Person_NP).", "List all the causes of death of ($x | Person_NP).", "show me all causes of death of ($x | Person_NP).", "What are the causes of death of ($x | Person_NP)?", "What are the causes of death of the ($x | Person_NP)?", "What is ($x | Person_NP) 's cause of death?", "What is the cause of death of ($x | Person_NP)?", "What is the cause of death of the ($x | Person_NP)?", "What was ($x | Person_NP) 's cause of death?", "What was the cause of death of ($x | Person_NP)?", "What was the cause of death of the ($x | Person_NP)?", "What were the causes of death of ($x | Person_NP)?", "What were the causes of death of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "515",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of ($x | Person_NP)?", "the causes of death of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "516",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of ($x | Thing_NP).", "Give me the ($x | Thing_NP) diameter.", "Give me the ($x | Thing_NP) diameters.", "List all diameters of ($x | Thing_NP).", "List all the diameters of ($x | Thing_NP).", "show me all diameters of ($x | Thing_NP).", "What are the diameters of ($x | Thing_NP)?", "What are the diameters of the ($x | Thing_NP)?", "What is ($x | Thing_NP) 's diameter?", "What is the diameter of ($x | Thing_NP)?", "What is the diameter of the ($x | Thing_NP)?", "What was ($x | Thing_NP) 's diameter?", "What was the diameter of ($x | Thing_NP)?", "What was the diameter of the ($x | Thing_NP)?", "What were the diameters of ($x | Thing_NP)?", "What were the diameters of the ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/diameter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "519",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the diameter of ($x | Thing_NP)?", "the diameters of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/diameter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "520",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Politician_NP) successor.", "List all the persons with successor of ($x | Politician_NP).", "which person is the successor of ($x | Politician_NP)?", "which person is the successor of the ($x | Politician_NP)?", "which person was the successor of ($x | Politician_NP)?", "which person was the successor of the ($x | Politician_NP)?", "Who is ($x | Politician_NP) 's successor?", "Who is the successor of ($x | Politician_NP)?", "Who is the successor of the ($x | Politician_NP)?", "Who was ($x | Politician_NP) 's successor?", "Who was the successor of ($x | Politician_NP)?", "Who was the successor of the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "523",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "524",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all vice president of ($x | Politician_NP).", "Give me the ($x | Politician_NP) vice president.", "List all the politicians with vice president of ($x | Politician_NP).", "List all the vice president of ($x | Politician_NP).", "List all vice president of ($x | Politician_NP).", "show me all vice president of ($x | Politician_NP).", "which politician is the vice president of ($x | Politician_NP)?", "which politician is the vice president of the ($x | Politician_NP)?", "which politician was the vice president of ($x | Politician_NP)?", "which politician was the vice president of the ($x | Politician_NP)?", "which politicians are the vice president of ($x | Politician_NP)?", "which politicians are the vice president of the ($x | Politician_NP)?", "which politicians were the vice president of ($x | Politician_NP)?", "which politicians were the vice president of the ($x | Politician_NP)?", "Who are the vice president of ($x | Politician_NP)?", "Who are the vice president of the ($x | Politician_NP)?", "Who is ($x | Politician_NP) 's vice president?", "Who is the vice president of ($x | Politician_NP)?", "Who is the vice president of the ($x | Politician_NP)?", "Who was ($x | Politician_NP) 's vice president?", "Who was the vice president of ($x | Politician_NP)?", "Who was the vice president of the ($x | Politician_NP)?", "Who were the vice president of ($x | Politician_NP)?", "Who were the vice president of the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "528",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "529",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of ($x | Person_NP).", "Give me the ($x | Person_NP) governor.", "Give me the ($x | Person_NP) governors.", "List all governors of ($x | Person_NP).", "List all the governors of ($x | Person_NP).", "List all the persons with governor of ($x | Person_NP).", "show me all governors of ($x | Person_NP).", "which person is the governor of ($x | Person_NP)?", "which person is the governor of the ($x | Person_NP)?", "which person was the governor of ($x | Person_NP)?", "which person was the governor of the ($x | Person_NP)?", "which persons are the governors of ($x | Person_NP)?", "which persons are the governors of the ($x | Person_NP)?", "which persons were the governors of ($x | Person_NP)?", "which persons were the governors of the ($x | Person_NP)?", "Who are the governors of ($x | Person_NP)?", "Who are the governors of the ($x | Person_NP)?", "Who is ($x | Person_NP) 's governor?", "Who is the governor of ($x | Person_NP)?", "Who is the governor of the ($x | Person_NP)?", "Who was ($x | Person_NP) 's governor?", "Who was the governor of ($x | Person_NP)?", "Who was the governor of the ($x | Person_NP)?", "Who were the governors of ($x | Person_NP)?", "Who were the governors of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "533",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of ($x | Person_NP)?", "the governors of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "534",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all addresses of ($x | ArchitecturalStructure_NP).", "Give me the ($x | ArchitecturalStructure_NP) address.", "Give me the ($x | ArchitecturalStructure_NP) addresses.", "List all addresses of ($x | ArchitecturalStructure_NP).", "List all the addresses of ($x | ArchitecturalStructure_NP).", "show me all addresses of ($x | ArchitecturalStructure_NP).", "What are the addresses of ($x | ArchitecturalStructure_NP)?", "What are the addresses of the ($x | ArchitecturalStructure_NP)?", "What is ($x | ArchitecturalStructure_NP) 's address?", "What is the address of ($x | ArchitecturalStructure_NP)?", "What is the address of the ($x | ArchitecturalStructure_NP)?", "What was ($x | ArchitecturalStructure_NP) 's address?", "What was the address of ($x | ArchitecturalStructure_NP)?", "What was the address of the ($x | ArchitecturalStructure_NP)?", "What were the addresses of ($x | ArchitecturalStructure_NP)?", "What were the addresses of the ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/address> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "538",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the address of ($x | ArchitecturalStructure_NP)?", "the addresses of ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/address> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "539",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all associated Musical Artists of ($x | Band_NP).", "Give me the ($x | Band_NP) associated Musical Artist.", "Give me the ($x | Band_NP) associated Musical Artists.", "List all associated Musical Artists of ($x | Band_NP).", "List all the associated Musical Artists of ($x | Band_NP).", "List all the places with associated Musical Artist of ($x | Band_NP).", "show me all associated Musical Artists of ($x | Band_NP).", "What are the associated Musical Artists of ($x | Band_NP)?", "What are the associated Musical Artists of the ($x | Band_NP)?", "What is ($x | Band_NP) 's associated Musical Artist?", "What is the associated Musical Artist of ($x | Band_NP)?", "What is the associated Musical Artist of the ($x | Band_NP)?", "What was ($x | Band_NP) 's associated Musical Artist?", "What was the associated Musical Artist of ($x | Band_NP)?", "What was the associated Musical Artist of the ($x | Band_NP)?", "What were the associated Musical Artists of ($x | Band_NP)?", "What were the associated Musical Artists of the ($x | Band_NP)?", "which place is the associated Musical Artist of ($x | Band_NP)?", "which place is the associated Musical Artist of the ($x | Band_NP)?", "which place was the associated Musical Artist of ($x | Band_NP)?", "which place was the associated Musical Artist of the ($x | Band_NP)?", "which places are the associated Musical Artists of ($x | Band_NP)?", "which places are the associated Musical Artists of the ($x | Band_NP)?", "which places were the associated Musical Artists of ($x | Band_NP)?", "which places were the associated Musical Artists of the ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "543",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the associated Musical Artist of ($x | Band_NP)?", "the associated Musical Artists of ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "544",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of ($x | Person_NP).", "Give me the ($x | Person_NP) resting place.", "Give me the ($x | Person_NP) resting places.", "List all resting places of ($x | Person_NP).", "List all the countries with resting place of ($x | Person_NP).", "List all the resting places of ($x | Person_NP).", "show me all resting places of ($x | Person_NP).", "What are the resting places of ($x | Person_NP)?", "What are the resting places of the ($x | Person_NP)?", "What is ($x | Person_NP) 's resting place?", "What is the resting place of ($x | Person_NP)?", "What is the resting place of the ($x | Person_NP)?", "What was ($x | Person_NP) 's resting place?", "What was the resting place of ($x | Person_NP)?", "What was the resting place of the ($x | Person_NP)?", "What were the resting places of ($x | Person_NP)?", "What were the resting places of the ($x | Person_NP)?", "which countries are the resting places of ($x | Person_NP)?", "which countries are the resting places of the ($x | Person_NP)?", "which countries were the resting places of ($x | Person_NP)?", "which countries were the resting places of the ($x | Person_NP)?", "which country is the resting place of ($x | Person_NP)?", "which country is the resting place of the ($x | Person_NP)?", "which country was the resting place of ($x | Person_NP)?", "which country was the resting place of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "548",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ($x | Person_NP)?", "the resting places of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "549",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all astronauts of ($x | SpaceMission_NP).", "Give me the ($x | SpaceMission_NP) astronaut.", "Give me the ($x | SpaceMission_NP) astronauts.", "List all astronauts of ($x | SpaceMission_NP).", "List all the astronauts of ($x | SpaceMission_NP).", "List all the Space missions with astronaut  of ($x | SpaceMission_NP).", "show me all astronauts of ($x | SpaceMission_NP).", "which space mission is the astronaut  of ($x | SpaceMission_NP)?", "which space mission is the astronaut  of the ($x | SpaceMission_NP)?", "which space mission was the astronaut  of ($x | SpaceMission_NP)?", "which space mission was the astronaut  of the ($x | SpaceMission_NP)?", "which Space missions are the astronauts of ($x | SpaceMission_NP)?", "which Space missions are the astronauts of the ($x | SpaceMission_NP)?", "which Space missions were the astronauts of ($x | SpaceMission_NP)?", "which Space missions were the astronauts of the ($x | SpaceMission_NP)?", "Who are the astronauts of ($x | SpaceMission_NP)?", "Who are the astronauts of the ($x | SpaceMission_NP)?", "Who is ($x | SpaceMission_NP) 's astronaut?", "Who is the astronaut  of ($x | SpaceMission_NP)?", "Who is the astronaut  of the ($x | SpaceMission_NP)?", "Who was ($x | SpaceMission_NP) 's astronaut?", "Who was the astronaut  of ($x | SpaceMission_NP)?", "Who was the astronaut  of the ($x | SpaceMission_NP)?", "Who were the astronauts of ($x | SpaceMission_NP)?", "Who were the astronauts of the ($x | SpaceMission_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "553",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the astronaut  of ($x | SpaceMission_NP)?", "the astronauts of ($x | SpaceMission_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "554",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of ($x | City_NP).", "Give me the ($x | City_NP) nickname.", "Give me the ($x | City_NP) nicknames.", "List all nicknames of ($x | City_NP).", "List all the nicknames of ($x | City_NP).", "show me all nicknames of ($x | City_NP).", "What are the nicknames of ($x | City_NP)?", "What are the nicknames of the ($x | City_NP)?", "What is ($x | City_NP) 's nickname?", "What is the nickname of ($x | City_NP)?", "What is the nickname of the ($x | City_NP)?", "What was ($x | City_NP) 's nickname?", "What was the nickname of ($x | City_NP)?", "What was the nickname of the ($x | City_NP)?", "What were the nicknames of ($x | City_NP)?", "What were the nicknames of the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "558",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nickname of ($x | City_NP)?", "the nicknames of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "559",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Give me the ($x | Model_NP) height.", "What is ($x | Model_NP) 's height?", "What is the height of ($x | Model_NP)?", "What is the height of the ($x | Model_NP)?", "What was ($x | Model_NP) 's height?", "What was the height of ($x | Model_NP)?", "What was the height of the ($x | Model_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "562",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the height of ($x | Model_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "563",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons lead ($x | Place_NP)?", "Who leads ($x | Place_NP)?", "Who leads the ($x | Place_NP)?", "Who leads the place ($x | Place_NP)?", "Who leads the places ($x | Place_NP)?", "Who led ($x | Place_NP)?", "Who led the ($x | Place_NP)?", "Who led the place ($x | Place_NP)?", "Who led the places ($x | Place_NP)?", "Who was the person that led ($x | Place_NP)?", "which person does ($x | Place_NP) lead?", "which person leads ($x | Place_NP)?", "which person led ($x | Place_NP)?", "which persons did ($x | Place_NP) lead?", "which persons does ($x | Place_NP) lead?", "which persons lead ($x | Place_NP)?", "which persons led ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "566",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce ($x | Film_NP)?", "Who produced ($x | Film_NP)?", "Who produced the ($x | Film_NP)?", "Who produced the film ($x | Film_NP)?", "Who produced the films ($x | Film_NP)?", "Who produces ($x | Film_NP)?", "Who produces the ($x | Film_NP)?", "Who produces the film ($x | Film_NP)?", "Who produces the films ($x | Film_NP)?", "Who was the person that produced ($x | Film_NP)?", "which person does ($x | Film_NP) produce?", "which person produced ($x | Film_NP)?", "which person produces ($x | Film_NP)?", "which persons did ($x | Film_NP) produce?", "which persons does ($x | Film_NP) produce?", "which persons produce ($x | Film_NP)?", "which persons produced ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "569",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents create ($x | TelevisionShow_NP)?", "Who created ($x | TelevisionShow_NP)?", "Who created the ($x | TelevisionShow_NP)?", "Who created the television show ($x | TelevisionShow_NP)?", "Who created the television shows ($x | TelevisionShow_NP)?", "Who creates ($x | TelevisionShow_NP)?", "Who creates the ($x | TelevisionShow_NP)?", "Who creates the television show ($x | TelevisionShow_NP)?", "Who creates the television shows ($x | TelevisionShow_NP)?", "Who was the agent that created ($x | TelevisionShow_NP)?", "which agent created ($x | TelevisionShow_NP)?", "which agent creates ($x | TelevisionShow_NP)?", "which agent does ($x | TelevisionShow_NP) create?", "which agents create ($x | TelevisionShow_NP)?", "which agents created ($x | TelevisionShow_NP)?", "which agents did ($x | TelevisionShow_NP) create?", "which agents does ($x | TelevisionShow_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "572",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who was the person that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which person founded ($x | Organisation_NP)?", "which person founds ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "575",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons direct ($x | Film_NP)?", "Who directed ($x | Film_NP)?", "Who directed the ($x | Film_NP)?", "Who directed the film ($x | Film_NP)?", "Who directed the films ($x | Film_NP)?", "Who directs ($x | Film_NP)?", "Who directs the ($x | Film_NP)?", "Who directs the film ($x | Film_NP)?", "Who directs the films ($x | Film_NP)?", "Who was the person that directed ($x | Film_NP)?", "which person directed ($x | Film_NP)?", "which person directs ($x | Film_NP)?", "which person does ($x | Film_NP) direct?", "which persons did ($x | Film_NP) direct?", "which persons direct ($x | Film_NP)?", "which persons directed ($x | Film_NP)?", "which persons does ($x | Film_NP) direct?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "578",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons discover ($x | Place_NP)?", "Who discovered ($x | Place_NP)?", "Who discovered the ($x | Place_NP)?", "Who discovered the place ($x | Place_NP)?", "Who discovered the places ($x | Place_NP)?", "Who discovers ($x | Place_NP)?", "Who discovers the ($x | Place_NP)?", "Who discovers the place ($x | Place_NP)?", "Who discovers the places ($x | Place_NP)?", "Who was the person that discovered ($x | Place_NP)?", "which person discovered ($x | Place_NP)?", "which person discovers ($x | Place_NP)?", "which person does ($x | Place_NP) discover?", "which persons did ($x | Place_NP) discover?", "which persons discover ($x | Place_NP)?", "which persons discovered ($x | Place_NP)?", "which persons does ($x | Place_NP) discover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "581",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports serve ($x | Airline_NP)?", "What served ($x | Airline_NP)?", "What served the ($x | Airline_NP)?", "What served the airline ($x | Airline_NP)?", "What served the airlines ($x | Airline_NP)?", "What serves ($x | Airline_NP)?", "What serves the ($x | Airline_NP)?", "What serves the airline ($x | Airline_NP)?", "What serves the airlines ($x | Airline_NP)?", "What was the airport that served ($x | Airline_NP)?", "which airport does ($x | Airline_NP) serve?", "which airport served ($x | Airline_NP)?", "which airport serves ($x | Airline_NP)?", "which airports did ($x | Airline_NP) serve?", "which airports does ($x | Airline_NP) serve?", "which airports serve ($x | Airline_NP)?", "which airports served ($x | Airline_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "584",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons program ($x | Software_NP)?", "Who programmed ($x | Software_NP)?", "Who programmed the ($x | Software_NP)?", "Who programmed the software ($x | Software_NP)?", "Who programmed the softwares ($x | Software_NP)?", "Who programs ($x | Software_NP)?", "Who programs the ($x | Software_NP)?", "Who programs the software ($x | Software_NP)?", "Who programs the softwares ($x | Software_NP)?", "Who was the person that programmed ($x | Software_NP)?", "which person does ($x | Software_NP) program?", "which person programmed ($x | Software_NP)?", "which person programs ($x | Software_NP)?", "which persons did ($x | Software_NP) program?", "which persons does ($x | Software_NP) program?", "which persons program ($x | Software_NP)?", "which persons programmed ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/programmer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "587",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors star ($x | Work_NP)?", "Who starred ($x | Work_NP)?", "Who starred the ($x | Work_NP)?", "Who starred the work ($x | Work_NP)?", "Who starred the works ($x | Work_NP)?", "Who stars ($x | Work_NP)?", "Who stars the ($x | Work_NP)?", "Who stars the work ($x | Work_NP)?", "Who stars the works ($x | Work_NP)?", "Who was the actor that starred ($x | Work_NP)?", "which actor does ($x | Work_NP) star?", "which actor starred ($x | Work_NP)?", "which actor stars ($x | Work_NP)?", "which actors did ($x | Work_NP) star?", "which actors does ($x | Work_NP) star?", "which actors star ($x | Work_NP)?", "which actors starred ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "590",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons write ($x | TelevisionShow_NP)?", "Who was the person that wrote ($x | TelevisionShow_NP)?", "Who writes ($x | TelevisionShow_NP)?", "Who writes the ($x | TelevisionShow_NP)?", "Who writes the television show ($x | TelevisionShow_NP)?", "Who writes the television shows ($x | TelevisionShow_NP)?", "Who wrote ($x | TelevisionShow_NP)?", "Who wrote the ($x | TelevisionShow_NP)?", "Who wrote the television show ($x | TelevisionShow_NP)?", "Who wrote the television shows ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) write?", "which person writes ($x | TelevisionShow_NP)?", "which person wrote ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) write?", "which persons does ($x | TelevisionShow_NP) write?", "which persons write ($x | TelevisionShow_NP)?", "which persons wrote ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "593",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works precede ($x | Work_NP)?", "What preceded ($x | Work_NP)?", "What preceded the ($x | Work_NP)?", "What preceded the work ($x | Work_NP)?", "What preceded the works ($x | Work_NP)?", "What precedes ($x | Work_NP)?", "What precedes the ($x | Work_NP)?", "What precedes the work ($x | Work_NP)?", "What precedes the works ($x | Work_NP)?", "What was the work that preceded ($x | Work_NP)?", "which work does ($x | Work_NP) precede?", "which work preceded ($x | Work_NP)?", "which work precedes ($x | Work_NP)?", "which works did ($x | Work_NP) precede?", "which works does ($x | Work_NP) precede?", "which works precede ($x | Work_NP)?", "which works preceded ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "596",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents publish ($x | Publisher_NP)?", "Who published ($x | Publisher_NP)?", "Who published the ($x | Publisher_NP)?", "Who published the publisher ($x | Publisher_NP)?", "Who published the publishers ($x | Publisher_NP)?", "Who publishes ($x | Publisher_NP)?", "Who publishes the ($x | Publisher_NP)?", "Who publishes the publisher ($x | Publisher_NP)?", "Who publishes the publishers ($x | Publisher_NP)?", "Who was the agent that published ($x | Publisher_NP)?", "which agent does ($x | Publisher_NP) publish?", "which agent published ($x | Publisher_NP)?", "which agent publishes ($x | Publisher_NP)?", "which agents did ($x | Publisher_NP) publish?", "which agents does ($x | Publisher_NP) publish?", "which agents publish ($x | Publisher_NP)?", "which agents published ($x | Publisher_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "599",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons paint ($x | Work_NP)?", "Who painted ($x | Work_NP)?", "Who painted the ($x | Work_NP)?", "Who painted the work ($x | Work_NP)?", "Who painted the works ($x | Work_NP)?", "Who paints ($x | Work_NP)?", "Who paints the ($x | Work_NP)?", "Who paints the work ($x | Work_NP)?", "Who paints the works ($x | Work_NP)?", "Who was the person that painted ($x | Work_NP)?", "which person does ($x | Work_NP) paint?", "which person painted ($x | Work_NP)?", "which person paints ($x | Work_NP)?", "which persons did ($x | Work_NP) paint?", "which persons does ($x | Work_NP) paint?", "which persons paint ($x | Work_NP)?", "which persons painted ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "602",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents maintain ($x | ArchitecturalStructure_NP)?", "Who maintained ($x | ArchitecturalStructure_NP)?", "Who maintained the ($x | ArchitecturalStructure_NP)?", "Who maintained the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who maintained the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who maintains ($x | ArchitecturalStructure_NP)?", "Who maintains the ($x | ArchitecturalStructure_NP)?", "Who maintains the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who maintains the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who was the agent that maintained ($x | ArchitecturalStructure_NP)?", "which agent does ($x | ArchitecturalStructure_NP) maintain?", "which agent maintained ($x | ArchitecturalStructure_NP)?", "which agent maintains ($x | ArchitecturalStructure_NP)?", "which agents did ($x | ArchitecturalStructure_NP) maintain?", "which agents does ($x | ArchitecturalStructure_NP) maintain?", "which agents maintain ($x | ArchitecturalStructure_NP)?", "which agents maintained ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "605",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who trained ($x | Athlete_NP)?", "Who trains ($x | Athlete_NP)?", "Who was the person that trained ($x | Athlete_NP)?", "Whom is ($x | Athlete_NP) train?", "Whom was ($x | Athlete_NP) train?", "which person trained ($x | Athlete_NP)?", "which person trains ($x | Athlete_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/trainer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "608",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EthnicGroup" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all countries live ($x | EthnicGroup_NP)?", "What lived ($x | EthnicGroup_NP)?", "What lived the ($x | EthnicGroup_NP)?", "What lived the ethnic group ($x | EthnicGroup_NP)?", "What lived the ethnic groups ($x | EthnicGroup_NP)?", "What lives ($x | EthnicGroup_NP)?", "What lives the ($x | EthnicGroup_NP)?", "What lives the ethnic group ($x | EthnicGroup_NP)?", "What lives the ethnic groups ($x | EthnicGroup_NP)?", "What was the country that lived ($x | EthnicGroup_NP)?", "which countries did ($x | EthnicGroup_NP) live?", "which countries does ($x | EthnicGroup_NP) live?", "which countries live ($x | EthnicGroup_NP)?", "which countries lived ($x | EthnicGroup_NP)?", "which country does ($x | EthnicGroup_NP) live?", "which country lived ($x | EthnicGroup_NP)?", "which country lives ($x | EthnicGroup_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "611",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents support ($x | Thing_NP)?", "Who supported ($x | Thing_NP)?", "Who supported the ($x | Thing_NP)?", "Who supported the ideologies ($x | Thing_NP)?", "Who supported the ideology ($x | Thing_NP)?", "Who supports ($x | Thing_NP)?", "Who supports the ($x | Thing_NP)?", "Who supports the ideologies ($x | Thing_NP)?", "Who supports the ideology ($x | Thing_NP)?", "Who was the agent that supported ($x | Thing_NP)?", "which agent does ($x | Thing_NP) support?", "which agent supported ($x | Thing_NP)?", "which agent supports ($x | Thing_NP)?", "which agents did ($x | Thing_NP) support?", "which agents does ($x | Thing_NP) support?", "which agents support ($x | Thing_NP)?", "which agents supported ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ideology> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "614",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all awards win ($x | Scientist_NP)?", "What was the award that won ($x | Scientist_NP)?", "What wins ($x | Scientist_NP)?", "What wins the ($x | Scientist_NP)?", "What wins the scientist ($x | Scientist_NP)?", "What wins the scientists ($x | Scientist_NP)?", "What won ($x | Scientist_NP)?", "What won the ($x | Scientist_NP)?", "What won the scientist ($x | Scientist_NP)?", "What won the scientists ($x | Scientist_NP)?", "which award does ($x | Scientist_NP) win?", "which award wins ($x | Scientist_NP)?", "which award won ($x | Scientist_NP)?", "which awards did ($x | Scientist_NP) win?", "which awards does ($x | Scientist_NP) win?", "which awards win ($x | Scientist_NP)?", "which awards won ($x | Scientist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "617",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents perform ($x | MusicalWork_NP)?", "Who performed ($x | MusicalWork_NP)?", "Who performed the ($x | MusicalWork_NP)?", "Who performed the musical work ($x | MusicalWork_NP)?", "Who performed the musical works ($x | MusicalWork_NP)?", "Who performs ($x | MusicalWork_NP)?", "Who performs the ($x | MusicalWork_NP)?", "Who performs the musical work ($x | MusicalWork_NP)?", "Who performs the musical works ($x | MusicalWork_NP)?", "Who was the agent that performed ($x | MusicalWork_NP)?", "which agent does ($x | MusicalWork_NP) perform?", "which agent performed ($x | MusicalWork_NP)?", "which agent performs ($x | MusicalWork_NP)?", "which agents did ($x | MusicalWork_NP) perform?", "which agents does ($x | MusicalWork_NP) perform?", "which agents perform ($x | MusicalWork_NP)?", "which agents performed ($x | MusicalWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "620",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons direct ($x | Software_NP)?", "Who directed ($x | Software_NP)?", "Who directed the ($x | Software_NP)?", "Who directed the software ($x | Software_NP)?", "Who directed the softwares ($x | Software_NP)?", "Who directs ($x | Software_NP)?", "Who directs the ($x | Software_NP)?", "Who directs the software ($x | Software_NP)?", "Who directs the softwares ($x | Software_NP)?", "Who was the person that directed ($x | Software_NP)?", "which person directed ($x | Software_NP)?", "which person directs ($x | Software_NP)?", "which person does ($x | Software_NP) direct?", "which persons did ($x | Software_NP) direct?", "which persons direct ($x | Software_NP)?", "which persons directed ($x | Software_NP)?", "which persons does ($x | Software_NP) direct?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "623",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all museums exhibit ($x | Artwork_NP)?", "What exhibited ($x | Artwork_NP)?", "What exhibited the ($x | Artwork_NP)?", "What exhibited the artwork ($x | Artwork_NP)?", "What exhibited the artworks ($x | Artwork_NP)?", "What exhibits ($x | Artwork_NP)?", "What exhibits the ($x | Artwork_NP)?", "What exhibits the artwork ($x | Artwork_NP)?", "What exhibits the artworks ($x | Artwork_NP)?", "What was the museum that exhibited ($x | Artwork_NP)?", "which museum does ($x | Artwork_NP) exhibit?", "which museum exhibited ($x | Artwork_NP)?", "which museum exhibits ($x | Artwork_NP)?", "which museums did ($x | Artwork_NP) exhibit?", "which museums does ($x | Artwork_NP) exhibit?", "which museums exhibit ($x | Artwork_NP)?", "which museums exhibited ($x | Artwork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/museum> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "626",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all populated places speak ($x | Language_NP)?", "What speaks ($x | Language_NP)?", "What speaks the ($x | Language_NP)?", "What speaks the language ($x | Language_NP)?", "What speaks the languages ($x | Language_NP)?", "What spoke ($x | Language_NP)?", "What spoke the ($x | Language_NP)?", "What spoke the language ($x | Language_NP)?", "What spoke the languages ($x | Language_NP)?", "What was the populated place that spoke ($x | Language_NP)?", "which populated place does ($x | Language_NP) speak?", "which populated place speaks ($x | Language_NP)?", "which populated place spoke ($x | Language_NP)?", "which populated places did ($x | Language_NP) speak?", "which populated places does ($x | Language_NP) speak?", "which populated places speak ($x | Language_NP)?", "which populated places spoke ($x | Language_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "629",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all populated places speak ($x | Language_NP)?", "What speaks ($x | Language_NP)?", "What speaks the ($x | Language_NP)?", "What speaks the language ($x | Language_NP)?", "What speaks the languages ($x | Language_NP)?", "What spoke ($x | Language_NP)?", "What spoke the ($x | Language_NP)?", "What spoke the language ($x | Language_NP)?", "What spoke the languages ($x | Language_NP)?", "What was the populated place that spoke ($x | Language_NP)?", "which populated place does ($x | Language_NP) speak?", "which populated place speaks ($x | Language_NP)?", "which populated place spoke ($x | Language_NP)?", "which populated places did ($x | Language_NP) speak?", "which populated places does ($x | Language_NP) speak?", "which populated places speak ($x | Language_NP)?", "which populated places spoke ($x | Language_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "632",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons breed ($x | Thing_NP)?", "Who bred ($x | Thing_NP)?", "Who bred the ($x | Thing_NP)?", "Who bred the animal ($x | Thing_NP)?", "Who bred the animals ($x | Thing_NP)?", "Who breeds ($x | Thing_NP)?", "Who breeds the ($x | Thing_NP)?", "Who breeds the animal ($x | Thing_NP)?", "Who breeds the animals ($x | Thing_NP)?", "Who was the person that bred ($x | Thing_NP)?", "which person bred ($x | Thing_NP)?", "which person breeds ($x | Thing_NP)?", "which person does ($x | Thing_NP) breed?", "which persons bred ($x | Thing_NP)?", "which persons breed ($x | Thing_NP)?", "which persons did ($x | Thing_NP) breed?", "which persons does ($x | Thing_NP) breed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/breeder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "635",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares develop ($x | Company_NP)?", "What developed ($x | Company_NP)?", "What developed the ($x | Company_NP)?", "What developed the company ($x | Company_NP)?", "What develops ($x | Company_NP)?", "What develops the ($x | Company_NP)?", "What develops the company ($x | Company_NP)?", "What was the software that developed ($x | Company_NP)?", "which software developed ($x | Company_NP)?", "which software develops ($x | Company_NP)?", "which software does ($x | Company_NP) develop?", "which softwares develop ($x | Company_NP)?", "which softwares developed ($x | Company_NP)?", "which softwares did ($x | Company_NP) develop?", "which softwares does ($x | Company_NP) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "638",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents develop ($x | VideoGame_NP)?", "Who developed ($x | VideoGame_NP)?", "Who developed the ($x | VideoGame_NP)?", "Who developed the video game ($x | VideoGame_NP)?", "Who developed the video games ($x | VideoGame_NP)?", "Who develops ($x | VideoGame_NP)?", "Who develops the ($x | VideoGame_NP)?", "Who develops the video game ($x | VideoGame_NP)?", "Who develops the video games ($x | VideoGame_NP)?", "Who was the agent that developed ($x | VideoGame_NP)?", "which agent developed ($x | VideoGame_NP)?", "which agent develops ($x | VideoGame_NP)?", "which agent does ($x | VideoGame_NP) develop?", "which agents develop ($x | VideoGame_NP)?", "which agents developed ($x | VideoGame_NP)?", "which agents did ($x | VideoGame_NP) develop?", "which agents does ($x | VideoGame_NP) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "641",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded ($x | Politician_NP)?", "Who precedes ($x | Politician_NP)?", "Who was the politician that preceded ($x | Politician_NP)?", "Whom is ($x | Politician_NP) precede?", "Whom was ($x | Politician_NP) precede?", "which politician preceded ($x | Politician_NP)?", "which politician precedes ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/after> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "644",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who developed ($x | Software_NP)?", "Who develops ($x | Software_NP)?", "which company develop ($x | Software_NP)?", "which company developed ($x | Software_NP)?", "which company develops ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "647",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who developed ($x | Software_NP)?", "Who develops ($x | Software_NP)?", "which company develop ($x | Software_NP)?", "which company developed ($x | Software_NP)?", "which company develops ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "650",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors play ($x | Work_NP)?", "Who played ($x | Work_NP)?", "Who played the ($x | Work_NP)?", "Who played the work ($x | Work_NP)?", "Who played the works ($x | Work_NP)?", "Who plays ($x | Work_NP)?", "Who plays the ($x | Work_NP)?", "Who plays the work ($x | Work_NP)?", "Who plays the works ($x | Work_NP)?", "Who was the actor that played ($x | Work_NP)?", "which actor does ($x | Work_NP) play?", "which actor played ($x | Work_NP)?", "which actor plays ($x | Work_NP)?", "which actors did ($x | Work_NP) play?", "which actors does ($x | Work_NP) play?", "which actors play ($x | Work_NP)?", "which actors played ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "653",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents own ($x | Thing_NP)?", "Who owned ($x | Thing_NP)?", "Who owned the ($x | Thing_NP)?", "Who owned the animal ($x | Thing_NP)?", "Who owned the animals ($x | Thing_NP)?", "Who owns ($x | Thing_NP)?", "Who owns the ($x | Thing_NP)?", "Who owns the animal ($x | Thing_NP)?", "Who owns the animals ($x | Thing_NP)?", "Who was the agent that owned ($x | Thing_NP)?", "which agent does ($x | Thing_NP) own?", "which agent owned ($x | Thing_NP)?", "which agent owns ($x | Thing_NP)?", "which agents did ($x | Thing_NP) own?", "which agents does ($x | Thing_NP) own?", "which agents own ($x | Thing_NP)?", "which agents owned ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "656",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who produced ($x | Ship_NP)?", "Who produces ($x | Ship_NP)?", "which company marry to ($x | Ship_NP)?", "which company produced ($x | Ship_NP)?", "which company produces ($x | Ship_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "659",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all academic journals cover ($x | Thing_NP)?", "What covered ($x | Thing_NP)?", "What covered the ($x | Thing_NP)?", "What covers ($x | Thing_NP)?", "What covers the ($x | Thing_NP)?", "What was the academic journal that covered ($x | Thing_NP)?", "which academic journal covered ($x | Thing_NP)?", "which academic journal covers ($x | Thing_NP)?", "which academic journal does ($x | Thing_NP) cover?", "which academic journals cover ($x | Thing_NP)?", "which academic journals covered ($x | Thing_NP)?", "which academic journals did ($x | Thing_NP) cover?", "which academic journals does ($x | Thing_NP) cover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "662",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all awards win ($x | Writer_NP)?", "What was the award that won ($x | Writer_NP)?", "What wins ($x | Writer_NP)?", "What wins the ($x | Writer_NP)?", "What wins the writer ($x | Writer_NP)?", "What wins the writers ($x | Writer_NP)?", "What won ($x | Writer_NP)?", "What won the ($x | Writer_NP)?", "What won the writer ($x | Writer_NP)?", "What won the writers ($x | Writer_NP)?", "which award does ($x | Writer_NP) win?", "which award wins ($x | Writer_NP)?", "which award won ($x | Writer_NP)?", "which awards did ($x | Writer_NP) win?", "which awards does ($x | Writer_NP) win?", "which awards win ($x | Writer_NP)?", "which awards won ($x | Writer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "665",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations control ($x | Airport_NP)?", "Who controlled ($x | Airport_NP)?", "Who controlled the ($x | Airport_NP)?", "Who controlled the airport ($x | Airport_NP)?", "Who controlled the airports ($x | Airport_NP)?", "Who controls ($x | Airport_NP)?", "Who controls the ($x | Airport_NP)?", "Who controls the airport ($x | Airport_NP)?", "Who controls the airports ($x | Airport_NP)?", "Who was the organization that controlled ($x | Airport_NP)?", "which organization controlled ($x | Airport_NP)?", "which organization controls ($x | Airport_NP)?", "which organization does ($x | Airport_NP) control?", "which organizations control ($x | Airport_NP)?", "which organizations controlled ($x | Airport_NP)?", "which organizations did ($x | Airport_NP) control?", "which organizations does ($x | Airport_NP) control?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/controlledby> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "668",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who produced ($x | Person_NP)?", "Who produces ($x | Person_NP)?", "Who was the person that produced ($x | Person_NP)?", "Whom is ($x | Person_NP) marry to?", "Whom was ($x | Person_NP) marry to?", "which person produced ($x | Person_NP)?", "which person produces ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "671",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons write ($x | Album_NP)?", "Who was the person that wrote ($x | Album_NP)?", "Who writes ($x | Album_NP)?", "Who writes the ($x | Album_NP)?", "Who writes the album ($x | Album_NP)?", "Who writes the albums ($x | Album_NP)?", "Who wrote ($x | Album_NP)?", "Who wrote the ($x | Album_NP)?", "Who wrote the album ($x | Album_NP)?", "Who wrote the albums ($x | Album_NP)?", "which person does ($x | Album_NP) write?", "which person writes ($x | Album_NP)?", "which person wrote ($x | Album_NP)?", "which persons did ($x | Album_NP) write?", "which persons does ($x | Album_NP) write?", "which persons write ($x | Album_NP)?", "which persons wrote ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/allLyrics> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "674",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all countries speak ($x | Language_NP)?", "What speaks ($x | Language_NP)?", "What speaks the ($x | Language_NP)?", "What speaks the language ($x | Language_NP)?", "What speaks the languages ($x | Language_NP)?", "What spoke ($x | Language_NP)?", "What spoke the ($x | Language_NP)?", "What spoke the language ($x | Language_NP)?", "What spoke the languages ($x | Language_NP)?", "What was the country that spoke ($x | Language_NP)?", "which countries did ($x | Language_NP) speak?", "which countries does ($x | Language_NP) speak?", "which countries speak ($x | Language_NP)?", "which countries spoke ($x | Language_NP)?", "which country does ($x | Language_NP) speak?", "which country speaks ($x | Language_NP)?", "which country spoke ($x | Language_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "677",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons illustrate ($x | WrittenWork_NP)?", "Who illustrated ($x | WrittenWork_NP)?", "Who illustrated the ($x | WrittenWork_NP)?", "Who illustrated the written work ($x | WrittenWork_NP)?", "Who illustrates ($x | WrittenWork_NP)?", "Who illustrates the ($x | WrittenWork_NP)?", "Who illustrates the written work ($x | WrittenWork_NP)?", "Who was the person that illustrated ($x | WrittenWork_NP)?", "which person does ($x | WrittenWork_NP) illustrate?", "which person illustrated ($x | WrittenWork_NP)?", "which person illustrates ($x | WrittenWork_NP)?", "which persons did ($x | WrittenWork_NP) illustrate?", "which persons does ($x | WrittenWork_NP) illustrate?", "which persons illustrate ($x | WrittenWork_NP)?", "which persons illustrated ($x | WrittenWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "680",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all broadcasters air ($x | Film_NP)?", "What aired ($x | Film_NP)?", "What aired the ($x | Film_NP)?", "What aired the film ($x | Film_NP)?", "What aired the films ($x | Film_NP)?", "What airs ($x | Film_NP)?", "What airs the ($x | Film_NP)?", "What airs the film ($x | Film_NP)?", "What airs the films ($x | Film_NP)?", "What was the broadcaster that aired ($x | Film_NP)?", "which broadcaster aired ($x | Film_NP)?", "which broadcaster airs ($x | Film_NP)?", "which broadcaster does ($x | Film_NP) air?", "which broadcasters air ($x | Film_NP)?", "which broadcasters aired ($x | Film_NP)?", "which broadcasters did ($x | Film_NP) air?", "which broadcasters does ($x | Film_NP) air?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/network> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "683",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works follow ($x | Work_NP)?", "What followed ($x | Work_NP)?", "What followed the ($x | Work_NP)?", "What followed the work ($x | Work_NP)?", "What followed the works ($x | Work_NP)?", "What follows ($x | Work_NP)?", "What follows the ($x | Work_NP)?", "What follows the work ($x | Work_NP)?", "What follows the works ($x | Work_NP)?", "What was the work that followed ($x | Work_NP)?", "which work does ($x | Work_NP) follow?", "which work followed ($x | Work_NP)?", "which work follows ($x | Work_NP)?", "which works did ($x | Work_NP) follow?", "which works does ($x | Work_NP) follow?", "which works follow ($x | Work_NP)?", "which works followed ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "686",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums follow ($x | Album_NP)?", "What followed ($x | Album_NP)?", "What followed the ($x | Album_NP)?", "What followed the album ($x | Album_NP)?", "What followed the albums ($x | Album_NP)?", "What follows ($x | Album_NP)?", "What follows the ($x | Album_NP)?", "What follows the album ($x | Album_NP)?", "What follows the albums ($x | Album_NP)?", "What was the album that followed ($x | Album_NP)?", "which album does ($x | Album_NP) follow?", "which album followed ($x | Album_NP)?", "which album follows ($x | Album_NP)?", "which albums did ($x | Album_NP) follow?", "which albums does ($x | Album_NP) follow?", "which albums follow ($x | Album_NP)?", "which albums followed ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nextTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "689",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons design ($x | Software_NP)?", "Who designed ($x | Software_NP)?", "Who designed the ($x | Software_NP)?", "Who designed the software ($x | Software_NP)?", "Who designed the softwares ($x | Software_NP)?", "Who designs ($x | Software_NP)?", "Who designs the ($x | Software_NP)?", "Who designs the software ($x | Software_NP)?", "Who designs the softwares ($x | Software_NP)?", "Who was the person that designed ($x | Software_NP)?", "which person designed ($x | Software_NP)?", "which person designs ($x | Software_NP)?", "which person does ($x | Software_NP) design?", "which persons design ($x | Software_NP)?", "which persons designed ($x | Software_NP)?", "which persons did ($x | Software_NP) design?", "which persons does ($x | Software_NP) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "692",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "How much did ($x | Film_NP) cost?", "How much does ($x | Film_NP) cost?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "695",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons design ($x | Building_NP)?", "Who designed ($x | Building_NP)?", "Who designed the ($x | Building_NP)?", "Who designed the Building ($x | Building_NP)?", "Who designed the dbo:Buildings ($x | Building_NP)?", "Who designs ($x | Building_NP)?", "Who designs the ($x | Building_NP)?", "Who designs the Building ($x | Building_NP)?", "Who designs the dbo:Buildings ($x | Building_NP)?", "Who was the person that designed ($x | Building_NP)?", "which person designed ($x | Building_NP)?", "which person designs ($x | Building_NP)?", "which person does ($x | Building_NP) design?", "which persons design ($x | Building_NP)?", "which persons designed ($x | Building_NP)?", "which persons did ($x | Building_NP) design?", "which persons does ($x | Building_NP) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "698",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons write ($x | Work_NP)?", "Who was the person that wrote ($x | Work_NP)?", "Who writes ($x | Work_NP)?", "Who writes the ($x | Work_NP)?", "Who writes the work ($x | Work_NP)?", "Who writes the works ($x | Work_NP)?", "Who wrote ($x | Work_NP)?", "Who wrote the ($x | Work_NP)?", "Who wrote the work ($x | Work_NP)?", "Who wrote the works ($x | Work_NP)?", "which person does ($x | Work_NP) write?", "which person writes ($x | Work_NP)?", "which person wrote ($x | Work_NP)?", "which persons did ($x | Work_NP) write?", "which persons does ($x | Work_NP) write?", "which persons write ($x | Work_NP)?", "which persons wrote ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "701",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose the soundtrack for ($x | Film_NP)?", "Who compose the soundtrack for ($x | Film_NP)?", "Who compose the soundtrack for the ($x | Film_NP)?", "Who compose the soundtrack for the film ($x | Film_NP)?", "Who compose the soundtrack for the films ($x | Film_NP)?", "Who was the person that compose the soundtrack for ($x | Film_NP)?", "which person compose the soundtrack for ($x | Film_NP)?", "which person does ($x | Film_NP) compose the soundtrack for?", "which persons compose the soundtrack for ($x | Film_NP)?", "which persons did ($x | Film_NP) compose the soundtrack for?", "which persons does ($x | Film_NP) compose the soundtrack for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "704",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Agent_NP)?", "Who founds ($x | Agent_NP)?", "Who was the pope that founded ($x | Agent_NP)?", "Whom is ($x | Agent_NP) found?", "Whom was ($x | Agent_NP) found?", "which pope founded ($x | Agent_NP)?", "which pope founds ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "707",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents develop ($x | VideoGame_NP)?", "Who developed ($x | VideoGame_NP)?", "Who developed the ($x | VideoGame_NP)?", "Who developed the video game ($x | VideoGame_NP)?", "Who developed the video games ($x | VideoGame_NP)?", "Who develops ($x | VideoGame_NP)?", "Who develops the ($x | VideoGame_NP)?", "Who develops the video game ($x | VideoGame_NP)?", "Who develops the video games ($x | VideoGame_NP)?", "Who was the agent that developed ($x | VideoGame_NP)?", "which agent developed ($x | VideoGame_NP)?", "which agent develops ($x | VideoGame_NP)?", "which agent does ($x | VideoGame_NP) develop?", "which agents develop ($x | VideoGame_NP)?", "which agents developed ($x | VideoGame_NP)?", "which agents did ($x | VideoGame_NP) develop?", "which agents does ($x | VideoGame_NP) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "710",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents create ($x | TelevisionShow_NP)?", "Who created ($x | TelevisionShow_NP)?", "Who created the ($x | TelevisionShow_NP)?", "Who created the television show ($x | TelevisionShow_NP)?", "Who created the television shows ($x | TelevisionShow_NP)?", "Who creates ($x | TelevisionShow_NP)?", "Who creates the ($x | TelevisionShow_NP)?", "Who creates the television show ($x | TelevisionShow_NP)?", "Who creates the television shows ($x | TelevisionShow_NP)?", "Who was the agent that created ($x | TelevisionShow_NP)?", "which agent created ($x | TelevisionShow_NP)?", "which agent creates ($x | TelevisionShow_NP)?", "which agent does ($x | TelevisionShow_NP) create?", "which agents create ($x | TelevisionShow_NP)?", "which agents created ($x | TelevisionShow_NP)?", "which agents did ($x | TelevisionShow_NP) create?", "which agents does ($x | TelevisionShow_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "713",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create ($x | Book_NP)?", "Who created ($x | Book_NP)?", "Who created the ($x | Book_NP)?", "Who created the book ($x | Book_NP)?", "Who created the books ($x | Book_NP)?", "Who creates ($x | Book_NP)?", "Who creates the ($x | Book_NP)?", "Who creates the book ($x | Book_NP)?", "Who creates the books ($x | Book_NP)?", "Who was the person that created ($x | Book_NP)?", "which person created ($x | Book_NP)?", "which person creates ($x | Book_NP)?", "which person does ($x | Book_NP) create?", "which persons create ($x | Book_NP)?", "which persons created ($x | Book_NP)?", "which persons did ($x | Book_NP) create?", "which persons does ($x | Book_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "716",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose the music for ($x | Film_NP)?", "Who compose the music for ($x | Film_NP)?", "Who compose the music for the ($x | Film_NP)?", "Who compose the music for the film ($x | Film_NP)?", "Who compose the music for the films ($x | Film_NP)?", "Who was the person that compose the music for ($x | Film_NP)?", "which person compose the music for ($x | Film_NP)?", "which person does ($x | Film_NP) compose the music for?", "which persons compose the music for ($x | Film_NP)?", "which persons did ($x | Film_NP) compose the music for?", "which persons does ($x | Film_NP) compose the music for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "719",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What called ($x | Person_NP)?", "What called the ($x | Person_NP)?", "What called the person ($x | Person_NP)?", "What called the persons ($x | Person_NP)?", "What calls ($x | Person_NP)?", "What calls the ($x | Person_NP)?", "What calls the person ($x | Person_NP)?", "What calls the persons ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "722",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents own ($x | Airport_NP)?", "Who owned ($x | Airport_NP)?", "Who owned the ($x | Airport_NP)?", "Who owned the airport ($x | Airport_NP)?", "Who owned the airports ($x | Airport_NP)?", "Who owns ($x | Airport_NP)?", "Who owns the ($x | Airport_NP)?", "Who owns the airport ($x | Airport_NP)?", "Who owns the airports ($x | Airport_NP)?", "Who was the agent that owned ($x | Airport_NP)?", "which agent does ($x | Airport_NP) own?", "which agent owned ($x | Airport_NP)?", "which agent owns ($x | Airport_NP)?", "which agents did ($x | Airport_NP) own?", "which agents does ($x | Airport_NP) own?", "which agents own ($x | Airport_NP)?", "which agents owned ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "725",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded ($x | Politician_NP)?", "Who precedes ($x | Politician_NP)?", "Who was the politician that preceded ($x | Politician_NP)?", "Whom is ($x | Politician_NP) precede?", "Whom was ($x | Politician_NP) precede?", "which politician preceded ($x | Politician_NP)?", "which politician precedes ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/predecessor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "728",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons win ($x | Work_NP)?", "Who was the person that won ($x | Work_NP)?", "Who wins ($x | Work_NP)?", "Who wins the ($x | Work_NP)?", "Who wins the work ($x | Work_NP)?", "Who wins the works ($x | Work_NP)?", "Who won ($x | Work_NP)?", "Who won the ($x | Work_NP)?", "Who won the work ($x | Work_NP)?", "Who won the works ($x | Work_NP)?", "which person does ($x | Work_NP) win?", "which person wins ($x | Work_NP)?", "which person won ($x | Work_NP)?", "which persons did ($x | Work_NP) win?", "which persons does ($x | Work_NP) win?", "which persons win ($x | Work_NP)?", "which persons won ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "731",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places border ($x | State_NP)?", "What bordered ($x | State_NP)?", "What bordered the ($x | State_NP)?", "What bordered the state ($x | State_NP)?", "What bordered the states ($x | State_NP)?", "What borders ($x | State_NP)?", "What borders the ($x | State_NP)?", "What borders the state ($x | State_NP)?", "What borders the states ($x | State_NP)?", "What was the place that bordered ($x | State_NP)?", "which place bordered ($x | State_NP)?", "which place borders ($x | State_NP)?", "which place does ($x | State_NP) border?", "which places border ($x | State_NP)?", "which places bordered ($x | State_NP)?", "which places did ($x | State_NP) border?", "which places does ($x | State_NP) border?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "734",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who was the pope that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which pope founded ($x | Organisation_NP)?", "which pope founds ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "737",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons play ($x | Film_NP)?", "Who played ($x | Film_NP)?", "Who played the ($x | Film_NP)?", "Who played the film ($x | Film_NP)?", "Who played the films ($x | Film_NP)?", "Who plays ($x | Film_NP)?", "Who plays the ($x | Film_NP)?", "Who plays the film ($x | Film_NP)?", "Who plays the films ($x | Film_NP)?", "Who was the person that played ($x | Film_NP)?", "which person does ($x | Film_NP) play?", "which person played ($x | Film_NP)?", "which person plays ($x | Film_NP)?", "which persons did ($x | Film_NP) play?", "which persons does ($x | Film_NP) play?", "which persons play ($x | Film_NP)?", "which persons played ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "740",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who played ($x | FictionalCharacter_NP)?", "Who plays ($x | FictionalCharacter_NP)?", "Who was the person that played ($x | FictionalCharacter_NP)?", "Whom is ($x | FictionalCharacter_NP) play?", "Whom was ($x | FictionalCharacter_NP) play?", "which person played ($x | FictionalCharacter_NP)?", "which person plays ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "743",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons write ($x | MusicalWork_NP)?", "Who was the person that wrote ($x | MusicalWork_NP)?", "Who writes ($x | MusicalWork_NP)?", "Who writes the ($x | MusicalWork_NP)?", "Who writes the musical work ($x | MusicalWork_NP)?", "Who writes the musical works ($x | MusicalWork_NP)?", "Who wrote ($x | MusicalWork_NP)?", "Who wrote the ($x | MusicalWork_NP)?", "Who wrote the musical work ($x | MusicalWork_NP)?", "Who wrote the musical works ($x | MusicalWork_NP)?", "which person does ($x | MusicalWork_NP) write?", "which person writes ($x | MusicalWork_NP)?", "which person wrote ($x | MusicalWork_NP)?", "which persons did ($x | MusicalWork_NP) write?", "which persons does ($x | MusicalWork_NP) write?", "which persons write ($x | MusicalWork_NP)?", "which persons wrote ($x | MusicalWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "746",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose ($x | Work_NP)?", "Who composed ($x | Work_NP)?", "Who composed the ($x | Work_NP)?", "Who composed the work ($x | Work_NP)?", "Who composed the works ($x | Work_NP)?", "Who composes ($x | Work_NP)?", "Who composes the ($x | Work_NP)?", "Who composes the work ($x | Work_NP)?", "Who composes the works ($x | Work_NP)?", "Who was the person that composed ($x | Work_NP)?", "which person composed ($x | Work_NP)?", "which person composes ($x | Work_NP)?", "which person does ($x | Work_NP) compose?", "which persons compose ($x | Work_NP)?", "which persons composed ($x | Work_NP)?", "which persons did ($x | Work_NP) compose?", "which persons does ($x | Work_NP) compose?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "749",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents publish ($x | Work_NP)?", "Who published ($x | Work_NP)?", "Who published the ($x | Work_NP)?", "Who published the work ($x | Work_NP)?", "Who published the works ($x | Work_NP)?", "Who publishes ($x | Work_NP)?", "Who publishes the ($x | Work_NP)?", "Who publishes the work ($x | Work_NP)?", "Who publishes the works ($x | Work_NP)?", "Who was the agent that published ($x | Work_NP)?", "which agent does ($x | Work_NP) publish?", "which agent published ($x | Work_NP)?", "which agent publishes ($x | Work_NP)?", "which agents did ($x | Work_NP) publish?", "which agents does ($x | Work_NP) publish?", "which agents publish ($x | Work_NP)?", "which agents published ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "752",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all publishers publish ($x | Book_NP)?", "What published ($x | Book_NP)?", "What published the ($x | Book_NP)?", "What published the book ($x | Book_NP)?", "What published the books ($x | Book_NP)?", "What publishes ($x | Book_NP)?", "What publishes the ($x | Book_NP)?", "What publishes the book ($x | Book_NP)?", "What publishes the books ($x | Book_NP)?", "What was the publisher that published ($x | Book_NP)?", "which publisher does ($x | Book_NP) publish?", "which publisher published ($x | Book_NP)?", "which publisher publishes ($x | Book_NP)?", "which publishers did ($x | Book_NP) publish?", "which publishers does ($x | Book_NP) publish?", "which publishers publish ($x | Book_NP)?", "which publishers published ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "755",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers drain ($x | BodyOfWater_NP)?", "What drained ($x | BodyOfWater_NP)?", "What drained the ($x | BodyOfWater_NP)?", "What drained the river ($x | BodyOfWater_NP)?", "What drained the rivers ($x | BodyOfWater_NP)?", "What drains ($x | BodyOfWater_NP)?", "What drains the ($x | BodyOfWater_NP)?", "What drains the river ($x | BodyOfWater_NP)?", "What drains the rivers ($x | BodyOfWater_NP)?", "What was the river that drained ($x | BodyOfWater_NP)?", "which river does ($x | BodyOfWater_NP) drain?", "which river drained ($x | BodyOfWater_NP)?", "which river drains ($x | BodyOfWater_NP)?", "which rivers did ($x | BodyOfWater_NP) drain?", "which rivers does ($x | BodyOfWater_NP) drain?", "which rivers drain ($x | BodyOfWater_NP)?", "which rivers drained ($x | BodyOfWater_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/outflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "758",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons write ($x | Song_NP)?", "Who was the person that wrote ($x | Song_NP)?", "Who writes ($x | Song_NP)?", "Who writes the ($x | Song_NP)?", "Who writes the song ($x | Song_NP)?", "Who writes the songs ($x | Song_NP)?", "Who wrote ($x | Song_NP)?", "Who wrote the ($x | Song_NP)?", "Who wrote the song ($x | Song_NP)?", "Who wrote the songs ($x | Song_NP)?", "which person does ($x | Song_NP) write?", "which person writes ($x | Song_NP)?", "which person wrote ($x | Song_NP)?", "which persons did ($x | Song_NP) write?", "which persons does ($x | Song_NP) write?", "which persons write ($x | Song_NP)?", "which persons wrote ($x | Song_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "761",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who inspired ($x | Person_NP)?", "Who inspires ($x | Person_NP)?", "Who was the person that inspired ($x | Person_NP)?", "Whom is ($x | Person_NP) inspire?", "Whom was ($x | Person_NP) inspire?", "which person inspired ($x | Person_NP)?", "which person inspires ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "764",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons paint ($x | Work_NP)?", "Who painted ($x | Work_NP)?", "Who painted the ($x | Work_NP)?", "Who painted the work ($x | Work_NP)?", "Who painted the works ($x | Work_NP)?", "Who paints ($x | Work_NP)?", "Who paints the ($x | Work_NP)?", "Who paints the work ($x | Work_NP)?", "Who paints the works ($x | Work_NP)?", "Who was the person that painted ($x | Work_NP)?", "which person does ($x | Work_NP) paint?", "which person painted ($x | Work_NP)?", "which person paints ($x | Work_NP)?", "which persons did ($x | Work_NP) paint?", "which persons does ($x | Work_NP) paint?", "which persons paint ($x | Work_NP)?", "which persons painted ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "767",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operate ($x | Airport_NP)?", "Who operated ($x | Airport_NP)?", "Who operated the ($x | Airport_NP)?", "Who operated the airport ($x | Airport_NP)?", "Who operated the airports ($x | Airport_NP)?", "Who operates ($x | Airport_NP)?", "Who operates the ($x | Airport_NP)?", "Who operates the airport ($x | Airport_NP)?", "Who operates the airports ($x | Airport_NP)?", "Who was the organization that operated ($x | Airport_NP)?", "which organization does ($x | Airport_NP) operate?", "which organization operated ($x | Airport_NP)?", "which organization operates ($x | Airport_NP)?", "which organizations did ($x | Airport_NP) operate?", "which organizations does ($x | Airport_NP) operate?", "which organizations operate ($x | Airport_NP)?", "which organizations operated ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "770",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all launch pads operate ($x | Organisation_NP)?", "What operated ($x | Organisation_NP)?", "What operated the ($x | Organisation_NP)?", "What operated the organization ($x | Organisation_NP)?", "What operated the organizations ($x | Organisation_NP)?", "What operates ($x | Organisation_NP)?", "What operates the ($x | Organisation_NP)?", "What operates the organization ($x | Organisation_NP)?", "What operates the organizations ($x | Organisation_NP)?", "What was the launch pad that operated ($x | Organisation_NP)?", "which launch pad does ($x | Organisation_NP) operate?", "which launch pad operated ($x | Organisation_NP)?", "which launch pad operates ($x | Organisation_NP)?", "which launch pads did ($x | Organisation_NP) operate?", "which launch pads does ($x | Organisation_NP) operate?", "which launch pads operate ($x | Organisation_NP)?", "which launch pads operated ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "773",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all architects design ($x | ArchitecturalStructure_NP)?", "Who designed ($x | ArchitecturalStructure_NP)?", "Who designed the ($x | ArchitecturalStructure_NP)?", "Who designed the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who designed the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who designs ($x | ArchitecturalStructure_NP)?", "Who designs the ($x | ArchitecturalStructure_NP)?", "Who designs the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who designs the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who was the architect that designed ($x | ArchitecturalStructure_NP)?", "which architect designed ($x | ArchitecturalStructure_NP)?", "which architect designs ($x | ArchitecturalStructure_NP)?", "which architect does ($x | ArchitecturalStructure_NP) design?", "which architects design ($x | ArchitecturalStructure_NP)?", "which architects designed ($x | ArchitecturalStructure_NP)?", "which architects did ($x | ArchitecturalStructure_NP) design?", "which architects does ($x | ArchitecturalStructure_NP) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "776",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operate ($x | Airport_NP)?", "Who operated ($x | Airport_NP)?", "Who operated the ($x | Airport_NP)?", "Who operated the airport ($x | Airport_NP)?", "Who operated the airports ($x | Airport_NP)?", "Who operates ($x | Airport_NP)?", "Who operates the ($x | Airport_NP)?", "Who operates the airport ($x | Airport_NP)?", "Who operates the airports ($x | Airport_NP)?", "Who was the organization that operated ($x | Airport_NP)?", "which organization does ($x | Airport_NP) operate?", "which organization operated ($x | Airport_NP)?", "which organization operates ($x | Airport_NP)?", "which organizations did ($x | Airport_NP) operate?", "which organizations does ($x | Airport_NP) operate?", "which organizations operate ($x | Airport_NP)?", "which organizations operated ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "779",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents write ($x | Book_NP)?", "Who was the agent that wrote ($x | Book_NP)?", "Who writes ($x | Book_NP)?", "Who writes the ($x | Book_NP)?", "Who writes the book ($x | Book_NP)?", "Who writes the books ($x | Book_NP)?", "Who wrote ($x | Book_NP)?", "Who wrote the ($x | Book_NP)?", "Who wrote the book ($x | Book_NP)?", "Who wrote the books ($x | Book_NP)?", "which agent does ($x | Book_NP) write?", "which agent writes ($x | Book_NP)?", "which agent wrote ($x | Book_NP)?", "which agents did ($x | Book_NP) write?", "which agents does ($x | Book_NP) write?", "which agents write ($x | Book_NP)?", "which agents wrote ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "782",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations distribute ($x | Film_NP)?", "Who distributed ($x | Film_NP)?", "Who distributed the ($x | Film_NP)?", "Who distributed the film ($x | Film_NP)?", "Who distributed the films ($x | Film_NP)?", "Who distributes ($x | Film_NP)?", "Who distributes the ($x | Film_NP)?", "Who distributes the film ($x | Film_NP)?", "Who distributes the films ($x | Film_NP)?", "Who was the organization that distributed ($x | Film_NP)?", "which organization distributed ($x | Film_NP)?", "which organization distributes ($x | Film_NP)?", "which organization does ($x | Film_NP) distribute?", "which organizations did ($x | Film_NP) distribute?", "which organizations distribute ($x | Film_NP)?", "which organizations distributed ($x | Film_NP)?", "which organizations does ($x | Film_NP) distribute?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "785",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations distribute ($x | TelevisionShow_NP)?", "Who distributed ($x | TelevisionShow_NP)?", "Who distributed the ($x | TelevisionShow_NP)?", "Who distributed the television show ($x | TelevisionShow_NP)?", "Who distributed the television shows ($x | TelevisionShow_NP)?", "Who distributes ($x | TelevisionShow_NP)?", "Who distributes the ($x | TelevisionShow_NP)?", "Who distributes the television show ($x | TelevisionShow_NP)?", "Who distributes the television shows ($x | TelevisionShow_NP)?", "Who was the organization that distributed ($x | TelevisionShow_NP)?", "which organization distributed ($x | TelevisionShow_NP)?", "which organization distributes ($x | TelevisionShow_NP)?", "which organization does ($x | TelevisionShow_NP) distribute?", "which organizations did ($x | TelevisionShow_NP) distribute?", "which organizations distribute ($x | TelevisionShow_NP)?", "which organizations distributed ($x | TelevisionShow_NP)?", "which organizations does ($x | TelevisionShow_NP) distribute?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "788",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons write ($x | Work_NP)?", "Who was the person that wrote ($x | Work_NP)?", "Who writes ($x | Work_NP)?", "Who writes the ($x | Work_NP)?", "Who writes the work ($x | Work_NP)?", "Who writes the works ($x | Work_NP)?", "Who wrote ($x | Work_NP)?", "Who wrote the ($x | Work_NP)?", "Who wrote the work ($x | Work_NP)?", "Who wrote the works ($x | Work_NP)?", "which person does ($x | Work_NP) write?", "which person writes ($x | Work_NP)?", "which person wrote ($x | Work_NP)?", "which persons did ($x | Work_NP) write?", "which persons does ($x | Work_NP) write?", "which persons write ($x | Work_NP)?", "which persons wrote ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "791",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons present ($x | TelevisionShow_NP)?", "Who presented ($x | TelevisionShow_NP)?", "Who presented the ($x | TelevisionShow_NP)?", "Who presented the television show ($x | TelevisionShow_NP)?", "Who presented the television shows ($x | TelevisionShow_NP)?", "Who presents ($x | TelevisionShow_NP)?", "Who presents the ($x | TelevisionShow_NP)?", "Who presents the television show ($x | TelevisionShow_NP)?", "Who presents the television shows ($x | TelevisionShow_NP)?", "Who was the person that presented ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) present?", "which person presented ($x | TelevisionShow_NP)?", "which person presents ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) present?", "which persons does ($x | TelevisionShow_NP) present?", "which persons present ($x | TelevisionShow_NP)?", "which persons presented ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "794",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers cross ($x | Bridge_NP)?", "What crossed ($x | Bridge_NP)?", "What crossed the ($x | Bridge_NP)?", "What crossed the Bridge ($x | Bridge_NP)?", "What crossed the Bridges ($x | Bridge_NP)?", "What crosses ($x | Bridge_NP)?", "What crosses the ($x | Bridge_NP)?", "What crosses the Bridge ($x | Bridge_NP)?", "What crosses the Bridges ($x | Bridge_NP)?", "What was the river that crossed ($x | Bridge_NP)?", "which river crossed ($x | Bridge_NP)?", "which river crosses ($x | Bridge_NP)?", "which river does ($x | Bridge_NP) cross?", "which rivers cross ($x | Bridge_NP)?", "which rivers crossed ($x | Bridge_NP)?", "which rivers did ($x | Bridge_NP) cross?", "which rivers does ($x | Bridge_NP) cross?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "797",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums precede ($x | Album_NP)?", "What preceded ($x | Album_NP)?", "What preceded the ($x | Album_NP)?", "What preceded the album ($x | Album_NP)?", "What preceded the albums ($x | Album_NP)?", "What precedes ($x | Album_NP)?", "What precedes the ($x | Album_NP)?", "What precedes the album ($x | Album_NP)?", "What precedes the albums ($x | Album_NP)?", "What was the album that preceded ($x | Album_NP)?", "which album does ($x | Album_NP) precede?", "which album preceded ($x | Album_NP)?", "which album precedes ($x | Album_NP)?", "which albums did ($x | Album_NP) precede?", "which albums does ($x | Album_NP) precede?", "which albums precede ($x | Album_NP)?", "which albums preceded ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/prevTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "800",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed ($x | Politician_NP)?", "Who follows ($x | Politician_NP)?", "Who was the politician that followed ($x | Politician_NP)?", "Whom is ($x | Politician_NP) follow?", "Whom was ($x | Politician_NP) follow?", "which politician followed ($x | Politician_NP)?", "which politician follows ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/before> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "803",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons leave ($x | Band_NP)?", "Who leaves ($x | Band_NP)?", "Who leaves the ($x | Band_NP)?", "Who leaves the band ($x | Band_NP)?", "Who leaves the bands ($x | Band_NP)?", "Who left ($x | Band_NP)?", "Who left the ($x | Band_NP)?", "Who left the band ($x | Band_NP)?", "Who left the bands ($x | Band_NP)?", "Who was the person that left ($x | Band_NP)?", "which person does ($x | Band_NP) leave?", "which person leaves ($x | Band_NP)?", "which person left ($x | Band_NP)?", "which persons did ($x | Band_NP) leave?", "which persons does ($x | Band_NP) leave?", "which persons leave ($x | Band_NP)?", "which persons left ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "806",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create ($x | Website_NP)?", "Who created ($x | Website_NP)?", "Who created the ($x | Website_NP)?", "Who created the Website ($x | Website_NP)?", "Who created the Websites ($x | Website_NP)?", "Who creates ($x | Website_NP)?", "Who creates the ($x | Website_NP)?", "Who creates the Website ($x | Website_NP)?", "Who creates the Websites ($x | Website_NP)?", "Who was the person that created ($x | Website_NP)?", "which person created ($x | Website_NP)?", "which person creates ($x | Website_NP)?", "which person does ($x | Website_NP) create?", "which persons create ($x | Website_NP)?", "which persons created ($x | Website_NP)?", "which persons did ($x | Website_NP) create?", "which persons does ($x | Website_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "809",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce ($x | Work_NP)?", "Who produced ($x | Work_NP)?", "Who produced the ($x | Work_NP)?", "Who produced the work ($x | Work_NP)?", "Who produced the works ($x | Work_NP)?", "Who produces ($x | Work_NP)?", "Who produces the ($x | Work_NP)?", "Who produces the work ($x | Work_NP)?", "Who produces the works ($x | Work_NP)?", "Who was the person that produced ($x | Work_NP)?", "which person does ($x | Work_NP) produce?", "which person produced ($x | Work_NP)?", "which person produces ($x | Work_NP)?", "which persons did ($x | Work_NP) produce?", "which persons does ($x | Work_NP) produce?", "which persons produce ($x | Work_NP)?", "which persons produced ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "812",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create ($x | Work_NP)?", "Who created ($x | Work_NP)?", "Who created the ($x | Work_NP)?", "Who created the work ($x | Work_NP)?", "Who created the works ($x | Work_NP)?", "Who creates ($x | Work_NP)?", "Who creates the ($x | Work_NP)?", "Who creates the work ($x | Work_NP)?", "Who creates the works ($x | Work_NP)?", "Who was the person that created ($x | Work_NP)?", "which person created ($x | Work_NP)?", "which person creates ($x | Work_NP)?", "which person does ($x | Work_NP) create?", "which persons create ($x | Work_NP)?", "which persons created ($x | Work_NP)?", "which persons did ($x | Work_NP) create?", "which persons does ($x | Work_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "815",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who was the person that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which person founded ($x | Organisation_NP)?", "which person founds ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "818",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all athlete manage ($x | SportsTeam_NP)?", "Who managed ($x | SportsTeam_NP)?", "Who managed the ($x | SportsTeam_NP)?", "Who managed the sports team ($x | SportsTeam_NP)?", "Who managed the sports teams ($x | SportsTeam_NP)?", "Who manages ($x | SportsTeam_NP)?", "Who manages the ($x | SportsTeam_NP)?", "Who manages the sports team ($x | SportsTeam_NP)?", "Who manages the sports teams ($x | SportsTeam_NP)?", "Who was the athlete that managed ($x | SportsTeam_NP)?", "which athlete did ($x | SportsTeam_NP) manage?", "which athlete does ($x | SportsTeam_NP) manage?", "which athlete manage ($x | SportsTeam_NP)?", "which athlete managed ($x | SportsTeam_NP)?", "which athlete manages ($x | SportsTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "821",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers join ($x | BodyOfWater_NP)?", "What joined ($x | BodyOfWater_NP)?", "What joined the ($x | BodyOfWater_NP)?", "What joined the river ($x | BodyOfWater_NP)?", "What joined the rivers ($x | BodyOfWater_NP)?", "What joins ($x | BodyOfWater_NP)?", "What joins the ($x | BodyOfWater_NP)?", "What joins the river ($x | BodyOfWater_NP)?", "What joins the rivers ($x | BodyOfWater_NP)?", "What was the river that joined ($x | BodyOfWater_NP)?", "which river does ($x | BodyOfWater_NP) join?", "which river joined ($x | BodyOfWater_NP)?", "which river joins ($x | BodyOfWater_NP)?", "which rivers did ($x | BodyOfWater_NP) join?", "which rivers does ($x | BodyOfWater_NP) join?", "which rivers join ($x | BodyOfWater_NP)?", "which rivers joined ($x | BodyOfWater_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "824",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who succeeded ($x | Person_NP)?", "Who succeeds ($x | Person_NP)?", "Who was the person that succeeded ($x | Person_NP)?", "Whom is ($x | Person_NP) succeed?", "Whom was ($x | Person_NP) succeed?", "which person succeeded ($x | Person_NP)?", "which person succeeds ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "827",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons write ($x | Work_NP)?", "Who was the person that wrote ($x | Work_NP)?", "Who writes ($x | Work_NP)?", "Who writes the ($x | Work_NP)?", "Who writes the work ($x | Work_NP)?", "Who writes the works ($x | Work_NP)?", "Who wrote ($x | Work_NP)?", "Who wrote the ($x | Work_NP)?", "Who wrote the work ($x | Work_NP)?", "Who wrote the works ($x | Work_NP)?", "which person does ($x | Work_NP) write?", "which person writes ($x | Work_NP)?", "which person wrote ($x | Work_NP)?", "which persons did ($x | Work_NP) write?", "which persons does ($x | Work_NP) write?", "which persons write ($x | Work_NP)?", "which persons wrote ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "830",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "What expressed ($x | Thing_NP)?", "What expresses ($x | Thing_NP)?", "which color expressed ($x | Thing_NP)?", "which color expresses ($x | Thing_NP)?", "which colors express ($x | Thing_NP)?", "which colors expressed ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "833",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons starring in ($x | Film_NP)?", "Who starred in ($x | Film_NP)?", "Who starred in the ($x | Film_NP)?", "Who starred in the film ($x | Film_NP)?", "Who starred in the films ($x | Film_NP)?", "Who starring in ($x | Film_NP)?", "Who starring in the ($x | Film_NP)?", "Who starring in the film ($x | Film_NP)?", "Who starring in the films ($x | Film_NP)?", "Who was the person that starred in ($x | Film_NP)?", "which person does ($x | Film_NP) starring in?", "which person starred in ($x | Film_NP)?", "which person starring in ($x | Film_NP)?", "which persons did ($x | Film_NP) starring in?", "which persons does ($x | Film_NP) starring in?", "which persons starred in ($x | Film_NP)?", "which persons starring in ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "836",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations produce ($x | Beverage_NP)?", "Who produced ($x | Beverage_NP)?", "Who produced the ($x | Beverage_NP)?", "Who produced the beverage ($x | Beverage_NP)?", "Who produced the beverages ($x | Beverage_NP)?", "Who produces ($x | Beverage_NP)?", "Who produces the ($x | Beverage_NP)?", "Who produces the beverage ($x | Beverage_NP)?", "Who produces the beverages ($x | Beverage_NP)?", "Who was the organization that produced ($x | Beverage_NP)?", "which organization does ($x | Beverage_NP) produce?", "which organization produced ($x | Beverage_NP)?", "which organization produces ($x | Beverage_NP)?", "which organizations did ($x | Beverage_NP) produce?", "which organizations does ($x | Beverage_NP) produce?", "which organizations produce ($x | Beverage_NP)?", "which organizations produced ($x | Beverage_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "839",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all countries adopted by ($x | Currency_NP)?", "List all countries adopted by ($x | Currency_NP)?", "What was adopted by ($x | Currency_NP)?", "What were adopted by ($x | Currency_NP)?", "show me the country that ($x | Currency_NP) adopted", "which countries adopt ($x | Currency_NP)?", "which countries adopted ($x | Currency_NP)?", "which countries did ($x | Currency_NP) adopt?", "which countries were adopted by ($x | Currency_NP)?", "which country adopt ($x | Currency_NP)?", "which country adopted ($x | Currency_NP)?", "which country did ($x | Currency_NP) adopt?", "which country was adopted by ($x | Currency_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "842",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed ($x | Politician_NP)?", "Who follows ($x | Politician_NP)?", "Who was the politician that followed ($x | Politician_NP)?", "Whom is ($x | Politician_NP) follow?", "Whom was ($x | Politician_NP) follow?", "which politician followed ($x | Politician_NP)?", "which politician follows ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "845",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations rent ($x | ArchitecturalStructure_NP)?", "Who rented ($x | ArchitecturalStructure_NP)?", "Who rented the ($x | ArchitecturalStructure_NP)?", "Who rented the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who rented the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who rents ($x | ArchitecturalStructure_NP)?", "Who rents the ($x | ArchitecturalStructure_NP)?", "Who rents the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who rents the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who was the organization that rented ($x | ArchitecturalStructure_NP)?", "which organization does ($x | ArchitecturalStructure_NP) rent?", "which organization rented ($x | ArchitecturalStructure_NP)?", "which organization rents ($x | ArchitecturalStructure_NP)?", "which organizations did ($x | ArchitecturalStructure_NP) rent?", "which organizations does ($x | ArchitecturalStructure_NP) rent?", "which organizations rent ($x | ArchitecturalStructure_NP)?", "which organizations rented ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/tenant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "848",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons discover ($x | Planet_NP)?", "Who discovered ($x | Planet_NP)?", "Who discovered the ($x | Planet_NP)?", "Who discovered the planets ($x | Planet_NP)?", "Who discovered the plant ($x | Planet_NP)?", "Who discovers ($x | Planet_NP)?", "Who discovers the ($x | Planet_NP)?", "Who discovers the planets ($x | Planet_NP)?", "Who discovers the plant ($x | Planet_NP)?", "Who was the person that discovered ($x | Planet_NP)?", "which person discovered ($x | Planet_NP)?", "which person discovers ($x | Planet_NP)?", "which person does ($x | Planet_NP) discover?", "which persons did ($x | Planet_NP) discover?", "which persons discover ($x | Planet_NP)?", "which persons discovered ($x | Planet_NP)?", "which persons does ($x | Planet_NP) discover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "851",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all company publish ($x | VideoGame_NP)?", "Who published ($x | VideoGame_NP)?", "Who published the ($x | VideoGame_NP)?", "Who published the video game ($x | VideoGame_NP)?", "Who published the video games ($x | VideoGame_NP)?", "Who publishes ($x | VideoGame_NP)?", "Who publishes the ($x | VideoGame_NP)?", "Who publishes the video game ($x | VideoGame_NP)?", "Who publishes the video games ($x | VideoGame_NP)?", "Who was the company that published ($x | VideoGame_NP)?", "which company did ($x | VideoGame_NP) publish?", "which company does ($x | VideoGame_NP) publish?", "which company publish ($x | VideoGame_NP)?", "which company published ($x | VideoGame_NP)?", "which company publishes ($x | VideoGame_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "854",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons write ($x | Book_NP)?", "Who was the person that wrote ($x | Book_NP)?", "Who writes ($x | Book_NP)?", "Who writes the ($x | Book_NP)?", "Who writes the book ($x | Book_NP)?", "Who writes the books ($x | Book_NP)?", "Who wrote ($x | Book_NP)?", "Who wrote the ($x | Book_NP)?", "Who wrote the book ($x | Book_NP)?", "Who wrote the books ($x | Book_NP)?", "which person does ($x | Book_NP) write?", "which person writes ($x | Book_NP)?", "which person wrote ($x | Book_NP)?", "which persons did ($x | Book_NP) write?", "which persons does ($x | Book_NP) write?", "which persons write ($x | Book_NP)?", "which persons wrote ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "857",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce ($x | TelevisionShow_NP)?", "Who produced ($x | TelevisionShow_NP)?", "Who produced the ($x | TelevisionShow_NP)?", "Who produced the television show ($x | TelevisionShow_NP)?", "Who produced the television shows ($x | TelevisionShow_NP)?", "Who produces ($x | TelevisionShow_NP)?", "Who produces the ($x | TelevisionShow_NP)?", "Who produces the television show ($x | TelevisionShow_NP)?", "Who produces the television shows ($x | TelevisionShow_NP)?", "Who was the person that produced ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) produce?", "which person produced ($x | TelevisionShow_NP)?", "which person produces ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) produce?", "which persons does ($x | TelevisionShow_NP) produce?", "which persons produce ($x | TelevisionShow_NP)?", "which persons produced ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "860",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors starring in ($x | Film_NP)?", "Who starred in ($x | Film_NP)?", "Who starred in the ($x | Film_NP)?", "Who starred in the film ($x | Film_NP)?", "Who starred in the films ($x | Film_NP)?", "Who starring in ($x | Film_NP)?", "Who starring in the ($x | Film_NP)?", "Who starring in the film ($x | Film_NP)?", "Who starring in the films ($x | Film_NP)?", "Who was the actor that starred in ($x | Film_NP)?", "which actor does ($x | Film_NP) starring in?", "which actor starred in ($x | Film_NP)?", "which actor starring in ($x | Film_NP)?", "which actors did ($x | Film_NP) starring in?", "which actors does ($x | Film_NP) starring in?", "which actors starred in ($x | Film_NP)?", "which actors starring in ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "863",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents edit ($x | Magazine_NP)?", "Who edited ($x | Magazine_NP)?", "Who edited the ($x | Magazine_NP)?", "Who edited the academic journal ($x | Magazine_NP)?", "Who edited the academic journals ($x | Magazine_NP)?", "Who edits ($x | Magazine_NP)?", "Who edits the ($x | Magazine_NP)?", "Who edits the academic journal ($x | Magazine_NP)?", "Who edits the academic journals ($x | Magazine_NP)?", "Who was the agent that edited ($x | Magazine_NP)?", "which agent does ($x | Magazine_NP) edit?", "which agent edited ($x | Magazine_NP)?", "which agent edits ($x | Magazine_NP)?", "which agents did ($x | Magazine_NP) edit?", "which agents does ($x | Magazine_NP) edit?", "which agents edit ($x | Magazine_NP)?", "which agents edited ($x | Magazine_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "866",
    "lexicalEntryUri" : "http://localhost:8080#spanish",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "Give me all Spanish", "What are Spanish", "What is Spanish" ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#spanish_res> ?objOfProp))\n",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "867",
    "lexicalEntryUri" : "http://localhost:8080#spanish",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "Give me all Spanish movie", "What are Spanish movie", "What is Spanish movie" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "868",
    "lexicalEntryUri" : "http://localhost:8080#spanish",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "Give me all Spanish person", "What are Spanish person", "What is Spanish person" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "869",
    "lexicalEntryUri" : "http://localhost:8080#spanish",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "Give me all Spanish flim", "What are Spanish flim", "What is Spanish flim" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Flim> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> }",
    "returnVariable" : "isA",
    "combination" : false
  }, {
    "id" : "870",
    "lexicalEntryUri" : "http://localhost:8080#high_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the highest Bridge in ($x | Country_NP)?", "What is the highest Bridge in the ($x | Country_NP)?", "What is the highest the Bridge in ($x | Country_NP)?", "What is the highest the Bridge in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "871",
    "lexicalEntryUri" : "http://localhost:8080#high_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | Bridge_NP)?", "How high is the ($x | Bridge_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "872",
    "lexicalEntryUri" : "http://localhost:8080#high_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all Bridges that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "873",
    "lexicalEntryUri" : "http://localhost:8080#small_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What is the smallest country in the world?", "What is the smallest country?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "874",
    "lexicalEntryUri" : "http://localhost:8080#small_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How small is ($x | Country_NP)?", "How small is the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "875",
    "lexicalEntryUri" : "http://localhost:8080#small_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all countries that are smaller than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "876",
    "lexicalEntryUri" : "http://localhost:8080#old",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativePerson",
    "sentences" : [ "Who is the oldest person of ($x | Person_NP)?", "Who is the oldest?" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?VARIABLE <http://dbpedia.org/ontology/child> ?Answer . ?Answer <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "877",
    "lexicalEntryUri" : "http://localhost:8080#old",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How old is ($x | Person_NP)?", "How old is the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "878",
    "lexicalEntryUri" : "http://localhost:8080#old",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all persons that are older than ($x | Person_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "879",
    "lexicalEntryUri" : "http://localhost:8080#high_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lighthouse" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the highest Lighthouse in ($x | Country_NP)?", "What is the highest Lighthouse in the ($x | Country_NP)?", "What is the highest the Lighthouse in ($x | Country_NP)?", "What is the highest the Lighthouse in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lighthouse> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "880",
    "lexicalEntryUri" : "http://localhost:8080#high_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | Lighthouse_NP)?", "How high is the ($x | Lighthouse_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "881",
    "lexicalEntryUri" : "http://localhost:8080#high_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all Lighthouses that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "882",
    "lexicalEntryUri" : "http://localhost:8080#tall_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "BasketballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the tallest basketball player in the world?", "Who is the tallest basketball player?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "883",
    "lexicalEntryUri" : "http://localhost:8080#tall_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ($x | BasketballPlayer_NP)?", "How tall is the ($x | BasketballPlayer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "884",
    "lexicalEntryUri" : "http://localhost:8080#tall_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all basketball players that are taller than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "885",
    "lexicalEntryUri" : "http://localhost:8080#Young_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Politician" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the youngest politician in the world?", "Who is the youngest politician?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "886",
    "lexicalEntryUri" : "http://localhost:8080#Young_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How young is ($x | Politician_NP)?", "How young is the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "887",
    "lexicalEntryUri" : "http://localhost:8080#Young_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all politicians that are younger than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "888",
    "lexicalEntryUri" : "http://localhost:8080#high_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the highest mountain in ($x | Country_NP)?", "What is the highest mountain in the ($x | Country_NP)?", "What is the highest the mountain in ($x | Country_NP)?", "What is the highest the mountain in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "889",
    "lexicalEntryUri" : "http://localhost:8080#high_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | Mountain_NP)?", "How high is the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "890",
    "lexicalEntryUri" : "http://localhost:8080#high_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all mountains that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "891",
    "lexicalEntryUri" : "http://localhost:8080#big_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What is the biggest stadium in ($x | Country_NP)?", "What is the biggest stadium in the ($x | Country_NP)?", "What is the biggest the stadium in ($x | Country_NP)?", "What is the biggest the stadium in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "892",
    "lexicalEntryUri" : "http://localhost:8080#big_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How big is ($x | Stadium_NP)?", "How big is the ($x | Stadium_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "893",
    "lexicalEntryUri" : "http://localhost:8080#big_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all stadiums that are bigger than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "894",
    "lexicalEntryUri" : "http://localhost:8080#high_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What is the highest ArchitecturalStructure in ($x | Country_NP)?", "What is the highest ArchitecturalStructure in the ($x | Country_NP)?", "What is the highest the ArchitecturalStructure in ($x | Country_NP)?", "What is the highest the ArchitecturalStructure in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "895",
    "lexicalEntryUri" : "http://localhost:8080#high_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | ArchitecturalStructure_NP)?", "How high is the ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "896",
    "lexicalEntryUri" : "http://localhost:8080#high_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ArchitecturalStructures that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "897",
    "lexicalEntryUri" : "http://localhost:8080#Young_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "DartsPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the youngest DartsPlayer in the world?", "Who is the youngest DartsPlayer?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/DartsPlayer> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "898",
    "lexicalEntryUri" : "http://localhost:8080#Young_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "DartsPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How young is ($x | DartsPlayer_NP)?", "How young is the ($x | DartsPlayer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "899",
    "lexicalEntryUri" : "http://localhost:8080#Young_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "DartsPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all DartsPlayers that are younger than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "900",
    "lexicalEntryUri" : "http://localhost:8080#tall_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Model" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the tallest model in the world?", "Who is the tallest model?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "901",
    "lexicalEntryUri" : "http://localhost:8080#tall_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ($x | Model_NP)?", "How tall is the ($x | Model_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "902",
    "lexicalEntryUri" : "http://localhost:8080#tall_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all models that are taller than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "903",
    "lexicalEntryUri" : "http://localhost:8080#short",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the shortest river in ($x | Country_NP)?", "What is the shortest river in the ($x | Country_NP)?", "What is the shortest the river in ($x | Country_NP)?", "What is the shortest the river in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?num WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "904",
    "lexicalEntryUri" : "http://localhost:8080#short",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How short is ($x | BodyOfWater_NP)?", "How short is the ($x | BodyOfWater_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "905",
    "lexicalEntryUri" : "http://localhost:8080#short",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all rivers that are shorter than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "906",
    "lexicalEntryUri" : "http://localhost:8080#small_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What is the smallest country in the world?", "What is the smallest country?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "907",
    "lexicalEntryUri" : "http://localhost:8080#small_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How small is ($x | Country_NP)?", "How small is the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "908",
    "lexicalEntryUri" : "http://localhost:8080#small_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all countries that are smaller than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "909",
    "lexicalEntryUri" : "http://localhost:8080#tall_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the tallest mountain in ($x | Country_NP)?", "What is the tallest mountain in the ($x | Country_NP)?", "What is the tallest the mountain in ($x | Country_NP)?", "What is the tallest the mountain in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "910",
    "lexicalEntryUri" : "http://localhost:8080#tall_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ($x | Mountain_NP)?", "How tall is the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "911",
    "lexicalEntryUri" : "http://localhost:8080#tall_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all mountains that are taller than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "912",
    "lexicalEntryUri" : "http://localhost:8080#large_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What is the largest country in the world?", "What is the largest country?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "913",
    "lexicalEntryUri" : "http://localhost:8080#large_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How large is ($x | Country_NP)?", "How large is the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "914",
    "lexicalEntryUri" : "http://localhost:8080#large_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all countries that are larger than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "915",
    "lexicalEntryUri" : "http://localhost:8080#large_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What is the largest country in the world?", "What is the largest country?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "916",
    "lexicalEntryUri" : "http://localhost:8080#large_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How large is ($x | Country_NP)?", "How large is the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "917",
    "lexicalEntryUri" : "http://localhost:8080#large_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all countries that are larger than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "918",
    "lexicalEntryUri" : "http://localhost:8080#high_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Building" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What is the highest Building in ($x | Country_NP)?", "What is the highest Building in the ($x | Country_NP)?", "What is the highest the Building in ($x | Country_NP)?", "What is the highest the Building in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "919",
    "lexicalEntryUri" : "http://localhost:8080#high_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | Building_NP)?", "How high is the ($x | Building_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "920",
    "lexicalEntryUri" : "http://localhost:8080#high_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all dbo:Buildings that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "921",
    "lexicalEntryUri" : "http://localhost:8080#long",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the longest river in ($x | Country_NP)?", "What is the longest river in the ($x | Country_NP)?", "What is the longest the river in ($x | Country_NP)?", "What is the longest the river in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "922",
    "lexicalEntryUri" : "http://localhost:8080#long",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How long is ($x | BodyOfWater_NP)?", "How long is the ($x | BodyOfWater_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "923",
    "lexicalEntryUri" : "http://localhost:8080#long",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all rivers that are longer than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "924",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MilitaryConflict_NP) fought?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/combatant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "927",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Person_NP) bury?", "Where is ($x | Person_NP) buried?", "Where was ($x | Person_NP) buried?", "in which city did ($x | Person_NP) bury?", "which city does ($x | Person_NP) bury in?", "which city was ($x | Person_NP) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/burialPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "930",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Artist_NP) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "933",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) started?", "in which countries  ($x | River_NP) start?", "in which countries are ($x | River_NP) started?", "in which countries does start ($x | River_NP)?", "in which country does ($x | River_NP) start?", "in which country is ($x | River_NP) started?", "which countries does ($x | River_NP) start in?", "which countries does the ($x | River_NP) start in?", "which country does ($x | River_NP) start in?", "which country does the ($x | River_NP) start in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "936",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Organisation_NP) locate?", "Where is ($x | Organisation_NP) located?", "Where was ($x | Organisation_NP) located?", "in which place did ($x | Organisation_NP) locate?", "which place does ($x | Organisation_NP) locate in?", "which place was ($x | Organisation_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "939",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Agent_NP) belonged?", "to which politicalParties  ($x | Agent_NP) belong?", "to which politicalParties are ($x | Agent_NP) belonged?", "to which politicalParties does belong ($x | Agent_NP)?", "to which politicalParty does ($x | Agent_NP) belong?", "to which politicalParty is ($x | Agent_NP) belonged?", "which politicalParties does ($x | Agent_NP) belong to?", "which politicalParties does the ($x | Agent_NP) belong to?", "which politicalParty does ($x | Agent_NP) belong to?", "which politicalParty does the ($x | Agent_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "942",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "What did ($x | Person_NP) die from?", "What does ($x | Person_NP) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "945",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "What did ($x | Person_NP) die from?", "What does ($x | Person_NP) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "948",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which populated place does ($x | River_NP) end?", "in which populated place is ($x | River_NP) ended?", "in which populated places  ($x | River_NP) end?", "in which populated places are ($x | River_NP) ended?", "in which populated places does end ($x | River_NP)?", "which populated place does ($x | River_NP) end in?", "which populated place does the ($x | River_NP) end in?", "which populated places does ($x | River_NP) end in?", "which populated places does the ($x | River_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "951",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Actor_NP) born?", "Where is ($x | Actor_NP) born?", "Where was ($x | Actor_NP) born?", "in which country did ($x | Actor_NP) born?", "which country does ($x | Actor_NP) born in?", "which country was ($x | Actor_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "954",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Play" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) played?", "in which play does ($x | Person_NP) play?", "in which play is ($x | Person_NP) played?", "in which plays  ($x | Person_NP) play?", "in which plays are ($x | Person_NP) played?", "in which plays does play ($x | Person_NP)?", "which play does ($x | Person_NP) play in?", "which play does the ($x | Person_NP) play in?", "which plays does ($x | Person_NP) play in?", "which plays does the ($x | Person_NP) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "957",
    "lexicalEntryUri" : "http://localhost:8080#operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | LaunchPad_NP) operated?", "by which organization does ($x | LaunchPad_NP) operate?", "by which organization is ($x | LaunchPad_NP) operated?", "by which organizations  ($x | LaunchPad_NP) operate?", "by which organizations are ($x | LaunchPad_NP) operated?", "by which organizations does operate ($x | LaunchPad_NP)?", "which organization does ($x | LaunchPad_NP) operate by?", "which organization does the ($x | LaunchPad_NP) operate by?", "which organizations does ($x | LaunchPad_NP) operate by?", "which organizations does the ($x | LaunchPad_NP) operate by?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "960",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Single" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Single_NP) lived?", "in which cities  ($x | Single_NP) live?", "in which cities are ($x | Single_NP) lived?", "in which cities does live ($x | Single_NP)?", "in which city does ($x | Single_NP) live?", "in which city is ($x | Single_NP) lived?", "which cities does ($x | Single_NP) live in?", "which cities does the ($x | Single_NP) live in?", "which city does ($x | Single_NP) live in?", "which city does the ($x | Single_NP) live in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "963",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Beverage_NP) discontinue?", "When did the ($x | Beverage_NP) discontinue?", "When was ($x | Beverage_NP) discontinued?", "When was the ($x | Beverage_NP) discontinued?", "When were ($x | Beverage_NP) discontinued?", "When were the ($x | Beverage_NP) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "966",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) destroy?", "When did the ($x | ArchitecturalStructure_NP) destroy?", "When was ($x | ArchitecturalStructure_NP) destroyed?", "When was the ($x | ArchitecturalStructure_NP) destroyed?", "When were ($x | ArchitecturalStructure_NP) destroyed?", "When were the ($x | ArchitecturalStructure_NP) destroyed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "969",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Article" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Article_NP) publish?", "When did the ($x | Article_NP) publish?", "When was ($x | Article_NP) published?", "When was the ($x | Article_NP) published?", "When were ($x | Article_NP) published?", "When were the ($x | Article_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "972",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) flown?", "through which countries  ($x | River_NP) flow?", "through which countries are ($x | River_NP) flown?", "through which countries does flow ($x | River_NP)?", "through which country does ($x | River_NP) flow?", "through which country is ($x | River_NP) flown?", "which countries does ($x | River_NP) flow through?", "which countries does the ($x | River_NP) flow through?", "which country does ($x | River_NP) flow through?", "which country does the ($x | River_NP) flow through?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "975",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) open?", "When did the ($x | Bridge_NP) open?", "When was ($x | Bridge_NP) opened?", "When was the ($x | Bridge_NP) opened?", "When were ($x | Bridge_NP) opened?", "When were the ($x | Bridge_NP) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "978",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Event_NP) commence?", "When did the ($x | Event_NP) commence?", "When was ($x | Event_NP) commenced?", "When was the ($x | Event_NP) commenced?", "When were ($x | Event_NP) commenced?", "When were the ($x | Event_NP) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "981",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Person_NP) born?", "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which place did ($x | Person_NP) born?", "which place does ($x | Person_NP) born in?", "which place was ($x | Person_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "984",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) located?", "in which location does ($x | ArchitecturalStructure_NP) locate?", "in which location is ($x | ArchitecturalStructure_NP) located?", "in which locations  ($x | ArchitecturalStructure_NP) locate?", "in which locations are ($x | ArchitecturalStructure_NP) located?", "in which locations does locate ($x | ArchitecturalStructure_NP)?", "which location does ($x | ArchitecturalStructure_NP) locate in?", "which location does the ($x | ArchitecturalStructure_NP) locate in?", "which locations does ($x | ArchitecturalStructure_NP) locate in?", "which locations does the ($x | ArchitecturalStructure_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "987",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) located?", "in which location does ($x | ArchitecturalStructure_NP) locate?", "in which location is ($x | ArchitecturalStructure_NP) located?", "in which locations  ($x | ArchitecturalStructure_NP) locate?", "in which locations are ($x | ArchitecturalStructure_NP) located?", "in which locations does locate ($x | ArchitecturalStructure_NP)?", "which location does ($x | ArchitecturalStructure_NP) locate in?", "which location does the ($x | ArchitecturalStructure_NP) locate in?", "which locations does ($x | ArchitecturalStructure_NP) locate in?", "which locations does the ($x | ArchitecturalStructure_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "990",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Work_NP) complete?", "When did the ($x | Work_NP) complete?", "When was ($x | Work_NP) completed?", "When was the ($x | Work_NP) completed?", "When were ($x | Work_NP) completed?", "When were the ($x | Work_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "993",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryPerson" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MilitaryPerson_NP) participated?", "in which military conflict does ($x | MilitaryPerson_NP) participate?", "in which military conflict is ($x | MilitaryPerson_NP) participated?", "in which military conflicts  ($x | MilitaryPerson_NP) participate?", "in which military conflicts are ($x | MilitaryPerson_NP) participated?", "in which military conflicts does participate ($x | MilitaryPerson_NP)?", "which military conflict does ($x | MilitaryPerson_NP) participate in?", "which military conflict does the ($x | MilitaryPerson_NP) participate in?", "which military conflicts does ($x | MilitaryPerson_NP) participate in?", "which military conflicts does the ($x | MilitaryPerson_NP) participate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/battle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "996",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "What did ($x | Scientist_NP) known for?", "What does ($x | Scientist_NP) known for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "999",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Software_NP) belonged?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1002",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) studied?", "at which educational institution does ($x | Person_NP) study?", "at which educational institution is ($x | Person_NP) studied?", "at which educational institutions  ($x | Person_NP) study?", "at which educational institutions are ($x | Person_NP) studied?", "at which educational institutions does study ($x | Person_NP)?", "which educational institution does ($x | Person_NP) study at?", "which educational institution does the ($x | Person_NP) study at?", "which educational institutions does ($x | Person_NP) study at?", "which educational institutions does the ($x | Person_NP) study at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1005",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) studied?", "at which educational institution does ($x | Person_NP) study?", "at which educational institution is ($x | Person_NP) studied?", "at which educational institutions  ($x | Person_NP) study?", "at which educational institutions are ($x | Person_NP) studied?", "at which educational institutions does study ($x | Person_NP)?", "which educational institution does ($x | Person_NP) study at?", "which educational institution does the ($x | Person_NP) study at?", "which educational institutions does ($x | Person_NP) study at?", "which educational institutions does the ($x | Person_NP) study at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1008",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) initially used?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1011",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Politician_NP) die?", "Where is ($x | Politician_NP) died?", "Where was ($x | Politician_NP) died?", "in which city did ($x | Politician_NP) die?", "which city does ($x | Politician_NP) die in?", "which city was ($x | Politician_NP) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1014",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Writer_NP) die?", "Where is ($x | Writer_NP) died?", "Where was ($x | Writer_NP) died?", "in which place did ($x | Writer_NP) die?", "which place does ($x | Writer_NP) die in?", "which place was ($x | Writer_NP) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1017",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Software_NP) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1020",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) flown?", "into which river does ($x | River_NP) flow?", "into which river is ($x | River_NP) flown?", "into which rivers  ($x | River_NP) flow?", "into which rivers are ($x | River_NP) flown?", "into which rivers does flow ($x | River_NP)?", "which river does ($x | River_NP) flow into?", "which river does the ($x | River_NP) flow into?", "which rivers does ($x | River_NP) flow into?", "which rivers does the ($x | River_NP) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1023",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | BodyOfWater_NP) located?", "in which place does ($x | BodyOfWater_NP) locate?", "in which place is ($x | BodyOfWater_NP) located?", "in which places  ($x | BodyOfWater_NP) locate?", "in which places are ($x | BodyOfWater_NP) located?", "in which places does locate ($x | BodyOfWater_NP)?", "which place does ($x | BodyOfWater_NP) locate in?", "which place does the ($x | BodyOfWater_NP) locate in?", "which places does ($x | BodyOfWater_NP) locate in?", "which places does the ($x | BodyOfWater_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1026",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Person_NP) die?", "When was ($x | Person_NP) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1029",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Song_NP) publish?", "When did the ($x | Song_NP) publish?", "When was ($x | Song_NP) published?", "When was the ($x | Song_NP) published?", "When were ($x | Song_NP) published?", "When were the ($x | Song_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1032",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Organisation_NP) found?", "When was ($x | Organisation_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1035",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) complete?", "When did the ($x | ArchitecturalStructure_NP) complete?", "When was ($x | ArchitecturalStructure_NP) completed?", "When was the ($x | ArchitecturalStructure_NP) completed?", "When were ($x | ArchitecturalStructure_NP) completed?", "When were the ($x | ArchitecturalStructure_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1038",
    "lexicalEntryUri" : "http://localhost:8080#study_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Writer_NP) studied?", "in which educational institution does ($x | Writer_NP) study?", "in which educational institution is ($x | Writer_NP) studied?", "in which educational institutions  ($x | Writer_NP) study?", "in which educational institutions are ($x | Writer_NP) studied?", "in which educational institutions does study ($x | Writer_NP)?", "which educational institution does ($x | Writer_NP) study in?", "which educational institution does the ($x | Writer_NP) study in?", "which educational institutions does ($x | Writer_NP) study in?", "which educational institutions does the ($x | Writer_NP) study in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1041",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MilitaryUnit_NP) located?", "in which location does ($x | MilitaryUnit_NP) locate?", "in which location is ($x | MilitaryUnit_NP) located?", "in which locations  ($x | MilitaryUnit_NP) locate?", "in which locations are ($x | MilitaryUnit_NP) located?", "in which locations does locate ($x | MilitaryUnit_NP)?", "which location does ($x | MilitaryUnit_NP) locate in?", "which location does the ($x | MilitaryUnit_NP) locate in?", "which locations does ($x | MilitaryUnit_NP) locate in?", "which locations does the ($x | MilitaryUnit_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1044",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MilitaryUnit_NP) located?", "in which location does ($x | MilitaryUnit_NP) locate?", "in which location is ($x | MilitaryUnit_NP) located?", "in which locations  ($x | MilitaryUnit_NP) locate?", "in which locations are ($x | MilitaryUnit_NP) located?", "in which locations does locate ($x | MilitaryUnit_NP)?", "which location does ($x | MilitaryUnit_NP) locate in?", "which location does the ($x | MilitaryUnit_NP) locate in?", "which locations does ($x | MilitaryUnit_NP) locate in?", "which locations does the ($x | MilitaryUnit_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1047",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Work_NP) ?", "for which person does ($x | Work_NP) compose?", "for which person is ($x | Work_NP) ?", "for which persons  ($x | Work_NP) compose?", "for which persons are ($x | Work_NP) ?", "for which persons does compose ($x | Work_NP)?", "which person does ($x | Work_NP) compose for?", "which person does the ($x | Work_NP) compose for?", "which persons does ($x | Work_NP) compose for?", "which persons does the ($x | Work_NP) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1050",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Person_NP) born?", "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which city did ($x | Person_NP) born?", "which city does ($x | Person_NP) born in?", "which city was ($x | Person_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1053",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | TelevisionShow_NP) release?", "When did the ($x | TelevisionShow_NP) release?", "When was ($x | TelevisionShow_NP) released?", "When was the ($x | TelevisionShow_NP) released?", "When were ($x | TelevisionShow_NP) released?", "When were the ($x | TelevisionShow_NP) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1056",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Band_NP) belonged?", "to which genre does ($x | Band_NP) belong?", "to which genre is ($x | Band_NP) belonged?", "to which genres  ($x | Band_NP) belong?", "to which genres are ($x | Band_NP) belonged?", "to which genres does belong ($x | Band_NP)?", "which genre does ($x | Band_NP) belong to?", "which genre does the ($x | Band_NP) belong to?", "which genres does ($x | Band_NP) belong to?", "which genres does the ($x | Band_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1059",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | BodyOfWater_NP) located?", "in which countries are ($x | BodyOfWater_NP) located?", "in which country are the ($x | BodyOfWater_NP)?", "in which country is ($x | BodyOfWater_NP) located?", "in which country is the ($x | BodyOfWater_NP)?", "what country is ($x | BodyOfWater_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1062",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Athlete_NP) end his active career?", "When was ($x | Athlete_NP) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1065",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Who did ($x | Award_NP) known for?", "Who does ($x | Award_NP) known for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1068",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Athlete_NP) played?", "for which sports team does ($x | Athlete_NP) play?", "for which sports team is ($x | Athlete_NP) played?", "for which sports teams  ($x | Athlete_NP) play?", "for which sports teams are ($x | Athlete_NP) played?", "for which sports teams does play ($x | Athlete_NP)?", "which sports team does ($x | Athlete_NP) play for?", "which sports team does the ($x | Athlete_NP) play for?", "which sports teams does ($x | Athlete_NP) play for?", "which sports teams does the ($x | Athlete_NP) play for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1071",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Swimmer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Swimmer_NP) born?", "Where is ($x | Swimmer_NP) born?", "Where was ($x | Swimmer_NP) born?", "in which city did ($x | Swimmer_NP) born?", "which city does ($x | Swimmer_NP) born in?", "which city was ($x | Swimmer_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1074",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Thing_NP) born?", "in which countries are ($x | Thing_NP) born?", "in which country are the ($x | Thing_NP)?", "in which country is ($x | Thing_NP) born?", "in which country is the ($x | Thing_NP)?", "what country is ($x | Thing_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1077",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Disease" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) died?", "from which disease does ($x | Person_NP) die?", "from which disease is ($x | Person_NP) died?", "from which diseases  ($x | Person_NP) die?", "from which diseases are ($x | Person_NP) died?", "from which diseases does die ($x | Person_NP)?", "which disease does ($x | Person_NP) die from?", "which disease does the ($x | Person_NP) die from?", "which diseases does ($x | Person_NP) die from?", "which diseases does the ($x | Person_NP) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1080",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) flown?", "through which cities  ($x | River_NP) flow?", "through which cities are ($x | River_NP) flown?", "through which cities does flow ($x | River_NP)?", "through which city does ($x | River_NP) flow?", "through which city is ($x | River_NP) flown?", "which cities does ($x | River_NP) flow through?", "which cities does the ($x | River_NP) flow through?", "which city does ($x | River_NP) flow through?", "which city does the ($x | River_NP) flow through?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1083",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Band_NP) associated?", "which musical artist does ($x | Band_NP) associate with?", "which musical artist does the ($x | Band_NP) associate with?", "which musical artists does ($x | Band_NP) associate with?", "which musical artists does the ($x | Band_NP) associate with?", "with which musical artist does ($x | Band_NP) associate?", "with which musical artist is ($x | Band_NP) associated?", "with which musical artists  ($x | Band_NP) associate?", "with which musical artists are ($x | Band_NP) associated?", "with which musical artists does associate ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1086",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Actor_NP) stop acting?", "When was ($x | Actor_NP) stopped acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1089",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | WrittenWork_NP) belonged?", "to which genre does ($x | WrittenWork_NP) belong?", "to which genre is ($x | WrittenWork_NP) belonged?", "to which genres  ($x | WrittenWork_NP) belong?", "to which genres are ($x | WrittenWork_NP) belonged?", "to which genres does belong ($x | WrittenWork_NP)?", "which genre does ($x | WrittenWork_NP) belong to?", "which genre does the ($x | WrittenWork_NP) belong to?", "which genres does ($x | WrittenWork_NP) belong to?", "which genres does the ($x | WrittenWork_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1092",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Song_NP) belonged?", "to which album does ($x | Song_NP) belong?", "to which album is ($x | Song_NP) belonged?", "to which albums  ($x | Song_NP) belong?", "to which albums are ($x | Song_NP) belonged?", "to which albums does belong ($x | Song_NP)?", "which album does ($x | Song_NP) belong to?", "which album does the ($x | Song_NP) belong to?", "which albums does ($x | Song_NP) belong to?", "which albums does the ($x | Song_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1095",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which politicalParties  ($x | Person_NP) belong?", "to which politicalParties are ($x | Person_NP) belonged?", "to which politicalParties does belong ($x | Person_NP)?", "to which politicalParty does ($x | Person_NP) belong?", "to which politicalParty is ($x | Person_NP) belonged?", "which politicalParties does ($x | Person_NP) belong to?", "which politicalParties does the ($x | Person_NP) belong to?", "which politicalParty does ($x | Person_NP) belong to?", "which politicalParty does the ($x | Person_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1098",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Organisation_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founded> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1101",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Beverage_NP) discontinue?", "When did the ($x | Beverage_NP) discontinue?", "When was ($x | Beverage_NP) discontinued?", "When was the ($x | Beverage_NP) discontinued?", "When were ($x | Beverage_NP) discontinued?", "When were the ($x | Beverage_NP) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1104",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Beverage_NP) introduce?", "When did the ($x | Beverage_NP) introduce?", "When was ($x | Beverage_NP) introduced?", "When was the ($x | Beverage_NP) introduced?", "When were ($x | Beverage_NP) introduced?", "When were the ($x | Beverage_NP) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1107",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AmericanFootballPlayer" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | AmericanFootballPlayer_NP) draft?", "When was ($x | AmericanFootballPlayer_NP) drafted?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1110",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1113",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Beverage_NP) related?", "to which beverage does ($x | Beverage_NP) relate?", "to which beverage is ($x | Beverage_NP) related?", "to which beverages  ($x | Beverage_NP) relate?", "to which beverages are ($x | Beverage_NP) related?", "to which beverages does relate ($x | Beverage_NP)?", "which beverage does ($x | Beverage_NP) relate to?", "which beverage does the ($x | Beverage_NP) relate to?", "which beverages does ($x | Beverage_NP) relate to?", "which beverages does the ($x | Beverage_NP) relate to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/related> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1116",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) open?", "When did the ($x | Bridge_NP) open?", "When was ($x | Bridge_NP) opened?", "When was the ($x | Bridge_NP) opened?", "When were ($x | Bridge_NP) opened?", "When were the ($x | Bridge_NP) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1119",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Work_NP) ?", "for which person does ($x | Work_NP) compose?", "for which person is ($x | Work_NP) ?", "for which persons  ($x | Work_NP) compose?", "for which persons are ($x | Work_NP) ?", "for which persons does compose ($x | Work_NP)?", "which person does ($x | Work_NP) compose for?", "which person does the ($x | Work_NP) compose for?", "which persons does ($x | Work_NP) compose for?", "which persons does the ($x | Work_NP) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/music> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1122",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Place_NP) located?", "in which place are the ($x | Place_NP)?", "in which place is ($x | Place_NP) located?", "in which place is the ($x | Place_NP)?", "in which places are ($x | Place_NP) located?", "what place is ($x | Place_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1125",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Road_NP) started?", "in which road does ($x | Road_NP) start?", "in which road is ($x | Road_NP) started?", "in which roads  ($x | Road_NP) start?", "in which roads are ($x | Road_NP) started?", "in which roads does start ($x | Road_NP)?", "which road does ($x | Road_NP) start in?", "which road does the ($x | Road_NP) start in?", "which roads does ($x | Road_NP) start in?", "which roads does the ($x | Road_NP) start in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1128",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which countries  ($x | River_NP) end?", "in which countries are ($x | River_NP) ended?", "in which countries does end ($x | River_NP)?", "in which country does ($x | River_NP) end?", "in which country is ($x | River_NP) ended?", "which countries does ($x | River_NP) end in?", "which countries does the ($x | River_NP) end in?", "which country does ($x | River_NP) end in?", "which country does the ($x | River_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1131",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) ended?", "in which location does ($x | ArchitecturalStructure_NP) end?", "in which location is ($x | ArchitecturalStructure_NP) ended?", "in which locations  ($x | ArchitecturalStructure_NP) end?", "in which locations are ($x | ArchitecturalStructure_NP) ended?", "in which locations does end ($x | ArchitecturalStructure_NP)?", "which location does ($x | ArchitecturalStructure_NP) end in?", "which location does the ($x | ArchitecturalStructure_NP) end in?", "which locations does ($x | ArchitecturalStructure_NP) end in?", "which locations does the ($x | ArchitecturalStructure_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1134",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Thing_NP) establish?", "When did the ($x | Thing_NP) establish?", "When was ($x | Thing_NP) established?", "When was the ($x | Thing_NP) established?", "When were ($x | Thing_NP) established?", "When were the ($x | Thing_NP) established?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstPublicationYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1137",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Software_NP) belonged?", "to which genre does ($x | Software_NP) belong?", "to which genre is ($x | Software_NP) belonged?", "to which genres  ($x | Software_NP) belong?", "to which genres are ($x | Software_NP) belonged?", "to which genres does belong ($x | Software_NP)?", "which genre does ($x | Software_NP) belong to?", "which genre does the ($x | Software_NP) belong to?", "which genres does ($x | Software_NP) belong to?", "which genres does the ($x | Software_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1140",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) began?", "at which countries  ($x | River_NP) begin?", "at which countries are ($x | River_NP) began?", "at which countries does begin ($x | River_NP)?", "at which country does ($x | River_NP) begin?", "at which country is ($x | River_NP) began?", "which countries does ($x | River_NP) begin at?", "which countries does the ($x | River_NP) begin at?", "which country does ($x | River_NP) begin at?", "which country does the ($x | River_NP) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source1Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1143",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Song_NP) release?", "When did the ($x | Song_NP) release?", "When was ($x | Song_NP) released?", "When was the ($x | Song_NP) released?", "When were ($x | Song_NP) released?", "When were the ($x | Song_NP) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1146",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Software_NP) release?", "When did the ($x | Software_NP) release?", "When was ($x | Software_NP) released?", "When was the ($x | Software_NP) released?", "When were ($x | Software_NP) released?", "When were the ($x | Software_NP) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1149",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Film_NP) starred?", "in which actor does ($x | Film_NP) star?", "in which actor is ($x | Film_NP) starred?", "in which actors  ($x | Film_NP) star?", "in which actors are ($x | Film_NP) starred?", "in which actors does star ($x | Film_NP)?", "which actor does ($x | Film_NP) star in?", "which actor does the ($x | Film_NP) star in?", "which actors does ($x | Film_NP) star in?", "which actors does the ($x | Film_NP) star in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1152",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) rebuild?", "When did the ($x | ArchitecturalStructure_NP) rebuild?", "When was ($x | ArchitecturalStructure_NP) rebuilt?", "When was the ($x | ArchitecturalStructure_NP) rebuilt?", "When were ($x | ArchitecturalStructure_NP) rebuilt?", "When were the ($x | ArchitecturalStructure_NP) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1155",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) began?", "at which cities  ($x | River_NP) begin?", "at which cities are ($x | River_NP) began?", "at which cities does begin ($x | River_NP)?", "at which city does ($x | River_NP) begin?", "at which city is ($x | River_NP) began?", "which cities does ($x | River_NP) begin at?", "which cities does the ($x | River_NP) begin at?", "which city does ($x | River_NP) begin at?", "which city does the ($x | River_NP) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source2Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1158",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "How many People live in ($x | Country_NP)?", "How many People lived in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1161",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which populated place does ($x | River_NP) end?", "in which populated place is ($x | River_NP) ended?", "in which populated places  ($x | River_NP) end?", "in which populated places are ($x | River_NP) ended?", "in which populated places does end ($x | River_NP)?", "which populated place does ($x | River_NP) end in?", "which populated place does the ($x | River_NP) end in?", "which populated places does ($x | River_NP) end in?", "which populated places does the ($x | River_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1164",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Road_NP) ended?", "in which cities  ($x | Road_NP) end?", "in which cities are ($x | Road_NP) ended?", "in which cities does end ($x | Road_NP)?", "in which city does ($x | Road_NP) end?", "in which city is ($x | Road_NP) ended?", "which cities does ($x | Road_NP) end in?", "which cities does the ($x | Road_NP) end in?", "which city does ($x | Road_NP) end in?", "which city does the ($x | Road_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1167",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) played?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/position> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1170",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Mountain_NP) located?", "in which countries are ($x | Mountain_NP) located?", "in which country are the ($x | Mountain_NP)?", "in which country is ($x | Mountain_NP) located?", "in which country is the ($x | Mountain_NP)?", "what country is ($x | Mountain_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1173",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Settlement_NP) named?", "after which agent does ($x | Settlement_NP) name?", "after which agent is ($x | Settlement_NP) named?", "after which agents  ($x | Settlement_NP) name?", "after which agents are ($x | Settlement_NP) named?", "after which agents does name ($x | Settlement_NP)?", "which agent does ($x | Settlement_NP) name after?", "which agent does the ($x | Settlement_NP) name after?", "which agents does ($x | Settlement_NP) name after?", "which agents does the ($x | Settlement_NP) name after?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1176",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Athlete_NP) belonged?", "to which sports team does ($x | Athlete_NP) belong?", "to which sports team is ($x | Athlete_NP) belonged?", "to which sports teams  ($x | Athlete_NP) belong?", "to which sports teams are ($x | Athlete_NP) belonged?", "to which sports teams does belong ($x | Athlete_NP)?", "which sports team does ($x | Athlete_NP) belong to?", "which sports team does the ($x | Athlete_NP) belong to?", "which sports teams does ($x | Athlete_NP) belong to?", "which sports teams does the ($x | Athlete_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1179",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Person_NP) born?", "When was ($x | Person_NP) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1182",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Thing_NP) born?", "When did the ($x | Thing_NP) born?", "When was ($x | Thing_NP) born?", "When was the ($x | Thing_NP) born?", "When were ($x | Thing_NP) born?", "When were the ($x | Thing_NP) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1185",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) complete?", "When did the ($x | Bridge_NP) complete?", "When was ($x | Bridge_NP) completed?", "When was the ($x | Bridge_NP) completed?", "When were ($x | Bridge_NP) completed?", "When were the ($x | Bridge_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1188",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | BodyOfWater_NP) flown?", "into which river does ($x | BodyOfWater_NP) flow?", "into which river is ($x | BodyOfWater_NP) flown?", "into which rivers  ($x | BodyOfWater_NP) flow?", "into which rivers are ($x | BodyOfWater_NP) flown?", "into which rivers does flow ($x | BodyOfWater_NP)?", "which river does ($x | BodyOfWater_NP) flow into?", "which river does the ($x | BodyOfWater_NP) flow into?", "which rivers does ($x | BodyOfWater_NP) flow into?", "which rivers does the ($x | BodyOfWater_NP) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1191",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | MilitaryConflict_NP) fight?", "When did the ($x | MilitaryConflict_NP) fight?", "When was ($x | MilitaryConflict_NP) fought?", "When was the ($x | MilitaryConflict_NP) fought?", "When were ($x | MilitaryConflict_NP) fought?", "When were the ($x | MilitaryConflict_NP) fought?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1194",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Book_NP) publish?", "When did the ($x | Book_NP) publish?", "When was ($x | Book_NP) published?", "When was the ($x | Book_NP) published?", "When were ($x | Book_NP) published?", "When were the ($x | Book_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1197",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Person_NP) bury?", "Where is ($x | Person_NP) buried?", "Where was ($x | Person_NP) buried?", "in which city did ($x | Person_NP) bury?", "which city does ($x | Person_NP) bury in?", "which city was ($x | Person_NP) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1200",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Band_NP) associated?", "which band does ($x | Band_NP) associate with?", "which band does the ($x | Band_NP) associate with?", "which bands does ($x | Band_NP) associate with?", "which bands does the ($x | Band_NP) associate with?", "with which band does ($x | Band_NP) associate?", "with which band is ($x | Band_NP) associated?", "with which bands  ($x | Band_NP) associate?", "with which bands are ($x | Band_NP) associated?", "with which bands does associate ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1203",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | PoliticalParty_NP) found?", "When did the ($x | PoliticalParty_NP) found?", "When was ($x | PoliticalParty_NP) founded?", "When was the ($x | PoliticalParty_NP) founded?", "When were ($x | PoliticalParty_NP) founded?", "When were the ($x | PoliticalParty_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1206",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "MountainRange" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Mountain_NP) belonged?", "to which mountain range does ($x | Mountain_NP) belong?", "to which mountain range is ($x | Mountain_NP) belonged?", "to which mountain ranges  ($x | Mountain_NP) belong?", "to which mountain ranges are ($x | Mountain_NP) belonged?", "to which mountain ranges does belong ($x | Mountain_NP)?", "which mountain range does ($x | Mountain_NP) belong to?", "which mountain range does the ($x | Mountain_NP) belong to?", "which mountain ranges does ($x | Mountain_NP) belong to?", "which mountain ranges does the ($x | Mountain_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1209",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Band_NP) form?", "When did the ($x | Band_NP) form?", "When was ($x | Band_NP) formed?", "When was the ($x | Band_NP) formed?", "When were ($x | Band_NP) formed?", "When were the ($x | Band_NP) formed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1212",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries are ($x | City_NP) located?", "in which country are the ($x | City_NP)?", "in which country is ($x | City_NP) located?", "in which country is the ($x | City_NP)?", "what country is ($x | City_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1215",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries are ($x | City_NP) located?", "in which country are the ($x | City_NP)?", "in which country is ($x | City_NP) located?", "in which country is the ($x | City_NP)?", "what country is ($x | City_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1218",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Organisation_NP) found?", "When was ($x | Organisation_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1221",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Airport_NP) located?", "in which place does ($x | Airport_NP) locate?", "in which place is ($x | Airport_NP) located?", "in which places  ($x | Airport_NP) locate?", "in which places are ($x | Airport_NP) located?", "in which places does locate ($x | Airport_NP)?", "which place does ($x | Airport_NP) locate in?", "which place does the ($x | Airport_NP) locate in?", "which places does ($x | Airport_NP) locate in?", "which places does the ($x | Airport_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1224",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Mountain_NP) located?", "in which countries are ($x | Mountain_NP) located?", "in which country are the ($x | Mountain_NP)?", "in which country is ($x | Mountain_NP) located?", "in which country is the ($x | Mountain_NP)?", "what country is ($x | Mountain_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1227",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Film_NP) played?", "in which person does ($x | Film_NP) play?", "in which person is ($x | Film_NP) played?", "in which persons  ($x | Film_NP) play?", "in which persons are ($x | Film_NP) played?", "in which persons does play ($x | Film_NP)?", "which person does ($x | Film_NP) play in?", "which person does the ($x | Film_NP) play in?", "which persons does ($x | Film_NP) play in?", "which persons does the ($x | Film_NP) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1230",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/keyPeople> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1233",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Ship_NP) complete?", "When did the ($x | Ship_NP) complete?", "When was ($x | Ship_NP) completed?", "When was the ($x | Ship_NP) completed?", "When were ($x | Ship_NP) completed?", "When were the ($x | Ship_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1236",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) rebuild?", "When did the ($x | ArchitecturalStructure_NP) rebuild?", "When was ($x | ArchitecturalStructure_NP) rebuilt?", "When was the ($x | ArchitecturalStructure_NP) rebuilt?", "When were ($x | ArchitecturalStructure_NP) rebuilt?", "When were the ($x | ArchitecturalStructure_NP) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1239",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "How many People live in ($x | City_NP)?", "How many People lived in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1242",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Person_NP) born?", "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which country did ($x | Person_NP) born?", "which country does ($x | Person_NP) born in?", "which country was ($x | Person_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1245",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Place_NP) dissolve?", "When did the ($x | Place_NP) dissolve?", "When was ($x | Place_NP) dissolved?", "When was the ($x | Place_NP) dissolved?", "When were ($x | Place_NP) dissolved?", "When were the ($x | Place_NP) dissolved?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1248",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Band_NP) split ?", "When did the ($x | Band_NP) split ?", "When was ($x | Band_NP) splited?", "When was the ($x | Band_NP) splited?", "When were ($x | Band_NP) splited?", "When were the ($x | Band_NP) splited?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1251",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Writer_NP) die?", "Where is ($x | Writer_NP) died?", "Where was ($x | Writer_NP) died?", "in which city did ($x | Writer_NP) die?", "which city does ($x | Writer_NP) die in?", "which city was ($x | Writer_NP) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1254",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) belonged?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1257",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) currently used?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1260",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Song_NP) produce?", "When did the ($x | Song_NP) produce?", "When was ($x | Song_NP) produced?", "When was the ($x | Song_NP) produced?", "When were ($x | Song_NP) produced?", "When were the ($x | Song_NP) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1263",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which band does ($x | Person_NP) belong?", "to which band is ($x | Person_NP) belonged?", "to which bands  ($x | Person_NP) belong?", "to which bands are ($x | Person_NP) belonged?", "to which bands does belong ($x | Person_NP)?", "which band does ($x | Person_NP) belong to?", "which band does the ($x | Person_NP) belong to?", "which bands does ($x | Person_NP) belong to?", "which bands does the ($x | Person_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1266",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Artist_NP) belonged?", "to which genre does ($x | Artist_NP) belong?", "to which genre is ($x | Artist_NP) belonged?", "to which genres  ($x | Artist_NP) belong?", "to which genres are ($x | Artist_NP) belonged?", "to which genres does belong ($x | Artist_NP)?", "which genre does ($x | Artist_NP) belong to?", "which genre does the ($x | Artist_NP) belong to?", "which genres does ($x | Artist_NP) belong to?", "which genres does the ($x | Artist_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1269",
    "lexicalEntryUri" : "http://localhost:8080#launched_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceStation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | SpaceStation_NP) launched?", "from which airport does ($x | SpaceStation_NP) launch?", "from which airport is ($x | SpaceStation_NP) launched?", "from which airports  ($x | SpaceStation_NP) launch?", "from which airports are ($x | SpaceStation_NP) launched?", "from which airports does launch ($x | SpaceStation_NP)?", "which airport does ($x | SpaceStation_NP) launch from?", "which airport does the ($x | SpaceStation_NP) launch from?", "which airports does ($x | SpaceStation_NP) launch from?", "which airports does the ($x | SpaceStation_NP) launch from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/launchPad> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1272",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Company_NP) produce?", "Where is ($x | Company_NP) produced?", "Where was ($x | Company_NP) produced?", "in which location did ($x | Company_NP) produce?", "which location does ($x | Company_NP) produce in?", "which location was ($x | Company_NP) produce in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1275",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Building_NP) complete?", "When did the ($x | Building_NP) complete?", "When was ($x | Building_NP) completed?", "When was the ($x | Building_NP) completed?", "When were ($x | Building_NP) completed?", "When were the ($x | Building_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1278",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "How many had  ($x | Stadium_NP)?", "How many have  ($x | Stadium_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1281",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "What grew in ($x | WineRegion_NP)?", "What grow in ($x | WineRegion_NP)?", "which grape grew in ($x | WineRegion_NP)?", "which grape grows in ($x | WineRegion_NP)?", "which grapes grew in ($x | WineRegion_NP)?", "which grapes grow in ($x | WineRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1284",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Person_NP) live?", "Where is ($x | Person_NP) lived?", "Where was ($x | Person_NP) lived?", "in which city did ($x | Person_NP) live?", "which city does ($x | Person_NP) live in?", "which city was ($x | Person_NP) live in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1287",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Person_NP) born?", "When was ($x | Person_NP) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1290",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Infrastructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Infrastructure_NP) ended?", "in which location does ($x | Infrastructure_NP) end?", "in which location is ($x | Infrastructure_NP) ended?", "in which locations  ($x | Infrastructure_NP) end?", "in which locations are ($x | Infrastructure_NP) ended?", "in which locations does end ($x | Infrastructure_NP)?", "which location does ($x | Infrastructure_NP) end in?", "which location does the ($x | Infrastructure_NP) end in?", "which locations does ($x | Infrastructure_NP) end in?", "which locations does the ($x | Infrastructure_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1293",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | MilitaryConflict_NP) commence?", "When did the ($x | MilitaryConflict_NP) commence?", "When was ($x | MilitaryConflict_NP) commenced?", "When was the ($x | MilitaryConflict_NP) commenced?", "When were ($x | MilitaryConflict_NP) commenced?", "When were the ($x | MilitaryConflict_NP) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1296",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Settlement_NP) located?", "in which countries are ($x | Settlement_NP) located?", "in which country are the ($x | Settlement_NP)?", "in which country is ($x | Settlement_NP) located?", "in which country is the ($x | Settlement_NP)?", "what country is ($x | Settlement_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1299",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | State_NP) bordered?", "in which state does ($x | State_NP) border?", "in which state is ($x | State_NP) bordered?", "in which states  ($x | State_NP) border?", "in which states are ($x | State_NP) bordered?", "in which states does border ($x | State_NP)?", "which state does ($x | State_NP) border in?", "which state does the ($x | State_NP) border in?", "which states does ($x | State_NP) border in?", "which states does the ($x | State_NP) border in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1302",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Book_NP) publish?", "When did the ($x | Book_NP) publish?", "When was ($x | Book_NP) published?", "When was the ($x | Book_NP) published?", "When were ($x | Book_NP) published?", "When were the ($x | Book_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1305",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MusicalWork_NP) recored?", "in which populated place does ($x | MusicalWork_NP) record?", "in which populated place is ($x | MusicalWork_NP) recored?", "in which populated places  ($x | MusicalWork_NP) record?", "in which populated places are ($x | MusicalWork_NP) recored?", "in which populated places does record ($x | MusicalWork_NP)?", "which populated place does ($x | MusicalWork_NP) record in?", "which populated place does the ($x | MusicalWork_NP) record in?", "which populated places does ($x | MusicalWork_NP) record in?", "which populated places does the ($x | MusicalWork_NP) record in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1308",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Thing_NP) stood?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1311",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Actor_NP) start acting?", "When was ($x | Actor_NP) started acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1314",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Building_NP) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/beginningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1317",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Building_NP) build?", "When did the ($x | Building_NP) build?", "When was ($x | Building_NP) built?", "When was the ($x | Building_NP) built?", "When were ($x | Building_NP) built?", "When were the ($x | Building_NP) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1320",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which countries  ($x | River_NP) end?", "in which countries are ($x | River_NP) ended?", "in which countries does end ($x | River_NP)?", "in which country does ($x | River_NP) end?", "in which country is ($x | River_NP) ended?", "which countries does ($x | River_NP) end in?", "which countries does the ($x | River_NP) end in?", "which country does ($x | River_NP) end in?", "which country does the ($x | River_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1323",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Work_NP) wrote?", "in which language does ($x | Work_NP) write?", "in which language is ($x | Work_NP) wrote?", "in which languages  ($x | Work_NP) write?", "in which languages are ($x | Work_NP) wrote?", "in which languages does write ($x | Work_NP)?", "which language does ($x | Work_NP) write in?", "which language does the ($x | Work_NP) write in?", "which languages does ($x | Work_NP) write in?", "which languages does the ($x | Work_NP) write in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1326",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "RouteOfTransportation" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | RouteOfTransportation_NP) ended?", "in which location does ($x | RouteOfTransportation_NP) end?", "in which location is ($x | RouteOfTransportation_NP) ended?", "in which locations  ($x | RouteOfTransportation_NP) end?", "in which locations are ($x | RouteOfTransportation_NP) ended?", "in which locations does end ($x | RouteOfTransportation_NP)?", "which location does ($x | RouteOfTransportation_NP) end in?", "which location does the ($x | RouteOfTransportation_NP) end in?", "which locations does ($x | RouteOfTransportation_NP) end in?", "which locations does the ($x | RouteOfTransportation_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1329",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Actor_NP) born?", "Where is ($x | Actor_NP) born?", "Where was ($x | Actor_NP) born?", "in which country did ($x | Actor_NP) born?", "which country does ($x | Actor_NP) born in?", "which country was ($x | Actor_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1332",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Airport_NP) located?", "in which cities  ($x | Airport_NP) locate?", "in which cities are ($x | Airport_NP) located?", "in which cities does locate ($x | Airport_NP)?", "in which city does ($x | Airport_NP) locate?", "in which city is ($x | Airport_NP) located?", "which cities does ($x | Airport_NP) locate in?", "which cities does the ($x | Airport_NP) locate in?", "which city does ($x | Airport_NP) locate in?", "which city does the ($x | Airport_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1335",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) reopen?", "When did the ($x | ArchitecturalStructure_NP) reopen?", "When was ($x | ArchitecturalStructure_NP) reopened?", "When was the ($x | ArchitecturalStructure_NP) reopened?", "When were ($x | ArchitecturalStructure_NP) reopened?", "When were the ($x | ArchitecturalStructure_NP) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1338",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Settlement_NP) found?", "When did the ($x | Settlement_NP) found?", "When was ($x | Settlement_NP) founded?", "When was the ($x | Settlement_NP) founded?", "When were ($x | Settlement_NP) founded?", "When were the ($x | Settlement_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1341",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) destroy?", "When did the ($x | ArchitecturalStructure_NP) destroy?", "When was ($x | ArchitecturalStructure_NP) destroyed?", "When was the ($x | ArchitecturalStructure_NP) destroyed?", "When were ($x | ArchitecturalStructure_NP) destroyed?", "When were the ($x | ArchitecturalStructure_NP) destroyed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1344",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Article" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Article_NP) publish?", "When did the ($x | Article_NP) publish?", "When was ($x | Article_NP) published?", "When was the ($x | Article_NP) published?", "When were ($x | Article_NP) published?", "When were the ($x | Article_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1347",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) inaugurate?", "When did the ($x | ArchitecturalStructure_NP) inaugurate?", "When was ($x | ArchitecturalStructure_NP) inaugurated?", "When was the ($x | ArchitecturalStructure_NP) inaugurated?", "When were ($x | ArchitecturalStructure_NP) inaugurated?", "When were the ($x | ArchitecturalStructure_NP) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1350",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Company_NP) found?", "Where is ($x | Company_NP) founded?", "Where was ($x | Company_NP) founded?", "in which country did ($x | Company_NP) found?", "which country does ($x | Company_NP) found in?", "which country was ($x | Company_NP) found in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1353",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) played?", "in which band does ($x | Person_NP) play?", "in which band is ($x | Person_NP) played?", "in which bands  ($x | Person_NP) play?", "in which bands are ($x | Person_NP) played?", "in which bands does play ($x | Person_NP)?", "which band does ($x | Person_NP) play in?", "which band does the ($x | Person_NP) play in?", "which bands does ($x | Person_NP) play in?", "which bands does the ($x | Person_NP) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1356",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1359",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Settlement_NP) found?", "When did the ($x | Settlement_NP) found?", "When was ($x | Settlement_NP) founded?", "When was the ($x | Settlement_NP) founded?", "When were ($x | Settlement_NP) founded?", "When were the ($x | Settlement_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1362",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Album_NP) belonged?", "to which genre does ($x | Album_NP) belong?", "to which genre is ($x | Album_NP) belonged?", "to which genres  ($x | Album_NP) belong?", "to which genres are ($x | Album_NP) belonged?", "to which genres does belong ($x | Album_NP)?", "which genre does ($x | Album_NP) belong to?", "which genre does the ($x | Album_NP) belong to?", "which genres does ($x | Album_NP) belong to?", "which genres does the ($x | Album_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1365",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Building_NP) inaugurate?", "When did the ($x | Building_NP) inaugurate?", "When was ($x | Building_NP) inaugurated?", "When was the ($x | Building_NP) inaugurated?", "When were ($x | Building_NP) inaugurated?", "When were the ($x | Building_NP) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1368",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Album_NP) produce?", "When did the ($x | Album_NP) produce?", "When was ($x | Album_NP) produced?", "When was the ($x | Album_NP) produced?", "When were ($x | Album_NP) produced?", "When were the ($x | Album_NP) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1371",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Film_NP) produce?", "When did the ($x | Film_NP) produce?", "When was ($x | Film_NP) produced?", "When was the ($x | Film_NP) produced?", "When were ($x | Film_NP) produced?", "When were the ($x | Film_NP) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1374",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Person_NP) come?", "Where is ($x | Person_NP) come?", "Where was ($x | Person_NP) come?", "from which country did ($x | Person_NP) come?", "which country does ($x | Person_NP) come from?", "which country was ($x | Person_NP) come from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1377",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) flown?", "into which river does ($x | River_NP) flow?", "into which river is ($x | River_NP) flown?", "into which rivers  ($x | River_NP) flow?", "into which rivers are ($x | River_NP) flown?", "into which rivers does flow ($x | River_NP)?", "which river does ($x | River_NP) flow into?", "which river does the ($x | River_NP) flow into?", "which rivers does ($x | River_NP) flow into?", "which rivers does the ($x | River_NP) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1380",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Settlement_NP) belonged?", "to which place does ($x | Settlement_NP) belong?", "to which place is ($x | Settlement_NP) belonged?", "to which places  ($x | Settlement_NP) belong?", "to which places are ($x | Settlement_NP) belonged?", "to which places does belong ($x | Settlement_NP)?", "which place does ($x | Settlement_NP) belong to?", "which place does the ($x | Settlement_NP) belong to?", "which places does ($x | Settlement_NP) belong to?", "which places does the ($x | Settlement_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1383",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which sports team does ($x | Person_NP) belong?", "to which sports team is ($x | Person_NP) belonged?", "to which sports teams  ($x | Person_NP) belong?", "to which sports teams are ($x | Person_NP) belonged?", "to which sports teams does belong ($x | Person_NP)?", "which sports team does ($x | Person_NP) belong to?", "which sports team does the ($x | Person_NP) belong to?", "which sports teams does ($x | Person_NP) belong to?", "which sports teams does the ($x | Person_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1386",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Song_NP) publish?", "When did the ($x | Song_NP) publish?", "When was ($x | Song_NP) published?", "When was the ($x | Song_NP) published?", "When were ($x | Song_NP) published?", "When were the ($x | Song_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1389",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Person_NP) die?", "When was ($x | Person_NP) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1392",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) originated?", "in which countries  ($x | River_NP) originate?", "in which countries are ($x | River_NP) originated?", "in which countries does originate ($x | River_NP)?", "in which country does ($x | River_NP) originate?", "in which country is ($x | River_NP) originated?", "which countries does ($x | River_NP) originate in?", "which countries does the ($x | River_NP) originate in?", "which country does ($x | River_NP) originate in?", "which country does the ($x | River_NP) originate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1395",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | PoliticalParty_NP) found?", "When did the ($x | PoliticalParty_NP) found?", "When was ($x | PoliticalParty_NP) founded?", "When was the ($x | PoliticalParty_NP) founded?", "When were ($x | PoliticalParty_NP) founded?", "When were the ($x | PoliticalParty_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1398",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Lake_NP) located?", "in which countries are ($x | Lake_NP) located?", "in which country are the ($x | Lake_NP)?", "in which country is ($x | Lake_NP) located?", "in which country is the ($x | Lake_NP)?", "what country is ($x | Lake_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1401",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries  ($x | City_NP) locate?", "in which countries are ($x | City_NP) located?", "in which countries does locate ($x | City_NP)?", "in which country does ($x | City_NP) locate?", "in which country is ($x | City_NP) located?", "which countries does ($x | City_NP) locate in?", "which countries does the ($x | City_NP) locate in?", "which country does ($x | City_NP) locate in?", "which country does the ($x | City_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1404",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Beverage_NP) introduce?", "When did the ($x | Beverage_NP) introduce?", "When was ($x | Beverage_NP) introduced?", "When was the ($x | Beverage_NP) introduced?", "When were ($x | Beverage_NP) introduced?", "When were the ($x | Beverage_NP) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1407",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) inaugurate?", "When did the ($x | Bridge_NP) inaugurate?", "When was ($x | Bridge_NP) inaugurated?", "When was the ($x | Bridge_NP) inaugurated?", "When were ($x | Bridge_NP) inaugurated?", "When were the ($x | Bridge_NP) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1410",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) reopen?", "When did the ($x | ArchitecturalStructure_NP) reopen?", "When was ($x | ArchitecturalStructure_NP) reopened?", "When was the ($x | ArchitecturalStructure_NP) reopened?", "When were ($x | ArchitecturalStructure_NP) reopened?", "When were the ($x | ArchitecturalStructure_NP) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1413",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Organisation_NP) find?", "When was ($x | Organisation_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1416",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "What did ($x | Person_NP) call ?", "What does ($x | Person_NP) call ?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1419",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where did ($x | Politician_NP) die?", "Where is ($x | Politician_NP) died?", "Where was ($x | Politician_NP) died?", "in which place did ($x | Politician_NP) die?", "which place does ($x | Politician_NP) die in?", "which place was ($x | Politician_NP) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1422",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "What grew in ($x | WineRegion_NP)?", "What grow in ($x | WineRegion_NP)?", "which grape grew in ($x | WineRegion_NP)?", "which grape grows in ($x | WineRegion_NP)?", "which grapes grew in ($x | WineRegion_NP)?", "which grapes grow in ($x | WineRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1425",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Film_NP) belonged?", "to which genre does ($x | Film_NP) belong?", "to which genre is ($x | Film_NP) belonged?", "to which genres  ($x | Film_NP) belong?", "to which genres are ($x | Film_NP) belonged?", "to which genres does belong ($x | Film_NP)?", "which genre does ($x | Film_NP) belong to?", "which genre does the ($x | Film_NP) belong to?", "which genres does ($x | Film_NP) belong to?", "which genres does the ($x | Film_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1428",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "returnVariable" : null,
    "combination" : false
  } ]
}